<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenDental</name>
    </assembly>
    <members>
        <member name="T:OpenDental.FormDrCeph.CephRaceEnum">
            <summary>Based on options available in DrCeph</summary>
        </member>
        <member name="T:OpenDental.FormDrCeph.TreatmentPhaseEnum">
            <summary>Based on options available in DrCeph</summary>
        </member>
        <member name="F:OpenDental.FormDrCeph.TreatmentPhaseEnum.PreTreatment">
            <summary>0- </summary>
        </member>
        <member name="F:OpenDental.FormDrCeph.TreatmentPhaseEnum.Progress1">
            <summary>1- </summary>
        </member>
        <member name="F:OpenDental.FormDrCeph.TreatmentPhaseEnum.Progress2">
            <summary>2- </summary>
        </member>
        <member name="F:OpenDental.FormDrCeph.TreatmentPhaseEnum.Progress3">
            <summary>3- </summary>
        </member>
        <member name="F:OpenDental.FormDrCeph.TreatmentPhaseEnum.PostTreatment">
            <summary>4- </summary>
        </member>
        <member name="F:OpenDental.FormDrCeph.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDrCeph.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDrCeph.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormHouseCalls">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormHouseCalls.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormHouseCalls.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormHouseCalls.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormHouseCalls.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormIap">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormIap.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormIap.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormIap.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormIap.selectedPlan">
            <summary>The user will have selected an employer.  This will be the exact text representation of that employer as it is in the iap database.</summary>
        </member>
        <member name="M:OpenDental.FormIap.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormOryxUserSettings">
            <summary>Used for user-specific settings that are unique to the Oryx bridge.</summary>
        </member>
        <member name="F:OpenDental.FormOryxUserSettings._userNamePref">
            <summary>User pref holding the user's Oryx username.</summary>
        </member>
        <member name="F:OpenDental.FormOryxUserSettings._passwordPref">
            <summary>User pref holding the user's Oryx password.</summary>
        </member>
        <member name="F:OpenDental.FormOryxUserSettings._progOryx">
            <summary>Oryx program bridge.</summary>
        </member>
        <member name="F:OpenDental.FormOryxUserSettings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOryxUserSettings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOryxUserSettings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTrophyNamePick.PickedName">
            <summary>If dialogResult is OK, then this will contain the picked folder name.  If blank, then the calling class will need to generate a new folder name.</summary>
        </member>
        <member name="F:OpenDental.FormTrophyNamePick.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTrophyNamePick.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTrophyNamePick.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatienteBill.PreparePractice(System.Xml.XmlNode)">
            <summary>
            This Method will prepare XML for Provider
            </summary>
        </member>
        <member name="M:OpenDental.FormPatienteBill.PreapreRendringProvider(System.Xml.XmlNode)">
            <summary>
            This Method will populate Rendering Provider Information
            </summary>
        </member>
        <member name="M:OpenDental.FormPatienteBill.PreparePatient(System.Xml.XmlNode)">
            <summary>
            This Method will prepare Patient XML
            </summary>
        </member>
        <member name="M:OpenDental.FormPatienteBill.PrepareNotes(System.Int32,System.Xml.XmlNode)">
            <summary>
            This Method will prepare XML for Notes
            </summary>
        </member>
        <member name="M:OpenDental.FormPatienteBill.PrepareDetailItems(System.Int32,System.Xml.XmlNode)">
            <summary>
            This Method will prepare XML for Detail items
            </summary>
        </member>
        <member name="F:OpenDental.FormPatienteBill.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatienteBill.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPatienteBill.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormPrintTrojan">
            <summary>This class is pretty much only coded for 8.5 inch X 11 inch sheets of paper, but with a little work could be made for more general sizes of paper, perhaps sometime in the future.</summary>
        </member>
        <member name="F:OpenDental.FormPrintTrojan.pageNumberFont">
            <summary>If pageNumberFont is set, then the page number is displayed using the page number information.</summary>
        </member>
        <member name="F:OpenDental.FormPrintTrojan.printerGraph">
            Is set to a non-null value only during printing to a physical printer.
        </member>
        <member name="M:OpenDental.FormPrintTrojan.CheckWindowSize">
            <summary>Window size can change based on landscape mode and possibly other things in the future (perhaps different paper sizes).</summary>
        </member>
        <member name="P:OpenDental.FormPrintTrojan.TotalPages">
            <summary>Must be set by the external printing algorithm in order to get page numbers working properly.</summary>
        </member>
        <member name="F:OpenDental.FormPrintTrojan.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPrintTrojan.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPrintTrojan.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormQuery.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormQuery.IsReport">
            <summary>Set to true if this form should instantly launch a print preview instead of showing the actual "user query" form.</summary>
        </member>
        <member name="P:OpenDental.FormQuery._currentPage">
            <summary>The location of the current page being printed, used to increment through the pages.</summary>
        </member>
        <member name="F:OpenDental.FormQuery._dictPatientNames">
            <summary>A dictionary of patient names that only gets filled once and only if necessary.</summary>
        </member>
        <member name="F:OpenDental.FormQuery._hashListPlans">
            <summary>A hashtable of key: InsPlanNum, value: Carrier Name.</summary>
        </member>
        <member name="F:OpenDental.FormQuery._queryExceptionStateCur">
            <summary>Tells the form whether to throw, show (interrupt), or suppress exceptions. Set manually in the code below.</summary>
        </member>
        <member name="F:OpenDental.FormQuery._serverThreadID">
            <summary>The server thread id that the current query is running on.</summary>
        </member>
        <member name="F:OpenDental.FormQuery._tableHuman">
            <summary>_reportSumpleGrid.TableQ should ALWAYS store the raw table, and _tableHuman will ALWAYS store the human-readable table.
            This table only gets filled if radioHuman is clicked or checked when run. This way, when switching between the raw and human-readable formats, 
            we merely have to set the data binding for the grid to their respective data tables instead of rerunning the entire query again.</summary>
        </member>
        <member name="F:OpenDental.FormQuery._threadQuery">
            <summary>User queries run on a separate thread so they can be cancelled.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.#ctor(OpenDental.ReportSimpleGrid,System.Boolean)">
            <summary>Can pass in null if not a report.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.FormQuery_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>When the form is closing, try to cancel any running queries.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.radioHuman_Click(System.Object,System.EventArgs)">
            <summary>Formats the current report to be human-readable. Does NOT run the whole query again.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.radioRaw_Click(System.Object,System.EventArgs)">
            <summary>Formats the current report to be human-readable. Does NOT run the whole query again.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.textQuery_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>KeyDown instead of KeyPress because KeyDown provides e.KeyCode and KeyPress only provides e.KeyChar (which is a char value).</summary>
        </member>
        <member name="T:OpenDental.FormQuery.QueryExceptionState">
            <summary>Enum to determine how to handle exceptions thrown by the _userQuery thread.</summary>
        </member>
        <member name="F:OpenDental.FormQuery.QueryExceptionState.Interrupt">
            <summary>1 - means that query execution was interrupted by the user and will display a messagebox stating so.</summary>
        </member>
        <member name="F:OpenDental.FormQuery.QueryExceptionState.Suppress">
            <summary>2 - suppress any exceptions that arise.</summary>
        </member>
        <member name="F:OpenDental.FormQuery.QueryExceptionState.Throw">
            <summary>3 - throw any exceptions that arise (but in a messagebox so it looks better than a UE).</summary>
        </member>
        <member name="T:OpenDental.FormQuery.QueryExecuteState">
            <summary>Enum to determine how to handle the controls in this form based on what is currently happening.</summary>
        </member>
        <member name="F:OpenDental.FormQuery.QueryExecuteState.Idle">
            <summary>1 - Nothing is happening. All controls are available to be clicked, and the Submit button says "Submit Query" on it.</summary>
        </member>
        <member name="F:OpenDental.FormQuery.QueryExecuteState.Executing">
            <summary>2 - Query is excecuting. Only the Close button and Submit button is available to be clicked, and the Submit button says "Cancel Query" on it.</summary>
        </member>
        <member name="F:OpenDental.FormQuery.QueryExecuteState.Formatting">
            <summary>3 - Query is in the process of being displayed. No controls are available to be clicked.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.MakeReadable(System.Data.DataTable,OpenDental.ReportSimpleGrid,System.Boolean)">
            <summary>Starting to use this externally as well.  OK to pass in a null report. 
            Pass false to isConvertPatNum if the patnum should be printed as is, true if the patnum should be converted to the patient's full name.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.PrintReport(System.Boolean)">
            <summary>Print the report given ODprintout.CurPrintout. The boolean justpreview determines of the report is send to the printer or not.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.ResetGrid">
            <summary>Clears the DataGridTableStyles for the current grid.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.SubmitQuery">
            <summary>At this point, this only gets called externally when we want to automate the submission of a user query (like for the patients raw report).
            Most of these reports can also probably use SubmitQueryThreaded() but will stay using SubmitQuery() for now.
            Oracle also calls this instead of the threaded method.
            Column names will be handled automatically.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.SubmitQueryThreaded(System.Boolean)">
            <summary>Used to submit user queries in a thread.  Column names will be handled automatically.
            Set isSqlValidated to true in order to skip SQL saftey validation.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.SubmitReportQuery">
            <summary>When used as a report, this is called externally. Used instead of SubmitQuery().
            Column names can be handled manually by the external form calling this report.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.AutoSizeColumns(System.Data.DataTable)">
            <summary>Sizes the columns based on the the length of the text in the columns of the passed-in DataTable.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.ExceptionThreadHandler(System.Exception)">
            <summary>_userQuery exceptionHandler. Displays a messagebox or suppresses exceptions based on _exceptionStateCur.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.FillForm">
            <summary>Fills the form with the results of the query and formats it. If the Human Readable checkbox is checked, that logic is also done here.
            Depending on what was selected, the MakeReadable() method can take a very long time. We may want to include this in the query thread
            at some point so users can cancel out of this as well.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.LayoutHelperForState(OpenDental.FormQuery.QueryExecuteState)">
            <summary>Sets the controls on the form to reflect the execute state passed in.  Typically used to disable all controls while executing.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.OnThreadExit(CodeBase.ODThread)">
            <summary>_userQuery exitHandler. Fills the form if the form is not disposed.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.pagePrinter(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>This method contains the logic to print a given page using the grfx Graphics object. It tracks the yPos to extend the data over pages
            as necessary using a standard paperSize and predefined currentMargins.</summary>
        </member>
        <member name="M:OpenDental.FormQuery.pd2_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>raised for each page to be printed.</summary>
        </member>
        <member name="T:OpenDental.FormRpAccountingBalanceSheet">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingBalanceSheet.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingBalanceSheet.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingBalanceSheet.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingBalanceSheet.butOK_Click(System.Object,System.EventArgs)">
            <summary>This report has never worked for Oracle.</summary>
        </member>
        <member name="T:OpenDental.FormRpAccountingGenLedg">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingGenLedg.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingGenLedg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingGenLedg.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingGenLedg.CalcRunningSum(System.Int64,System.String,System.String,OpenDentBusiness.AccountType)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingGenLedg.butOK_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpAccountingProfitLoss">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingProfitLoss.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingProfitLoss.butOK_Click(System.Object,System.EventArgs)">
            <summary>This report has never worked for Oracle.</summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingProfitLoss.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAccountingProfitLoss.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormRpAdjSheet">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAdjSheet.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpAdjSheet._listAdjTypeDefs">
            <summary>Holds all adjustment types, does NOT include hidden.</summary>
        </member>
        <member name="M:OpenDental.FormRpAdjSheet.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpAging">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAging.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAging.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAging.GetParamsFromForm">
            <summary>Sets parameters/fills lists based on form controls.</summary>
        </member>
        <member name="T:OpenDental.FormRpAppointments">
            <summary>
            Summary description for FormRpApptWithPhones.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpAppointments.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpAppointments.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpAppointments.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpAppointments.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpAppointments.IsValid">
            <summary>Validates the fields on the form.  Returns false is something is not filled out correctly.</summary>
        </member>
        <member name="T:OpenDental.FormRpBirthday">
            <summary>
            Summary description for FormRpApptWithPhones.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpBirthday.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpBirthday.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpBirthday.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpBirthday.pdCards_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>raised for each page to be printed.</summary>
        </member>
        <member name="T:OpenDental.FormRpCapitation">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpCapitation.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpCapitation.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpCapitation.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpCapitation.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpClaimNotSent">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpClaimNotSent.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpClaimNotSent.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpClaimNotSent.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpClaimNotSent.FillGrid">
            <summary>Gets all unsent claims in the database between the user entered date range and with the appropriate user selected filters.</summary>
        </member>
        <member name="M:OpenDental.FormRpClaimNotSent.ValidateFilters">
            <summary>Checks the filters available on this form for correct format, order, and non-empty selections.
            Will return false and show a message to the user if filters are not valid.  Otherwise, returns true.</summary>
        </member>
        <member name="M:OpenDental.FormRpClaimNotSent.butRunReport_Click(System.Object,System.EventArgs)">
            <summary>Uses the report complex pattern to print the same report generated by FillGrid()</summary>
        </member>
        <member name="M:OpenDental.FormRpClaimNotSent.gridMain_RightClickHelper(System.Object,System.EventArgs)">
            <summary>Click method used by all gridMain right click options.
            We identify what logic to run by the menuItem.Tag.</summary>
        </member>
        <member name="T:OpenDental.FormRpClaimNotSent.UnsentInsClaim">
            <summary>Only used in this form to keep track of both the ClaimNum and PatNum within the grid. This is the grid's tag object.</summary>
        </member>
        <member name="T:OpenDental.FormRpConfirm">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpConfirm.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpConfirm.#ctor(System.Int64[])">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpDPPOvercharged">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpDPPOvercharged._patNum">
            <summary>The selected patNum.  Can be 0 to include all.</summary>
        </member>
        <member name="M:OpenDental.FormRpDPPOvercharged.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpDPPOvercharged.FormRpDPPOvercharged_Shown(System.Object,System.EventArgs)">
            <summary>FillGrid() must be left in shown so the form doesn't pop behind when the progress bar is shown.</summary>
        </member>
        <member name="M:OpenDental.FormRpDPPOvercharged.RefreshReport">
            <summary>Used to fill the grid and populate the printed report.</summary>
        </member>
        <member name="M:OpenDental.FormRpDPPOvercharged.ValidateDateFields">
            <summary>Ensures that _dateForm and _dateTo are not equal to DateTime.MinVal and that _dateFrom is greater than _dateTo.</summary>
        </member>
        <member name="F:OpenDental.FormRpDPPOvercharged.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormRpDPPOvercharged.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpDPPOvercharged.InitializeComponent">
            <summary>Required method for Designer support - do not modify the contents of this method with the code editor.</summary>
        </member>
        <member name="T:OpenDental.FormRpFinanceCharge">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpFinanceCharge.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpFinanceCharge.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpHiddenPaySplits">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpHiddenPaySplits._listClinics">
            <summary>List of all clinics the current user has access to, can include Unassigned/0 clinic.</summary>
        </member>
        <member name="M:OpenDental.FormRpHiddenPaySplits.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpHiddenPaySplits.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpHiddenPaySplits.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormRpInsAging">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpInsAging.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpInsAging.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpInsAging.GetParamsFromForm">
            <summary>Sets parameters/fills lists based on form controls.</summary>
        </member>
        <member name="T:OpenDental.FormRpInsCo">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpInsCo.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpInsCo.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpInsOverpaid">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpInsOverpaid.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpInsOverpaid.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpLaserLabels.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpLaserLabels.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:OpenDental.FormRpNetProdDetail">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpNetProdDetail.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpNetProdDetail.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpNetProdDetail.DailyMonthlyAnnual">
            <summary>Can be set externally when automating.</summary>
        </member>
        <member name="F:OpenDental.FormRpNetProdDetail.DateStart">
            <summary>If set externally, then this sets the date on startup.</summary>
        </member>
        <member name="F:OpenDental.FormRpNetProdDetail.DateEnd">
            <summary>If set externally, then this sets the date on startup.</summary>
        </member>
        <member name="M:OpenDental.FormRpNetProdDetail.#ctor(System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpNewPatients">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpNewPatients.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpNewPatients.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpOutstandingIns.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpOutstandingIns._listClaimSentEditUsers">
            <summary>List of non-hidden users with ClaimSentEdit permission.</summary>
        </member>
        <member name="M:OpenDental.FormRpOutstandingIns.gridMain_RightClickHelper(System.Object,System.EventArgs)">
            <summary>Click method used by all gridMain right click options.
            We identify what logic to run by the menuItem.Tag.</summary>
        </member>
        <member name="M:OpenDental.FormRpOutstandingIns.AssignUserHelper(System.Int64)">
            <summary>Loops through gridMain.SelectedIndices to create or update ClaimTracking rows.</summary>
        </member>
        <member name="M:OpenDental.FormRpOutstandingIns.ComboUserPickHelper(System.Int64)">
            <summary>After calling PickUser(false) this is used to set comboUserAssigneds selection.
            Also calls FillGrid() to reflect new selection.</summary>
        </member>
        <member name="M:OpenDental.FormRpOutstandingIns.PickUser(System.Boolean)">
            <summary>Opens FormUserPick to allow user to select a user.
            Returns UserNum associated to selection.
            0 represents Unassigned
            -1 represents All
            -2 represents a canceled selection</summary>
        </member>
        <member name="M:OpenDental.FormRpOutstandingIns.SetDates(System.DateTime,System.DateTime)">
            <summary>Sets date controls in both date tabs</summary>
        </member>
        <member name="M:OpenDental.FormRpOutstandingIns.GetDateTo">
            <summary>Gets date control for report</summary>
        </member>
        <member name="M:OpenDental.FormRpOutstandingIns.GetDateTo(OpenDental.UI.TabPage)">
            <summary>Gets date control for report from a specific tab in tabControlDate</summary>
        </member>
        <member name="M:OpenDental.FormRpOutstandingIns.GetDateFrom">
            <summary>Gets date control for report</summary>
        </member>
        <member name="M:OpenDental.FormRpOutstandingIns.GetDateFrom(OpenDental.UI.TabPage)">
            <summary>Gets date control for report from a specific tab in tabControlDate</summary>
        </member>
        <member name="T:OpenDental.FormRpPatients">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPatients.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPatients.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpPatPortionUncollected">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPatPortionUncollected.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPatPortionUncollected.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpPatPortionUncollected.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpPayPlans">
            <summary>
            Summary description for FormRpApptWithPhones.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpPayPlans.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPayPlans.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpPayPlans.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpPaySheet">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPaySheet.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPaySheet.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpPaySheet.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPaySheet.ModifyRowsForOnlinePayments(System.Data.DataTable)">
            <summary>Gets all payments from the DataTable that was passed in and checks if its payment source is 
            considered an online payment. If it is then it will add that DataRow to the returning DataTable and 
            remove the DataRow from the table that was passed in.</summary>
        </member>
        <member name="M:OpenDental.FormRpPaySheet.AddAfterFeeColumn(System.Data.DataTable)">
            <summary>Alters the passed in table to include an afterFee column. Fills the new column for each row with the amt.</summary>
        </member>
        <member name="M:OpenDental.FormRpPaySheet.AddCareCreditFeeColumn(System.Data.DataTable)">
            <summary>Alters the passed in table to include a CareCredit Fee column before the Amount column. Fills the new column for each row with the MerchantFee, if necessary. 
            For CareCredit, the negative of the MerchantFee is used.</summary>
        </member>
        <member name="M:OpenDental.FormRpPaySheet.AddPayConnectFeeColumn(System.Data.DataTable)">
            <summary>Alters the passed in table to include a PayConnect Fee column before the Amount column. Fills the new column for each row with the MerchantFee, if necessary.</summary>
        </member>
        <member name="T:OpenDental.FormRpPHRawPop">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPHRawPop.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPHRawPop.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpPHRawScreen">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPHRawScreen.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPHRawScreen.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpPPOwriteoffs">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpPPOwriteoffs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpPPOwriteoffs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpPPOwriteoffs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpPPOwriteoffs.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpPrescriptions">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPrescriptions.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPrescriptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpPrescriptions.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpPrintPreview">
            <summary>This form is only launched and used in Debug.</summary>
        </member>
        <member name="M:OpenDental.FormRpPrintPreview.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpPrintPreview._printPreviewControl2">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPrintPreview.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPrintPreview.#ctor(System.Drawing.Printing.PrintDocument)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpPrintPreview.#ctor(CodeBase.ODprintout)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpProcCodes">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProcCodes.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProcCodes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpProcCodes.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpProcNotBilledIns">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpProcNotBilledIns.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpProcNotBilledIns.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpProcNotBilledIns.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:OpenDental.FormRpProcNotBilledIns.OnPostClaimCreation">
            <summary>Called when claims are created, only executes if at least 1 claim was created.</summary>
        </member>
        <member name="M:OpenDental.FormRpProcNotBilledIns.#ctor(System.Windows.Forms.Control)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProcNotBilledIns.GetUniqueDiagnosticCodes(System.Collections.Generic.List{OpenDental.ProcNotBilled},System.Collections.Generic.List{OpenDentBusiness.Procedure},System.Collections.Generic.List{OpenDentBusiness.PatPlan},System.Collections.Generic.List{OpenDentBusiness.InsSub},System.Collections.Generic.List{OpenDentBusiness.InsPlan})">
            <summary>Mimics ContrAccount.CreateClaim(...).  Removes items from listProcs until unique diagnosis code count is low enough.</summary>
        </member>
        <member name="M:OpenDental.FormRpProcNote.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpProcNote.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpProcNote.#ctor(System.Windows.Forms.Control)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProcNote.GetListSelectedProvNums">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpProcOverpaid">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpProcOverpaid._patNum">
            <summary>The selected patNum.  Can be 0 to include all.</summary>
        </member>
        <member name="M:OpenDental.FormRpProcOverpaid.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProcOverpaid.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProcOverpaid.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormRpProcSheet">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProcSheet.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProcSheet.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpProcSheet.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProcSheet.ConstructProviderSubtitle">
            <summary>Returns 'All Providers' or comma separated string of clinics providers selected.</summary>
        </member>
        <member name="M:OpenDental.FormRpProcSheet.ConstructClinicSubtitle">
            <summary>Returns 'All Clinics' or comma separated string of clinics selected.</summary>
        </member>
        <member name="T:OpenDental.FormRpProdGoal">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProdGoal.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProdGoal.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpProdGoal._listProviders">
            <summary>Includes hidden and hidden on reports providers.
            This is used instead of Providers.GetListReports() because we need the full list of providers when running All Providers
            This is also so we can show provider specific information in the report.
            Includes providers that share the same name as the provider currently logged if user has the ReportProdIncAllProviders permission.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormRpProdGoal._listFilteredProviders" -->
        <member name="M:OpenDental.FormRpProdGoal.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpProdInc">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProdInc.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProdInc.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpProdInc.DailyMonthlyAnnual">
            <summary>Can be set externally when automating.</summary>
        </member>
        <member name="F:OpenDental.FormRpProdInc.DateStart">
            <summary>If set externally, then this sets the date on startup.</summary>
        </member>
        <member name="F:OpenDental.FormRpProdInc.DateEnd">
            <summary>If set externally, then this sets the date on startup.</summary>
        </member>
        <member name="F:OpenDental.FormRpProdInc._listProviders">
            <summary>Includes hidden and hidden on reports providers.
            This is used instead of Providers.GetListReports() because we need the full list of providers when running All Providers
            This is also so we can show provider specific information in the report.
            Includes providers that share the same name as the provider currently logged if user has the ReportProdIncAllProviders permission.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormRpProdInc._listFilteredProviders" -->
        <member name="M:OpenDental.FormRpProdInc.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProdInc.GetClinicsForReport">
            <summary>Gets the list of clinics to use in the report. Filters out clinics depending on selection and security permissions.</summary>
        </member>
        <member name="T:OpenDental.FormRpProviderPayroll">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProviderPayroll.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpProviderPayroll.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpProviderPayroll.DailyMonthlyAnnual">
            <summary>Can be set externally when automating.</summary>
        </member>
        <member name="F:OpenDental.FormRpProviderPayroll.DateStart">
            <summary>If set externally, then this sets the date on startup.</summary>
        </member>
        <member name="F:OpenDental.FormRpProviderPayroll.DateEnd">
            <summary>If set externally, then this sets the date on startup.</summary>
        </member>
        <member name="M:OpenDental.FormRpProviderPayroll.#ctor(System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpRecall">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpRecall.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpRecall.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpRecall.#ctor(System.Collections.Generic.List{System.Int64})">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpReceivablesBreakdown">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpReceivablesBreakdown.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpReceivablesBreakdown.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpReceivablesBreakdown.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpReferralAnalysis">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpReferralAnalysis.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpReferralAnalysis.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpReferrals">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpReferrals.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpReferrals.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpReferrals.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpRouting">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpRouting.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpRouting.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpRouting.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpRouting.date">
            <summary>The date that the user selected.</summary>
        </member>
        <member name="F:OpenDental.FormRpRouting.AptNum">
            <summary>If set externally beforehand, then the user will not see any choices, and only a routing slip for the one appt will print.</summary>
        </member>
        <member name="F:OpenDental.FormRpRouting.SheetDefNum">
            <summary>If ApptNum is set, then this should be set also.</summary>
        </member>
        <member name="F:OpenDental.FormRpRouting.IsAutoRunForDateSelected">
            <summary>If the butSelectedDay_Click occurs</summary>
        </member>
        <member name="F:OpenDental.FormRpRouting.IsAutoRunForListAptNums">
            <summary>If the butSelectedView_Click occurs</summary>
        </member>
        <member name="F:OpenDental.FormRpRouting.DateSelected">
            <summary>Stores the date for the currently selected date from the appointment module.</summary>
        </member>
        <member name="M:OpenDental.FormRpRouting.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpRouting.PrintRoutingSlips(System.Collections.Generic.List{System.Int64},System.Int64)">
            <summary>Specify a sheetDefNum of 0 for the internal Routing slip.</summary>
        </member>
        <member name="F:OpenDental.FormRpServiceDateView.PatNum">
            <summary>This will be the PatNum or the Guarantor's PatNum.</summary>
        </member>
        <member name="F:OpenDental.FormRpServiceDateView.IsFamily">
            <summary>Whether or not the window is displaying results for the entire family.</summary>
        </member>
        <member name="F:OpenDental.FormRpServiceDateView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpServiceDateView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpServiceDateView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormRpStatement">
            <summary>OBSOLETE. This class is no longer in use. Statement printing/reporting now uses sheets and this form is no longer needed.</summary>
        </member>
        <member name="M:OpenDental.FormRpStatement.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpStatement.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpStatement.dataSett">
            <summary>Holds the data for one statement.</summary>
        </member>
        <member name="M:OpenDental.FormRpStatement.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpStatement.CreateStatementPdfSheets(OpenDentBusiness.Statement,OpenDentBusiness.Patient,OpenDentBusiness.Family,System.Data.DataSet,System.Boolean)">
            <summary>Creates a new pdf, attaches it to a new doc, and attaches that to the statement.  If it cannot create a pdf, for example if no AtoZ 
            folders, then it will simply result in a docnum of zero, so no attached doc. Only used for batch statment printing. Returns the path of the
            temp file where the pdf is saved.Temp file should be deleted manually.  Will return an empty string when unable to create the file.</summary>
        </member>
        <member name="M:OpenDental.FormRpStatement.PrintStatement(OpenDentBusiness.Statement,System.Boolean,System.Data.DataSet,OpenDentBusiness.Family,OpenDentBusiness.Patient)">
            <summary>Prints one statement.  Does not generate pdf or print from existing pdf.</summary>
        </member>
        <member name="M:OpenDental.FormRpStatement.CreateDocument(System.Drawing.Printing.PrintDocument,OpenDentBusiness.Family,OpenDentBusiness.Patient,System.Data.DataSet)">
            <summary>Supply pd so that we know the paper size and margins.</summary>
        </member>
        <member name="M:OpenDental.FormRpStatement.Modulo10(System.String)">
            <summary>data may only contain numbers between 0 und 9</summary>
        </member>
        <member name="T:OpenDental.FormRpTreatmentFinder">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpTreatmentFinder.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpTreatmentFinder._listHeaders">
            <summary>We do not hold onto the data table in memory so we use this list to keep track of the headers we'll need when exporting.</summary>
        </member>
        <member name="M:OpenDental.FormRpTreatmentFinder.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpTreatmentFinder.FillGrid">
            <summary>We have hard coded DataTable col numbers so if the DataTable changes, make sure to change the nunmbers.</summary>
        </member>
        <member name="T:OpenDental.FormRpWriteoffSheet">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpWriteoffSheet.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpWriteoffSheet.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormSearchPatNotes">
            <summary>
            Summary description for FormSearchPatNotes.
            </summary>
        </member>
        <member name="F:OpenDental.FormSearchPatNotes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSearchPatNotes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormSearchPatNotes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPrinterEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPrinterEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPrinterEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTasksForAppt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTasksForAppt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTasksForAppt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormClaimAttachHistory">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachHistory.ClearAttachmentID">
            <summary>Wipes out the existing attachmentID, narrative, and list of ClaimAttaches. Makes a securitylog for the old ID, and clears the 'Misc' attached flag on the claim. This must be done when a non-DXC attachmentID has been detected so that claim validation will work as expected.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachHistory.ValidateClaimDXC">
            <summary>Returns true if claim is valid for DXC. Changes _textClaimStatus.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachHistory.gridMain_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>The selected image opens in default photo viewer. This code was copied from FormClaimEdit gridSent_CellDoubleClick().</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachHistory.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachHistory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimAttachHistory.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachPasteDXCItem.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachPasteDXCItem.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimAttachPasteDXCItem.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormClaimAttachSnipDXC">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachSnipDXC._listImageReferenceIds">
            <summary>Stores a list of the image Ids from DXC to be saved locally.</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachSnipDXC._titleOriginal">
            <summary>Stores the original title of the form to change the title back after "Waiting For Snip" title is done</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachSnipDXC.GetImageCatDefs">
            <summary>Checks to see if the user has made a Claim Attachment image category definition. Returns the list of Defs found.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachSnipDXC.ValidateClaimDXC">
            <summary>Returns true if claim is valid for DXC. Changes textClaimStatus.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormClaimAttachSnipDXC.timerKillSnipToolProcesses_Tick(System.Object,System.EventArgs)" -->
        <member name="M:OpenDental.FormClaimAttachSnipDXC.KillProcesses(System.Collections.Generic.List{System.Diagnostics.Process})">
            <summary> Kill all passed-in processes, ignoring any failures, and return True if any were killed. </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormClaimAttachSnipDXC.GetProcessesSnipTool" -->
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormClaimAttachSnipDXC.DoesSnipAndSketchExist" -->
        <member name="M:OpenDental.FormClaimAttachSnipDXC.DoesSnippingToolExist">
            <summary>Returns true if the Snipping Tool exe can be located.  False otherwise.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormClaimAttachSnipDXC.StartSnipAndSketchOrSnippingTool" -->
        <member name="M:OpenDental.FormClaimAttachSnipDXC.StartSnipping">
            <summary>Mimics FormImageSelectClaimAttachment.StartSnipping()</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachSnipDXC.ShowImageAttachmentItemEdit(System.Drawing.Bitmap)">
            <summary>Caller should dispose of this bitmap.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachSnipDXC.PrepareImage(System.Drawing.Bitmap)">
            <summary>Caller should dispose of this bitmap. Assigns image to pictureBoxImagePreview. Creates attachment to send to DXC from image.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachSnipDXC.AddAttachments">
            <summary>Sends the passed-in attachments to ClaimConnect.  Will set the attachment id to the claim if needed.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachSnipDXC.butSend_Click(System.Object,System.EventArgs)">
            <summary>Saves image to the patient on the claim's directory in the images module. Creates a ClaimAttach object to associate to the given claim.</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachSnipDXC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachSnipDXC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimAttachSnipDXC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormCloudUserEdit.TryGetListGroupIdsLastUser(System.Collections.Generic.List{System.String}@)">
            <summary>Returns the list of GroupIds where this is the last cloud user in that group.  Used to determine if the user can be deleted.</summary>
        </member>
        <member name="M:OpenDental.FormCloudUserEdit.CanRemoveUserFromGroup(System.String)">
            <summary>Returns true if the user is not the last user in a group.  False otherwise.  Used to determine if a user can be removed from a group.</summary>
        </member>
        <member name="F:OpenDental.FormCloudUserEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCloudUserEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCloudUserEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormCloudUsers.TryGetListGroupIdsLastUser(OpenDental.CloudUser,System.Collections.Generic.List{System.String}@)">
            <summary>Returns the list of GroupIds where this is the last cloud user in that group.  Used to determine if the user can be deleted.</summary>
        </member>
        <member name="M:OpenDental.FormCloudUsers.CanRemoveUserFromGroup(OpenDental.CloudUser,System.String)">
            <summary>Returns true if the user is not the last user in a group.  False otherwise.  Used to determine if a user can be removed from a group.</summary>
        </member>
        <member name="F:OpenDental.FormCloudUsers.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCloudUsers.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCloudUsers.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormBenefitFrequencyEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBenefitFrequencyEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBenefitFrequencyEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.BasicTemplate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.BasicTemplate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.BasicTemplate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormBenefitFrequencies.MakeFrequencyBenefit(System.Int64,System.Int32,System.Byte)">
            <summary> Create a frequency benefit with a given code group, frequency, and quantity. </summary>
        </member>
        <member name="M:OpenDental.FormBenefitFrequencies.DetermineBenefitFrequencyOption(OpenDentBusiness.Benefit)">
            <summary> Will determine the FrequencyOptions enum value that was used to create a given frequency benefit. </summary>
        </member>
        <member name="F:OpenDental.FormBenefitFrequencies.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBenefitFrequencies.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBenefitFrequencies.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEClipboardImageCaptureDefEdit._imageCaptureDef">
            <summary> The imageCaptureDef we are currently editing </summary>
        </member>
        <member name="F:OpenDental.FormEClipboardImageCaptureDefEdit._listEClipboardImageCaptureDef">
            <summary> List of all imageCaptureDefs </summary>
        </member>
        <member name="F:OpenDental.FormEClipboardImageCaptureDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEClipboardImageCaptureDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEClipboardImageCaptureDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileAppDeviceManage._canEditEClipboard">
            <summary>When true, shows the eClipboard column to enable and disable devices.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileAppDeviceManage._canEditODTouch">
            <summary>When true, shows the ODTouch column to enable and disable devices.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileAppDeviceManage._listMobileAppDevicesOld">
            <summary>List of the state of the old mobile app devices before entering this form</summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileAppDeviceManage._listMobileAppDevicesAll">
            <summary>List of mobile app devices.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileAppDeviceManage._listMobileAppDevicesDelete">
            <summary>List of MobileAppDevices that will be deleted on save.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileAppDeviceManage.FillGridMobileAppDevices">
            <summary>Fills the big main grid.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileAppDeviceManage.SetUIEClipboardEnabled">
            <summary>Called when user clicks on use defaults for clinic, AuthorizeTab, clinicPicker.SelectedIndexChanged, and CheckEClipboardCreateMissingForms_Click.  It sets various areas enabled or disabled.  Doesn't change the checked values.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileAppDeviceManage.GetClinicNumEClipboardTab">
            <summary>The current clinic num for this tab, handles whether or not the practice has clinics.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileAppDeviceManage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileAppDeviceManage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesMobileAppDeviceManage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormClaimAttachPasteDXC">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachPasteDXC._listAttachmentItems">
            <summary>Stores list of attachment information for DXC</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachPasteDXC._listImageReferenceIds">
            <summary>Stores a list of the image Ids from DXC to be saved locally.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachPasteDXC.AddAttachments(System.Collections.Generic.List{OpenDentBusiness.Eclaims.ClaimConnect.ImageAttachment})">
            <summary>Sends the passed-in attachments to ClaimConnect.  Will set the attachment id to the claim if needed.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachPasteDXC.BatchAddAttachments(System.Collections.Generic.List{OpenDentBusiness.Eclaims.ClaimConnect.ImageAttachment})">
            <summary>Mimics AddAttachments() but is split out for simplicity as this method will be rarely called. Sends every attachment one-by-one to DentalXChange. Sets the claims attachmentID to the response from Dentalxchange for the first attachment sent.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachPasteDXC.SendAttachmentsToDXCAndSaveLocally">
            <summary>Sends attachments to DXC and saves locally. Mostly copied from FormClaimAttachment.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachPasteDXC.gridMain_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Open FormClaimAttachPasteDXCItem for the specific row selected to edit the information for said row.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachPasteDXC.gridMain_CellClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Displays image for the selected row in the pictureBox.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachPasteDXC.contextMenuImageGrid_Popup(System.Object,System.EventArgs)">
            <summary>Set the pictureBox.Image as soon as a right click occurs. Very similar to gridMain_CellClick().</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachPasteDXC.SetImageTypeCode(OpenDentBusiness.Eclaims.ClaimConnect.ImageTypeCode)">
            <summary>Centralizes setting an imageTypeCode from the right click menu.</summary>
        </member>
        <member name="T:OpenDental.FormClaimAttachPasteDXC.AttachmentItem">
            <summary>Class to help store additional data for the attachment. Gets sent to FormClaimAttachPasteDXCItem.</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachPasteDXC.AttachmentItem.ImageAttachment">
            <summary>The object that is sent to DXC.</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachPasteDXC.AttachmentItem.HasTypeBeenSet">
            <summary>Checks to see if user has set an ImageTypeCode. Used by FormClaimAttachPasteDXCItem.</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachPasteDXC.AttachmentItem.Bitmap">
            <summary>Keeps track of bitmap for this row to give to pictureBox. This AttachmentItem is responsible for disposing of the bitmap when form closes.</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachPasteDXC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachPasteDXC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimAttachPasteDXC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormImagePickerDXC">
            <summary>This image picker shows all images and mounts for a specific patient and lets you send one to DXC. The code in this form was basically just copied in chunks from FormImagePickerPatient.</summary>
        </member>
        <member name="F:OpenDental.FormImagePickerDXC._listImageReferenceIds">
            <summary>Stores a list of the image Ids from DXC to be saved locally.</summary>
        </member>
        <member name="M:OpenDental.FormImagePickerDXC.#ctor">
            <summary>Check that the imageFolder exists and is accessible before calling this form.</summary>
        </member>
        <member name="M:OpenDental.FormImagePickerDXC.FillTree">
            <summary>Refreshes list from db, then fills the treeview.  Set keepSelection to true in order to keep the current selection active.</summary>
        </member>
        <member name="M:OpenDental.FormImagePickerDXC.AddAttachments">
            <summary>Sends the passed-in attachments to ClaimConnect.  Will set the attachment id to the claim if needed.</summary>
        </member>
        <member name="M:OpenDental.FormImagePickerDXC.SendSelectedToDXCAndSaveLocally">
            <summary>Sends attachments to DXC and saves locally. Mostly copied from FormClaimAttachSnipDXC.</summary>
        </member>
        <member name="F:OpenDental.FormImagePickerDXC.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormImagePickerDXC.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormImagePickerDXC.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMessageToPayEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMessageToPayEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMessageToPayEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskSubscribers.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskSubscribers.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTaskSubscribers.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlanTemplateEdit.ValidateTemplate">
            <summary>Validates the template</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanTemplateEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlanTemplateEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPayPlanTemplateEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayPlanTemplates.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlanTemplates.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPayPlanTemplates.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCodeGroupEdit.CodeGroup">
            <summary>The code group being edited. This object in memory will be updated with any changes made in this window if the user clicks OK. Otherwise, it is left alone. Leave null if adding a new code group.</summary>
        </member>
        <member name="F:OpenDental.FormCodeGroupEdit.ListEnumCodeGroupFixedsInUse">
            <summary>The list of EnumCodeGroupFixed values that have already been used in another code group. Users will be blocked from using these values when editing the code group passed in.</summary>
        </member>
        <member name="F:OpenDental.FormCodeGroupEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCodeGroupEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCodeGroupEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCodeGroups.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCodeGroups.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCodeGroups.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatientListDiscount.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatientListDiscount.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPatientListDiscount.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimOverpay._listProcedures">
            <summary>List of all the procedures for a patient.</summary>
        </member>
        <member name="F:OpenDental.FormClaimOverpay._listClaimProcs">
            <summary>List of some of the claimprocs attached to the claim we are editing. Includes overpayment/underpayment claimprocs (ClaimProc.IsOverpay=True).
            Does NOT include every claimproc such as claimprocs that are total payments.</summary>
        </member>
        <member name="F:OpenDental.FormClaimOverpay._listPaymentClaimProcs">
            <summary>Only one overpayment per ProcNum and it belongs to the NotReceived/Received claimproc.</summary>
        </member>
        <member name="F:OpenDental.FormClaimOverpay._selectedClaimProcNum">
            <summary>Used to pre-select a row in the grid of claimprocs.</summary>
        </member>
        <member name="F:OpenDental.FormClaimOverpay._isOverpaid">
            <summary>Used to preselect a column in the grid of claimsprocs.</summary>
        </member>
        <member name="F:OpenDental.FormClaimOverpay._claimNum">
            <summary>Stores the primary key of the claim that the claimprocs which we are editing, belong to.</summary>
        </member>
        <member name="F:OpenDental.FormClaimOverpay._colInsOverpaidIndex">
            <summary>Index of the Overpaid column within the grid. Can vary based on preferences.</summary>
        </member>
        <member name="F:OpenDental.FormClaimOverpay._colInsUnderpaidIndex">
            <summary>Index of the Underpaid column within the grid. Can vary based on preferences.</summary>
        </member>
        <member name="M:OpenDental.FormClaimOverpay.#ctor(System.Int64,System.Collections.Generic.List{OpenDentBusiness.ClaimProc},System.Int64,System.Boolean,System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimOverpay.FillGrid">
            <summary>Fills the grid with regular claimprocs. Does not include overpayment claimprocs in the grid.</summary>
        </member>
        <member name="M:OpenDental.FormClaimOverpay.FillTotals">
            <Summary>Recalculate all of the Totals text boxes that show up underneath the Procedures grid.</Summary>
        </member>
        <member name="F:OpenDental.FormClaimOverpay.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimOverpay.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimOverpay.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormPayConnect2iFrame">
            <summary>Use this form when there is no token on file for the credit card being used.</summary>
        </member>
        <member name="F:OpenDental.FormPayConnect2iFrame._isAddingCard">
            <summary>Controls if we request a tokenizer or payment type iFrame from PayConnect</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect2iFrame.GetiFrameUrl">
            <summary>Throws exceptions.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect2iFrame.GetTransactionResult(System.Object,Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs)">
            <summary>Throws exceptions.</summary>
        </member>
        <member name="F:OpenDental.FormPayConnect2iFrame.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayConnect2iFrame.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPayConnect2iFrame.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayPlanChargeSelection.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlanChargeSelection.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPayPlanChargeSelection.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetProcSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetProcSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetProcSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayConnect2._isAddingCard">
            <summary>For iFrame only.</summary>
        </member>
        <member name="F:OpenDental.FormPayConnect2.WasPaymentAttempted">
            <summary>Opening the PayConnect or PaySimple window from FormPayment, and then closing them, can set isCcDeclined to True.
            This is because FormPayment didn't know if a transaction was attempted or not, and was assuming it was.
            This can cause the payment amount to be reset to $0. So, this bool indicates if we have actually attempted a transaction.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect2.GetAmountFieldAsCents">
            <summary>Returns -1 if an error occured. Takes whatever is in textAmount and tries to prepare it for use with PayConnect.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect2.ProcessTransaction">
            <summary>Returns true if we contacted and got a response from PayConnect.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect2.SendSignature">
            <summary>Does validation before sending. Will not make an API call if a signature has not been entered.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect2.SaveCreditCard">
            <summary>Checks all UI state and preconditions needed to save a card.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect2.GetPayConnectResponse">
            <summary>Only call this method once FormPayConnect2 has closed and the dialog result is OK. Uses the old PayConnectResponse class for backwards compatability.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect2.transactionTypeCheckedChanged(System.Object,System.EventArgs)">
            <summary>Not able to save a card during a void or refund</summary>
        </member>
        <member name="F:OpenDental.FormPayConnect2.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayConnect2.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPayConnect2.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayTerminalEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayTerminalEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPayTerminalEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormMobileBrandingProfileEdit">
            <summary>This form allows customers to customize the look of eClipboard for a Clinic. They may pick a name to displayed to patients, and an image to be displayed on the checkin screen.</summary>
        </member>
        <member name="M:OpenDental.FormMobileBrandingProfileEdit.FormMobileBrandingProfileEdit_Load(System.Object,System.EventArgs)">
            <summary>Fetches the mobile branding profile if it exists. Otherwise creates a new one, and fills fields.</summary>
        </member>
        <member name="M:OpenDental.FormMobileBrandingProfileEdit.FillFields">
            <summary>Fills the fields of the form with values from existing mobileBrandingProfile, or defaults.</summary>
        </member>
        <member name="M:OpenDental.FormMobileBrandingProfileEdit.TrySetPreviewImage">
            <summary>Attempts to display the image preview. Does nothing if fails. </summary>
        </member>
        <member name="M:OpenDental.FormMobileBrandingProfileEdit.ValidateMobileBrandingProfile">
            <summary>Returns false if description or logo are invalid, otherwise true.</summary>
        </member>
        <member name="M:OpenDental.FormMobileBrandingProfileEdit.textFilePathImage_Leave(System.Object,System.EventArgs)">
            <summary>Try to update the image preview.</summary>
        </member>
        <member name="M:OpenDental.FormMobileBrandingProfileEdit.butSelectImage_Click(System.Object,System.EventArgs)">
            <summary>Opens file picker, and sets path.</summary>
        </member>
        <member name="M:OpenDental.FormMobileBrandingProfileEdit.butClear_Click(System.Object,System.EventArgs)">
            <summary>Deletes branding profile if it exists in DB, and then clears the form.</summary>
        </member>
        <member name="M:OpenDental.FormMobileBrandingProfileEdit.butSave_Click(System.Object,System.EventArgs)">
            <summary>Insert or Update</summary>
        </member>
        <member name="F:OpenDental.FormMobileBrandingProfileEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMobileBrandingProfileEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMobileBrandingProfileEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesPaymentPortal.IsTemplateValid">
            <summary>Validates sms and email templates if they are set. Returns false if template contains any Redirect URLs or if Template is missing the msg to pay tag.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesPaymentPortal.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesPaymentPortal.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesPaymentPortal.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormERoutings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormERoutings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormERoutings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormERouting.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormERouting.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormERouting.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormERoutingDefEdit.ReorderListItemOrders">
            <summary>Resets item ordering based on what is currently in the list.</summary>
        </member>
        <member name="M:OpenDental.FormERoutingDefEdit.gridERoutingActions_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Opens an edit form for the chosen eRoutingActionDef.
            Refreshes page if saved. </summary>
        </member>
        <member name="M:OpenDental.FormERoutingDefEdit.ShowERoutingActionDefEditHelper(OpenDentBusiness.ERoutingActionDef)">
            <summary>Shows edit form, and manages the list of eRoutingActionDefs for new. </summary>
        </member>
        <member name="F:OpenDental.FormERoutingDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormERoutingDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormERoutingDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormERoutingDefs.butDuplicate_ClicK(System.Object,System.EventArgs)">
            <summary>Creates a copy of the selected item as well as the action defs associated with them. Inserts both and refills the gris.</summary>
        </member>
        <member name="F:OpenDental.FormERoutingDefs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormERoutingDefs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormERoutingDefs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAiChatSession._widthPrevious">
            <summary>This is used for redraw logic, see references.</summary>
        </member>
        <member name="F:OpenDental.FormAiChatSession._countMsgsViewed">
            <summary>The msg count as of the last time the user looked at it.</summary>
        </member>
        <member name="F:OpenDental.FormAiChatSession._countMsgsActual">
            <summary>whether or not viewed by user.</summary>
        </member>
        <member name="F:OpenDental.FormAiChatSession._openAiChatSession">
            <summary>There is one OpenAiChatSession per instance of FormAiChatSession.cs.
            This object contains all of the chat/instance specific properties and data needed for OpenAi chat assistants. </summary>
        </member>
        <member name="F:OpenDental.FormAiChatSession._initialMessage">
            <summary>The initial message that can be set when this window opens, defaults to null.
            When this form loads with an initial message via the constructor, the message is sent automatically while form loads., </summary>
        </member>
        <member name="M:OpenDental.FormAiChatSession.FormWebChatSession_ResizeEnd(System.Object,System.EventArgs)">
            <summary> When resizing the form, redraw all messages if the width changed.
            A redraw is necessary to update the width and height of each message.
            If the width didn't change, no need to redraw. </summary>
        </member>
        <member name="F:OpenDental.FormAiChatSession.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAiChatSession.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAiChatSession.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebChatSessionNoteEdit.handleCancel">
            <summary>Helper method to close the non-modal window on cancel.</summary>
        </member>
        <member name="F:OpenDental.FormWebChatSessionNoteEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebChatSessionNoteEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebChatSessionNoteEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCalendar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCalendar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCalendar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormeConfimationExclusionDays._useHQSettings">
            <summary>TRUE: Using HQ (Clinic 0) exclusion days, don't make exclusion changes for this clinic. FALSE: clinic has their own exclusion days</summary>
        </member>
        <member name="F:OpenDental.FormeConfimationExclusionDays.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormeConfimationExclusionDays.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormeConfimationExclusionDays.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesAutoMsgingPreferences.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsgingPreferences.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsgingPreferences.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMassEmailSendResults.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMassEmailSendResults.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMassEmailSendResults.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormImagePickerPatient">
            <summary>This image picker shows all images and mounts for a patient and lets you pick one. The code in this form was basically just copied in chunks from ControlImagesJ.</summary>
        </member>
        <member name="F:OpenDental.FormImagePickerPatient.DocNumSelected">
            <summary>Handles both incoming and outgoing selections</summary>
        </member>
        <member name="F:OpenDental.FormImagePickerPatient.MountNumSelected">
            <summary>Handles both incoming and outgoing selections</summary>
        </member>
        <member name="M:OpenDental.FormImagePickerPatient.#ctor">
            <summary>Check that the imageFolder exists and is accessible before calling this form.</summary>
        </member>
        <member name="M:OpenDental.FormImagePickerPatient.FillTree">
            <summary>Refreshes list from db, then fills the treeview.  Set keepSelection to true in order to keep the current selection active.</summary>
        </member>
        <member name="F:OpenDental.FormImagePickerPatient.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormImagePickerPatient.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormImagePickerPatient.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOrthoHardwareEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoHardwareEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoHardwareEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOrthoRxEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoRxEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoRxEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOrthoRxSelect._listOrthoRxsAvail">
            <summary>This is a derived list. It's every item from _listOrthoRxsAll that's not in ListOrthoRxsSelected.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoRxSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoRxSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoRxSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOrthoRxSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoRxSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoRxSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOrthoHardwareSpecEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoHardwareSpecEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoHardwareSpecEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOrthoHardwareAdd.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoHardwareAdd.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoHardwareAdd.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOrthoHardwareSpecs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoHardwareSpecs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoHardwareSpecs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldAdd.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldAdd.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldAdd.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldEditPatImage.SheetFieldCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldEditPatImage.BottomYLimit">
            <summary>The Y value to limit placement of PatImage to, should be set by caller.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldEditPatImage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldEditPatImage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldEditPatImage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSubscribersList.InsSubCur">
            <summary>Ins sub for the currently selected plan.</summary>
        </member>
        <member name="F:OpenDental.FormSubscribersList.InsPlanCur">
            <summary>Currently selected plan in the window.</summary>
        </member>
        <member name="F:OpenDental.FormSubscribersList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSubscribersList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSubscribersList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPreferences.panelInfo">
            <summary>This is the info icon.</summary>
        </member>
        <member name="F:OpenDental.FormPreferences._listPrefValSyncs">
            <summary>A reference to this list is passed to each panel that needs it. This just syncs about 15 prefs that are present in multiple panels.</summary>
        </member>
        <member name="F:OpenDental.FormPreferences._changed">
            <summary>Only tracks the 15 synced prefs.</summary>
        </member>
        <member name="M:OpenDental.FormPreferences.GetPrefInf(System.Windows.Forms.Control)">
            <summary>Returns null if there was no pref info for this control.</summary>
        </member>
        <member name="M:OpenDental.FormPreferences.GetListNodesFlat">
            <summary>Gets a flat list of all tree nodes</summary>
        </member>
        <member name="M:OpenDental.FormPreferences.GetChildrenFlat(System.Windows.Forms.TreeNode)">
            <summary>Recursive. Returns empty list when no children.</summary>
        </member>
        <member name="M:OpenDental.FormPreferences.GetListControlsFlat(System.Windows.Forms.Control)">
            <summary>Gets a flat list of this control and all of its child controls. Recursive.</summary>
        </member>
        <member name="M:OpenDental.FormPreferences.FillUserControls">
            <summary>Create one control per menu item using the LayoutManager.</summary>
        </member>
        <member name="M:OpenDental.FormPreferences.FillTree">
            <summary>Fills the MenuTree, make sure that the Tag is the exact same name as the control.</summary>
        </member>
        <member name="M:OpenDental.FormPreferences.LoadUserControls">
            <summary>Load all of the preferences of each control.</summary>
        </member>
        <member name="F:OpenDental.FormPreferences.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPreferences.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPreferences.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWebBrowserPrefs.PointStart">
            <summary>Set this to the location where the window should start.  If this makes it fall outside the screen, it will be fixed automatically.</summary>
        </member>
        <member name="F:OpenDental.FormWebBrowserPrefs.SizeWindow">
            <summary>Default size is 591 x 363. If your info is too big and causes scrolling, then increase the size of the window.</summary>
        </member>
        <member name="M:OpenDental.FormWebBrowserPrefs.#ctor">
            <summary>Used when opening additional details within FormPreferences.  This form will also allow links clicked and opened within this form.</summary>
        </member>
        <member name="F:OpenDental.FormWebBrowserPrefs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebBrowserPrefs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebBrowserPrefs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormODTouchSecurityEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormODTouchSecurityEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormODTouchSecurityEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWebFormNextForms._listWebForms_SheetDefsAll">
            <summary>List of all sheet defs. This is passed in and never changed.</summary>
        </member>
        <member name="F:OpenDental.FormWebFormNextForms._listWebForms_SheetDefsSelected">
            <summary>List of sheet defs selected. This is manipulated with butLeft, butRight, butUp, butDown.</summary>
        </member>
        <member name="F:OpenDental.FormWebFormNextForms.ListWebForms_SheetDefsSelected">
            <summary>List of sheet defs selected when exiting the form with OK click.</summary>
        </member>
        <member name="F:OpenDental.FormWebFormNextForms.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebFormNextForms.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebFormNextForms.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormPerioSetup.GetProbingDepthsWithCommas(System.String)">
            <summary>Simply returns the string passed in but with a comma added after every third character.</summary>
        </member>
        <member name="M:OpenDental.FormPerioSetup.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>Inserts a comma into the current textbox after every 3 values. Only triggers when typing at the end of the textbox and if the key press was a numeric value.</summary>
        </member>
        <member name="M:OpenDental.FormPerioSetup.ShiftFocus">
            <summary>Shifts the texbox focus to the end of the next non-full textbox. If all are filled, shifts focus to the end of the last textbox. Occurs when the current textbox is full and cursor is at the end of the textbox.</summary>
        </member>
        <member name="F:OpenDental.FormPerioSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPerioSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPerioSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormUserQuery._dictionaryPatientNames">
            <summary>A dictionary of patient names that only gets filled once and only if necessary. Jordan OK.</summary>
        </member>
        <member name="F:OpenDental.FormUserQuery._dictionaryPlanCarrier">
            <summary>A dictionary of key: InsPlanNum, value: Carrier Name. Jordan OK.</summary>
        </member>
        <member name="F:OpenDental.FormUserQuery._queryExceptionState">
            <summary>Tells the form whether to throw, show (interrupt), or suppress exceptions. Set manually in the code below.</summary>
        </member>
        <member name="F:OpenDental.FormUserQuery._serverThreadID">
            <summary>The server thread id that the current query is running on.</summary>
        </member>
        <member name="F:OpenDental.FormUserQuery._odThreadQuery">
            <summary>User queries run on a separate thread so they can be cancelled.</summary>
        </member>
        <member name="M:OpenDental.FormUserQuery.FormQuery_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>When the form is closing, try to cancel any running queries.</summary>
        </member>
        <member name="M:OpenDental.FormUserQuery.ExportQuery(System.String)">
            <summary>Takes in either a comma or tab delimiter to determine if the export should be .csv or .txt. Passing in a comma is for .csv and passing in a tab is for .txt.</summary>
        </member>
        <member name="M:OpenDental.FormUserQuery.radioHuman_Click(System.Object,System.EventArgs)">
            <summary>Formats the current report to be human-readable. Does NOT run the whole query again.</summary>
        </member>
        <member name="M:OpenDental.FormUserQuery.radioRaw_Click(System.Object,System.EventArgs)">
            <summary>Formats the current report to be human-readable. Does NOT run the whole query again.</summary>
        </member>
        <member name="M:OpenDental.FormUserQuery.textQuery_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>KeyDown instead of KeyPress because KeyDown provides e.KeyCode and KeyPress only provides e.KeyChar (which is a char value).</summary>
        </member>
        <member name="T:OpenDental.FormUserQuery.QueryExceptionState">
            <summary>Enum to determine how to handle exceptions thrown by the _userQuery thread.</summary>
        </member>
        <member name="F:OpenDental.FormUserQuery.QueryExceptionState.Interrupt">
            <summary>1 - means that query execution was interrupted by the user and will display a messagebox stating so.</summary>
        </member>
        <member name="F:OpenDental.FormUserQuery.QueryExceptionState.Suppress">
            <summary>2 - suppress any exceptions that arise.</summary>
        </member>
        <member name="F:OpenDental.FormUserQuery.QueryExceptionState.Throw">
            <summary>3 - throw any exceptions that arise (but in a messagebox so it looks better than a UE).</summary>
        </member>
        <member name="T:OpenDental.FormUserQuery.QueryExecuteState">
            <summary>Enum to determine how to handle the controls in this form based on what is currently happening.</summary>
        </member>
        <member name="F:OpenDental.FormUserQuery.QueryExecuteState.Idle">
            <summary>1 - Nothing is happening. All controls are available to be clicked, and the Submit button says "Submit Query" on it.</summary>
        </member>
        <member name="F:OpenDental.FormUserQuery.QueryExecuteState.Executing">
            <summary>2 - Query is excecuting. Only the Close button and Submit button is available to be clicked, and the Submit button says "Cancel Query" on it.</summary>
        </member>
        <member name="F:OpenDental.FormUserQuery.QueryExecuteState.Formatting">
            <summary>3 - Query is in the process of being displayed. No controls are available to be clicked.</summary>
        </member>
        <member name="M:OpenDental.FormUserQuery.SubmitQueryThreaded(System.Boolean)">
            <summary>Used to submit user queries in a thread.  Column names will be handled automatically.
            Set wasSqlValidated to true in order to skip SQL saftey validation if the query has already been vetted.</summary>
        </member>
        <member name="M:OpenDental.FormUserQuery.ExceptionThreadHandler(System.Exception)">
            <summary>_userQuery exceptionHandler. Displays a messagebox or suppresses exceptions based on _exceptionStateCur.</summary>
        </member>
        <member name="M:OpenDental.FormUserQuery.FillForm">
            <summary>Fills the form with the results of the query and formats it. If the Human Readable checkbox is checked, that logic is also done here.
            Depending on what was selected, the MakeReadable() method can take a very long time. We may want to include this in the query thread
            at some point so users can cancel out of this as well.</summary>
        </member>
        <member name="M:OpenDental.FormUserQuery.LayoutHelperForState(OpenDental.FormUserQuery.QueryExecuteState)">
            <summary>Sets the controls on the form to reflect the execute state passed in.  Typically used to disable all controls while executing.</summary>
        </member>
        <member name="M:OpenDental.FormUserQuery.OnThreadExit(CodeBase.ODThread)">
            <summary>_userQuery exitHandler. Fills the form if the form is not disposed.</summary>
        </member>
        <member name="M:OpenDental.FormUserQuery.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormApptViewEditMobile">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptViewEditMobile._listEnumApptViewElementsAvailable">
            <summary>Those elements which are showing in the list of available elements.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEditMobile._listApptFieldDefNumsAvailable">
            <summary>The actual ApptFieldDefNums of all available elements because no language translation is needed.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEditMobile._listPatFieldDefNums">
            <summary>The actual PatFieldDefNums of all available elements because no language translation is needed.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEditMobile._listApptViewItemsDisplayedAll">
            <summary>A local list of ApptViewItems which are displayed in all three lists on the right.  Not updated to db until the form is closed.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEditMobile._apptViewCur">
            <summary>Set this value before opening the form.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEditMobile._listApptViewItems">
            <summary>Set this value with the clinic selected in FormApptViews. Only to be used to set comboClinic.SelectedClinicNum.</summary>
            <summary>List of all ApptViewItems for this view.  All 5 types.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEditMobile._listApptViewItemsDef">
            <summary>List of ApptViewItems that do not include OpNum or ProvNum. This includes ElementDesc, ApptFieldDefNum, and PatFieldDefNum.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEditMobile.#ctor(OpenDentBusiness.ApptView,System.Collections.Generic.List{OpenDentBusiness.ApptViewItem},OpenDental.FormApptViewEdit)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormApptViewEditMobile.FillElements">
            <summary>Fills the five lists based on the displayedElements lists. No database transactions are performed here.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEditMobile.ElementIsDisplayed(OpenDentBusiness.EnumApptViewElement)">
            <summary>Called from FillElements. Used to determine whether a given element is already displayed. If not, then it is displayed in the available rows on the left.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEditMobile.ApptFieldIsDisplayed(System.Int64)">
            <summary>Called from FillElements. Used to determine whether a apptfield is already displayed. If not, then it is displayed in the apptFieldDef rows on the left.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEditMobile.PatFieldIsDisplayed(System.Int64)">
            <summary>Called from FillElements. Used to determine whether a PatFieldDef is already displayed. If not, then it is displayed in the patFieldDef rows on the left.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEditMobile.MarkFieldNameIfHidden(System.Int64)">
            <summary>Returns the ApptFieldDef.FieldName with the tag (hidden) if the ApptFieldDef is hidden. Otherwise return the FieldName.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEditMobile.ReselectItem(OpenDentBusiness.ApptViewItem)">
            <summary>When we know what item we want to select, but we don't know which of the three areas it might now be in.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEditMobile.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptViewEditMobile.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptViewEditMobile.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormContinuityOfCareDocument.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormContinuityOfCareDocument.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormContinuityOfCareDocument.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEClipboardImageCaptureDefs._clinicNum">
            <summay>Currently selected clinic for which we are editing the eclipboard image capture defs.</summay>
        </member>
        <member name="F:OpenDental.FormEClipboardImageCaptureDefs._listDefsAllEClipboardImages">
            <summary>List of all definitions in 'EClipboardImageCapture' defcat. </summary>
        </member>
        <member name="F:OpenDental.FormEClipboardImageCaptureDefs.ListEClipboardImageCaptureDefs">
            <summary>The corresponding EClipboardImageCaptureDef objects for the list of EClipboard Images patients are allowed to take. Must be
            set before opening this form.</summary>
        </member>
        <member name="M:OpenDental.FormEClipboardImageCaptureDefs.FillGrids">
            <summary>Fills both grid on this form. The left grid (Available) contains Defs. The right grid (In Use) contains EClipboardImageCaptureDefs.</summary>
        </member>
        <member name="M:OpenDental.FormEClipboardImageCaptureDefs.butLeft_Click(System.Object,System.EventArgs)">
            <summary>Moves an EClipboard image from the 'in use' grid to the 'available' grid. Indicating that patients will not be asked to submit this
            image when checking in via eclipboard.</summary>
        </member>
        <member name="M:OpenDental.FormEClipboardImageCaptureDefs.butRight_Click(System.Object,System.EventArgs)">
            <summary>Moves an EClipboard image from the 'available' grid to the 'In Use' grid. Indicating that patients may be asked to submit this
            image when checking in via eclipboard, if the patient has never submitted this image before, or it is outdated.</summary>
        </member>
        <member name="M:OpenDental.FormEClipboardImageCaptureDefs.gridEClipboardImagesInUse_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Opens formEClipboardImageCaptureDefEdit for the given EClipboardImageCaptureDef.</summary>
        </member>
        <member name="F:OpenDental.FormEClipboardImageCaptureDefs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEClipboardImageCaptureDefs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEClipboardImageCaptureDefs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWebSchedCarrierRuleCopyToClinics.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebSchedCarrierRuleCopyToClinics.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebSchedCarrierRuleCopyToClinics.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWebSchedCarrierRuleEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebSchedCarrierRuleEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebSchedCarrierRuleEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWebSchedCarrierRule.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebSchedCarrierRule.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebSchedCarrierRule.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormInsPlansOverrides">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsPlansOverrides.#ctor(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsPlansOverrides.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMessageReplacementTextEdit.FormTitle">
            <summary>Set this to override the title of the form.</summary>
        </member>
        <member name="F:OpenDental.FormMessageReplacementTextEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMessageReplacementTextEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMessageReplacementTextEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSecureEmailSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSecureEmailSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSecureEmailSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpEraAutoProcessed._listX835Statuses">
            <summary>A list of all X835Status values.</summary>
        </member>
        <member name="F:OpenDental.FormRpEraAutoProcessed._eraRowDataSelected">
            <summary>The data for the ERA grid's currently selected row.</summary>
        </member>
        <member name="F:OpenDental.FormRpEraAutoProcessed._claimRowDataSelected">
            <summary>The data for the Claim grid's currently selected row.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.FormRpEraAutoProcessed_Load(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.SetFiltersAndDefaults">
            <summary>Populate filters and set default selections.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.BuildContextMenuGridEras">
            <summary>Builds the context menu for the ERAs grid.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.BuildContextMenuGridClaims">
            <summary>Builds the context menu for the Claims grid.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.FillGridEras">
            <summary>Fill the ERAs grid. Gets data from the DB every time it is called.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.GetSelectedClinicNums">
            <summary>If no clinics are selected, we select All.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.GetClinicAbbrForEraGridRow(System.Collections.Generic.List{OpenDentBusiness.Etrans835Attach},OpenDentBusiness.Etrans)">
            <summary>Determines the string to put in the Clinic column of the ERAs grid. ERAs may have claims from multiple cliinics.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.CalcWriteOffEstSumForRow(System.Collections.Generic.List{OpenDentBusiness.Hx835_ShortClaimProc})">
            <summary>Sums the estimated writeoffs for the list of ClaimProcs. Uses the WriteOffEstOverride if it isn't -1.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.butRefresh_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.MenuItemAcknowledge_Click(System.Object,System.EventArgs)">
            <summary>Updates Etrans835.IsApproved to true for each selected row in the ERA grid.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.butAcknowledge_Click(System.Object,System.EventArgs)">
            <summary>Updates Etrans835.IsApproved to true for each selected row in the ERA grid.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.AcknowledgeErasSelected">
            <summary>Sets Etrans835.IsApproved to true for all selected ERAs and updates them.
            If checkShowAcknowledged isn't checked, acknowledged rows are removed from the grid.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.gridEras_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Opens the ERA that was double clicked.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.gridEras_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>Refreshes the Claims grid to show claims for the selected ERA. If multiple ERAs are selected, claims for the first selected row are shown.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.butSelectEob_Click(System.Object,System.EventArgs)">
            <summary>This button is only visible when the selected ERA has multiple EOBs.
            Forces a refresh of the Claims grid even though the Selected ERA has not changed so that the user can select a new EOB.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.RefreshGridClaims(System.Boolean)">
            <summary>Only refreshes if new ERA selected is different from the old one, or if we are forcing a refresh to allow the user to select a new EOB.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.FillGridClaims(OpenDental.FormRpEraAutoProcessed.EraRowData)">
            <summary>Passing null will clear the Claims Claim Procedure Adjustments grids. Gets data from the DB each time it is filled.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.FilterClaimProcsForUnsentClaims(System.Collections.Generic.List{OpenDentBusiness.Hx835_ShortClaimProc},System.Collections.Generic.List{OpenDentBusiness.Hx835_ShortClaimProc})">
            <summary>Takes a list of Hx835_ShortClaimProcs for unsent claims that share one or more procedures with any claim on the selected ERA,
            and the list of Hx835_shortClaimProcs for the current claim being processed on the claim grid. Returns a list of Hx835_ShortClaimProcs for unsent claims that share one
            or more procedures with the current claim.///</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.GetTranSetIdForEobSelected(OpenDentBusiness.Etrans,System.String)">
            <summary>Etrans from 14.2 or older versions can represent multiple EOBs. These should be rare, but we need to prompt the user
            when they select one of these etrans to ask which EOB they want to populate the claims grid with.
            If a blank string is returned, the user was prompted to select an EOB and hit cancel.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.MenuItemGoToAccount_Click(System.Object,System.EventArgs)">
            <summary>Goes to the patients account for the selected claim.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.MenuItemProcessSecondaryClaims_Click(System.Object,System.EventArgs)">
            <summary>Validates that the selected claim has procedures that are on one or more secondary claims with a status of Unsent or Hold Unti Pri Recieved.
            If so, the user is prompted to send these claims, change there status to "Waiting to send", or do nothing.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.gridClaims_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Opens the Edit Claim window for the claim if one is attached to the Hx835_Claim for the row.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.gridClaims_SelectionCommitted(System.Object,System.EventArgs)">
            <summary>Only refreshes the Claim Procedure Adjustments grid if the new claim selected is different from the previous one.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.FillGridClaimProcedureAdjustments(OpenDental.FormRpEraAutoProcessed.ClaimRowData)">
            <summary>Passing null will clear the grid.</summary>
        </member>
        <member name="T:OpenDental.FormRpEraAutoProcessed.EraRowData">
            <summary>Holds data for the rows of the ERA grid.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.EraRowData.#ctor(OpenDentBusiness.Etrans835,OpenDentBusiness.Etrans)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRpEraAutoProcessed.ClaimRowData">
            <summary>Holds data for the rows of the Claims grid.</summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.ClaimRowData.#ctor(OpenDentBusiness.Hx835_Claim,System.Boolean,OpenDentBusiness.Hx835_ShortClaim,System.Collections.Generic.List{OpenDentBusiness.Hx835_ShortClaimProc})">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpEraAutoProcessed.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpEraAutoProcessed.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRxCombine.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRxCombine.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRxCombine.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRepeatChargeEditMulti.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargeEditMulti.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRepeatChargeEditMulti.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAdvertisingPostcardsSend.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAdvertisingPostcardsSend.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAdvertisingPostcardsSend.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormAdvertisingPostcardsSetup.RefreshData">
            <summary>Calls Services HQ to get Account data for office.</summary>
        </member>
        <member name="M:OpenDental.FormAdvertisingPostcardsSetup.RefreshView">
            <summary>Fills grids and populates UI.</summary>
        </member>
        <member name="M:OpenDental.FormAdvertisingPostcardsSetup.ManageMassPostcardAccount(Bridges.PostcardManiaAccountData)">
            <summary>If accountData is set the setup window will populate with the existing data. This allows the user to edit the account title.</summary>
        </member>
        <member name="F:OpenDental.FormAdvertisingPostcardsSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAdvertisingPostcardsSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAdvertisingPostcardsSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormAdvertisingPatientList.RefreshPatients">
            <summary>Refreshed the patient data for the available patient's grid only. Uses filters to limit the data. If a patient already exists 
            in the selected patients grid then they will not additionally be added here again so the user can't add them twice.</summary>
        </member>
        <member name="M:OpenDental.FormAdvertisingPatientList.GetSelectedActivatedClinicNums">
            <summary>List of all activated and enabled clinics selected by the user that are allowed to send mass emails.</summary>
        </member>
        <member name="F:OpenDental.FormAdvertisingPatientList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAdvertisingPatientList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAdvertisingPatientList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormImageDrawColor.ColorBack">
            <summary>Not really used here. Just shown to user if they click Transparent.</summary>
        </member>
        <member name="F:OpenDental.FormImageDrawColor.ColorFore">
            <summary>Both lines and text.</summary>
        </member>
        <member name="F:OpenDental.FormImageDrawColor.ColorTextBack">
            <summary>Can be transparent.</summary>
        </member>
        <member name="F:OpenDental.FormImageDrawColor.IsMount">
            <summary>Just shows a label for mounts.</summary>
        </member>
        <member name="F:OpenDental.FormImageDrawColor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormImageDrawColor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormImageDrawColor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAdvertisingPostcardsAccountSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAdvertisingPostcardsAccountSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAdvertisingPostcardsAccountSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormImageFloat">
            <summary>Just a simple container for ControlImageDisplay when it's a floater rather than docked. Functionality that was here has been moved to ControlImageDisplay.</summary>
        </member>
        <member name="F:OpenDental.FormImageFloat.FuncListFloaters">
            <summary>This lets us get a list of all floater windows from ControlImages at the moment when we pop up the window selector.</summary>
        </member>
        <member name="F:OpenDental.FormImageFloat.FuncDockedTitle">
            <summary>This lets us get the title of the docker from ControlImages at the moment when we pop up the window selector.This can be null.</summary>
        </member>
        <member name="F:OpenDental.FormImageFloat._windowImageFloatWindows">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormImageFloat._isButWindowPressed">
            <summary>True when ImageFloatWindows is showing.</summary>
        </member>
        <member name="F:OpenDental.FormImageFloat._isHotButWindow">
            <summary>True if the mouse is currently over the "Windows" button at the top.</summary>
        </member>
        <member name="F:OpenDental.FormImageFloat._rectangleButWindows">
            <summary>The bounds of the "Windows" button at the upper right.</summary>
        </member>
        <member name="E:OpenDental.FormImageFloat.EventButClicked">
            <summary>A button was clicked in WindowImageFloatWindows or in title bar. This event must bubble up to ControlImages where it's handled.</summary>
        </member>
        <member name="E:OpenDental.FormImageFloat.EventWinPicked">
            <summary>User clicked on the list to pick a new window.  Bubbles up to ControlImages, where it's handled. The index passed includes the docker in position 0.</summary>
        </member>
        <member name="M:OpenDental.FormImageFloat.SimulateMouseDown(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>This tricks the form into thinking that the mouse down originated from within this form. Only used when we pop a floater into existence under the mouse and we want it to stick.</summary>
        </member>
        <member name="F:OpenDental.FormImageFloat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormImageFloat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormImageFloat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAllocationsSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAllocationsSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAllocationsSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormErx">
            <summary>Internet browser window for NewCrop.  This is essentially a Microsoft Edge browser control embedded into our form.</summary>
        </member>
        <member name="F:OpenDental.FormErx.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormErx.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormErx.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormErx.PatientCur">
            <summary>The PatNum of the patient eRx was opened for.  The patient is tied to the window so that when the window is closed the Chart
            knows which patient to refresh.  If the patient is different than the patient modified in the eRx window then the Chart does not need to 
            refresh.</summary>
        </member>
        <member name="F:OpenDental.FormErx.ByteArray">
            <summary>This XML contains the patient information, provider information, employee information, practice information, etc...</summary>
        </member>
        <member name="F:OpenDental.FormErx.StringSSOQuery">
            <summary>Contains patient data used for the SSO already formatted as a query string.</summary>
        </member>
        <member name="F:OpenDental.FormErx.IsUrlSingleUse">
            <summary>Default to false. Determines if url is single use or not. When this is set to true, then the refresh button is not added. See LayoutToolBar() 
            Bamboo's API returns a single use URL for PHI security reasons. Hitting refresh would cause an unauthorized message to show from their server which would force offices to close and relaunch the bridge.
            </summary>
        </member>
        <member name="F:OpenDental.FormErx._memoryStream">
            <summary>Disposed on form closing. There were instances of this stream being disposed before we were done using it so made it a class wide variable to force it to stay open.</summary>
        </member>
        <member name="M:OpenDental.FormErx.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormErx.LayoutToolBars">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormErx.ComposeNewRxNewCrop">
            <summary>Sends the ClickThroughXml to eRx and loads the result within the browser control.
            Loads the compose tab in NewCrop's web interface.  Can be called externally to send provider information to eRx
            without allowing the user to write any prescriptions.</summary>
        </member>
        <member name="M:OpenDental.FormBillingTypeMerge.CheckUIState">
            <summary>Double check the state and status of the form.</summary>
        </member>
        <member name="F:OpenDental.FormBillingTypeMerge.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBillingTypeMerge.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBillingTypeMerge.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskAttachmentEdit._task">
            <summary>Stores the task that the attachment belongs to or will belong to.</summary>
        </member>
        <member name="F:OpenDental.FormTaskAttachmentEdit._document">
            <summary>Stores the document if one current is linked to the attachment or one is imported to the attachment.</summary>
        </member>
        <member name="F:OpenDental.FormTaskAttachmentEdit.TaskAttachmentCur">
            <summary>This attachment object must be set before the constructor is called. If adding a new attachment, set IsNew flag to true. If editing existing attachments, just 
            set this field to the attachment that will be edited.</summary>
        </member>
        <member name="F:OpenDental.FormTaskAttachmentEdit.IsReadOnly">
            <summary>If set true, editing the attachment will be disabled. </summary>
        </member>
        <member name="M:OpenDental.FormTaskAttachmentEdit.SetReadOnly">
            <summary>Disables all UI elements that alter the task.</summary>
        </member>
        <member name="F:OpenDental.FormTaskAttachmentEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskAttachmentEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTaskAttachmentEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskAttachments._task">
            <summary>Stores the task that the attachments belong to or will belong to.</summary>
        </member>
        <member name="F:OpenDental.FormTaskAttachments._listTaskAttachments">
            <summary>Contains all the attachments for the passed in task</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormTaskAttachments._isRefreshRequired" -->
        <member name="F:OpenDental.FormTaskAttachments.IsReadOnly">
            <summary>If this  is set true, editing attachments will be disabled. </summary>
        </member>
        <member name="F:OpenDental.FormTaskAttachments.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskAttachments.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTaskAttachments.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTextPaySetup._clinicPrefHelper">
            <summary>Helper to manager prefs relating to textPaymentLink and getting them to/from the db.</summary>
        </member>
        <member name="M:OpenDental.FormTextPaySetup.toolStripMenuItemCopy_Click(System.Object,System.EventArgs)">
            <summary>This form uses a generic contextMenu for textboxes, so we need to use these event handlers to override the default menu.</summary>
        </member>
        <member name="M:OpenDental.FormTextPaySetup.toolStripMenuItemCut_Click(System.Object,System.EventArgs)">
            <summary>This form uses a generic contextMenu for textboxes, so we need to use these event handlers to override the default menu.</summary>
        </member>
        <member name="M:OpenDental.FormTextPaySetup.toolStripMenuItemPaste_Click(System.Object,System.EventArgs)">
            <summary>This form uses a generic contextMenu for textboxes, so we need to use these event handlers to override the default menu.</summary>
        </member>
        <member name="M:OpenDental.FormTextPaySetup.toolStripMenuItemInsertFields_Click(System.Object,System.EventArgs)">
            <summary>Opens FormMessageReplacements to allow the user to select from replaceable tags to include in the templates.</summary>
        </member>
        <member name="M:OpenDental.FormTextPaySetup.toolStripMenuItemSelectAll_Click(System.Object,System.EventArgs)">
            <summary>This form uses a generic contextMenu for textboxes, so we need to use these event handlers to override the default menu.</summary>
        </member>
        <member name="M:OpenDental.FormTextPaySetup.toolStripMenuItemUndo_Click(System.Object,System.EventArgs)">
            <summary>This form uses a generic contextMenu for textboxes, so we need to use these event handlers to override the default menu.</summary>
        </member>
        <member name="F:OpenDental.FormTextPaySetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTextPaySetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTextPaySetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTextPayLink._clinicPrefHelper">
            <summary>Helper to manager prefs relating to textPaymentLink and getting them to/from the db.</summary>
        </member>
        <member name="F:OpenDental.FormTextPayLink._dataSetAccount">
            <summary>Family account data. Set with AccountModules.GetAccount.</summary>
        </member>
        <member name="F:OpenDental.FormTextPayLink._clinic">
            <summary>Clinic for _patient.</summary>
        </member>
        <member name="M:OpenDental.FormTextPayLink.GetStatement(System.Boolean)">
            <summary>Gets the statement for the currently selected UI.</summary>
        </member>
        <member name="M:OpenDental.FormTextPayLink.GetBalance(System.Collections.Generic.List{System.Data.DataRow},System.Collections.Generic.List{OpenDentBusiness.ClaimProc},System.Collections.Generic.List{OpenDentBusiness.PaySplit})">
            <summary>Gets the Balance based on the dataRows passed in. If listPaySplits and listClaimProcs are not null, then insurance payments and payments in the data rows will be ignored,
            and the PaySplits and ClaimProcs will be used instead.</summary>
        </member>
        <member name="M:OpenDental.FormTextPayLink.GetInsuranceEst(System.Collections.Generic.List{OpenDentBusiness.ClaimProc})">
            <summary>Gets the insurance estimates for the passed in claimprocs. Includes writeoffs. We don't have to worry about discount plans since their adjustments get created on completion of a procedure.</summary>
        </member>
        <member name="M:OpenDental.FormTextPayLink.GenerateStatementToSend(OpenDentBusiness.PrefName,System.Double,System.Double,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64},System.Boolean)">
            <summary>Creates a statement for the passed in prefName. URL related fields are filled with spoof data, and need to be set and updated using BindGuidToStatement.
            If the prefName is 'PrefName.TextPaymentLinkAppointmentBalance' a limited statement will be created using the passed in optional parameters.</summary>
        </member>
        <member name="M:OpenDental.FormTextPayLink.BindGuidToStatement(OpenDentBusiness.Statement)">
            <summary>Reserves a ShortGUID and updates the statement ShortGUID, StatementShortURL, and StatementURL fields. Stores changes in DB.</summary>
        </member>
        <member name="M:OpenDental.FormTextPayLink.BindPDFToStatement(OpenDentBusiness.Statement,System.Boolean)">
            <summary>Builds a PDF of the current statement object. If isPreview is true, the PDF will be saved to the temp/OpenDental path for viewing, and then deleted.
            Otherwise, the PDF will be saved to the AtoZ folder (or the cloud for web) and the document number will be set on the statement.</summary>
        </member>
        <member name="F:OpenDental.FormTextPayLink.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTextPayLink.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTextPayLink.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormHieSetup.FillFieldsFromUI(System.Int64)">
            <summary>Updates the hieclinic values with the values on the form. Validation should happen before calling this method.</summary>
        </member>
        <member name="F:OpenDental.FormHieSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormHieSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormHieSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormAbout">
            <summary>Form can be found at Help Tab->About</summary>
        </member>
        <member name="F:OpenDental.FormAbout.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAbout.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormAbout.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormAccounting">
            <summary>By default, shows all active accounts. Can be found at Manage->Accounting.</summary>
        </member>
        <member name="F:OpenDental.FormAccounting.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAccounting.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormAccounting.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormAccounting.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormAccounting.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="T:OpenDental.FormAccountingAutoPayEdit">
            <summary>Allows user to edit automatic payment entries. Form can be found at Manage->Accounting->Setup->Open Dental->Double click on entry in table</summary>
        </member>
        <member name="F:OpenDental.FormAccountingAutoPayEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAccountingAutoPayEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormAccountingAutoPayEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAccountingAutoPayEdit.AccountingAutoPayCur">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAccountingAutoPayEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAccountingAutoPayEdit._listAccountNums">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormAccountingAutoPayEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormAccountingSetup">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAccountingSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAccountingSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormAccountingSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAccountingSetup._listDepAccountNums">
            <summary>Each item in the list is a long for an AccountNum for the deposit accounts.</summary>
        </member>
        <member name="F:OpenDental.FormAccountingSetup._listAccountingAutoPays">
            <summary>Arraylist of AccountingAutoPays.</summary>
        </member>
        <member name="M:OpenDental.FormAccountingSetup.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormAccountPick">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAccountPick.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAccountPick.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormAccountPick.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAccountPick.SelectedAccount">
            <summary>Upon closing with OK, this will be the selected account.</summary>
        </member>
        <member name="M:OpenDental.FormAccountPick.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormApptFieldDefs">
            <summary>
            </summary>
        </member>
        <member name="F:OpenDental.FormApptFieldDefs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptFieldDefs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptFieldDefs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptFieldDefs.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormApptFieldDefs.CompareItemOrder(OpenDentBusiness.ApptFieldDef,OpenDentBusiness.ApptFieldDef)">
            <summary>This sorts apptFieldDefs by their item order.</summary>
        </member>
        <member name="T:OpenDental.FormApptRules">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptRules.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptRules.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptRules.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptRules.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormApptViewEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptViewEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptViewEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormApptViewEdit._listEnumApptViewElementsAvailable">
            <summary>Those elements which are showing in the list of available elements.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEdit._listApptFieldDefNumsAvailable">
            <summary>The actual ApptFieldDefNums of all available elements because no language translation is needed.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEdit._listPatFieldDefNums">
            <summary>The actual PatFieldDefNums of all available elements because no language translation is needed.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEdit._listApptViewItemsDisplayedAll">
            <summary>A local list of ApptViewItems which are displayed in all three lists on the right.  Not updated to db until the form is closed.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEdit.ApptViewCur">
            <summary>Set this value before opening the form.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEdit.ClinicNumInitial">
            <summary>Set this value with the clinic selected in FormApptViews. Only to be used to set comboClinic.SelectedClinicNum.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEdit._listApptViewItems">
            <summary>List of all ApptViewItems for this view.  All 5 types.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEdit._listApptViewItemsDef">
            <summary>List of ApptViewItems that does not include OpNum or ProvNum. This includes ElementDesc, ApptFieldDefNum, and PatFieldDefNum.</summary>
        </member>
        <member name="F:OpenDental.FormApptViewEdit._listOpNums">
            <summary>This is a list of all operatories available to add to this view based on AssignedClinicNum and the clinic the ops are assigned to.  If the clinics show feature is turned off (EasyNoClinics=true) or if the view is not assigned to a clinic, all unhidden ops will be available.  If an op is not assigned to a clinic, it will only be available to add to views also not assigned to a clinic.  If the view is assigned to a clinic, ops assigned to the same clinic will be available to add to the view.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.FillElements">
            <summary>Fills the five lists based on the displayedElements lists. No database transactions are performed here.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.FillOperatories">
            <summary>Fills the list box of operatories available for the view.  Considers clinics.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.ElementIsDisplayed(OpenDentBusiness.EnumApptViewElement)">
            <summary>Called from FillElements. Used to determine whether a given element is already displayed. If not, then it is displayed in the available rows on the left.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.ApptFieldIsDisplayed(System.Int64)">
            <summary>Called from FillElements. Used to determine whether a apptfield is already displayed. If not, then it is displayed in the apptFieldDef rows on the left.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.PatFieldIsDisplayed(System.Int64)">
            <summary>Called from FillElements. Used to determine whether a PatFieldDef is already displayed. If not, then it is displayed in the patFieldDef rows on the left.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.UpdateDisplayFilterGroup">
            <summary>Updates the display filter visibility based on the state of checkOnlyScheduledProvs.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.DoSetBackgroundColor(System.String)">
            <summary>Returns true if FillGrid sets the background color.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.MarkFieldNameIfHidden(System.Int64)">
            <summary>Returns the ApptFieldDef.FieldName with the tag (hidden) if the ApptFieldDef is hidden. Otherwise return the FieldName.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.ReselectItem(OpenDentBusiness.ApptViewItem)">
            <summary>When we know what item we want to select, but we don't know which of the three areas it might now be in.</summary>
        </member>
        <member name="M:OpenDental.FormApptViewEdit.comboClinic_SelectionChangeCommitted(System.Object,System.EventArgs)">
            <summary>This will remove operatories from the list of ops available to assign to this view and fill the list with ops assigned to the same clinic or unassigned.  If the current view has operatories selected that are assigned to a different view.</summary>
        </member>
        <member name="T:OpenDental.FormApptViews">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptViews.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptViews.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptViews.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptViews.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormASAP">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormASAP.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormASAP.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormASAP.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormASAP.DateTimeChosen">
            <summary>When texting patients on this list, this will be when the beginning of the slot is.</summary>
        </member>
        <member name="F:OpenDental.FormASAP.DateTimeSlotStart">
            <summary>When texting patients on this list, this will be when the beginning of the slot is.</summary>
        </member>
        <member name="F:OpenDental.FormASAP.DateTimeSlotEnd">
            <summary>When texting patients on this list, this will be when the ending of the slot is.</summary>
        </member>
        <member name="F:OpenDental.FormASAP._listPatientNames">
            <summary>A list of patient names and patNums. Gets refilled every time FillGridAppts() is invoked.</summary>
        </member>
        <member name="F:OpenDental.FormASAP._listClinicNumsWebSched">
            <summary>The clinics that are signed up for Web Sched.</summary>
        </member>
        <member name="F:OpenDental.FormASAP._hasClickedWebSched">
            <summary>The user has clicked the Web Sched button while a thread was busy checking which clinics are signed up for Web Sched.</summary>
        </member>
        <member name="F:OpenDental.FormASAP._opNum">
            <summary>The operatory selected to send Web Sched messages for.</summary>
        </member>
        <member name="F:OpenDental.FormASAP._formWebSchedASAPHistory">
            <summary>Classwide instance of FormWebSchedASAPHistory.</summary>
        </member>
        <member name="F:OpenDental.FormASAP._maxApptLengthFilter">
            <summary>Holds the maximum appt length which is then used to filter out appts with larger lengths from the Appointment ASAP List.
            Also, appts still showing after considering this filter will be reordered so that the ones with lengths closest to this filter are first in the grid.</summary>
        </member>
        <member name="M:OpenDental.FormASAP.IsSendingWebSched">
            <summary>Whether or not the user is sending Web Sched notifications to patients.</summary>
        </member>
        <member name="M:OpenDental.FormASAP.#ctor(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormASAP.FormASAP_Shown(System.Object,System.EventArgs)">
            <summary>There is a bug in ODProgress.cs that forces windows that use a progress bar on load to go behind other applications. 
            This is a temporary workaround until we decide how to address the issue.</summary>
        </member>
        <member name="M:OpenDental.FormASAP.SeeChart_Click(System.Int64)">
            <summary>If multiple patients are selected in the list, it will use the last patient to show the chart for.</summary>
        </member>
        <member name="M:OpenDental.FormASAP.GetTextMessageText(OpenDentBusiness.Clinic)">
            <summary>Gets the template for this clinic and fills in the tags.</summary>
        </member>
        <member name="M:OpenDental.FormASAP.ShowFormForWebSched(System.DateTime,System.DateTime,System.DateTime,System.Int64,System.Int32)">
            <summary>Use this instead of Show() or ShowDialog() in order to send Web Sched messages.</summary>
        </member>
        <member name="M:OpenDental.FormASAP.OpenSignupPortal">
            <summary>Automatically open the eService Setup window so that they can easily click the Enable button. 
            Calls CheckClinicsSignedUpForWebSched() before exiting.</summary>
        </member>
        <member name="T:OpenDental.FormAudit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormAudit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAudit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormAudit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAudit._patNum">
            <summary>The selected patNum.  Can be 0 to include all.</summary>
        </member>
        <member name="F:OpenDental.FormAudit.CurPatNum">
            <summary>This gets set externally beforehand.  Lets user quickly select audit trail for current patient.</summary>
        </member>
        <member name="F:OpenDental.FormAudit._listPermissionsAlphabetic">
            <summary>This alphabetizes the permissions, except for "none", which is always first.  If using a foreign language, the order will be according to the English version, not the foreign translated text.</summary>
        </member>
        <member name="M:OpenDental.FormAudit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormAudit.pd_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>Raised for each page to be printed.</summary>
        </member>
        <member name="T:OpenDental.FormAutoCode">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAutoCode.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoCode.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormAutoCode.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormAutoCodeEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAutoCodeEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoCodeEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAutoCodeEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAutoCodeEdit.AutoCodeCur">
            <summary>Set this before opening the form.</summary>
        </member>
        <member name="M:OpenDental.FormAutoCodeEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormAutoItemEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAutoItemEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoItemEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAutoItemEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAutoItemEdit.AutoCodeItemCur">
            <summary>Set this value externally before opening this form, even if IsNew.</summary>
        </member>
        <member name="M:OpenDental.FormAutoItemEdit.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEServicesAutoMsgingAdvanced._listClinicPrefs">
            <summary>A list of clinic prefs for ApptThankYouCalendarTitle. Includes clinic 0.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesAutoMsgingAdvanced._listDefNumsUneditable">
            <summary>This list holds specific DefNums so that we know which ones can't be edited.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsgingAdvanced.ParseThankYouTitle">
            <summary>Parses textThankYouTitle textbox into the appropriate ClinicPref in _listThankYouTitles.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsgingAdvanced.GetClinicPrefFromList(OpenDentBusiness.PrefName,System.Int64)">
            <summary>Tries to get the clinicPref for the clinicNum from the list of clinicPrefs. If the clinicPref doesn't exist, and prefName is either ApptThankYouCalendarTitle or ThankYouTitleUseDefault it is added to the list and returned. Can return null. </summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsgingAdvanced.FillThankYouTitleAndUseDefault">
            <summary>Fills textThankYouTitle and checkUseDefault with their respective clinicPrefs from the DB. If no clinicPrefs are loaded, new clinicPrefs are created. Also enables and disables textThankYouTitle and shows and hides checkUseDefault. </summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsgingAdvanced.comboClinic_SelectionChangeCommitted(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEServicesAutoMsgingAdvanced.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsgingAdvanced.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsgingAdvanced.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormAutomation">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormAutomation.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutomation.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutomation.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutomation.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormAutomationEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAutomationEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutomationEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutomationEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAutomationEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAutomationEdit._listAutomationActions">
            <summary>List of actions currently in the drop down.  Some actions are only available for specific triggers, so this is possibly a sub-set of
            all AutomationAction enum values.</summary>
        </member>
        <member name="F:OpenDental.FormAutomationEdit._listAppointmentTypes">
            <summary>Matches list of appointments in comboAppointmentType. Does not include hidden types unless current automation already has that type set.</summary>
        </member>
        <member name="M:OpenDental.FormAutomationEdit.#ctor(OpenDentBusiness.Automation)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormAutomationEdit.comboAction_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>Fills comboActionObject with the correct type of items based on the comboAction selection and sets labelActionObject text.
            Also handles setting combos/labels/texts visibility based on selected action.</summary>
        </member>
        <member name="T:OpenDental.FormAutoNotes">
            <summary>
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoNotes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoNotes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAutoNotes._userOdPref">
            <summary>On load, the UserOdPref that contains the comma delimited list of expanded category DefNums is retrieved from the database.  On close
            the UserOdPref is updated with the current expanded DefNums.</summary>
        </member>
        <member name="M:OpenDental.FormAutoNotes.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormAutoNotes.ImportDialogSetup">
            <summary>Helper method that sets up the SaveFileDialog form and then returns that </summary>
        </member>
        <member name="M:OpenDental.FormAutoNotes.IsValidDestination(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>Returns whether or not a node can be moved.
            isSourceDef dictates whether the nodeCur is a definition or an autonote.
            This is important because definitions are psuedo-directories and we need to guard against circular loops</summary>
        </member>
        <member name="T:OpenDental.FormBenefitEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormBenefitEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormBenefitEdit.BenefitCur">
            <summary>Set this to the benefit that is going to be edited before loading the window. This object will be manipulated if the user makes changes and clicks OK. Gets set to null if the user clicks Delete.</summary>
        </member>
        <member name="M:OpenDental.FormBenefitEdit.#ctor(System.Int64,System.Int64)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormBilling">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormBilling.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormBilling.IsAllSelected">
            <summary>Determined based upon choice made in comboClinic from formBillingOptions</summary>
        </member>
        <member name="F:OpenDental.FormBilling._progExtended">
            <summary>This can be used to interact with FormProgressExtended.</summary>
        </member>
        <member name="F:OpenDental.FormBilling.ShowBillTransSinceZero">
            <summary>Used to hold this preference's state when it is different from the default.</summary>
        </member>
        <member name="M:OpenDental.FormBilling.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormBilling.GetBillingDataTable">
            <summary>Use UI selections to get statement datatable. Used to originate billing run, also called again on resume after billing pause.</summary>
        </member>
        <member name="M:OpenDental.FormBilling.FillGrid">
            <summary>We will always try to preserve the selected bills as well as the scroll postition.</summary>
        </member>
        <member name="M:OpenDental.FormBilling.ShowStatementOptions(OpenDentBusiness.Statement)">
            <summary>Includes a FillGrid().</summary>
        </member>
        <member name="T:OpenDental.FormBillingOptions">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormBillingOptions.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormBillingOptions.IsAllSelected">
            <summary>This is used to pass information from comboClinic to formBilling</summary>
        </member>
        <member name="F:OpenDental.FormBillingOptions._dictionaryClinicPrefsOld">
            <summary>Key: ClinicNum, Value: List of ClinicPrefs for clinic.
            List contains all existing ClinicPrefs.</summary>
        </member>
        <member name="F:OpenDental.FormBillingOptions._dictionaryClinicPrefsNew">
            <summary>Key: ClinicNum, Value: List of ClinicPrefs for clinic.
            Starts off as a copy of _ListClinicPrefsOld, then is modified.</summary>
        </member>
        <member name="F:OpenDental.FormBillingOptions._popUpMessage">
            <summary>When creating list for all clinics, this stores text we show after completed.</summary>
        </member>
        <member name="F:OpenDental.FormBillingOptions._listDefsBillingType">
            <summary>List of Defs for Billing Types.</summary>
        </member>
        <member name="F:OpenDental.FormBillingOptions._listInsFilingCodes">
            <summary>List of all Insurance Filing Codes.</summary>
        </member>
        <member name="F:OpenDental.FormBillingOptions.ShowBillTransSinceZero">
            <summary>Used to capture this preference's state when it is different from the current default.</summary>
        </member>
        <member name="P:OpenDental.FormBillingOptions.IsHistoryStartMinDate">
            <summary>Tracks if textDateStart is blank so we can display a warning in FormBilling.cs when sending electronic bills.</summary>
        </member>
        <member name="M:OpenDental.FormBillingOptions.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormBillingOptions.RefreshClinicPrefs">
            <summary>Call when you want to populate/update _dicClinicPrefsOld and _dicClinicPrefsNew.</summary>
        </member>
        <member name="M:OpenDental.FormBillingOptions.SetFiltersForClinicNums(System.Collections.Generic.List{System.Int64},System.Boolean)">
            <summary>Called when we need to update the filter options.
            If All, the unassigned clinic, or more than one clinic is selected, or _dicClinicPrefsNew does not 
            contain a key for the current selected clinic, the standard preference based defaults will load.</summary>
        </member>
        <member name="M:OpenDental.FormBillingOptions.SetDefaults">
            <summary>Sets UI controls to the practice defaults preference values. The BillingL.CreateStatementHelper() uses this logic to set default practice preference values. Changes to this method will also need to be made there, if they apply.</summary>
        </member>
        <member name="M:OpenDental.FormBillingOptions.butCreate_Click(System.Object,System.EventArgs)">
            <summary>Creates statements.</summary>
        </member>
        <member name="M:OpenDental.FormBillingOptions.CreateManyHelper(System.Collections.Generic.List{System.Int64})">
            <summary>Generates statements for all clinics passed in. Returns number of statements created, or -1 if there was an error or user cancelled.</summary>
        </member>
        <member name="M:OpenDental.FormBillingOptions.CreateHelper(System.Int64,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.Int64,OpenDentBusiness.PatAgingData})">
            <summary>Creates statements for a single clinic.  Returns number of statements created, or -1 if there was an error or user cancelled. The logic in this method is used in BillingL.CreateStatementHelper(). Changes to this method will also need to be considered there.</summary>
            <param name="clinicNum">The clinic that billing is being generated for. Passing in a value of -2 indicates clinics not being enabled.</param>
            <param name="useClinicPrefs">Indicates to override what is shown in the UI and use the defaul values for a clinic.</param>
            <param name="suppressPopup">Set to true to turn off any message boxes from appearing.</param>
            <param name="dictionaryPatAgingData">A dictionary of key=PatNum, value=PatAgingData, which is an object that stores aging data for the patient
            regardless of clinics. Pass in to avoid calculating these values from within this function.</param>
        </member>
        <member name="T:OpenDental.FormBlockoutCutCopyPaste">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormBlockoutCutCopyPaste.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBlockoutCutCopyPaste.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormBlockoutCutCopyPaste.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormBlockoutCutCopyPaste.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormCarrierCombine">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormCarrierCombine.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCarrierCombine.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormCarrierCombine.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCarrierCombine.PickedCarrierNum">
            <summary>After this window closes, this will be the carrierNum of the selected carrier.</summary>
        </member>
        <member name="F:OpenDental.FormCarrierCombine.ListCarrierNums">
            <summary>Before opening this Form, set the carrierNums to show.</summary>
        </member>
        <member name="M:OpenDental.FormCarrierCombine.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormCarrierEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormCarrierEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCarrierEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormCarrierEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCarrierEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormCarrierEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormCarriers">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="M:OpenDental.FormCarriers.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormCarriers.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCarriers.IsSelectMode">
            <summary>Set to true if using this dialog to select a carrier.</summary>
        </member>
        <member name="M:OpenDental.FormCarriers.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormChartView">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormChartView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormChartView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormChartView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormChartView.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormClaimCreate">
            <summary>Lists all insurance plans for which the supplied patient is the subscriber. Lets you select an insurance plan based on a patNum. InsPlanSelected will contain the plan selected.</summary>
        </member>
        <member name="M:OpenDental.FormClaimCreate.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimCreate.RelatPat">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimCreate.InsPlanSelected">
            <summary>After closing this form, this will contain the selected plan.</summary>
        </member>
        <member name="M:OpenDental.FormClaimCreate.#ctor(System.Int64)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormClaimFormEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimFormEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimFormEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimFormEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimFormEdit._pointFMouseDownLoc">
            <summary>In control coords.</summary>
        </member>
        <member name="F:OpenDental.FormClaimFormEdit._pointFArrayOldItemLocs">
            <summary>In doc coords.</summary>
        </member>
        <member name="F:OpenDental.FormClaimFormEdit._stringArrayDisplays">
            <summary>1 to 1 with _claimForm.Items</summary>
        </member>
        <member name="F:OpenDental.FormClaimFormEdit._claimForm">
            <summary>A deep copy of the claim form passed into the constructor.  This is safe to modify.</summary>
        </member>
        <member name="F:OpenDental.FormClaimFormEdit._claimFormOld">
            <summary>Don't modify.  A shallow copy of the claim form passed into the constructor.</summary>
        </member>
        <member name="F:OpenDental.FormClaimFormEdit._dictImages">
            <summary>Stores the image from its corresponding file name.
            Key: File Name
            Value: Image from the file, could be null.</summary>
        </member>
        <member name="M:OpenDental.FormClaimFormEdit.#ctor(OpenDentBusiness.ClaimForm)">
            <summary>You must pass in the claimform to show.</summary>
        </member>
        <member name="M:OpenDental.FormClaimFormEdit.FillSelectedXYWH">
            <summary>Fills the textBoxes a the right with the X,Y,W,and H of the selected item(s).</summary>
        </member>
        <member name="M:OpenDental.FormClaimFormEdit.GetImage(OpenDentBusiness.ClaimFormItem,System.String@)">
            <summary>Gets the image from the A to Z folder. Will return null if the file is not found.</summary>
        </member>
        <member name="T:OpenDental.FormClaimFormItemEdit">
            <summary>
            Summary description for FormClaimFormItemEdit.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimFormItemEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimFormItemEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimFormItemEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:OpenDental.FormClaimFormItemEdit.FieldNames">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimFormItemEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimFormItemEdit.ClaimFormItemCur">
            <summary>This is the claimformitem that is being currently edited in this window.</summary>
        </member>
        <member name="F:OpenDental.FormClaimFormItemEdit.IsDeleted">
            <summary>Set to true if the Delete button was clicked.</summary>
        </member>
        <member name="M:OpenDental.FormClaimFormItemEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimFormItemEdit.FillFieldNames">
            <summary>This is called externally from Renaissance to error check each of the supplied fieldNames</summary>
        </member>
        <member name="T:OpenDental.FormClaimForms">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimForms.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.FillGridCustom">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.butCopy_Click(System.Object,System.EventArgs)">
            <summary>Copy an internal form over to a new custom form.</summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.butAdd_Click(System.Object,System.EventArgs)">
            <summary>Add a custom claim form.</summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.butDelete_Click(System.Object,System.EventArgs)">
            <summary>Delete an unusued custom claim form.</summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.butDuplicate_Click(System.Object,System.EventArgs)">
            <summary>Duplicate a custom claim form.</summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.butExport_Click(System.Object,System.EventArgs)">
            <summary>Export a custom claim form. Even though we could probably allow this for internal claim forms as well, 
            users can always copy over an internal claim form to a custom form and then export it.</summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.butImport_Click(System.Object,System.EventArgs)">
            <summary>Import an XML file into the custom claim forms list.</summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.butDefault_Click(System.Object,System.EventArgs)">
            <summary>Sets a custom claim form as the default.  We do not currently allow setting internal claim forms as default - users need to copy it over first.</summary>
        </member>
        <member name="M:OpenDental.FormClaimForms.butReassign_Click(System.Object,System.EventArgs)">
            <summary>Reassigns all current insurance plans using the selected claimform to another claimform.</summary>
        </member>
        <member name="T:OpenDental.FormClaimPayBatch">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPayBatch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimPayBatch.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPayBatch.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPayBatch.GotoClaimNum">
            <summary>If this is not zero upon closing, then we will jump to the account module of that patient and highlight the claim.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayBatch.GotoPatNum">
            <summary>If this is not zero upon closing, then we will jump to the account module of that patient and highlight the claim.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayBatch._listDetachedClaims">
            <summary>The list of claims that have been detached in this window.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayBatch.IsFromClaim">
            <summary>Set to true if the batch list was accessed originally by going through a claim.  This disables the GotoAccount feature.  It also causes OK/Cancel buttons to show so that user can cancel out of a brand new check creation.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayBatch.#ctor(OpenDentBusiness.ClaimPayment,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimPayBatch.RunAgingForClaims">
            <summary>Runs aging for all families for patient's on claims attached to payment</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayBatch.IsAmountAndTotalEqual(System.Boolean)">
            <summary>Validates that the numbers behind the Amount and Total text boxes equate.
            Shows a friendly exception message which will allow us engineers to click the Details label in order to get more information.
            Customers have called in with very strange things happening with these two text box values not equating in the past (UI glitches?).</summary>
        </member>
        <member name="T:OpenDental.FormClaimPayEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPayEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPayEdit._listDefsClaimPaymentGroups">
            <summary>List of defs of type ClaimPaymentGroup</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayEdit.IsCreateLogEntry">
            <summary>Used to tell if a InsPayCreate log is necessary instead of a InsPayEdit log when IsNew is set to false.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayEdit._depositOld">
            <summary>This is the deposit that was originally associated to the claimpayment OR is set to a deposit that came back from the Deposit Edit window via the Edit button.
            Can be null if no deposit was associated to the claimpayment passed in or if the user deletes the deposit via the Edit window.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayEdit._hasAutoDeposit">
            <summary>Set to the value of PrefName.ShowAutoDeposit on load.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayEdit._isAutoDepositDeleted">
            <summary>Gets set to true when the user deletes the Deposit from the Edit Deposit window.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayEdit.IsFinalizePayment">
            <summary>Set to true to not check Insurance Payment Edit permission when finalizing a payment.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.#ctor(OpenDentBusiness.ClaimPayment)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.FillAutoDepositDetails">
            <summary>Fills auto deposit group box for the attached deposit. Also handles the logic of hiding itself depending on the preference 'ShowAutoDeposit'.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.GetDepositCur">
            <summary>Returns a new deposit object from the UI values on the form.
            Any values that do not have a UI in this window will be inherited from _depositOld if it is not null.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.CheckUIState">
            <summary>Mimics FormPayment.CheckUIState().</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.TextAmount_Leave(System.Object,System.EventArgs)">
            <summary>Used to keep the Claim Payment amount and Auto Deposit amount in sync. They should always match when creating a new Claim Payment.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.panelXcharge_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>The contents of this event mimic FormPayment.panelXcharge_MouseClick().</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.ConditionsAreMet(OpenDentBusiness.RequiredField)">
            <summary>Returns true if all the conditions for the RequiredField are met.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.SetRequiredTextBox(System.Windows.Forms.Label,System.Windows.Forms.TextBox,System.Boolean)">
            <summary>Puts an asterisk next to the label if the field is required and the conditions are met. If it also blank, highlights the textbox
            background.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.SetRequiredComboBox(System.Windows.Forms.Label,OpenDental.UI.ComboBox,System.Boolean,System.Int32,System.String)">
            <summary>Puts an asterisk next to the label if the field is required and the conditions are met. If the disallowedIdx is also selected, 
            highlights the combobox background.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.SetRequiredComboBoxPlus(System.Windows.Forms.Label,OpenDental.UI.ComboBox,System.Boolean,System.Int32,System.String)">
            <summary>Puts an asterisk next to the label if the field is required and the conditions are met. </summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEdit.SetRequiredComboBoxClinicPicker(System.Windows.Forms.Label,OpenDental.UI.ComboBoxClinicPicker,System.Boolean,System.Int32,System.String)">
            <summary>Puts an asterisk next to the label if the field is required and the conditions are met. </summary>
        </member>
        <member name="T:OpenDental.FormClaimPayEditOld">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEditOld.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPayEditOld.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPayEditOld.splits">
            <summary>The list of splits to display in the grid.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayEditOld.OriginatingClaimNum">
            <summary>Set this externally.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayEditOld.#ctor(OpenDentBusiness.ClaimPayment)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormClaimPayPreAuth">
            <summary>
            Summary description for FormClaimPayTotal.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimPayPreAuth.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimPayPreAuth.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimPayPreAuth.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimPayPreAuth.ListClaimProcs">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimPayPreAuth.#ctor(OpenDentBusiness.Patient,OpenDentBusiness.Family,System.Collections.Generic.List{OpenDentBusiness.InsPlan},System.Collections.Generic.List{OpenDentBusiness.PatPlan},System.Collections.Generic.List{OpenDentBusiness.InsSub})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimPayPreAuth.FillTotals">
            <Summary>Fails silently if text is in invalid format.</Summary>
        </member>
        <member name="M:OpenDental.FormClaimPayPreAuth.SaveGridChanges">
            <Summary>Surround with try-catch.</Summary>
        </member>
        <member name="T:OpenDental.FormClaimPrint">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPrint.ClaimNum">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPrint.ClaimFormCur">
            <summary>This is set externally for Renaissance and generic e-claims.  If it was not set ahead of time, it will set in FillDisplayStrings according to the insPlan.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPrint.PatNum">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPrint.DoPrintBlank">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPrint.DoPrintImmediately">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPrint.WasSent">
            <summary>Set to true if the claim was marked sent.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPrint._listClaimProcs">
            <summary>The claimprocs for this claim, not including payments and duplicates.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPrint._listProcedures">
            <summary>All procedures for the patient.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPrint._listInsPlans">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPrint._stringArrayDiagnoses">
            <summary>Filled with the first four diagnoses codes in the list of procedures associated with the claim. Always length of 4.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPrint._stringArrayAllDiagnoses">
            <summary>Complete list of all diagnoses.  Maximum unique length of array will be 12 due to the requirements of the medical 1500 (02-12) claim form.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.PrintImmediate(System.String,CodeBase.PrintSituation,System.Int64,System.Boolean)">
            <summary>Only called from external forms without ever loading this form.  Prints without showing any print preview.  Returns true if printed 
            successfully.  Set doUseLastPrinterSettingsIfAvailable=true to skip any printing prompts and use the last used printer settings if exists.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.CreateODprintout(System.String,CodeBase.PrintSituation,System.Int64)">
            <summary>Constructs a new ODprintout and sets it to ODprintout.CurPrintout.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.PrintClaim">
            <summary>Only used when the print button is clicked from within this form during print preview.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.FillRenaissance(System.Int64,System.Int64,System.Collections.Generic.List{OpenDentBusiness.ClaimFormItem})">
            <summary>Called from Bridges.Renaissance, this takes the supplied ClaimFormItems.ListForForm, and generates an array of strings that will get saved into a text file.  First dimension of array is the pages. Second dimension is the lines in the page.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.TryFillDisplayStrings(System.Boolean)">
            <summary>Gets all necessary info from db based on ThisPatNum and ThisClaimNum.  Then fills _stringArrayDisplay with the actual text that will 
            display on claim.  The isRenaissance flag is very temporary. Returns true if able to successfully fill the display strings.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.FillProcStrings(System.Int32,System.Int32)">
            <summary></summary>
            <param name="startProc">For page 1, this will be 0, otherwise it might be 10, 8, 20, or whatever.  It is the 0-based index of the first proc. Depends on how many procedures this claim format can display and which page we are on.</param>
            <param name="totProcs">The number of procedures that can be displayed or printed per claim form.  Depends on the individual claim format. For example, 10 on the ADA2002</param>
        </member>
        <member name="M:OpenDental.FormClaimPrint.FillMedInsStrings">
            <summary>These fields are used for the UB04.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.ProcLimitForFormat">
            <summary>Uses the fee field to determine how many procedures this claim will print.</summary>
            <returns></returns>
        </member>
        <member name="M:OpenDental.FormClaimPrint.GetProcInfo(System.String,System.Int32)">
            <summary>Overload that does not need a stringFormat</summary>
            <param name="field"></param>
            <param name="procIndex"></param>
            <returns></returns>
        </member>
        <member name="M:OpenDental.FormClaimPrint.GetProcInfo(System.String,System.Int32,System.String)">
            <summary>Gets the string to be used for this field and index.</summary>
            <param name="field"></param>
            <param name="procIndex"></param>
            <param name="stringFormat"></param>
            <returns></returns>
        </member>
        <member name="M:OpenDental.FormClaimPrint.PrintCdaClaimForm(OpenDentBusiness.Claim)">
            <summary>Prints the claim to a Canadian Dental Association (CDA) claim form.  Tries to print to the printer chosen by the user in File | Printers | Claim.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.GetToothRangeCount(System.String)">
            <summary>This method returns -1 if a toothrange was not specified, otherwise returns the count of teeth in the toothrange.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.CalculateUnitQtyField(System.Int32,System.Int32,OpenDentBusiness.InsPlan)">
            <summary>Returns the procedures UnitQty fields.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.GenerateSystemAndTeethField(System.Int32,System.Int32)">
            <summary>Constructs the SystemAndTeeth field as specified by the 1500 claim form manual.
            Returns an empty string if the procedure did not specify a toothNum or tooth range.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPrint.RemoveToothRangeFormat(System.String)">
            <summary>In GetProcInfo() if the treament area is a ToothRange, the resulting string is formatted with a '-'.
            E.g.- Input:"1-7", returns "1,2,3,4,5,6,7" in a list.
            This format will not work with the 1500 claim form per the instruction manual.
            "Do not enter a space between the qualifier and the number/code/information. Do not enter hyphens or spaces within the number/code".
            Obligatory "Beware ye who enter here".</summary>
        </member>
        <member name="T:OpenDental.FormClaimReports">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimReports.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimReports.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimReports.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimReports.IsAutomaticMode">
            <summary>If true, then reports will be automatically retrieved for default clearinghouse.  Then this form will close.</summary>
        </member>
        <member name="M:OpenDental.FormClaimReports.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormClaimsSend">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimsSend.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimsSend._claimSendQueueItemArrayQueueAll">
            <summary>The list of all claims regardless of any filters.  Filled on load.  Make sure to update this list with any updates (e.g. after validating claims)</summary>
        </member>
        <member name="F:OpenDental.FormClaimsSend.GotoPatNum">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimsSend.GotoClaimNum">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimsSend._listNumberOfClaims">
            <summary>Represents the number of unsent claims per clinic. This is a 1:1 list with _listClinics.</summary>
        </member>
        <member name="F:OpenDental.FormClaimsSend.clearinghouseIndex">
            <summary>Index of the Clearinghouse column in the main grid.  Can change depending on if clinics feature is enabled or not.</summary>
        </member>
        <member name="M:OpenDental.FormClaimsSend.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimsSend.LayoutToolBars">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimsSend.GetListQueueFiltered">
            <summary>Returns a list of claim send queue items based on the filters.</summary>
        </member>
        <member name="M:OpenDental.FormClaimsSend.RefreshClaimsGrid">
            <summary>Used to fill the grid from extrenal places that spawn FormClaimsSend.</summary>
        </member>
        <member name="M:OpenDental.FormClaimsSend.RefreshAndValidateSelections">
            <summary>Fills grid with updated information, unless all of the selected claims are marked NoBillIns and none of them were deleted.</summary>
        </member>
        <member name="M:OpenDental.FormClaimsSend.SendEclaimsToClearinghouse(System.Int64)">
            <Summary>Use clearinghouseNum of 0 to indicate automatic calculation of clearinghouses.</Summary>
        </member>
        <member name="M:OpenDental.FormClaimsSend.ValidateClaims(System.Collections.Generic.List{OpenDentBusiness.ClaimSendQueueItem})">
            <summary>Validates all non-validated e-claims passed in.  Directly manipulates the corresponding ClaimSendQueueItem in _arrayQueueAll
            If any information has changed, the grid will be refreshed and the selected items will remain selected.</summary>
        </member>
        <member name="T:OpenDental.FormClearinghouseEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormClearinghouseEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClearinghouseEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormClearinghouseEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClearinghouseEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClearinghouseEdit.ClearinghouseHq">
            <summary>This must be set externally before opening the form.  The HQ version of the clearinghouse.  
            This may not be null.  Assign a new clearinghouse object to this if creating a new clearinghouse.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormClearinghouseEdit.ClearinghouseHqOld" -->
        <member name="F:OpenDental.FormClearinghouseEdit.ClearinghouseCur">
            <summary>This must be set externally before opening the form.  This is the clearinghouse used to display, with properly overridden fields.
            This may not be null.  Assign a new clearinghouse object to this if creating a new clearinghouse.</summary>
        </member>
        <member name="F:OpenDental.FormClearinghouseEdit.ClinicNum">
            <summary>Set this outside of the form.  0 for HQ.</summary>
        </member>
        <member name="F:OpenDental.FormClearinghouseEdit.ListClinics">
            <summary>List of all available clinics.  Cannot be null.</summary>
        </member>
        <member name="F:OpenDental.FormClearinghouseEdit.ListClearinghousesClin">
            <summary>List of all clinic-level clearinghouses for the current clearinghousenum.  
            May not be null.  Assign a new list of clearinghouse objects to this if creating a new clearinghouse.</summary>
        </member>
        <member name="F:OpenDental.FormClearinghouseEdit.ListClearinghousesClinOld">
            <summary>This is never edited from within this form.  Set externally for reference to use in the Sync() method.
            May not be null.  Assign a new list of clearinghouse objects to this if creating a new clearinghouse.</summary>
        </member>
        <member name="M:OpenDental.FormClearinghouseEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClearinghouseEdit.ConcealClearinghousePass(OpenDentBusiness.Clearinghouse)">
            <summary>Pass in a clearinghouse with an unconcealed password. Will do nothing if the password is blank.</summary>
        </member>
        <member name="M:OpenDental.FormClearinghouseEdit.RevealClearinghousePass(OpenDentBusiness.Clearinghouse)">
            <summary>Pass in a clearinghouse with a concealed password. Will do nothing if the password is blank.</summary>
        </member>
        <member name="M:OpenDental.FormClearinghouseEdit.SaveToCache">
            <summary>All cached clearinghouses' passwords are NOT hashed. 
            Hashing in this form only happens when transferring data between the database and the program.</summary>
        </member>
        <member name="T:OpenDental.FormClearinghouses">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormClearinghouses.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClearinghouses.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormClearinghouses.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClearinghouses._listClearinghousesClinics">
            <summary>List of all clinic-level clearinghouses for the current clinic.</summary>
        </member>
        <member name="F:OpenDental.FormClearinghouses._listClearinghousesClinicsAll">
            <summary>List of all clinic-level clearinghouses.</summary>
        </member>
        <member name="M:OpenDental.FormClearinghouses.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormClinicEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClinicEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClinicEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormClinicEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClinicEdit._isMedLabHL7DefEnabled">
            <summary>True if an HL7Def is enabled with the type HL7InternalType.MedLabv2_3, otherwise false.</summary>
        </member>
        <member name="F:OpenDental.FormClinicEdit.ListDefLinksSpecialties">
            <summary>DefLink.FKey is ClinicNum to link to defs representing specialties for that clinic.</summary>
        </member>
        <member name="F:OpenDental.FormClinicEdit._listClinicsForValidation">
            <summary>List of clinics that will be used for validation. Hidden clinics and ClinicCur will not be present in this list. Some clinics in this list may not reflect what is in the cache or the database.</summary>
        </member>
        <member name="M:OpenDental.FormClinicEdit.#ctor(OpenDentBusiness.Clinic,System.Collections.Generic.List{OpenDentBusiness.Clinic})">
            <summary>Provide the clinic that will be edited. Optionally provide a list of clinics with local changes if in the middle of editing multiple clinics in memory.</summary>
        </member>
        <member name="T:OpenDental.FormClinics">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormClinics.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClinics.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormClinics.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClinics.IsSelectionMode">
            <summary>Set to true to open the form in selection mode. This will cause the 'Show hidden' checkbox to be hidden.</summary>
        </member>
        <member name="F:OpenDental.FormClinics.ListClinics">
            <summary>Set this list prior to loading this window to use a custom list of clinics.  Otherwise, uses the cache.</summary>
        </member>
        <member name="F:OpenDental.FormClinics._listClinicsOld">
            <summary>This list will be a copy of ListClinics and is used for syncing on window closed.</summary>
        </member>
        <member name="F:OpenDental.FormClinics.DoIncludeHQInList">
            <summary>Set to true prior to loading to include a 'Headquarters' option.</summary>
        </member>
        <member name="F:OpenDental.FormClinics.ListClinicNumsSelected">
            <summary>Pass in a list of clinics that should be pre-selected. 
            When this form is closed, this list will be the list of clinics that the user selected.</summary>
        </member>
        <member name="F:OpenDental.FormClinics.IsMultiSelect">
            <summary>Set to true if the user can select multiple clinics.</summary>
        </member>
        <member name="M:OpenDental.FormClinics.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClinics.CorrectItemOrders">
            <summary>Does nothing and returns false if checkOrderAlphabetical is checked.  Uses ClinicSort to put the clinics in the correct order and then
            updates the ItemOrder for all clinics.  Includes hidden clinics and clinics the user does not have permission to access.  It must include all
            clinics for the ordering to be correct for all users.  This method corrects item ordering issues that were caused by past code and is just a
            precaution.  After this runs once, there shouldn't be any ItemOrder inconsistencies moving forward, so this should generally just return false.
            Returns true if the db was changed.</summary>
        </member>
        <member name="T:OpenDental.FormClockEventEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormClockEventEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClockEventEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormClockEventEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClockEventEdit._listTimeClockStatusesShown">
            <summary>Always 1:1 with values in listStatus.Items</summary>
        </member>
        <member name="M:OpenDental.FormClockEventEdit.#ctor(OpenDentBusiness.ClockEvent)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClockEventEdit.FillInitialControlsHelper">
            <summary>Fills all controls based on the values of ClockEventCur, which is a copy of the object from the DB.</summary>
        </member>
        <member name="M:OpenDental.FormClockEventEdit.FillAutoControlsHelper">
            <summary>Fills all controls based on the values of ClockEventCur, which is a copy of the object from the DB.</summary>
        </member>
        <member name="T:OpenDental.FormComputers">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormComputers.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormComputers.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormComputers.butSetSimpleGraphics_Click(System.Object,System.EventArgs)">
            <summary>Set graphics for selected computer to simple.  Makes audit log entry.</summary>
        </member>
        <member name="M:OpenDental.FormComputers.butResetZoom_Click(System.Object,System.EventArgs)">
            <summary>Reset zoom for selected computer. Makes audit log entry.</summary>
        </member>
        <member name="T:OpenDental.FormConfirmList">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormConfirmList.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormConfirmList.IsPinClicked">
            <summary>Will be set to true when form closes if user click Send to Pinboard.</summary>
        </member>
        <member name="F:OpenDental.FormConfirmList._tableAppointments">
            <summary>This list of appointments displayed</summary>
        </member>
        <member name="M:OpenDental.FormConfirmList.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormConfirmList.FormConfirmList_Shown(System.Object,System.EventArgs)">
            <summary>There is a bug in ODProgress.cs that forces windows that use a progress bar on load to go behind other applications. 
            This is a temporary workaround until we decide how to address the issue.</summary>
        </member>
        <member name="M:OpenDental.FormConfirmList.SeeChart_Click">
            <summary>If multiple patients are selected in UnchedList, will select the last patient to remain consistent with sending to pinboard behavior.</summary>
        </member>
        <member name="M:OpenDental.FormConfirmList.AddWorkDays(System.Int32,System.DateTime)">
            <summary>Adds the specified number of work days, skipping saturday and sunday.</summary>
        </member>
        <member name="M:OpenDental.FormConfirmList.butPostcards_Click(System.Object,System.EventArgs)">
            <summary>Changes made to printing confirmation postcards need to be made in FormRecallList.butPostcards_Click() as well.</summary>
        </member>
        <member name="M:OpenDental.FormConfirmList.pdLabels_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>raised for each page to be printed.</summary>
        </member>
        <member name="M:OpenDental.FormConfirmList.pdCards_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>raised for each page to be printed.</summary>
        </member>
        <member name="T:OpenDental.FormContactEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormContactEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormContactEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormContactEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormContactEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormContactEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormContacts">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormContacts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormContacts.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormContacts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormContacts.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormCounties">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormCounties.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCounties.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormCounties.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormCounties.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormCustomerManagement">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormCustomerManagement.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCustomerManagement.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormCustomerManagement.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCustomerManagement.PatNumSelected">
            <Summary>This will only contain a value if the user clicked GoTo.</Summary>
        </member>
        <member name="M:OpenDental.FormCustomerManagement.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormDatabaseMaintenance">
            <summary>Summary description for FormDatabaseMaintenance.</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._logTextPrint">
            <summary>Holds any text from the log that still needs to be printed when the log spans multiple pages.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._listDatabaseMaintenances">
            <summary>A list of every single DBM method in the database.  Filled on load right after "syncing" the DBM methods to the db.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._listMethodInfosAll">
            <summary>This is a filtered list of all methods from DatabaseMaintenances.cs that have the DbmMethod attribute.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._listMethodInfosNotHiddenOrOld">
            <summary>This is a filtered list of methods from DatabaseMaintenances.cs that have the DbmMethod attribute and are not hidden or old.  
            This is used to populate gridMain.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._listMethodInfosHidden">
            <summary>This is a filtered list of methods from DatabaseMaintenances.cs that have the DbmMethod attribute and are hidden.  
            This is used to populate gridHidden.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._listMethodInfosOld">
            <summary>This is a filtered list of methods from DatabaseMaintenances.cs that have the DbmMethod attribute and are marked as old.  
            This is used to populate gridOld.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._dateTimeLastRun">
            <summary>Holds the date and time of the last time a Check or Fix was run.  Only used for printing.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._isCacheInvalid">
            <summary>This bool keeps track of whether we need to invalidate cache for all users.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._threadRunDBM">
            <summary>Thread to manage running DBMs, allows us to cancel mid-run.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._isCancelled">
            <summary>Flag to have the RunDBM thread exit early. This should ONLY be set within the main thread and read by the worker thread.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._isRedundantPasswordEntered">
            <summary>So the user doesn't have to enter the password to remove redundant indexes multiple times while the form is open.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._isReplicationPasswordEntered">
            <summary>True if the user has been prompted to enter a password, and successfully entered the password for replication DBMs. False otherwise.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._isUsingReplication">
            <summary>Set on load, true if we detect the office is using replication. Otherwise false.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._hasReplicationPermission">
            <summary>True if the MySQL user has the privileges necessary to determine if the database is using replication (REPLICATION CLIENT and SUPER). Otherwise, false.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenance._isWarningMessageNeeded">
            <summary>True if there is a critical warning message to be shown via pop-up msgbox</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.RunMethod(System.Reflection.MethodInfo,OpenDentBusiness.DbmMode)">
            <summary>Runs a single DBM method.  Updates the DateLastRun column in the database for the method passed in if modeCur is set to Fix.</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.RunMethod(System.Reflection.MethodInfo,System.Collections.Generic.List{System.Object},OpenDentBusiness.DbmMode)">
            <summary>Runs a single DBM method.  Updates the DateLastRun column in the database for the method passed in if modeCur is set to Fix.</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.HasReplicationUnsafeMethods(OpenDental.UI.GridOD)">
            <summary>Returns true if any of the selected gridrows have a method tag that is marked as IsReplicationUnsafe and the office is running replication. Otherwise false.</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.RunMethodBreakDown(System.Reflection.MethodInfo)">
            <summary>Runs the DBM method passed in and displays the results in a non-modal MsgBoxCopyPaste window.
            Does nothing if the DBM method passed in is not flagged for HasBreakDown</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.GetParametersForMethod(System.Reflection.MethodInfo,OpenDentBusiness.DbmMode)">
            <summary>Returns a list of parameters for the corresponding DBM method.  The order of these parameters is critical.</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.SaveLogToFile(System.String)">
            <summary>Tries to log the text passed in to a centralized DBM log.  Displays an error message to the user if anything goes wrong.
            Always sets the current Cursor state back to Cursors.Default once finished.</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.ScrollToBottom(OpenDental.UI.GridOD,System.Int32)">
            <summary>Helper function to make thread-safe UI calls to ODgrid.ScrollToIndexBottom</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.UpdateResultTextForRow(OpenDental.UI.GridOD,System.Int32,System.String)">
            <summary>Updates the result column for the specified row in gridMain with the text passed in.</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenance.ToggleUI(System.Boolean)">
            <summary>Turn certain UI elements on or off depending on if DBM is running.</summary>
        </member>
        <member name="T:OpenDental.FormDefEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDefEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDefEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormDefEdit._listExcludeRemindNums">
            <summary>A list of DefNums that represent all of the Confirmation Statuses that should skip sending eReminders.</summary>
        </member>
        <member name="F:OpenDental.FormDefEdit._listDefs">
            <summary>The list of definitions that is showing in FormDefinitions.  This list will typically be out of synch with the cache.  Gets set in the constructor.</summary>
        </member>
        <member name="M:OpenDental.FormDefEdit.#ctor(OpenDentBusiness.Def,System.Collections.Generic.List{OpenDentBusiness.Def},OpenDentBusiness.DefCatOptions)">
            <summary>defCur should be the currently selected def from FormDefinitions.  listDef is going to be the in-memory list of definitions currently displaying to the user.  listDef typically is out of synch with the cache which is why we need to pass it in.</summary>
        </member>
        <member name="T:OpenDental.FormDefEditBlockout">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDefEditBlockout.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDefEditBlockout.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDefEditBlockout.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDefEditBlockout.#ctor(OpenDentBusiness.Def)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormDefEditImages">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDefEditImages.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDefEditImages.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDefEditImages.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDefEditImages.#ctor(OpenDentBusiness.Def)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormDefinitions">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDefinitions.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDefinitions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDefinitions._listDefsAll">
            <summary>All defs for the selected category, sorted.</summary>
        </member>
        <member name="M:OpenDental.FormDefinitions.#ctor(OpenDentBusiness.DefCat)">
            <summary>Must check security before allowing this window to open.</summary>
        </member>
        <member name="T:OpenDental.FormDepositEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._listDepositAccounts">
            <summary>Only used if linking to accounts</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._accountingSoftware">
            <summary>The accounting software selected in Manage Module preferences.</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._programPropertyQboAccessToken">
            <summary>OAuth access token stored in DB for QuickBooks Online API.</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._programPropertyQboRefreshToken">
            <summary>OAuth refresh token stored in DB for QuickBooks Online API.</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._quickBooksOnlineToken">
            <summary>Current OAuth access token for QuickBooks Online API.</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._programPropertyQboClassRefs">
            <summary>Class Refs for QuickBooks Online.</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._programPropertyQboRealmId">
            <summary>Realm ID for QuickBooks Online.</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._listInsPayTypeDefNums">
            <summary>Used to store DefNums in a 1:1 ratio for listInsPayType</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._listPayTypeDefNums">
            <summary>Used to store DefNums in a 1:1 ratio for listPayType</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._hasBeenSavedToDB">
            <summary>Keeps track of whether the payment has been saved to the database since the form was opened.</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._listPayNumsAttached">
            <summary>A list of payNums already attached to the deposit.  When printing or showing PDF these were attached to the deposit.
            Used on OK click to make sure we detach any procedures that might have been unselected after they've been attached in the DB.</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._listClaimPaymentNumsAttached">
            <summary>A list of claimPaymentNum already attached to the deposit.  When printing or showing PDF these were attached to the deposit.
            Used on OK click to make sure we detach any procedures that might have been unselected after they've been attached in the DB.</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._isOnOKClick">
            <summary>Used in UpdateToDB to detach any payments that were attached to deposit but have been deselected before clicking OK.</summary>
        </member>
        <member name="F:OpenDental.FormDepositEdit._realmIdPlainText">
            <summary>The current realm ID.</summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.IsQuickBooks">
            <summary>True if the accounting software pref is set to QuickBooks.</summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.IsQuickBooksOnline">
            <summary>True if the accounting software pref is set to QuickBooks Online.</summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.#ctor(OpenDentBusiness.Deposit)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.FillGrids">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.ComputeAmt">
            <summary>Usually run after any selected items changed. Recalculates amt based on selected items or row count.  May get fired twice when click
            and mouse up, harmless.</summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.CreateDepositQbOrQbo(System.Boolean)">
            <summary>Returns true if a deposit was created.</summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.CreateDepositQB(System.Boolean)">
            <summary>Returns true if a deposit was created OR if the user clicked continue anyway on pop up.</summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.SaveTokens">
            <summary>Save the QuickBooks Online access and refresh tokens if they have changed.</summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.GetListSelectedPaymentAmounts">
            <summary>Gets the selected patient and insurance payments. If this is an existing deposit, this gets all payments listed.</summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.SaveToDB">
            <summary>Saves the selected rows to database.</summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.ValidateDatePermission">
            <summary>Return true if it's a new deposit and saved successfully to DB, or user has permission to edit existing deposit and saved successfully to DB.
            Returns false for any other reason.</summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.CreateAndFillSheet">
            <summary>Create and fill a Sheet for PDF-related button clicks and leaves the rest to the calling method to figure out what it wants to do with the Sheet.</summary>
        </member>
        <member name="M:OpenDental.FormDepositEdit.butRefresh_Click(System.Object,System.EventArgs)">
            <summary>Remember that this can only happen if IsNew</summary>
        </member>
        <member name="T:OpenDental.FormDeposits">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormDeposits.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDeposits.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormDeposits.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDeposits.IsSelectionMode">
            <summary>Use this from Transaction screen when attaching a source document.</summary>
        </member>
        <member name="F:OpenDental.FormDeposits.DepositSelected">
            <summary>In selection mode, when closing form with OK, this contains selected deposit.</summary>
        </member>
        <member name="M:OpenDental.FormDeposits.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDeposits.butAdd_Click(System.Object,System.EventArgs)">
            <summary>Not available in selection mode.</summary>
        </member>
        <member name="M:OpenDental.FormDeposits.butOK_Click(System.Object,System.EventArgs)">
            <summary>Only available in selection mode.</summary>
        </member>
        <member name="T:OpenDental.FormDiseaseDefEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormDiseaseDefEdit.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDiseaseDefEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormDiseaseDefEdit.SecurityLogMsgText">
            <summary>The security log message text for inserting/updating problems.  The messages will be written to the log after syncing changes.</summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefEdit.#ctor(OpenDentBusiness.DiseaseDef,System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormDiseaseDefs">
            <summary>
            </summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDiseaseDefs.IsSelectionMode">
            <summary>Set to true when user is using this to select a disease def. Currently used when adding Alerts to Rx.</summary>
        </member>
        <member name="F:OpenDental.FormDiseaseDefs.IsMultiSelect">
            <summary>Set to true when user is using FormMedical to allow multiple problems to be selected at once.</summary>
        </member>
        <member name="F:OpenDental.FormDiseaseDefs.ListDiseaseDefsSelected">
            <summary>On FormClosing, if IsSelectionMode, this will contain the selected DiseaseDefs.  Unless IsMultiSelect is true, it will only contain one.</summary>
        </member>
        <member name="F:OpenDental.FormDiseaseDefs._listDiseaseDefs">
            <summary>A complete list of disease defs including hidden.  Only used when not in selection mode (item orders can change).  
            It's main purpose is to keep track of the item order for the life of the window 
            so that we do not have to make unnecessary update calls to the database every time the up and down buttons are clicked.</summary>
        </member>
        <member name="F:OpenDental.FormDiseaseDefs._listDiseaseDefsOld">
            <summary>Stale deep copy of _listDiseaseDefs to use with sync.</summary>
        </member>
        <member name="F:OpenDental.FormDiseaseDefs._listDiseaseDefsShowing">
            <summary>List of diseaseDefs currently available in the grid after filtering.</summary>
        </member>
        <member name="F:OpenDental.FormDiseaseDefs._listSecurityLogMsgs">
            <summary>List of messages returned by FormDiseaseDefEdit for creating log messages after syncing.  All messages in this list use ProblemEdit
            permission.</summary>
        </member>
        <member name="F:OpenDental.FormDiseaseDefs.ListDiseaseDefNumsColored">
            <summary>A list of diseaseDefNums can be passed in prior to showing. This is the list of diseases that are colored in the grid, and should not change once the form is loaded. Currently, this is used from FormMedical to show the user which active problems are assigned to the current patient.</summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefs.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefs.FilterListByTerms(System.Collections.Generic.List{OpenDentBusiness.DiseaseDef},System.String,OpenDental.FormDiseaseDefs.SearchTypes)">
            <summary>Returns a list of DiseaseDefs from the ones passed in that match the all criteria from filterText based off of the search type.
            Passing in an empty string as filterText will return the list of DiseaseDefs that was passed in.</summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefs.FilterList">
            <summary>Returns a list of DiseaseDefs that match all of the search filters in the UI.</summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefs.gridMain_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>If IsSelectionMode, doubleclicking closes the form and returns the selected diseasedef.
            If !IsSelectionMode, doubleclicking opens FormDiseaseDefEdit and allows the user to edit or delete the selected diseasedef.
            Either way, validation always occurs first.</summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefs.butAdd_Click(System.Object,System.EventArgs)">
            <summary>Adds a new disease. New diseases get blank (not null) fields for ICD9, ICD10, and SnoMedCodes 
            if they are not specified from FormDiseaseDefEdit so that we can do string searches on them.</summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefs.butAlphabetize_Click(System.Object,System.EventArgs)">
            <summary>Only visible when !IsSelectionMode, and disabled if any filtering has been done via the search boxes. 
            Resets ALL the DiseaseDefs' ItemOrders to be in alphabetical order. Not reversible once done.</summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefs.butUp_Click(System.Object,System.EventArgs)">
            <summary>Only visible when !IsSelectionMode, and disabled if any filtering has been done via the search boxes. </summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefs.butDown_Click(System.Object,System.EventArgs)">
            <summary>Only visible when !IsSelectionMode, and disabled if any filtering has been done via the search boxes. </summary>
        </member>
        <member name="M:OpenDental.FormDiseaseDefs.butOK_Click(System.Object,System.EventArgs)">
            <summary>Only visible when using Selection Mode. Most of the actual logic is done on FormClosing.</summary>
        </member>
        <member name="T:OpenDental.FormDiseaseDefs.SearchTypes">
            <summary>Each search text box in the UI has a corresponding value in this enumeration.</summary>
        </member>
        <member name="T:OpenDental.FormDisplayFieldCategories">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormDisplayFieldCategories.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldCategories.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldCategories.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldCategories.#ctor(System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormDisplayFieldEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormDisplayFieldEdit.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDisplayFieldEdit.AllowZeroWidth">
            <summary>True when we allow the user to set a display field width to 0 to allow dynamic grid widths.</summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormDisplayFieldOrthoEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormDisplayFieldOrthoEdit.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldOrthoEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldOrthoEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDisplayFieldOrthoEdit._listDisplayFields">
            <summary>Used to make sure the user is not adding a duplicate field.</summary>
        </member>
        <member name="F:OpenDental.FormDisplayFieldOrthoEdit._orthoChartTabLink">
            <summary>When ListOrthoChartTabLinks and OrthoChartTab are not null this should be set to the link we are editing.
            When not null _tabLinkCur.ColumnWidthOverride will be updated instead of FieldCur.ColumnWidth.</summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldOrthoEdit.IsOverrideMode">
            <summary>Simply returns if _tablLinkCur is not null. Used for readability purposes.</summary>
        </member>
        <member name="T:OpenDental.FormDisplayFields">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormDisplayFields.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormDisplayFields.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDisplayFields.DisplayFieldCategoryCur">
            <summary>Should not be set to DisplayFieldCategory.OrthoChart.  For ortho chart, use FormDisplayFieldsOrthoChart.</summary>
        </member>
        <member name="F:OpenDental.FormDisplayFields._listDisplayFieldsShowing">
            <summary>When this form opens, this is the list of display fields that the user has already explicitly set to be showing.  If the user did not
            set any to be showing yet, then this will start out as the default list.  This is a subset of AvailList.  As this window is used, items are
            added to this list but not saved until window closes with OK.</summary>
        </member>
        <member name="F:OpenDental.FormDisplayFields._listDisplayFieldsAvail">
            <summary>This is the list of all possible display fields.  Once the grids on the form are filled, this AvailList is only the items showing in
            the list at the right.</summary>
        </member>
        <member name="T:OpenDental.FormDisplayFieldsOrthoChart">
            <summary>Display fields specifically for the ortho chart.</summary>
        </member>
        <member name="F:OpenDental.FormDisplayFieldsOrthoChart.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldsOrthoChart.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDisplayFieldsOrthoChart._listOrthoChartTabDisplayFields">
            <summary>The outer list represents each tab.  Within each tab, there can be multiple display fields.
            An individual display field record can be associated to multiple tabs (the exact same object can exist in multiple lists).</summary>
        </member>
        <member name="F:OpenDental.FormDisplayFieldsOrthoChart._listDisplayFieldsAvail">
            <summary>The list of existing display fields which are not currently in use within the selected ortho chart tab.</summary>
        </member>
        <member name="F:OpenDental.FormDisplayFieldsOrthoChart._listDisplayFieldsAll">
            <summary>All ortho chart display fields available which includes "orphaned" display fields.  Filled on load.</summary>
        </member>
        <member name="F:OpenDental.FormDisplayFieldsOrthoChart._listOrthoChartTabLinks">
            <summary>Local copy of cached OrthoChartTabLinks. Ensures that any cached changes cause by others will not effect what we see.</summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldsOrthoChart.GetAllFields(System.Boolean)">
            <summary>Get the list of all unique display fields accross all ortho chart tabs.
            Set hasOrphanedFields to false to exclude any "available" fields that are not currently associated to a tab.</summary>
        </member>
        <member name="M:OpenDental.FormDisplayFieldsOrthoChart.GetSelectedFields">
            <summary>Gets the currently selected tab information.</summary>
        </member>
        <member name="T:OpenDental.FormDunningEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormDunningEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDunningEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormDunningEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDunningEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormDunningEdit.#ctor(OpenDentBusiness.Dunning)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormEClinicalWorks">
            <summary> </summary>
        </member>
        <member name="M:OpenDental.FormEClinicalWorks.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormEClinicalWorks.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEClinicalWorks.IsNew">
            <summary>This Program link is new.</summary>
        </member>
        <member name="M:OpenDental.FormEClinicalWorks.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEClinicalWorks.SetModeRadioButtons(System.String)">
            <summary>Pass in the desired eCW mode.  0=Tight,1=Standalone,2=Full.  Defaults to Tight.</summary>
        </member>
        <member name="F:OpenDental.FormEClipboardSheetRules._listSheetDefs">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEClipboardSheetRules.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEClipboardSheetRules.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEClipboardSheetRules.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormElectIDs">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormElectIDs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormElectIDs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormElectIDs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormElectIDs.IsSelectMode">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormElectIDs.ElectIDSelected">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormElectIDs.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormEligibilityResponseDisplay">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEligibilityResponseDisplay.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEligibilityResponseDisplay.#ctor(System.Xml.XmlDocument,System.Int64)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormEmailAddressEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEmailAddressEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEmailAddressEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailAddressEdit.#ctor(OpenDentBusiness.EmailAddress,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEmailAddressEdit.butAuthGoogle_Click(System.Object,System.EventArgs)">
            <summary>Requests authorization for Open Dental to send emails and access the inbox for a gmail address.
            Google sends us access and refresh tokens that we store in the database.</summary>
        </member>
        <member name="T:OpenDental.FormEmailAutographEdit">
            <summary>Email autograph edit.</summary>
        </member>
        <member name="F:OpenDental.FormEmailAutographEdit.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormEmailAutographEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailAutographEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailAutographEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEmailAutographEdit.EmailAutographCur">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEmailAutographEdit.#ctor(OpenDentBusiness.EmailAutograph,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailMessageEdit._emailMessage">
            <summary>A copy of the message passed into the constructor.</summary>
        </member>
        <member name="F:OpenDental.FormEmailMessageEdit._emailMessageReplyingTo">
            <summary>If currently replying to a received message, the EmailMessage to which we are replying</summary>
        </member>
        <member name="F:OpenDental.FormEmailMessageEdit._listEmailMessages">
            <summary>List of email messages to be considered for auto complete email address popup. When null will run query.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.#ctor(OpenDentBusiness.EmailMessage,OpenDentBusiness.EmailAddress,System.Boolean,OpenDentBusiness.EmailMessage,System.Collections.Generic.List{OpenDentBusiness.EmailMessage}[])">
            <summary>isDeleteAllowed defines whether the email is able to be deleted when a patient is attached. 
            emailAddress corresponds to the account in Email Setup that will be used to send the email.
            Currently, emails that are "Deleted" from the inbox are actually just hidden if they have a patient attached.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.ConfigureSendButtons">
            <summary>Configures and adds the 'Send Email' button and 'Close' button to the UI.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.GetSendMenu">
            <summary>Configures the dropdown/contextmenu for the 'Send Email' button.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.IsReplyingToSecureEmail">
            <summary>Returns true if this message is a reply to a Secure Email.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.FillAutographs">
            <summary>Fills the autographs picklist.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.FindDefaultEmailAutograph">
            <summary>Searches the list of EmailAutographs and returns the first match, otherwise null</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.SetDefaultAutograph">
            <summary>Sets the default autograph that shows in the message body. 
            The default autograph is determined to be the first autograph with an email that matches the email address of the sender.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.GetOutgoingEmailForSending">
            <summary>Gets the outgoing email account (EmailAddress object) from emailPreview. Prompts user when there are problems matching the textbox 
            displaying the sending address with an account in Email Setup.
            Returns null if failed to match, or if matched to multiple and user canceled out of selection window.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.HasValidInlineAttachments(System.String,System.Boolean)">
            <summary>Returns true if all of the inline images exist. Returns false otherwise. If the body text isRawHtml then will just return true and not check.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.ValidateFieldsForSend(System.Boolean)">
            <summary>Checks to make sure there's a value in the From and To address text boxes. If isSecureEmail is true, will also check if there's a value in the Subject line</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.butSend_Click(System.Object,System.EventArgs)">
            <summary>Becomes the reply button if the email was received.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.butSendSecure_Click(System.Object,System.EventArgs)">
            <summary>Sends the email as a Secure Email via the EmailHosting API.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.IsValidSecureEmail">
            <summary>Returns true if fields are valid for sending a Secure Email. CC and BCC fields must be blank.</summary>
        </member>
        <member name="M:OpenDental.FormEmailMessageEdit.MoveCCandBCCIntoToField">
            <summary>Moves the addresses in the CC and BCC fields into the To field.</summary>
        </member>
        <member name="T:OpenDental.FormEmailTemplateEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailTemplateEdit.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormEmailTemplateEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailTemplateEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailTemplateEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEmailTemplateEdit.EmailTemplateCur">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEmailTemplateEdit._htmlDocument">
            <summary>The fully translated HTML text with the master template, as it would show in a web browser.</summary>
        </member>
        <member name="M:OpenDental.FormEmailTemplateEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEmailTemplateEdit.ChangeView(System.Boolean)">
            <summary>Refreshes the email preview pane to show the web browser when viewing HTML and the editable text if not.</summary>
        </member>
        <member name="T:OpenDental.FormEmployeeEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEmployeeEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEmployeeEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEmployeeEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormEmployeeSelect">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEmployeeSelect.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEmployeeSelect._listEmployeesFull">
            <summary>Unfiltered.</summary>
        </member>
        <member name="F:OpenDental.FormEmployeeSelect._listEmployeesShowing">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEmployeeSelect.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormEmployers">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmployers.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmployers.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmployers.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEServices2FactorAuthentication.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServices2FactorAuthentication.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServices2FactorAuthentication.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileSettings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSettings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSettings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailHostingSignatures._clinicPrev">
            <summary>Used to switch back to clinics if user selected a different clinic and validation did not pass.</summary>
        </member>
        <member name="M:OpenDental.FormEmailHostingSignatures.TrySaveEmailSignatures(System.Int64)">
            <summary>Returns true if saving email signatures was successful. Otherwise, returns false. makes api call.</summary> 
        </member>
        <member name="F:OpenDental.FormEmailHostingSignatures.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailHostingSignatures.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEmailHostingSignatures.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormEtrans835ClaimPay">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimPay.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimPay.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimPay.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimPay._listHx835_ClaimsAll">
            <summary>All Hx835_Claims from _listOtherSplitClaims and claimPaid all in one list.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimPay.ListClaimProcs">
            <summary>The claim procs shown in the grid.  These procs are saved to/from the grid, but changes are not saved to the database unless the OK button is pressed or an individual claim proc is double-clicked for editing.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimPay._idxSplit">
            <summary>Index of the Split column in the gridPayments.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimPay._idxDeduct">
            <summary>Index of the Deduct column in the gridPayments.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimPay._idxAllowed">
            <summary>Index of the Allowed column in the gridPayments.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimPay._idxInsPayEst">
            <summary>Index of the InsPay/InsEst column in the gridPayments.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimPay._idxWriteoff">
            <summary>Index of the Writeoff column in the gridPayments.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimPay._idxClaimPaymentTracking">
            <summary>Index of the claim payment tracking column in the gridPayments.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimPay._idxRemarks">
            <summary>Index of the Remarks column in the gridPayments.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimPay._isSupplementalPay">
            <summary>Flag used to for claim fee and fee billed validation logic.
            Supplemental payments have a feeBilled of 0.
            When validating a selection we compare the sum of all feeBilled to claimPaid.ClaimFee, both are set to 0 when true.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimPay.#ctor(OpenDentBusiness.X835,OpenDentBusiness.Hx835_Claim,OpenDentBusiness.Claim,OpenDentBusiness.Patient,OpenDentBusiness.Family,System.Collections.Generic.List{OpenDentBusiness.InsPlan},System.Collections.Generic.List{OpenDentBusiness.PatPlan},System.Collections.Generic.List{OpenDentBusiness.InsSub},System.Boolean)">
            <summary>The claimPaid is the individual EOB to load this window for.
            The listOtherSplitClaims will contain any split claims which are associated to claimPaid.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimPay.FillTotals">
            <Summary>Fails silently if text is in invalid format.</Summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimPay.SaveGridChanges">
            <Summary>Surround with try-catch.</Summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimPay.HasValidSplitClaimTotals">
            <summary>Called when entering split claim payment information.
            Returns true if the entered payment rows sum up to the sub set proc information present on this split claim.</summary>
        </member>
        <member name="T:OpenDental.FormEtransEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormEtransEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtransEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtransEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtransEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEtransEdit.butPrintAck_Click(System.Object,System.EventArgs)">
            <summary>only visible if Canadian</summary>
        </member>
        <member name="T:OpenDental.FormFamilyMemberSelect">
            <summary>For a given subscriber, this list all their plans.  User then selects one plan from the list or creates a blank plan.</summary>
        </member>
        <member name="F:OpenDental.FormFamilyMemberSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFamilyMemberSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormFamilyMemberSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFamilyMemberSelect.SelectedPatNum">
            <summary>When dialogResult=OK, this will contain the PatNum of the selected pat.</summary>
        </member>
        <member name="F:OpenDental.FormFamilyMemberSelect._isPatientStatusVisible">
            <summary>When this flag is set, the patient status will appear in parenthesis by the patient's name in the list.</summary>
        </member>
        <member name="M:OpenDental.FormFamilyMemberSelect.#ctor(OpenDentBusiness.Family,System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormFeatureRequest">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormFeatureRequest.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeatureRequest.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFeatureRequest._isAdminMode">
            <summary>Set to true when this window was launched from HQ.  Allows the window to be put into management mode.</summary>
        </member>
        <member name="F:OpenDental.FormFeatureRequest.IsSelectionMode">
            <summary>Used in the JobManager system for attaching features to jobs.</summary>
        </member>
        <member name="F:OpenDental.FormFeatureRequest.SelectedFeatureNum">
            <summary>Only for IsSelectionMode, returns the selected num.</summary>
        </member>
        <member name="F:OpenDental.FormFeatureRequest._tableRequests">
            <summary>Used to fill grid in FillGrid. Filters operate on this local copy. Fill by calling RefreshRequestTable()</summary>
        </member>
        <member name="M:OpenDental.FormFeatureRequest.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormFeatureRequest.RefreshRequestTable">
            <summary>Makes a web call to WebServiceCustomersUpdate in order to get an updated list of feature requests.</summary>
        </member>
        <member name="F:OpenDental.FormFeatureRequest._arrayApprovalEnumStrings">
            <summary>For sorting FRs because we do not have access to the ApprovalEnum in Resuests.cs in the WebServiceCustomerUpdates solution.</summary>
        </member>
        <member name="M:OpenDental.FormFeatureRequest.FeatureRequestSort(OpenDentBusiness.ODDataRow,OpenDentBusiness.ODDataRow)">
            <summary>Used to sort feature requests for user to the top of the list.</summary>
        </member>
        <member name="T:OpenDental.FormFeeEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormFeeEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormFeeEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFeeEdit.FeeCur">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormFeeEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormFeeEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormFeeScheds">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormFeeScheds.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeeScheds.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeeScheds.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFeeScheds._IsMovingToOrder">
            <summary>Is in middle of moving a row to a new Order, and the second click in the grid will finish the job.</summary>
        </member>
        <member name="F:OpenDental.FormFeeScheds._listFeeScheds">
            <summary>If IsSelectionMode then is a list of all non-hidden fee schedules.  Otherwise, uses the cache deep copy.</summary>
        </member>
        <member name="M:OpenDental.FormFeeScheds.#ctor(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormFeeScheds.CheckItemOrders">
            <summary>Also fixes if any errors found.</summary>
        </member>
        <member name="M:OpenDental.FormFeeScheds.CompareItemOrder(OpenDentBusiness.FeeSched,OpenDentBusiness.FeeSched)">
            <summary>This sorts feescheds by their item order.</summary>
        </member>
        <member name="M:OpenDental.FormFeeScheds.CompareFeeScheds(OpenDentBusiness.FeeSched,OpenDentBusiness.FeeSched)">
            <summary>This sorts feescheds by type and alphabetically.</summary>
        </member>
        <member name="T:OpenDental.FormFeeSchedTools">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedTools.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedTools.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedTools.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedTools._schedNum">
            <summary>The defNum of the fee schedule that is currently displayed in the main window.</summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedTools._listSecurityLogEntries">
            <summary>A list of security logs that should be inserted.</summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedTools.#ctor(System.Int64,System.Collections.Generic.List{OpenDentBusiness.FeeSched},System.Collections.Generic.List{OpenDentBusiness.Provider},System.Collections.Generic.List{OpenDentBusiness.Clinic})">
            <summary>Supply the fee schedule num(DefNum) to which all these changes will apply</summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedTools.EvaluateOverrides(System.Int64,System.Int64,System.Int64,System.Collections.Generic.List{OpenDentBusiness.Fee})">
            <summary>Determines if there are overrides being updated, or just a regular feeSchedule. Returns true if there are overrides and user wants to 
            continue, or if it is a regular fee schedule. Returns false is it is an override schedule and there are no overrides to update or if user 
            chooses to cancel to review.</summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedTools.comboFeeCombos_SelectionChangeCommitted(System.Object,System.EventArgs)">
            <summary>If either of the FeeSched combos change, we fill the combos.</summary>
        </member>
        <member name="T:OpenDental.FormFeesForIns">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormFeesForIns.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeesForIns.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeesForIns.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeesForIns.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormFeesForIns.InsPlanRow">
            <summary>Holds InsPlan data needed in this form.</summary>
        </member>
        <member name="M:OpenDental.FormFeesForIns.InsPlanRow.#ctor(System.Data.DataRow)">
            <summary>Creates an InsPlanRow from a DataRow.</summary>
        </member>
        <member name="T:OpenDental.FormFinanceCharges">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormFinanceCharges.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormFinanceCharges._listProviders">
            <summary>Filtered list of providers based on the current clinic--used to populate the Combo Box Providers.</summary>
        </member>
        <member name="M:OpenDental.FormFinanceCharges.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormFinanceCharges.FormFinanceCharges_Shown(System.Object,System.EventArgs)">
            <summary>The following logic was moved into a Shown method, rather than a Load method, because the progress bar causes the 
            window to popbehind FormOpenDental when in Load.</summary>
        </member>
        <member name="M:OpenDental.FormFinanceCharges.RunAgingEnterprise(System.Boolean)">
            <summary>Runs enterprise aging. Returns false if there are any errors while running aging. Changes to this method will also need to be made to OpenDentalService.ProcessStatements.RunAgingEnterprise().</summary>
        </member>
        <member name="M:OpenDental.FormFinanceCharges.GetDateTimeForDisplay(System.DateTime)">
            <summary>Returns the short date time string version of the DateTime passed in, empty string if the year falls before 1880.</summary>
        </member>
        <member name="M:OpenDental.FormFinanceCharges.GetFinanceBillingAgingList">
            <summary>Gets an Aging List from the Finance/Billing Charges with the filter settings from the UI.</summary>
        </member>
        <member name="M:OpenDental.FormFinanceCharges.GetFinanceBillingLastRun">
            <summary>Returns the date the Finance or Billing was last run depending on the currently selected preference.</summary>
        </member>
        <member name="M:OpenDental.FormFinanceCharges.RadioPatPriProv_CheckedChanged(System.Object,System.EventArgs)">
            <summary>The Treating Provider radio button is clicked: disable the provider combo box and picker.
            This setting will run the Finance/Billing Charge on the primary provider (PriProv)</summary>
        </member>
        <member name="M:OpenDental.FormFinanceCharges.AddBillingOrFinanceCharge(OpenDentBusiness.PatAging,System.Int32,System.Collections.Generic.List{OpenDentBusiness.Adjustment},System.Collections.Generic.List{OpenDentBusiness.InstallmentPlan})">
            <summary>Adds a billing charge or finance charge based on the patAging and adjustments passed in.</summary>
        </member>
        <member name="M:OpenDental.FormFinanceCharges.AddFinanceCharge(System.Int64,System.DateTime,System.String,System.String,System.String,System.Double,System.Int64,System.Int64,System.Collections.Generic.List{OpenDentBusiness.InstallmentPlan})">
            <summary>Returns true if a finance charge is added, false if one is not added</summary>
        </member>
        <member name="T:OpenDental.FormFormPatEdit">
            <summary>
            This form is Deprecated.
            </summary>
        </member>
        <member name="F:OpenDental.FormFormPatEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFormPatEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormFormPatEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormFormPatEdit.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormGraphics.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormGraphics.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormGraphics.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormGraphics._isRemoteEdit">
            <summary>True when we are editing another computers ComputerPrefs.</summary>
        </member>
        <member name="M:OpenDental.FormGraphics.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormGraphics.RefreshFormats">
            <Summary>Get all formats for the grid based on the current filters.</Summary>
        </member>
        <member name="M:OpenDental.FormGraphics.GetPreferredDirectXFormat(System.Windows.Forms.Form)">
            <summary>CAUTION: Runs slowly. May take minutes. Returns the string "invalid" if no suitable Direct X format can be found.</summary>
        </member>
        <member name="M:OpenDental.FormGraphics.TestDirectXFormat(System.Windows.Forms.Form,System.String)">
            <summary>Returns true if the given directXFormat works for a DirectX tooth chart on the local computer.</summary>
        </member>
        <member name="T:OpenDental.FormGroupPermEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormGroupPermEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormGroupPermEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormGroupPermEdit.#ctor(OpenDentBusiness.GroupPermission)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormHL7Defs">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormHL7Defs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormHL7Defs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormHL7Defs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormHL7Defs.PatNumCur">
            <summary>This gets set externally beforehand.  This is passed to FormHL7Msgs for loading the HL7 messages for the currently selected patient.</summary>
        </member>
        <member name="M:OpenDental.FormHL7Defs.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormImageSelect">
            <summary>Only used for medication reconcile to pick the scanned image of the list of medications that the patient brought in.</summary>
        </member>
        <member name="F:OpenDental.FormImageSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormImageSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormImageSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormImageSelect.OnlyShowImages">
            <summary>Don't show pdfs.</summary>
        </member>
        <member name="F:OpenDental.FormImageSelect.SelectedDocNum">
            <summary>If DialogResult==OK, then this will contain the new DocNum of the image we want.</summary>
        </member>
        <member name="M:OpenDental.FormImageSelect.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormImageSelectClaimAttach">
            <summary>Only used from Claim Edit to "attach" an image. These are not the kind that get sent with claims.</summary>
        </member>
        <member name="F:OpenDental.FormImageSelectClaimAttach.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormImageSelectClaimAttach.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormImageSelectClaimAttach.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormImageSelectClaimAttach.ClaimAttachNew">
            <summary>If DialogResult==OK, then this will contain the new ClaimAttach with the filename that the file was saved under.  File will be in the EmailAttachments folder.  But ClaimNum will not be set.</summary>
        </member>
        <member name="F:OpenDental.FormImageSelectClaimAttach.CanAttachTxt">
            <summary>Set to true to allow TXT files.</summary>
        </member>
        <member name="F:OpenDental.FormImageSelectClaimAttach.CanAttachDoc">
            <summary>Set to true to allow DOC/DOCX files.</summary>
        </member>
        <member name="F:OpenDental.FormImageSelectClaimAttach.CanAttachPdf">
            <summary>Set to true to allow PDF files.</summary>
        </member>
        <member name="F:OpenDental.FormImageSelectClaimAttach._stopwatchKillSnipToolProcesses">
            <summary> Keeps track of how long we've been trying to kill all running Snip Tool processes </summary>
        </member>
        <member name="M:OpenDental.FormImageSelectClaimAttach.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormImageSelectClaimAttach.GetImageFromClipboard(System.Boolean,System.Boolean)">
            <summary>Returns an image from the clipboard. If no image is found or there was an error, then returns with a popup message.</summary>
        </member>
        <member name="M:OpenDental.FormImageSelectClaimAttach.ImportDocument(System.String)">
            <summary>Imports a document from the passed in path then calls SaveAttachment.</summary>
        </member>
        <member name="M:OpenDental.FormImageSelectClaimAttach.ImportImage(System.Drawing.Bitmap)">
            <summary>Imports the passed in Bitmap, disposes the Bitmap, then calls SaveAttachment for the imported image.</summary>
        </member>
        <member name="M:OpenDental.FormImageSelectClaimAttach.SaveAttachment(OpenDentBusiness.Document)">
            <summary>Sets ClaimAttachNew to the passed in document and closes the form. Will show a popup message and return if there are any errors 
            with trying to save the passed in document.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormImageSelectClaimAttach.timerKillSnipToolProcesses_Tick(System.Object,System.EventArgs)" -->
        <member name="M:OpenDental.FormImageSelectClaimAttach.KillProcesses(System.Collections.Generic.List{System.Diagnostics.Process})">
            <summary> Kill all passed-in processes, ignoring any failures, and return True if any were killed. </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormImageSelectClaimAttach.GetProcessesSnipTool" -->
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormImageSelectClaimAttach.DoesSnipAndSketchExist" -->
        <member name="M:OpenDental.FormImageSelectClaimAttach.DoesSnippingToolExist">
            <summary>Returns true if the Snipping Tool exe can be located.  False otherwise.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormImageSelectClaimAttach.StartSnipAndSketchOrSnippingTool" -->
        <member name="M:OpenDental.FormImageSelectClaimAttach.StartSnipping">
            <summary>Mimics FormClaimAttachmentDXC.StartSnipping()</summary>
        </member>
        <member name="T:OpenDental.FormImagingSetup">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormImagingSetup.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormImagingSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormImagingSetup.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormInsAdj">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsAdj.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsAdj.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsAdj.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsAdj.#ctor(OpenDentBusiness.ClaimProc)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormInsBenefitNotes">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInsBenefitNotes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsBenefitNotes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsBenefitNotes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsBenefitNotes.BenefitNotes">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsBenefitNotes.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormInsBenefits">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInsBenefits.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsBenefits.InsSub_">
            <summary>Set this externally before opening the form.</summary>
        </member>
        <member name="F:OpenDental.FormInsBenefits.ListBenefits">
            <summary>Set this externally before opening the form. Provide a deep copy of the benefits.</summary>
        </member>
        <member name="F:OpenDental.FormInsBenefits.MonthRenew">
            <summary>Set this externally before opening the form. 0 indicates calendar year, otherwise 1-12. This forces all benefits to conform to this setting. User can change as a whole.</summary>
        </member>
        <member name="F:OpenDental.FormInsBenefits.Note">
            <summary>Set this externally before opening the form. The subscriber note.</summary>
        </member>
        <member name="F:OpenDental.FormInsBenefits._listBenefitsAll">
            <summary>A shallow list of all benefits passed into this form along with new benefits added by the user. Some of the benefits in this list will be displayed within the simple view and the rest will be displayed within the grid. This list gets recreated sometimes by starting with the list of benefits showing in the grid and then making new benefit objects out of the current state of the simple view UI.</summary>
        </member>
        <member name="F:OpenDental.FormInsBenefits._listBenefitsGrid">
            <summary>A shallow, subset list of the benefits that were passed into this form. These benefits are the ones displaying within the grid on this form.</summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.#ctor(System.Int64,System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.FillSimple">
            <summary>This will only be run when the form first opens or if user switches to simple view.  FillGridBenefits should always be run after this.</summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.TryResetQuickText(System.Windows.Forms.TextBox,System.Windows.Forms.TextBox)">
            <summary>Clears Quick% textbox associated to textCur if newly entered value in textCur no longer matches the existing Quick% value.</summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.FillCalendarYear">
            <summary>only run once at startup.</summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.FillGridAgeLimits">
            <summary> Should be called any time a change to an age limit needs made visible. </summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.FillGridFrequencies">
            <summary> Should be called any time a change to a Frequency needs made visible. </summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.FillGridBenefits">
            <summary>This only fills the grid labeled 'Other Benefits'. It does not get any data from the database.</summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.HasInvalidTimePeriods">
            <summary>Returns true if there are a mixture of benefits with calendar and service year time periods.</summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.ConvertFormToBenefits(System.Boolean)">
            <summary>Only called if in simple view.  This takes all the data on the form and converts it to benefit items.  A new benefitListAll is created based on a combination of benefitList and the new items from the form.  This is used when clicking OK from simple view, or when switching from simple view to complex view, or when getting ready to view more frequencies, or when adding a new benefit.</summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.MakeAgeLimitBenefit(OpenDentBusiness.Benefit,System.Byte)">
            <summary>Copies the passed in benefit. If existing benefit then will just update during sync.</summary>
        </member>
        <member name="M:OpenDental.FormInsBenefits.MakeFrequencyBenefit(OpenDentBusiness.Benefit,System.Int32,System.Int32,System.Byte,System.Boolean)">
            <summary>Copies the passed in benefit. If existing benefit then will just update during sync.</summary>
        </member>
        <member name="T:OpenDental.FormInsCatEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsCatEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsCatEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsCatEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInsCatEdit._covCat">
            <summary>A list of CovSpans just for this category</summary>
        </member>
        <member name="M:OpenDental.FormInsCatEdit.#ctor(OpenDentBusiness.CovCat)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormInsCatsSetup">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsCatsSetup.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsCatsSetup.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormInsFilingCodeEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInsFilingCodeEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsFilingCodeEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsFilingCodeEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsFilingCodeEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsFilingCodeEdit.DeleteInsFilingCodeAndSubTypes">
            <summary>Returns without doing anything if InsFilingCodeCur hasn't been inserted.</summary>
        </member>
        <member name="T:OpenDental.FormInsFilingCodes">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInsFilingCodes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsFilingCodes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsFilingCodes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsFilingCodes.SelectedInsFilingCodeNum">
            <summary>Only used if IsSelectionMode.  On OK, contains selected InsFilingCodeNum.  Can be 0.  Can also be set ahead of time externally.</summary>
        </member>
        <member name="M:OpenDental.FormInsFilingCodes.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormInsPlan">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInsPlan.IsNewPlan">
            <summary>The InsPlan is always inserted before opening this form.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan.IsNewPatPlan">
            <summary>The PatPlan is always inserted before opening this form.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._stringEmpOriginal">
            <summary>used in the emp dropdown logic</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._listBenefits">
            <summary>This is the current benefit list that displays on the form.  It does not get saved to the database until this form closes.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._listFeeSchedsStandard">
            <summary>Set to true from FormInsPlansMerge.  In this case, the insplan is read only, because it's much more complicated to allow user to change.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._carrierNumOrig">
            <summary>The carrier num when the window was loaded.  Used to track if carrier has been changed.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._employerNameOrig">
            <summary>The employer num when the window was loaded.  Used to track if the employer has been changed.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._insPlan">
            <summary>Currently selected plan in the window.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._insPlanOriginal">
            <summary>This is a copy of PlanCur as it was originally when this form was opened.  
            This is needed to determine whether plan was changed.  However, this is also reset when 'pick from list' is used.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._insSub">
            <summary>Ins sub for the currently selected plan.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._listBoxEmps">
            <summary>displayed from within code, not designer</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._listBoxCarriers">
            <summary>displayed from within code, not designer</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._insPlanTypeComboItemSelected">
            <summary>The plan type that is selected in comboPlanType</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan._insPlanOld">
            <summary>The original plan that was passed into this form. Assigned in the constructor and should never be modified.  
            This allows intelligent decisions about how to save changes.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.#ctor(OpenDentBusiness.InsPlan,OpenDentBusiness.PatPlan,OpenDentBusiness.InsSub)">
            <summary>Called from ContrFamily and FormInsPlans. Must pass in the plan, patPlan, and sub, although patPlan and sub can be null.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.FillOrtho">
            <summary>Fills controls with ortho information.  Also hides the controls if needed.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.FillFormWithPlanCur(System.Boolean)">
            <summary>Uses PlanCur to fill out the information on the form.  Called once on startup and also if user picks a plan from template list.  This does not fill from SubCur, unlike FillPlanCurFromForm().</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.FillCarrier(System.Int64)">
            <summary>Fills the carrier fields on the form based on the specified carrierNum.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.FillPayor">
            <summary>Only called from FillCarrier and textElectID_Validating. Fills comboElectIDdescript as appropriate.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.IsFixedBenefitMismatch(OpenDentBusiness.FeeSched)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.CalculateListBoxHeight``1(OpenDental.UI.ListBox,System.Collections.Generic.List{``0})">
            <summary>Calculates the list box height and returns the value</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.butPick_Click(System.Object,System.EventArgs)">
            <summary>Button not visible if SubCur=null, editing from big list.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.butBenefitNotes_Click(System.Object,System.EventArgs)">
            <summary>This button is only visible if Trojan or IAP is enabled.  Always active.  Button not visible if SubCur==null.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.DropClickHelper">
            <summary>Returns true when successfully dropped.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.FillBenefits">
            <summary>This only fills the grid on the screen.  It does not get any data from the database.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.GetEmployerNum">
            <summary>Gets an employerNum based on the name entered. Called from FillCur</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.FillPlanCurFromForm">
            <summary>Used from butGetElectronic_Click and from butOK_Click.  Returns false if unable to complete.  Also fills SubCur if not null.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.CheckForReceivedClaims">
            <summary>Warns user if there are received claims for this plan.  Returns true if user wants to proceed, or if there are no received claims for this plan.  Returns false if the user aborts.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.SetAllowedFeeScheduleControls">
            <summary>Enables/disables Out of network and Manual Blue Book ComboBoxes depending on if the blue book checkbox is visible and checked.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.DoShowBluebookDeletionMsgBox">
            <summary>Check to see if we should show confirmation message to user about deleting bluebook data for the currently populated form. Returns true if the criteria are met to show, false otherwise.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlan.IsPatPlanRemoved">
            <summary>Check if PatPlan was dropped since window was opened.</summary>
        </member>
        <member name="T:OpenDental.FormInsPlan.InsPlanTypeComboItem">
            <summary>This is related to insplan.PlanType, but that column is a string.
            We should have used an enum instead of string values for insplan.PlanType to begin with.
            However, too late to change now.  This enum makes this form more human readable.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan.InsPlanTypeComboItem.CategoryPercentage">
            <summary>0</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan.InsPlanTypeComboItem.PPO">
            <summary>1</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan.InsPlanTypeComboItem.PPOFixedBenefit">
            <summary>2</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan.InsPlanTypeComboItem.MedicaidOrFlatCopay">
            <summary>3</summary>
        </member>
        <member name="F:OpenDental.FormInsPlan.InsPlanTypeComboItem.Capitation">
            <summary>4</summary>
        </member>
        <member name="T:OpenDental.FormInsPlans">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsPlans.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsPlans.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsPlans.GetInsBlueBookCount(OpenDentBusiness.InsPlan,OpenDentBusiness.InsPlan[])">
            <summary>Returns the number of plans for which insbluebook entries will be deleted.</summary>
        </member>
        <member name="T:OpenDental.FormInsPlanSelectFam">
            <summary>Lists all insurance plans for which the supplied patient is the subscriber. Lets you select an insurance plan based on a patNum. SelectedPlan will contain the plan selected.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlanSelectFam.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInsPlanSelectFam.Relat">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInsPlanSelectFam.ViewRelat">
            <summary>Set to true to view the relationship selection</summary>
        </member>
        <member name="F:OpenDental.FormInsPlanSelectFam.InsPlanSelected">
            <summary>After closing this form, this will contain the selected plan.  May be null to indicate none.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlanSelectFam.#ctor(System.Int64)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormInsPlansMerge">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsPlansMerge.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInsPlansMerge.InsPlanToMergeTo">
            <summary>After closing this form, if OK, then this will contain the Plan that the others will be merged into.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlansMerge.InsPlanArrayAll">
            <summary>This list must be set before loading the form.  All of the PlanNums will be 0.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlansMerge.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsPlansMerge.FillGrid">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormInsSpanEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsSpanEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInsSpanEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInsSpanEdit.#ctor(OpenDentBusiness.CovSpan)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormJournal">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJournal.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormJournal.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormJournal.#ctor(OpenDentBusiness.Account)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJournal.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="M:OpenDental.FormJournal.FillGrid(System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormJournalEntryEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJournalEntryEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormJournalEntryEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormJournalEntryEdit.JournalEntryCur">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJournalEntryEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJournalEntryEdit.FillAccount">
            <summary>Need to set AccountPicked before calling this.</summary>
        </member>
        <member name="T:OpenDental.FormLabCaseEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLabCaseEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLabCaseEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLabCaseEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormLabCaseEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLabCaseEdit._sheet">
            <summary>The lab slip, if one exists.</summary>
        </member>
        <member name="M:OpenDental.FormLabCaseEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLabCaseEdit.SaveToDb">
            <summary>Returns false if not able to save.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:OpenDental.FormLabCases" -->
        <member name="M:OpenDental.FormLabCases.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLabCases.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormLabCases.GoToAptNum">
            <summary>If this is zero, then it's an ordinary close.</summary>
        </member>
        <member name="M:OpenDental.FormLabCases.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormLabCaseSelect">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLabCaseSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLabCaseSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLabCaseSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormLabCaseSelect.ListLabCaseNumsSelected">
            <summary>This only has a value when DialogResult=OK.</summary>
        </member>
        <member name="M:OpenDental.FormLabCaseSelect.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormLaboratories">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLaboratories.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLaboratories.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormLaboratories.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormLaboratoryEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLaboratoryEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLaboratoryEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLaboratoryEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormLaboratoryEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLaboratoryEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormLabTurnaroundEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLabTurnaroundEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLabTurnaroundEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLabTurnaroundEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormLabTurnaroundEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormLanguagesUsed">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLanguagesUsed.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLanguagesUsed.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:OpenDental.FormLanguagesUsed.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormLanguagesUsed.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLanguagesUsed.FillListUsed">
            <summary>Also calls FillComboLanguagesIndicateNone().</summary>
        </member>
        <member name="T:OpenDental.FormLetterEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLetterEdit.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormLetterEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLetterEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormLetterEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLetterEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormLetterMergeEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLetterMergeEdit.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormLetterMergeEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLetterMergeEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormLetterMergeEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLetterMergeEdit.#ctor(OpenDentBusiness.LetterMerge)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormLetterMerges">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLetterMerges.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLetterMerges.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLetterMerges.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormLetterMerges.#ctor(OpenDentBusiness.Patient)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLetterMerges.CreateDataFile(System.String,OpenDentBusiness.LetterMerge)">
            <summary>Shows and error message and returns false if there is a problem creating the data file; Otherwise true.</summary>
        </member>
        <member name="M:OpenDental.FormLetterMerges.GetFileExtensionForWordDoc(System.String)">
            <summary>Returns default Microsoft Word extension of .docx. Returns extension .doc If the file passed in has an extension of .dot,.doc,or .dotm.</summary>
        </member>
        <member name="T:OpenDental.FormLetters">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLetters.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLetters.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLetters.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormLetters.ReferralCur">
            <summary>If this is not null, then this letter will be addressed to the referral rather than the patient.</summary>
        </member>
        <member name="M:OpenDental.FormLetters.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLetters.WarnOK">
            <summary>If the user has selected a letter, and then edited it in the main textbox, this warns them before continuing.</summary>
        </member>
        <member name="T:OpenDental.FormLicense">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLicense.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLicense.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLicense.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormLicense.#ctor(System.String)">
            <summary>If selectedLicense is null, then OpenDentalLicense will be the selected license by default. To ensure correct selection, use Properties.Resources.LicenseName to set selectedLicense value.</summary>
        </member>
        <member name="M:OpenDental.FormLicense.FillListBoxLicense">
            <summary>Fills the listbox with licenses and the license text as a tag. New Licenses needed to be added in FormRegistrationKey.cs as well.</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailExamples.ClinicNum">
            <summary>Selected clinic num. This is the clinic we will be adding the template to.</summary>
        </member>
        <member name="M:OpenDental.FormMassEmailExamples.TryAddTemplate">
            <summary>Inserts copy of template into db with the passed in clinic num. Returns false if the api throws</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailExamples.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMassEmailExamples.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMassEmailExamples.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormMedical">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormMedical.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormMedical.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedical.gridMedsPrint">
            <summary>In-memory-only ODgrid used for printing.</summary>
        </member>
        <member name="F:OpenDental.FormMedical._patOld">
            <summary>A copy of the original patient object, as it was when this form was first opened.</summary>
        </member>
        <member name="F:OpenDental.FormMedical._listEhrCodesAssessments">
            <summary>List of tobacco use screening type codes.  Currently only 3 allowed SNOMED codes as of 2014.</summary>
        </member>
        <member name="F:OpenDental.FormMedical._listEhrCodesCounselInterventions">
            <summary>All EhrCodes in the tobacco cessation counseling value set (2.16.840.1.113883.3.526.3.509).
            When comboInterventionType has selected index 0, load the counseling intervention codes into comboInterventionCode.</summary>
        </member>
        <member name="F:OpenDental.FormMedical._listEhrCodesMedInterventions">
            <summary>All EhrCodes in the tobacco cessation medication value set (2.16.840.1.113883.3.526.3.1190).
            When comboInterventionType has selected index 1, load the medication intervention codes into comboInterventionCode.</summary>
        </member>
        <member name="F:OpenDental.FormMedical._listEhrCodesInterventions">
            <summary>This list contains all of the intervention codes in the comboInterventionCode, counsel, medication, both.</summary>
        </member>
        <member name="F:OpenDental.FormMedical._listEhrCodesUser">
            <summary>All EhrCodes in the tobacco user value set (2.16.840.1.113883.3.526.3.1170).
            When radioAll or radioUser is selected, comboTobaccoStatuses will be filled with this list.</summary>
        </member>
        <member name="F:OpenDental.FormMedical._listEhrCodesNonUser">
            <summary>All EhrCodes in the tobacco non-user value set (2.16.840.1.113883.3.526.3.1189).
            When radioAll or radioNonUser is selected, comboTobaccoStatuses will be filled with this list.</summary>
        </member>
        <member name="F:OpenDental.FormMedical._listEhrCodesCustomTobacco">
            <summary>List of tobacco statuses selected from the SNOMED list for this pat that aren't in the list of EHR user and non-user codes</summary>
        </member>
        <member name="F:OpenDental.FormMedical._listEhrCodesRecentTobacco">
            <summary>List of recently used tobacco statuses, ordered by a date used weighted sum of number of times used.  Codes used the most will be
            first in the list, with more recent EhrMeasureEvents having a heavier weight.</summary>
        </member>
        <member name="F:OpenDental.FormMedical._listEhrCodesTobaccoStatuses">
            <summary>This list contains all of the tobacco statuses in the comboTobaccoStatus, user, non-user, or both.  This list may also contain
            statuses that the user has selected from the SNOMED list that are not a user or non-user code.</summary>
        </member>
        <member name="F:OpenDental.FormMedical._selectedTab">
            <summary>Tab name to pre-select when form loads.
            i.e. "tabMedical", "tabProblems", "tabMedications", "tabAllergies", "tabFamHealthHist", "tabVitalSigns", or "tabTobaccoUse".</summary>
        </member>
        <member name="M:OpenDental.FormMedical.#ctor(OpenDentBusiness.PatientNote,OpenDentBusiness.Patient,System.String)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormMedical.butPrintMedical_Click(System.Object,System.EventArgs)">
            <summary>This report is a brute force, one page medical history report. It is not designed to handle more than one page. It does not print service notes or medications.</summary>
        </member>
        <member name="M:OpenDental.FormMedical.radioInterventions_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Fill comboInterventionCode with counseling and medication intervention codes using _listCounselInterventionCodes
            and/or _listMedInterventionCodes depending on which radio button is selected.</summary>
        </member>
        <member name="M:OpenDental.FormMedical.radioTobaccoStatuses_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Fill comboTobaccoStatus with user and non-user tobacco status codes using _listUserCodes and/or _listNonUserCodes
            depending on which radio button is selected.</summary>
        </member>
        <member name="M:OpenDental.FormMedical.tabControlFormMedical_Selecting(System.Object,System.Int32)">
            <summary>If the LOINC table has not been imported, the Tobacco Use tab is disabled, but we want it to remain visible like the other EHR show
            feature enabled tabs.  But since the combo boxes etc. cannot be filled without the LOINC table, don't allow selecting the tab.</summary>
        </member>
        <member name="T:OpenDental.FormMedicationEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedicationEdit.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormMedicationEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedicationEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedicationEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMedicationEdit.IsGenericOnly">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMedicationEdit._stringArrayPatNameMeds">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMedicationEdit._stringArrayBrands">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormMedicationEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormMedications">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedications.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormMedications.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedications.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedications.IsSelectionMode">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMedications.SelectedMedicationNum">
            <summary>the number returned if using select mode.</summary>
        </member>
        <member name="M:OpenDental.FormMedications.#ctor">
            <summary>Set isAll to true to start in the All Medications tab, or false to start in the Meds In Use tab.</summary>
        </member>
        <member name="M:OpenDental.FormMedications.FormMedications_Shown(System.Object,System.EventArgs)">
            <summary>Forces cursor to start in the search textbox.</summary>
        </member>
        <member name="M:OpenDental.FormMedications.DownloadDefaultMedications">
            <summary>Attempts to download the default medication list from HQ.
            If there is an exception returns an empty list after showing the user an error prompt.</summary>
        </member>
        <member name="M:OpenDental.FormMedications.GetFilenameFromUser(System.Boolean)">
            <summary>When isImport is true, prompts users to select file and returns the full file path if OK clicked, otherwise an empty string.
            When isImport is false (export), prompts user to select a file destination if OK clicked, otherwise an empty string..</summary>
        </member>
        <member name="T:OpenDental.FormMedPat">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMedPat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedPat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedPat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedPat.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMedPat.IsNewMedOrder">
            <summary>Helps enforce the note and start date that must be present for a med order to be valid.</summary>
        </member>
        <member name="M:OpenDental.FormMedPat.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMessagingButSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMessagingButSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormMessagingButSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormMessagingButSetup.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormMessagingSetup">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMessagingSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMessagingSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormMessagingSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormMessagingSetup.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormMountainside">
            <summary> </summary>
        </member>
        <member name="M:OpenDental.FormMountainside.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormMountainside.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMountainside.IsNew">
            <summary>This Program link is new.</summary>
        </member>
        <member name="M:OpenDental.FormMountainside.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormMountDefEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMountDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMountDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormMountDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMountDefEdit._pointMouseDownOrig">
            <summary>The original point where the mouse was down.</summary>
        </member>
        <member name="F:OpenDental.FormMountDefEdit._pointItemOrig">
            <summary>If we are dragging, this is the original location of the item.</summary>
        </member>
        <member name="F:OpenDental.FormMountDefEdit._ratio">
            <summary>To shrink or enlarge the mount to make it fit in the space available.</summary>
        </member>
        <member name="F:OpenDental.FormMountDefEdit._rectangleBack">
            <summary>This is the entire area available for drawing.</summary>
        </member>
        <member name="F:OpenDental.FormMountDefEdit._rectangleMount">
            <summary>This is the outline of the mount.</summary>
        </member>
        <member name="F:OpenDental.FormMountDefEdit._selectedIndex">
            <summary>Within the list _listMountItemDefs. Completely unrelated to ItemOrders.</summary>
        </member>
        <member name="M:OpenDental.FormMountDefEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormMountDefEdit.HitTest(System.Drawing.Point)">
            <summary>Returns the index of the item within the list, or -1.</summary>
        </member>
        <member name="T:OpenDental.FormMountDefs">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMountDefs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMountDefs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormMountDefs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormMountDefs.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormNotePick">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormNotePick.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormNotePick.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormNotePick.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormNotePick.StringArrayNotes">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormNotePick.NoteSelected">
            <summary>Upon closing with OK, this will be the final note to save.</summary>
        </member>
        <member name="M:OpenDental.FormNotePick.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormOperatories">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormOperatories.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOperatories.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormOperatories.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOperatories._listOperatories">
            <summary>A list of all operatories used to sync at the end.</summary>
        </member>
        <member name="F:OpenDental.FormOperatories._listOperatoriesOld">
            <summary>Stale deep copy of _listOps to use with sync.</summary>
        </member>
        <member name="F:OpenDental.FormOperatories.ListAppointmentsConflicting">
            <summary>List of conflict appointments to show the user.
            Only used for the combine operatories tool</summary>
        </member>
        <member name="F:OpenDental.FormOperatories.ControlApptRef">
            <summary>This reference is passed in because it's needed for the "Update Provs on Future Appts" tool.</summary>
        </member>
        <member name="M:OpenDental.FormOperatories.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormOperatories.CanReorderOps(OpenDentBusiness.Operatory,OpenDentBusiness.Operatory)">
            <summary>Returns true if the two operatories can be reordered. Returns false and fills in the error string if they cannot.</summary>
        </member>
        <member name="M:OpenDental.FormOperatories.SwapGridMainLocations(System.Int32,System.Int32)">
            <summary>Swaps two rows in the grid for use with the Up and Down buttons.  Does not edit lists or do any calls to cache or DB to refresh the grid.</summary>
        </member>
        <member name="M:OpenDental.FormOperatories.ReorderAndSync">
            <summary>Syncs _listOps and _listOpsOld after correcting the order of _listOps.</summary>
        </member>
        <member name="T:OpenDental.FormOperatoryEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormOperatoryEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOperatoryEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormOperatoryEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOperatoryEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormOperatoryEdit._listDefsWSNPAOperatory">
            <summary>All of the Web Sched New Pat Appt appointment type defs that this operatory is associated to.</summary>
        </member>
        <member name="F:OpenDental.FormOperatoryEdit.ControlApptRef">
            <summary>This reference is passed in because it's needed for the "Update Provs on Future Appts" tool.</summary>
        </member>
        <member name="M:OpenDental.FormOperatoryEdit.#ctor(OpenDentBusiness.Operatory)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormOperatoryEdit.FillCombosProv">
            <summary>Fills combo provider based on which clinic is selected and attempts to preserve provider selection if any.</summary>
        </member>
        <member name="T:OpenDental.FormPatFieldCheckEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatFieldCheckEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldCheckEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldCheckEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatFieldCheckEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPatFieldCheckEdit.#ctor(OpenDentBusiness.PatField)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPatFieldDateEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatFieldDateEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldDateEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldDateEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatFieldDateEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPatFieldDateEdit.#ctor(OpenDentBusiness.PatField)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPatFieldDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatFieldDefEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPatFieldDefEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPatFieldDefEdit.UpdateItemOrder(System.Collections.Generic.List{OpenDentBusiness.PatFieldPickItem})">
            <summary>Updates ItemOrder for all PatFieldPickListItems in the list and updates db entry for every item in the list.
            Uses the list's order to set ItemOrder. Refreshes cache when done.</summary>
        </member>
        <member name="T:OpenDental.FormPatFieldDefs">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPatFieldDefs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldDefs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatFieldDefs._hasChanged">
            <summary>This is not for tracking the pref.</summary>
        </member>
        <member name="M:OpenDental.FormPatFieldDefs.#ctor(System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPatFieldEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatFieldEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatFieldEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPatFieldEdit.#ctor(OpenDentBusiness.PatField)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPatFieldPickEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldPickEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldPickEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldPickEdit.#ctor(OpenDentBusiness.PatField)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPath">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPath.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPath.IsStartingUp">
            <summary>If this is set to true before opening this form, then the program cannot find the AtoZ path and needs user input.</summary>
        </member>
        <member name="F:OpenDental.FormPath._hasDropboxLoaded">
            <summary>Set to true if the Dropbox API has been loaded already.</summary>
        </member>
        <member name="F:OpenDental.FormPath._hasSftpLoaded">
            <summary>Set to true if the Sftp stuff has been loaded already.</summary>
        </member>
        <member name="F:OpenDental.FormPath._dataStorageType">
            <summary>This is the database storage type that the user has chosen (or was pulled from the database.
            DO NOT change the value of this variable outside of SetRadioButtonChecked() or there is a chance for a stack overflow exception</summary>
        </member>
        <member name="M:OpenDental.FormPath.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPath.VerifySwitchingAwayFromDBStorage">
            <summary>Returns true if user really wants to continue or N/A. Verifies if there is RawBase64 data currently stored in the database. It will warn users that switching away means they are no longer able to access that data.</summary>
        </member>
        <member name="M:OpenDental.FormPath.ShowFileBrowserDialog">
            <summary>Tries to show the file browser dialog to the user.  Returns true if the user actually selected a path from the dialog.
            Returns false if the user cancels out.  Also, shows a warning message and returns false if an exception occurred.</summary>
        </member>
        <member name="M:OpenDental.FormPath.FixDirSeparators(System.String)">
            <summary>Returns the given path with the local OS path separators as necessary.</summary>
        </member>
        <member name="M:OpenDental.FormPath.IsPathInList(System.String,System.String)">
            <summary>Returns true if the given path is part of the imagePaths list, false otherwise.</summary>
        </member>
        <member name="M:OpenDental.FormPath.LoadDropboxSetup">
            <summary>Returns true if loading Dropbox settings was successful.  False is something went wrong.
            errorMsg will contain translated details about what went wrong in the case of a failure.</summary>
        </member>
        <member name="M:OpenDental.FormPath.LoadSftpSetup">
            <summary>Returns true if loading Dropbox settings was successful.  False is something went wrong.
            errorMsg will contain translated details about what went wrong in the case of a failure.</summary>
        </member>
        <member name="T:OpenDental.FormPayConnectSetup">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayConnectSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayConnectSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayConnectSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayConnectSetup._listUserClinicNums">
            <summary>Local cache of all of the clinic nums the current user has permission to access at the time the form loads.  Filled at the same time
            as comboClinic and is used to set programproperty.ClinicNum when saving.</summary>
        </member>
        <member name="F:OpenDental.FormPayConnectSetup._listProgramProperties">
            <summary>List of PayConnect program properties for all clinics.
            Includes properties with ClinicNum=0, the headquarters props or props not assigned to a clinic.</summary>
        </member>
        <member name="F:OpenDental.FormPayConnectSetup._indexClinicRevert">
            <summary>Used to revert the slected index in the clinic drop down box if the user tries to change clinics
            and the payment type has not been set.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnectSetup.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPayConnectSetup.SynchWithHQ">
            <summary>For each clinic, if the Username and Password are the same as the HQ (ClinicNum=0) Username and Password, update the clinic with the
            values in the text boxes.  Only modifies other clinics if _indexClinicRevert=0, meaning user just modified the HQ clinic credentials.</summary>
        </member>
        <member name="T:OpenDental.FormPayPeriodEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayPeriodEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPeriodEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPeriodEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayPeriodEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPayPeriodEdit._listPayPeriodsNonInserted">
            <summary>List of PayPeriods that have not been inserted into the database.</summary>
        </member>
        <member name="M:OpenDental.FormPayPeriodEdit.#ctor(OpenDentBusiness.PayPeriod,System.Collections.Generic.List{OpenDentBusiness.PayPeriod})">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPayPeriodManager.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPeriodManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPeriodManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPeriodManager.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPayPeriodManager.GetDateOfDay(System.DateTime,System.DayOfWeek)">
            <summary>Returns the DateTime of the first instance of DayOfWeek, given a specific start time.  It will not include the startDate as a result.</summary>
        </member>
        <member name="T:OpenDental.FormPayPlan">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPayPlan.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayPlan.TotalAmt">
            <summary>Only used for new payment plan.  Pass in the starting amount.  Usually the patient account balance.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlan._family">
            <summary>Family for the patient of this payplan.  Used to display insurance info.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlan._listInsPlans">
            <summary>Used to display insurance info.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlan._formPayPlanOptions">
            <summary>This form is reused as long as this parent form remains open.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlan._listPayPlanCharges">
            <summary>Cached list of PayPlanCharges.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlan.PatNumGoto">
            <summary>Go to the specified patnum.  Upon dialog close, if this number is not 0, then patients.Cur will be changed to this new patnum, and Account refreshed to the new patient.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlan.IsInsPayPlan">
            <summary>If true this plan tracks expected insurance payments. If false it tracks patient payments.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlan.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPayPlan._listAdjustments">
            <summary>List of Negative adjustments. Will be inserted into DB as negative adjustment. </summary>
        </member>
        <member name="F:OpenDental.FormPayPlan._listLogs">
            <summary>List of Audit Trail log messages to be inserted if changes are finalized.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.#ctor(OpenDentBusiness.PayPlan)">
            <summary>The supplied payment plan should already have been saved in the database.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.FillComboProv">
            <summary>Fills combo provider based on which clinic is selected and attempts to preserve provider selection if any.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.FillCharges">
            <summary>Called 5 times.  This also fills prov and clinic based on the first charge if not new.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.butAdd_Click(System.Object,System.EventArgs)">
            <summary>Adds a debit.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.CreateOrRecalculateScheduleCharges(System.Boolean)">
            <summary>Creates the amortization schedule. Uses the textfield term values and not the ones stored in the database.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.GetTermsFromUI">
            <summary>Creates helper object to store pay plan terms.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.PayPlanToSheet(OpenDentBusiness.PayPlan)">
            <summary>Creates a new sheet from a given Pay plan.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.GetPayPlanPDF(OpenDentBusiness.PayPlan)">
            <summary>Returns a PDF for the currently selected PaymentPlan and sets out PaymentPlan to selected PaymentPlan.
            If nothing is selected in gridPayPlans then returns null and out PaymentPlan is set to null.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.OpenUnlockCodeForPayPlan">
            <summary>Opens a FormMobileCode window with the currently selected PayPlan.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.PushSelectedPayPlanToEclipboard(OpenDentBusiness.MobileAppDevice)">
            <summary>Sends the current PayPlan to a given target mobile device.
            Shows a MsgBox when done or if error occurs.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.Save">
            <summary>Performs validation on payplan and then calls SaveData() to save payplan if the payplan was valid. Sets DialogResult to OK</summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.SaveData(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPayPlan.GetTotalNegAdjAmt">
            <summary>Keep a total of our negative adjustments for this payment plan.</summary>
        </member>
        <member name="T:OpenDental.FormPayPlanChargeEdit">
            <summary>Form that displays the editable fields of a payplan charge.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanChargeEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPayPlanChargeEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPayPlanChargeEdit._payPlanChargeCurOld">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPayPlanChargeEdit.PayPlanChargeCur">
            <summary>If the user deletes the PayPlanChargeCur, then it will be null when the form is closed.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanChargeEdit._dynamicPaymentPlanModuleData">
            <summary>Data object used to determine if charge edits are valid. Used in save logic.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanChargeEdit._payPlan">
            <summary>Used to check if there is an APR with the PayPlanCharge</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanChargeEdit.ListChangeLog">
            <summary>List of fields that were updated from the edit.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanChargeEdit.#ctor(OpenDentBusiness.PayPlanCharge,OpenDentBusiness.PayPlan,OpenDentBusiness.DynamicPaymentPlanModuleData)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPayPlanSelect">
            <summary>Lets the user choose which payment plan to attach a payment to if there are more than one available.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlanSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlanSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayPlanSelect._listPayPlansValid">
            <summary>A list of plans passed to this form which are to be displayed.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanSelect._doIncludeNone">
            <summary>Have the option to not select a payment plan.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanSelect.PayPlanNumSelected">
            <summary>The pk of the plan selected.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanSelect.#ctor(System.Collections.Generic.List{OpenDentBusiness.PayPlan},System.Boolean)">
            <summary>Optionally pass in the ability to not select a payment plan (include a None button)</summary>
        </member>
        <member name="T:OpenDental.FormPerio">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPerio.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPerio.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPerio.timerEClipCheck">
            <summary>This control is located behind gridP in the upper left corner.  It is used to allow text voice activated perio charting.  This also allows text to be pasted in the perio chart.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.VoiceController_SpeechRecognized(System.Object,OpenDental.UI.Voice.ODSpeechRecognizedEventArgs)">
            <summary>Performs the action for the recognized command.</summary>
        </member>
        <member name="F:OpenDental.FormPerio._listMissingTeeth">
            <summary>Gets a list of missing teeth as strings on load. Includes "1"-"32", and "A"-"Z".</summary>
        </member>
        <member name="F:OpenDental.FormPerio._listProcedures">
            <summary>This is not a list of valid procedures.  The only values to be trusted in this list are the ToothNum and CodeNum.  Never used.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.#ctor(OpenDentBusiness.Patient,System.Collections.Generic.List{OpenDentBusiness.Procedure})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPerio.CheckMobileActivity">
            <summary>Checks if perio is active on a MAD row with the current patient. If it is, locks editing.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.CreateNewPerioChart">
            <summary>Creates a new perio chart and marks any teeth missing as necessary.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.FillGrid(System.Boolean)">
            <summary>Usually set the selected index first</summary>
        </member>
        <member name="M:OpenDental.FormPerio.FirstEmptyPositionX(System.Int32,System.Int32)">
            <summary>Returns the first non-empty cell for the tooth. If all cells in the tooth are filled, returns the last cell of the tooth.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.FirstEmptyPositionX(WpfControls.UI.ColRow)">
            <summary>Returns the first non-empty cell for the ColRow passed in.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GetColRowForTooth(System.Int32,System.Boolean)">
            <summary>Returns a colrow for the tooth's passed in.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GetIndexCount(System.String,System.String,System.Int32)">
            <summary>Gets the index of the given target string, within the value string, where the count is the number of matched iterations. Returns -1 if there are no matches or less than count matches.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GetNextToothColRow(System.Int32,System.Boolean)">
            <summary>Gets the next tooth colrow.  Takes into account skipped teeth.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GetPreviousToothColRow(System.Int32,System.Boolean,System.Boolean)">
            <summary>Gets the previous tooth colrow. Takes into account skipped teeth.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GetSkippedTeeth">
            <summary>Returns a list of skipped teeth.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GetSurfaceColRowForTooth(System.Int32,System.Boolean,OpenDental.EnumPerioMMidD)">
            <summary>Returns a colrow for the tooth's surface passed in.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.NextEmptyColRowHelper(WpfControls.UI.ColRow,System.Boolean)">
            <summary>Uses the AdvanceCell method to figure out the.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.NumberClicked(System.Int32)">
            <summary>The only valid numbers are 0 through 9</summary>
        </member>
        <member name="M:OpenDental.FormPerio.RefreshListExams(System.Boolean)">
            <summary>After this method runs, the selected index is usually set.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.SetDefault(System.String)">
            <summary>Inserts a perio measure for each tooth using the PerioDefaultProbeDepths preference. Does not insert values for skipped teeth</summary>
        </member>
        <member name="M:OpenDental.FormPerio.SetEClipBoardEditing(System.Boolean)">
            <summary>Unique to when eClipboard is viewing / editing this patients perio exams. Starts the eClipboard timer check.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.SetLabelFwdReverse">
            <summary>Sets Forward/Reverse label in Current Direction groupbox based on expected direction from the path and the current direction</summary>
        </member>
        <member name="M:OpenDental.FormPerio.TryGetNextAvailableColRowForTooth(System.Int32,System.Boolean)">
            <summary>Gets the next available tooth(ColRow) if there is an empty cell. Returns a ColRow with value (-1,-1) if all cells are filled.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.TryGetNextEmptyColRow(WpfControls.UI.ColRow,System.Boolean)">
            <summary>Gets the next available colrow.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.FormPerio_Shown(System.Object,System.EventArgs)">
            <summary>Used to force focus to the hidden textbox when showing this form.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.butBolaGet_Click(System.Object,System.EventArgs)">
            <summary>When BolaAi is not enabled, this button shows under the listen button. When clicked it launches their website.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.butBolaLaunch_Click(System.Object,System.EventArgs)">
            <summary>When BolaAi is enabled, this button shows instead of the standard listen button. When clicked it launches their exe.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.textInputBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>Catches any non-alphanumeric keypresses so that they can be passed into the grid separately.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.textInputBox_Leave(System.Object,System.EventArgs)">
            <summary>This ensures that the textbox will always have focus when using FormPerio.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.textInputBox_TextChanged(System.Object,System.EventArgs)">
            <summary>Used to force buttons to be pressed as characters are typed/dictated/pasted into the textbox.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GetNextAvailableColRowForTooth(OpenDental.PerioAdvancePos,OpenDental.PerioAdvancePos,OpenDental.PerioAdvancePos)">
            <summary>Used for Voice Perio. Returns the next available ColRow for tooth if the current tooth passed in is empty. Checks the tooth's 3 positions to find out if the tooth is empty. Otherwise returns a ColRow with value (-1,-1) to indicate 'none'. This method should only be used if Auto Advance Sequence is Facials First.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GoToFurcation">
            <summary>Moves the cursor to the furcation row for the current tooth.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GoToGingivalMargin">
            <summary>Moves the cursor to the gingival margin row for the current tooth.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GoToMGJ">
            <summary>Moves the cursor to the muco gingival junction row for the current tooth.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GoToMobility">
            <summary>Moves the cursor to the mobility row for the current tooth.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GoToProbing">
            <summary>Moves the cursor to the probing row for the current tooth.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GoToSequenceType(OpenDentBusiness.PerioSequenceType)">
            <summary>Moves the cursor to the passed in SequenceType for the current tooth.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.GoToTooth(System.Int32,System.Boolean)">
            <summary>Used for Voice Perio. Goes to the first cell in the grid for this tooth.</summary>
            <param name="isFacial">When false, equivalent to lingual.</param>
        </member>
        <member name="M:OpenDental.FormPerio.GoToToothSurface(System.Int32,System.Boolean,OpenDental.EnumPerioMMidD)">
            <summary>Used for Voice Perio. Goes to the cell in the grid for the specified tooth and surface.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.ResumePath">
            <summary>Used for Voice Perio. Sets the cursor to the first available open perio slot. The path used in this method follows the autoadvance i.e. 1-16 F,16-1 L,32-17 F, and 17-32 L</summary>
        </member>
        <member name="M:OpenDental.FormPerio.SetBleedingFlagForSurface(OpenDental.EnumPerioMMidD,OpenDentBusiness.BleedingFlags,System.Boolean)">
            <summary>Used for Voice Perio. Sets bleeding flag on the specified surface for the current tooth. If the cursor is on a blank space and the previous tooth has probing entries, it will put the bleeding flag on the previous tooth.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.SetCurrentDirection">
            <summary>Used for Voice Perio. Sets the appropriate Current Direction radio button.</summary>
        </member>
        <member name="M:OpenDental.FormPerio.SkipTooth(System.Int32,System.Boolean)">
            <summary>Marks the tooth as skipped.</summary>
            <param name="doVerifyByVoice">If true, will verbally ask the user if they want to skip the tooth.</param>
            <returns>True if the user does choose to skip the tooth.</returns>
        </member>
        <member name="T:OpenDental.FormPerioEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormPerioEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPerioEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPerioEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormPerioEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPharmacies">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormPharmacies.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPharmacies.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPharmacies.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPharmacies.PharmacyNumSelected">
            <summary>Only used if IsSelectionMode.  On OK, contains selected pharmacyNum.  Can be 0.  Can also be set ahead of time externally.</summary>
        </member>
        <member name="M:OpenDental.FormPharmacies.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPharmacyEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPharmacyEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPharmacyEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPharmacyEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPharmacyEdit.PharmacyCur">
            <summary>Current pharmacy that is being edited.</summary>
        </member>
        <member name="M:OpenDental.FormPharmacyEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPlansForFamily">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormPlansForFamily.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPlansForFamily.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPlansForFamily.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPlansForFamily.FamilyCur">
            <summary>Set this externally.</summary>
        </member>
        <member name="M:OpenDental.FormPlansForFamily.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPopupDisplay">
            <summary>This control should not be resized, except by the user. Dentists can enter sensitive information in the area below what is normally shown.</summary>
        </member>
        <member name="F:OpenDental.FormPopupDisplay.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPopupDisplay.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPopupDisplay.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPopupDisplay.MinutesDisabled">
            <summary>Will be zero unless user successfully clicked a disable time interval.  Accepted range is 1 to 1440 (24hrs)</summary>
        </member>
        <member name="M:OpenDental.FormPopupDisplay.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPractice">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPractice.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPractice.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPrinterSetup">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPrinterSetup.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPrinterSetup.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPrntScrn">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPrntScrn.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPrntScrn.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormPrntScrn.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPrntScrn.PrintReport(System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormProcApptColorEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcApptColorEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcApptColorEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcApptColorEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcApptColorEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormProcApptColors">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcApptColors.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcApptColors.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcApptColors.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcApptColors.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormProcButtonEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProcButtonEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProcButtonEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProcButtonEdit._listAutoCodesShortDeep">
            <summary>Deep copy of all AutoCode items in the cache that are not hidden (short).</summary>
        </member>
        <member name="M:OpenDental.FormProcButtonEdit.#ctor(OpenDentBusiness.ProcButton)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormProcButtons">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProcButtons.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProcButtons._catSelected">
            <summary>defnum</summary>
        </member>
        <member name="F:OpenDental.FormProcButtons._procButtonArray">
            <summary>This list of displayed buttons for the selected cat.</summary>
        </member>
        <member name="M:OpenDental.FormProcButtons.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProcButtons.ResizeControls">
            <summary>Make the QuickButtonGrid exactly the same size as it will display in the chart module.</summary>
        </member>
        <member name="T:OpenDental.FormProcCodeEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProcCodeEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProcCodeEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProcCodeEdit.#ctor(OpenDentBusiness.ProcedureCode)">
            <summary>The procedure code must have already been inserted into the database.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodeEdit.FillNotes">
            <summary>Fills both the Default Completed Notes Grid and the Default TP Notes Grid simultaneously.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodeEdit.ValidateDiagnosticCodes">
            <summary>Validates that textDiagnosticCodes does not have more than 4 codes and shows a warning if any of the codes are not found in the database. Removes whitespace, extra commas, and blank codes from textDiagnosticCodes.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodeEdit.SecurityLogEntryHelper(System.String,System.String,System.String)">
            <summary>Returns a line that can be used in a security log entry if the entries are changed.</summary>
        </member>
        <member name="T:OpenDental.FormProcCodeNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProcCodeNew.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProcCodeNew.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProcCodeNew.GetCategoryIndex(System.String)">
            <summary>Returns the index of the category with the supplied name.  Zero if the name does not exist.</summary>
        </member>
        <member name="T:OpenDental.FormProcCodeNoteEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProcCodeNoteEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcCodeNoteEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcCodeNoteEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcCodeNoteEdit._isTp">
            <summary>Set to true to use the corresponding DefaultTPNote, otherwise uses the "complete" default note.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodeNoteEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormProcCodes">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProcCodes.CodeNumSelected">
            <summary>If IsSelectionMode=true and DialogResult=OK, then this will contain the selected CodeNum.</summary>
        </member>
        <member name="F:OpenDental.FormProcCodes._doSetInvalidProcCodes">
            <summary>This is just set once for the whole session.  It doesn't get toggled back to false.  So it only get acted upon when the form closes, sending a signal to other computers telling them to refresh their proc codes.</summary>
        </member>
        <member name="F:OpenDental.FormProcCodes._needsSynch">
            <summary>Once a synch is done, this will switch back to false.  This also triggers SaveLogs, which then clears _listSecurityLogs to prepare for more logs.</summary>
        </member>
        <member name="F:OpenDental.FormProcCodes.IsSelectionMode">
            <summary>Set to true externally in order to let user select one procedure code.</summary>
        </member>
        <member name="F:OpenDental.FormProcCodes._defArrayCat">
            <summary>The list of definitions that is currently showing in the category list.</summary>
        </member>
        <member name="F:OpenDental.FormProcCodes._isInCellLeave">
            <summary>Used to prevent recursive calls to the event handler gridMain_CellLeave().</summary>
        </member>
        <member name="F:OpenDental.FormProcCodes._listFees">
            <summary>List of all fees for all three selected fee schedules.  This includes all clinic and provider overrides, regardless of selected clinic and provider.  We could do three separate lists, but that doesn't save us much.  And it's common to use all three columns with the same feeschedule, which would make synching separate lists difficult. Gets synched to db every time selected feescheds change.  This keeps it snappy when entering a series of fees because there is no db write.</summary>
        </member>
        <member name="F:OpenDental.FormProcCodes._listFeesDb">
            <summary>The orginal list of fees used for synch.</summary>
        </member>
        <member name="F:OpenDental.FormProcCodes._listSecurityLogs">
            <summary> List should contain two logs per fee because we are inserting two security logs every time we update a fee.</summary>
        </member>
        <member name="F:OpenDental.FormProcCodes.ListProcedureCodesSelected">
            <summary>Contains all of the procedure codes that were selected if IsSelectionMode is true.
            If IsSelectionMode is true and this list is prefilled with procedure codes then the grid will preselect as many codes as possible.
            It is not guaranteed that all procedure codes will be selected due to filters.
            This list should only be read from externally after DialogResult.OK has been returned.</summary>
        </member>
        <member name="F:OpenDental.FormProcCodes.CanAllowMultipleSelections">
            <summary>Set to true when IsSelectionMode is true and the user should be able to select multiple procedure codes instead of just one.
            ListSelectedProcCodes will contain all of the procedure codes that the user selected.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.#ctor(System.Boolean)">
            <summary>When canShowHidden is true to the "Hidden" checkbox and "default" button are visible.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.FillComboBoxes">
            <summary>Called on Load and anytime the feeschedule list might have changed.  Also called when different fee schedule selected to handle global fee schedules and the enabling/disabling of prov and clinic selectors.  This does not make any calls to db, so should be fast.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.SynchAndFillListFees(System.Boolean)">
            <summary>The only reason we use this is to keep interface snappy when entering a series of fees in the grid.  So the moment the user stops doing that and switches to something else is when we take the time to synch the changes to the db and start over fresh the next time.  We also do that whenever the selected feesched is changed, when closing form, when double clicking a code, importing, etc.  Use this method liberally.  Run it first with includeSynch=true, then run it again after doing other things, just to make sure we have fresh data for the new situation.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.FillGrid">
            <summary>FillGrid does not go to the db for fees.  That's done separately when new feescheds are selected.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.GridCellUpdateAndSecurityCheck(OpenDental.UI.ODGridClickEventArgs)">
            <summary>Takes care of individual cell edits.  Calls FillGrid to refresh other columns using the same data.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.ImportProcCodes(System.String,System.Collections.Generic.List{OpenDentBusiness.ProcedureCode},System.String)">
            <summary>Can be called externally.  Surround with try catch.  Returns number of codes inserted. 
            Supply path to file to import or a list of procedure codes, or an xml string.  Make sure to set the other two values blank or null.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.comboFeeSched_SelectionChangeCommitted(System.Object,System.EventArgs)">
            <summary>For all three combo feescheds</summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.comboClinicProv_SelectionChangeCommitted(System.Object,System.EventArgs)">
            <summary>For all 6 clinic and provider combos</summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.GetProviderIndexFromPicker">
            <summary>Launches the Provider picker and lets the user pick a specific provider.
            Returns the index of the selected provider within the Provider Cache (short).  Returns -1 if the user cancels out of the window.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.GetClinicNumFromPicker(System.Collections.Generic.List{OpenDentBusiness.Clinic})">
            <summary>Launches the Clinics window and lets the user pick a specific clinic.
            Returns the index of the selected clinic within _arrayClinics.  Returns -1 if the user cancels out of the window.</summary>
        </member>
        <member name="M:OpenDental.FormProcCodes.GetFeeSchedIndexFromPicker">
            <summary>Launches the Fee Schedules window and lets the user pick a specific schedule.
            Returns the index of the selected schedule within _listFeeScheds.  Returns -1 if the user cancels out of the window.</summary>
        </member>
        <member name="T:OpenDental.FormProcGroup">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProcGroup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcGroup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcGroup._isStartingUp">
            <summary>This keeps the noteChanged event from erasing the signature when first loading.</summary>
        </member>
        <member name="F:OpenDental.FormProcGroup.IsOpen">
            <summary>Used when making an Rx.  Only used when the Rx button is pushed when Orion is enabled.</summary>
        </member>
        <member name="F:OpenDental.FormProcGroup.RxNum">
            <summary>Used when making an Rx.  Only used when the Rx button is pushed when Orion is enabled.</summary>
        </member>
        <member name="F:OpenDental.FormProcGroup._userod">
            <summary>Users can temporarily log in on this form.  Defaults to Security.CurUser.</summary>
        </member>
        <member name="F:OpenDental.FormProcGroup._hasUserChanged">
            <summary>True if the user clicked the Change User button.</summary>
        </member>
        <member name="F:OpenDental.FormProcGroup._attachedToCompletedProc">
            <summary>True if group note is attached to at least one completed proc.  Used for determining which permission to use.</summary>
        </member>
        <member name="M:OpenDental.FormProcGroup.FormProcGroup_Load(System.Object,System.EventArgs)">
            <summary>Inserts are no longer done within this dialog, but must be done ahead of time from outside.You must specify a procedure to edit, and only the changes that are made in this dialog get saved.  Only used when double click in Account, Chart, TP, and in ContrChart.AddProcedure().  The procedure may be deleted if new, and user hits Cancel.</summary>
        </member>
        <member name="M:OpenDental.FormProcGroup.butLock_Click(System.Object,System.EventArgs)">
            <summary>This button is only visible if 1. Pref ProcLockingIsAllowed is true, 2. Proc isn't already locked, 3. Proc status is C.</summary>
        </member>
        <member name="M:OpenDental.FormProcGroup.butInvalidate_Click(System.Object,System.EventArgs)">
            <summary>This button is only visible when proc IsLocked.</summary>
        </member>
        <member name="M:OpenDental.FormProcGroup.butAppend_Click(System.Object,System.EventArgs)">
            <summary>This button is only visible when proc IsLocked.</summary>
        </member>
        <member name="T:OpenDental.FormProcTools">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcTools.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcTools.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcTools.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcTools._listProcedureCodes">
            <summary>The actual list of ADA codes as published by the ADA.  Only available on our compiled releases.  There is no other way to get this info.  For Canada, list will get filled on Run click by downloading code list from our website.</summary>
        </member>
        <member name="M:OpenDental.FormProcTools.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProcTools.CanadaDownloadProcedureCodes">
            <summary>Downloads Canadian procedure codes from our website and updates _codeList accordingly.</summary>
        </member>
        <member name="T:OpenDental.FormProcTPEdit">
            <summary>description for FormBasicTemplate.</summary>
        </member>
        <member name="F:OpenDental.FormProcTPEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcTPEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcTPEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcTPEdit.#ctor(OpenDentBusiness.ProcTP,System.DateTime,System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormProgramLinkEdit">
            <summary> </summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProgramLinkEdit.IsNew">
            <summary>This Program link is new.</summary>
        </member>
        <member name="F:OpenDental.FormProgramLinkEdit.AllowToolbarChanges">
            <summary>Set to false if we do not want to allow assigning program link to toolbars.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkEdit.SetAdvertising">
            <summary>Handles both visibility and checking of checkHideButtons.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkEdit.HideClinicControls(System.Boolean)">
            <summary>This method hides (Visible=false) controls when the Clinics are turned off.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkEdit.ShowPLButHiddenLabel">
            <summary>If Clinics are enabled, and the Program Link button is hidden for at least one clinic, display the warning label 
            labelClinicStateWarning.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkEdit.DisableUIElementsBasedOnClinicRestriction">
            <summary>If Clinics are enabled, and the user is clinic restricted, disable certain UI elements and turn on the warning that the user is 
            restricted.  Any ProgramLink settings which would affect clinics to which the user does not have access are disabled.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkEdit.gridMain_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Chooses which type of form to open based on current program and selected property.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkEdit.ShowFormProgramProperty(OpenDentBusiness.ProgramProperty)">
            <summary>Opens a form where the user can type in their selection for a program poperty.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkEdit.ShowComboBoxForProgramProperty(OpenDentBusiness.ProgramProperty,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
            <summary>Opens a form where the user can select an option from a combo box for a program poperty. listValuesForDb and listForDisplays should have the same number of items.</summary>
        </member>
        <member name="T:OpenDental.FormProgramLinks">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProgramLinks.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProgramLinks.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormProgramProperty">
            <summary>/// </summary>
        </member>
        <member name="F:OpenDental.FormProgramProperty.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProgramProperty.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormProgramProperty.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProgramProperty._isPassword">
            <summary>If true, the program property value will be decrypted when displayed to the user and encrypted when saved to the database.///</summary>
        </member>
        <member name="M:OpenDental.FormProgramProperty.#ctor(System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormProvEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProvEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProvEdit.ProviderIdentArray">
            <summary>Provider Identifiers showing in the list for this provider.</summary>
        </member>
        <member name="F:OpenDental.FormProvEdit._listProviderClinicLinks">
            <summary>The clinics this provider is linked to. May include clinics the user does not have access to.</summary>
        </member>
        <member name="F:OpenDental.FormProvEdit._listClinicsForUser">
            <summary>The clinics this user has access to.</summary>
        </member>
        <member name="F:OpenDental.FormProvEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProvEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormProviderSetup">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormProviderSetup.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProviderSetup._hasChanged">
            <summary>Indicates that something about the providers has changed and needs to send out an invalid signal to the other workstations.</summary>
        </member>
        <member name="F:OpenDental.FormProviderSetup._provNumMoveTo">
            <summary>Set when prov picker button is used.  textMoveTo shows this prov in human readable format.</summary>
        </member>
        <member name="F:OpenDental.FormProviderSetup._listProviders">
            <summary>A stale copy of all providers.  Gets a lazy update whenever needed (e.g. after ProvEdit window closes with changes)/</summary>
        </member>
        <member name="M:OpenDental.FormProviderSetup.#ctor">
            <summary>Not used for selection.  Use FormProviderPick or FormProviderMultiPick for that.</summary>
        </member>
        <member name="M:OpenDental.FormProviderSetup.FormProviderSetup_Shown(System.Object,System.EventArgs)">
            <summary>There is a bug in ODProgress.cs that forces windows that use a progress bar on load to go behind other applications. 
            This is a temporary workaround until we decide how to address the issue.</summary>
        </member>
        <member name="M:OpenDental.FormProviderSetup.RefreshTable(System.Int32)">
            <summary>Refreshed the table that is showing in the grid.  Also corrects the item order of the provider table.</summary>
        </member>
        <member name="M:OpenDental.FormProviderSetup.butUp_Click(System.Object,System.EventArgs)">
            <summary>Won't be visible if using Dental Schools.  So list will be unfiltered and ItemOrders won't get messed up.</summary>
        </member>
        <member name="M:OpenDental.FormProviderSetup.butDown_Click(System.Object,System.EventArgs)">
            <summary>Won't be visible if using Dental Schools.  So list will be unfiltered and ItemOrders won't get messed up.</summary>
        </member>
        <member name="M:OpenDental.FormProviderSetup.butMovePri_Click(System.Object,System.EventArgs)">
            <summary>Not possible if no security admin or no PatPriProvEdit permission.</summary>
        </member>
        <member name="M:OpenDental.FormProviderSetup.butMoveSec_Click(System.Object,System.EventArgs)">
            <summary>Not possible if no security admin.</summary>
        </member>
        <member name="M:OpenDental.FormProviderSetup.butCreateUsers_Click(System.Object,System.EventArgs)">
            <summary>Not possible if no security admin.</summary>
        </member>
        <member name="T:OpenDental.FormQueryEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormQueryEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormQueryEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormQueryEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormQueryFavorites">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormQueryFavorites.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormQueryFavorites.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormQueryFavorites.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormQueryFavorites.RefreshQueryCur">
            <summary>Refreshes UserQueryCur and fills the textbox.</summary>
        </member>
        <member name="T:OpenDental.FormQuestionDefEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormQuestionDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormQuestionDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormQuestionDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormQuestionDefEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormQuestionDefEdit.#ctor(OpenDentBusiness.QuestionDef)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormQuestionDefs">
            <summary>
            </summary>
        </member>
        <member name="M:OpenDental.FormQuestionDefs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormQuestionDefs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormQuestionDefs.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRecallEdit">
            <summary>Summary description for FormRecallEdit.</summary>
        </member>
        <member name="F:OpenDental.FormRecallEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRecallEdit.RecallCur">
            <summary>The recall object to edit.</summary>
        </member>
        <member name="F:OpenDental.FormRecallEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRecallEdit.#ctor">
            <summary>Don't forget to set the RecallCur before opening this form.</summary>
        </member>
        <member name="T:OpenDental.FormRecallSetup">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRecallSetup.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRecallSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallSetup.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRecallSetup.FillManualRecall">
            <summary>Called on load to initially load the recall window with values from the database.  Calls FillGrid at the end.</summary>
        </member>
        <member name="M:OpenDental.FormRecallSetup.SetLanguageSelected">
            <summary>Updates _languageSelected to the currently selected language in comboLanguage. Mainly used to avoid doing repetitive operations on comboLanguage.</summary>
        </member>
        <member name="M:OpenDental.FormRecallSetup.GetPrefTranslation(OpenDentBusiness.PrefName)">
            <summary>Returns the preference value directly if practice's language is selected or the translation from LanguagePat if an alternate language is selected.</summary>
        </member>
        <member name="M:OpenDental.FormRecallSetup.UpsertPrefTranslation(OpenDentBusiness.PrefName,System.String)">
            <summary>Updates the preference value directly if practice's language is selected. If an alternate language is selected, a translation in LanguagePat is either updated if it exists or created if it doesn't yet exist. Updates cache</summary>
        </member>
        <member name="T:OpenDental.FormRecallTypeEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormRecallTypeEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallTypeEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallTypeEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallTypeEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRecallTypes">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormRecallTypes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallTypes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallTypes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallTypes.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormReconcileEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormReconcileEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReconcileEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormReconcileEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReconcileEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormReconcileEdit.#ctor(OpenDentBusiness.Reconcile)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormReconcileEdit.SaveList">
            <summary>Saves all changes to JournalList to database.  Can only be called once when closing form.</summary>
        </member>
        <member name="T:OpenDental.FormReconciles">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormReconciles.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReconciles.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormReconciles.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormReconciles.#ctor(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormReconciles.butAdd_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRegistrationKey.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRegistrationKey.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRegistrationKey.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRegistrationKey.#ctor">
            <summary>Set NeedsSignature to true if the license agreements need to be signed.</summary>
        </member>
        <member name="M:OpenDental.FormRegistrationKey.FillListBoxRegistration">
            <summary>Fills the listbox with licenses and the license text as a tag. New Licenses needed to be added in FormLicense.cs as well.</summary>
        </member>
        <member name="M:OpenDental.FormRegistrationKey.ValidateKey(System.String)">
            <summary>If using the foreign CDT.dll, it always returns true (valid), regardless of whether the box is blank or malformed.</summary>
        </member>
        <member name="M:OpenDental.FormRegistrationKey.SignLicenseAgreement(System.String)">
            <summary>Creates an obfuscated signature when agreeing to the listed licenses. This is saved locally and sent to BugsHQ database. If send attempt is unsuccessful, 
            FormOpenDental will handle subsequent attempts on load. </summary>
        </member>
        <member name="T:OpenDental.FormRepeatChargeEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormRepeatChargeEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargeEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargeEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRepeatChargeEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRepeatChargeEdit._eServiceCode">
            <summary>The eService that this procedure is associated to if it associated to one.</summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargeEdit.#ctor(OpenDentBusiness.RepeatCharge)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargeEdit.SetFormReadOnly(System.Windows.Forms.Control,System.Windows.Forms.Control[])">
            <summary>Recursively disables all controls for the control passed in by looping through any sub controls and disabling them.</summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargeEdit.AddProcedureToCC">
            <summary>Adds the procedure code of the repeating charge to a credit card on the patient's account if the user okays it.</summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargeEdit.butMoveTo_Click(System.Object,System.EventArgs)">
            <summary>This button is only visible internally and for other distributors.</summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargeEdit.UpdateRepeatCharge(OpenDentBusiness.RepeatCharge)">
            <summary>Updates the repeatCharge with the values entered on the form.</summary>
        </member>
        <member name="T:OpenDental.FormRepeatChargesUpdate">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormRepeatChargesUpdate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargesUpdate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargesUpdate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargesUpdate.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargesUpdate.RunRepeatingChargesForUnitTests(System.DateTime)">
            <summary>Do not use this method in release code. This is only to be used for Unit Tests 53-56.</summary>
        </member>
        <member name="M:OpenDental.FormRepeatChargesUpdate.CheckBeginDateTime">
            <summary>Checks if Repeating Charges are already running on another workstation or by the OpenDental Service.  If less than 24 hours have 
            passed since the tool was started, user will be blocked from running Repeating Charges.  Otherwise, SecurityAdmin users can restart the tool.
            </summary>
        </member>
        <member name="T:OpenDental.FormReportsMore">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormReportsMore.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReportsMore.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormReportsMore.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReportsMore.ReportNonModalSelection_">
            <summary>After this form closes, this value is checked to see if any non-modal dialog boxes are needed.</summary>
        </member>
        <member name="F:OpenDental.FormReportsMore.DateSelected">
            <summary>The Date currently selected on the Appointment Module.</summary>
        </member>
        <member name="M:OpenDental.FormReportsMore.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormReportsMore.FillLists">
            <summary>Takes all non-hidden display reports and displays them in their various listboxes.  
            Hides listboxes that have no display reports.</summary>
        </member>
        <member name="M:OpenDental.FormReportsMore.UsingArizonaPrimaryCare">
            <summary>Returns true if all of the required patient fields exist which are necessary to run the Arizona Primary Care reports.
            Otherwise, false is returned.</summary>
        </member>
        <member name="M:OpenDental.FormReportsMore.OpenReportLocalHelper(OpenDentBusiness.DisplayReport,System.Collections.Generic.List{OpenDentBusiness.GroupPermission},System.Boolean)">
            <summary>Called from this form to do OpenReportHelper(...) logic and then close when needed.</summary>
        </member>
        <member name="M:OpenDental.FormReportsMore.OpenReportHelper(OpenDentBusiness.DisplayReport,System.DateTime,System.Collections.Generic.List{OpenDentBusiness.GroupPermission},System.Boolean)">
            <summary>Handles form and logic for most given displayReports.
            Returns ReportNonModalSelection.None if modal report is provided.
            If non-modal report is provided returns valid(not none) RpNonModalSelection to be handled later, See FormOpenDental.SpecialReportSelectionHelper(...)</summary>
        </member>
        <member name="T:OpenDental.FormReqAppt">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormReqAppt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqAppt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqAppt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReqAppt._listReqStudentsRemoved">
            <summary>The ReqStudent items that the user has removed from this appointment.</summary>
        </member>
        <member name="M:OpenDental.FormReqAppt.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormReqAppt.FillAttached">
            <summary>All alterations to TableAttached should have been made</summary>
        </member>
        <member name="T:OpenDental.FormReqNeededEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormReqNeededEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqNeededEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqNeededEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReqNeededEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormReqNeededEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormReqNeededs">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormReqNeededs.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormReqNeededs._listReqNeededsOld">
            <summary>Stale deep copy of _listReqsAll to use with sync.</summary>
        </member>
        <member name="M:OpenDental.FormReqNeededs.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormReqStudentEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormReqStudentEdit.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormReqStudentEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqStudentEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqStudentEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormReqStudentOne">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormReqStudentOne.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqStudentOne.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqStudentOne.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqStudentOne.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormReqStudentsMany">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormReqStudentsMany.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqStudentsMany.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqStudentsMany.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqStudentsMany.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRxDefEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRxDefEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRxDefEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRxDefEdit.#ctor(OpenDentBusiness.RxDef)">
            <summary>Must have already saved it to db so that we have a RxDefNum to work with.</summary>
        </member>
        <member name="T:OpenDental.FormRxEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRxEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRxEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRxEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRxEdit._sheet">
            <summary>If the Rx has already been printed, this will contain the archived sheet. The print button will be not visible, and the view button will be visible.</summary>
        </member>
        <member name="M:OpenDental.FormRxEdit.#ctor(OpenDentBusiness.Patient,OpenDentBusiness.RxPat)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRxEdit.FillComboProvNum">
            <summary>Fill the provider combobox with items depending on the clinic selected</summary>
        </member>
        <member name="M:OpenDental.FormRxEdit.SaveRx">
            <summary>Attempts to save, returning true if successful.</summary>
        </member>
        <member name="M:OpenDental.FormRxEdit.PrintRx(System.Boolean)">
            <summary>Prints the prescription.  Returns true if printing was successful.  Otherwise; displays an error message and returns false.</summary>
        </member>
        <member name="M:OpenDental.FormRxEdit.FormSheetFillEdit_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>Event handler for closing FormSheetFillEdit when it is non-modal.</summary>
        </member>
        <member name="T:OpenDental.FormRxSelect">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRxSelect.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRxSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRxSelect._arrayRxDefs">
            <summary>A list of all RxDefs.  Filled on load and on butRefresh click.</summary>
        </member>
        <member name="F:OpenDental.FormRxSelect.MedOrderNum">
            <summary>This is set for any medical orders that are selected.</summary>
        </member>
        <member name="M:OpenDental.FormRxSelect.#ctor(OpenDentBusiness.Patient)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormRxSetup">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRxSetup.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRxSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRxSetup.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormSchedule">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormSchedule.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSchedule.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormSchedule.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSchedule._hasProvsChanged">
            <summary>This tracks whether the provList or empList has been click on since the last refresh.  
            Forces user to refresh before deleting or pasting so that the list exactly matches the grid.</summary>
        </member>
        <member name="F:OpenDental.FormSchedule._formScheduleMode">
            <summary>By default is FormScheduleMode.SetupSchedule.
            If user does not have Schedule permission then will be in FormScheduleMode.ViewSchedule.</summary>
        </member>
        <member name="F:OpenDental.FormSchedule._dateFromDate">
            <summary>Keeps track of the last time the "From Date" was set via the fill grid.
            Used to determine if the user has changed the date since last fill grid.</summary>
        </member>
        <member name="F:OpenDental.FormSchedule._dateToDate">
            <summary>Keeps track of the last time the "To Date" was set via the fill grid.
            Used to determine if the user has changed the date since last fill grid.</summary>
        </member>
        <member name="M:OpenDental.FormSchedule.#ctor(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSchedule.FillEmployeesAndProviders">
            <summary>Fills the employee box based on what clinic is selected.  Set selectAll to true to have all employees in the list box selected by default.</summary>
        </member>
        <member name="M:OpenDental.FormSchedule.ValidateInputs(System.Boolean)">
            <summary>Returns true if date text boxes have no errors and the emp and prov lists don't have 'none' selected with other emps/provs.
            Set isQuiet to true to suppress the message box with the warning.</summary>
        </member>
        <member name="M:OpenDental.FormSchedule.GetSelectedProvidersEmployeesAndClinic(System.Collections.Generic.List{System.Int64}@,System.Collections.Generic.List{System.Int64}@)">
            <summary>Helper method because this exact code happens several times in this form.  Returns selected providers, employees, and clinic to the variables supplied.</summary>
        </member>
        <member name="M:OpenDental.FormSchedule.listBox_DoubleClick(System.Object,System.EventArgs)">
            <summary>Double click on listBoxProvs or listBoxEmps triggers a refresh</summary>
        </member>
        <member name="M:OpenDental.FormSchedule.FormSchedule_Resize(System.Object,System.EventArgs)">
            <summary>Fires as resizing is happening.</summary>
        </member>
        <member name="M:OpenDental.FormSchedule.FormSchedule_ResizeBegin(System.Object,System.EventArgs)">
            <summary>Fires when manual resizing begins.</summary>
        </member>
        <member name="M:OpenDental.FormSchedule.FormSchedule_ResizeEnd(System.Object,System.EventArgs)">
            <summary>Fires when resizing is complete, except when changing window state. I.e. this is not fired when the window is maximized or minimized.</summary>
        </member>
        <member name="M:OpenDental.FormSchedule.CalculateNextDay(System.DateTime)">
            <summary>Returns the number of days to get to the next day based on the week filter view selection.</summary>
        </member>
        <member name="M:OpenDental.FormSchedule.GetHolidaySchedules(System.DateTime,System.DateTime)">
            <summary>Retrieves all holiday schedules within the selected paste date range and selected Clinic.</summary>
        </member>
        <member name="M:OpenDental.FormSchedule.FilterScheduleList(System.Collections.Generic.List{OpenDentBusiness.Schedule},System.Boolean)">
            <summary>This will filter any days from the passed in schedule list. This includes days that are not shown in the week filter view.
            For example, weekends shouldn't be included in Work Week view. And all schedules on a holiday if passed in true.</summary>
        </member>
        <member name="T:OpenDental.FormScheduleBlockEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScheduleBlockEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScheduleBlockEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormScheduleBlockEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScheduleBlockEdit.#ctor(OpenDentBusiness.Schedule,System.Int64,System.Collections.Generic.List{OpenDentBusiness.Def})">
            <summary>Setting clinicNum to 0 will show all operatories, otherwise only operatories for the clinic passed in will show.  
            If a list of defs is passed in it will fill the blockout type select box.  If no list is passed in, it will show all defs.</summary>
        </member>
        <member name="T:OpenDental.FormScheduleDayEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScheduleDayEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScheduleDayEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormScheduleDayEdit._listSchedules">
            <summary>Working copy of schedule entries.</summary>
        </member>
        <member name="F:OpenDental.FormScheduleDayEdit._listSchedulesOld">
            <summary>Stale copy of schedule entries.</summary>
        </member>
        <member name="F:OpenDental.FormScheduleDayEdit._listEmployeesSort">
            <summary>Only used in schedule sorting. Greatly increases speed of large databases.</summary>
        </member>
        <member name="F:OpenDental.FormScheduleDayEdit._listProvidersSort">
            <summary>Only used in schedule sorting. Greatly increases speed of large databases.</summary>
        </member>
        <member name="F:OpenDental.FormScheduleDayEdit.GotoScheduleOnClose">
            <summary>Set by butOkSchedule only.</summary>
        </member>
        <member name="F:OpenDental.FormScheduleDayEdit._isFromSchedule">
            <summary>True if the called from FromSchedule, else False. </summary>
        </member>
        <member name="F:OpenDental.FormScheduleDayEdit._provAbbrFilter">
            <summary>The provider that was selected in FormSchedule. Will be blank if no provider or multiple providers were selected. </summary>
        </member>
        <member name="F:OpenDental.FormScheduleDayEdit._employeeNameFilter">
            <summary>The employee that was selected in FormSchedule. Will be blank if no employee or multiple employees were selected. </summary>
        </member>
        <member name="F:OpenDental.FormScheduleDayEdit._clinicNumInitial">
            <summary>Only used once, on startup.</summary>
        </member>
        <member name="M:OpenDental.FormScheduleDayEdit.#ctor(System.DateTime)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScheduleDayEdit.#ctor(System.DateTime,System.Int64,System.String,System.String,System.Boolean)">
            <summary>When clinics are enabled, this will filter the employee list box by the clinic passed in.  Pass clinicNum 0 to only show employees not assigned to a clinic.</summary>
        </member>
        <member name="M:OpenDental.FormScheduleDayEdit.ValidateLists">
            <summary>Returns true if date text boxes have no errors and the emp and prov lists don't have 'none' selected with other emps/provs.
            Set isQuiet to true to suppress the message box with the warning.</summary>
        </member>
        <member name="T:OpenDental.FormScheduleEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScheduleEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScheduleEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormScheduleEdit.ClinicNum">
            <summary>Filters the list of operatories available to the clinic passed in.  Set to 0 to show all operatories.  Also the clinic selected by
            default for holidays and provider notes.</summary>
        </member>
        <member name="F:OpenDental.FormScheduleEdit._listOperatories">
            <summary>All ops if clinics not enabled, otherwise all ops for ClinicNum.</summary>
        </member>
        <member name="F:OpenDental.FormScheduleEdit.ListSchedules">
            <summary>List of schedules for the day set from FormScheduleDayEdit filled with the filtered list of schedules for the day.
            Used to ensure there is only one holiday schedule item per day/clinic, since this list has not been synced to the db yet.</summary>
        </member>
        <member name="M:OpenDental.FormScheduleEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormSchoolClassEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormSchoolClassEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSchoolClassEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormSchoolClassEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSchoolClassEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSchoolClassEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormSchoolClasses">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSchoolClasses.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSchoolClasses.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormSchoolCourseEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormSchoolCourseEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSchoolCourseEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormSchoolCourseEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSchoolCourseEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSchoolCourseEdit.#ctor(OpenDentBusiness.SchoolCourse)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormSchoolCourses">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSchoolCourses.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSchoolCourses.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormScreenEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormScreenEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormScreenEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormScreenEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormScreenEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScreenEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScreenEdit.checkBox_Click(System.Object,System.EventArgs)">
            <summary>Used by all 6 checkboxes to customize order of 3-state checking.</summary>
        </member>
        <member name="T:OpenDental.FormScreenGroupEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="M:OpenDental.FormScreenGroupEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormScreenGroupEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormScreenGroupEdit._listScreenPatsOld">
            <summary>Stale deep copy of _listScreenPats to use with sync.</summary>
        </member>
        <member name="M:OpenDental.FormScreenGroupEdit.#ctor(OpenDentBusiness.ScreenGroup)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScreenGroupEdit.AddAnonymousScreens">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScreenGroupEdit.AddAnonymousScreensForSheets">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormScreenGroups">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormScreenGroups.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormScreenGroups.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormScreenGroups.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormSecurityCentralUserEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSecurityCentralUserEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSecurityCentralUserEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormLateCharges">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.FormLateCharges_Load(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.FormLateCharges_Shown(System.Object,System.EventArgs)">
            <summary>The following logic was moved into a Shown method, rather than a Load method, because the progress bar causes the window to pop behind FormOpenDental when in Load.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.RunAgingEnterprise(System.Boolean)">
            <summary>Runs enterprise aging. Returns false if there are any errors while running aging. Changes to this method will also need to be made to 
            OpenDentalService.ProcessStatements.RunAgingEnterprise().</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.AreLateChargeSettingsValid">
            <summary>Checks validity of the controls in the Late charge settings group box.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.AreRequiredFieldsBlank">
            <summary>All controls in the Late charge settings groupbox and the Date of new charges must be filled before running.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.HasErrors">
            <summary>Checks the validity of all fields required for running late charges.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.RoundDoubleFields">
            <summary>Only call after AreLateChargeSettingsValid() returns false. Rounds all double fields to two decimal places.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.butSaveDefaults_Click(System.Object,System.EventArgs)">
            <summary>Saves preferences for all of the fields in the Late charge settings groupbox.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.GetProvNumForLateCharge(System.Int64)">
            <summary>Returns the Specific Provider if one is set, otherwise returns priProvNum.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.CalculateLateChargeAmount(System.Decimal)">
            <summary>Determines if we should use the percentage of the statement balance, the min charge, or the max charge.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.CreateLateCharges(System.Collections.Generic.List{OpenDentBusiness.StatementData},System.DateTime,System.DateTime)">
            <summary>Iterates over statement data, making a late charge for each statement that has a remaining balance. Avoids double charging for production items that are on multiple statements.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.CalcStatementBalanceRemaining(OpenDentBusiness.StatementData,System.Collections.Generic.List{OpenDentBusiness.FamilyProdBalances},System.Collections.Generic.List{System.Int64}@,System.Collections.Generic.List{System.Int64}@,System.Collections.Generic.List{System.Int64}@)">
            <summary>Helper method that calculates the remaining balance for a statement.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.FindAndRemoveStatementProdBalance(OpenDentBusiness.StatementProd,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{OpenDentBusiness.FamilyProdBalances})">
            <summary>Helper method finds the balance of a specific production item and removes it from the FamilyProdBalances so that we don't make a late charge for it twice.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.radioPatPriProv_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.radioSpecificProv_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.butUndo_Click(System.Object,System.EventArgs)">
            <summary>Deletes the adjustments for late charges on the last date they were run. It is possible to miss some of the adjustments if the user has manually changed the date of late charge adjustments. Runs aging after undoing charges.</summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.butRun_Click(System.Object,System.EventArgs)">
            <summary>Gets statement data and creates late charge adjustments for statements that have a remaining balance. Charges are applied to the family guarantor. Runs aging after creating charges.</summary>
        </member>
        <member name="F:OpenDental.FormLateCharges.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLateCharges.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormLateCharges.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCertEmployee.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCertEmployee.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCertEmployee.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCertificationEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCertificationEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCertificationEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCertificationSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCertificationSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCertificationSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCertifications._listCerts">
            <summary>List of all certs, includes hidden.</summary>
        </member>
        <member name="F:OpenDental.FormCertifications._listDefs">
            <summary>All non-hidden definitions related to DefCat.CertCategories.</summary>
        </member>
        <member name="M:OpenDental.FormCertifications.GetCertsForCategories">
            <summary>Returns a list of certs that correspond to the selected CertCategories.</summary>
        </member>
        <member name="F:OpenDental.FormCertifications.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCertifications.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCertifications.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDiscountPlanSubEdit.DiscountPlanSubCur">
            <summary>The discount sub being edited. Will be null when dropped.</summary>
        </member>
        <member name="F:OpenDental.FormDiscountPlanSubEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDiscountPlanSubEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDiscountPlanSubEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailHostingAddressVerification.GetVerifiedAddresses(System.Int64)">
            <summary>Gets the current list of email addresses that are verified with EmailHosting to be used to send emails.</summary>
        </member>
        <member name="M:OpenDental.FormEmailHostingAddressVerification.LoadIdentities(System.Boolean,System.Int64[])">
            <summary>Loads verified Identities from the EmailHosting api, then fills the grid for the selected clinic.  Tracks any errors that occur 
            during load.</summary>
        </member>
        <member name="F:OpenDental.FormEmailHostingAddressVerification.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailHostingAddressVerification.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEmailHostingAddressVerification.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormSecurityLock">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormSecurityLock.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSecurityLock.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormSecurityLock.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormSecurityLock.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormSheetDefs">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormSheetDefs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetDefs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetDefs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetDefs._listSheetTypeEnumsFilter">
            <summary>The SheetTypeEnum filter when the form is loaded for both grids.
            When the list is empty, logical equates to 'All'.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefs.#ctor(OpenDentBusiness.SheetTypeEnum[])">
            <summary>Set sheetTypeFilter to filter grids to specific set of SheetTypeEnums.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefs.FillGrid2(System.Int64)">
            <summary>Fills the Custom sheetDef grid. Set selectedSheetDefNum to also select a row.</summary>
        </member>
        <member name="T:OpenDental.FormSigButDefEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormSigButDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSigButDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormSigButDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormSigElementDefEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormSigElementDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSigElementDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormSigElementDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSigElementDefEdit.SigElementDefCur">
            <summary>Required to be set before opening this form.</summary>
        </member>
        <member name="M:OpenDental.FormSigElementDefEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormStateAbbrs">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormStateAbbrs.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormStateAbbrs.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormStatementOptions">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormStatementOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormStatementOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormStatementOptions.ShowBillTransSinceZero">
            <summary>Tracks the state of this setting when it differs from the default.</summary>
        </member>
        <member name="F:OpenDental.FormStatementOptions._isStatementNew">
            <summary>This is true if on load the single statement IsNew.</summary>
        </member>
        <member name="F:OpenDental.FormStatementOptions._isDeleteClick">
            <summary>This is true if the Delete button is clicked.  Used to determine FormClosing action.</summary>
        </member>
        <member name="F:OpenDental.FormStatementOptions.ListStatements">
            <summary>This will be null for ordinary edits.  But sometimes this window is used to edit bulk statements.  In that case, this list contains the statements being edited.  Must contain at least one item.</summary>
        </member>
        <member name="M:OpenDental.FormStatementOptions.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormStatementOptions.SetEnabled(System.Boolean)">
            <summary>This does not currently affect the Sent checkbox because users need to be able to mark statements unsent.</summary>
        </member>
        <member name="M:OpenDental.FormStatementOptions.SaveAsDocument(System.Boolean,System.String,OpenDentBusiness.Sheet,System.Data.DataSet)">
            <summary>Creates a PDF if necessary and attaches the statement document to the statement.</summary>
            <param name="pdfFileName">If this is blank, a PDF will be created.</param>
            <param name="sheet">This sheet will be used to create the PDF. If it is null, the default Statement sheet will be used instead.</param>
        </member>
        <member name="M:OpenDental.FormStatementOptions.CreateEmailMessage">
            <summary>Also displays the dialog for the email.  Must have already created and attached the pdf.  Returns false if it could not create the email.</summary>
        </member>
        <member name="M:OpenDental.FormStatementOptions.LaunchArchivedPdf(OpenDentBusiness.Patient)">
            <summary>Opens the saved PDF for the document.</summary>
        </member>
        <member name="T:OpenDental.FormSubscriberSelect">
            <summary>Only used when adding an insurance plan from ContrFamily.  Lets user select the subscriber from </summary>
        </member>
        <member name="F:OpenDental.FormSubscriberSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSubscriberSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormSubscriberSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSubscriberSelect.PatNumSelected">
            <summary>When the form closes with OK, this will contain the patient num selected.</summary>
        </member>
        <member name="M:OpenDental.FormSubscriberSelect.#ctor(OpenDentBusiness.Family)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormTaskEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit.TaskObjectTypeGoTo">
            <summary>After closing, if this is not zero, then it will jump to the object specified in GotoKeyNum.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit.KeyNumGoTo">
            <summary>After closing, if this is not zero, then it will jump to the specified patient.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit.DidNotesChange">
            <summary>Will be set to true if any note was added or an existing note changed. Does not track changes in the description.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._userNumReplyTo">
            <summary>If the reply button is visible, this stores who to reply to.  It's determined when loading the form.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit.IsPopup">
            <summary>Gets set to true externally if this window popped up without user interaction.  It will behave slightly differently.  
            Specifically, the New checkbox will be unchecked so that if user clicks OK, the task will be marked as read.
            Also if IsPop is set to true, this window will not steal focus from other windows when poping up.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._hasStatusChanged">
            <summary>When tracking status by user, this tracks whether it has changed.  This is so that if it has changed, a signal can be sent for a refresh of lists.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._startedInOthersInbox">
            <summary>When this window is first opened, if this task is in someone else's inbox, then the "new" status is meaningless and will not show.  In that case, this variable is set to true.  Only used when tracking new status by user.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._listDefsTaskPriorities">
            <summary>Filled on load with all non-hidden task priority definitions.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._numNotes">
            <summary>Keeps track of the number of notes that were associated to this task on load and after refilling the task note grid.  Only used for HQ in order to keep track of task note manipulation.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._triageNumRed">
            <summary>FK to the definition.DefNum at HQ for the triage priority color for red.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._triageNumBlue">
            <summary>FK to the definition.DefNum at HQ for the triage priority color for blue.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._triageNumWhite">
            <summary>FK to the definition.DefNum at HQ for the triage priority color for white.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._isTaskDeleted">
            <summary>Do not allow any task or task related changes.  Only allow copy and cancel buttons, and copying of text.
            Used when task has been deleted from elsewhere while still open.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._userNumFrom">
            <summary>UserNum attached to task when form was loaded.  Used in OK click to detect changes.  Can be 0.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._patNum">
            <summary>PatNum attached to task when form was loaded.  Used in OK click to detect changes.  Can be 0.</summary>
        </member>
        <member name="F:OpenDental.FormTaskEdit._formTaskNoteEdit">
            <summary>Modal window</summary>
        </member>
        <member name="P:OpenDental.FormTaskEdit.ShowWithoutActivation">
            <summary>This is used to make the task window not steal focus when opening as a popup.</summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.#ctor(OpenDentBusiness.Task,OpenDentBusiness.Task)">
            <summary>Task gets inserted ahead of time, then frequently altered before passing in here.  The taskOld that is passed in should be the task as it is in the database.  When saving, taskOld will be compared with db to make sure no changes.</summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.SetTaskStartingLocation">
            <summary>Sets the starting location of this form. Should only be called on load.
            The first Task window will default to the primary monitor. After that we will cascade down.
            If FormOpenDental is not minimized, the first Task will instead appear in the center of wherever it is.
            If any part of this form will be off screen we will default the next task to the top left of the monitor.</summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.AddNoteToTaskAndEdit(System.String)">
            <summary>Adds a new note to the task, and opens it for editing by the user.  Will not open if the task is not visible, is deleted, 
            or if a child form is already open.</summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.comboTaskPriorities_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>This event is fired whenever the combo box is changed manually or the index is changed programmatically.</summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.SaveCur">
            <summary>Does validation and then updates the _taskCur object with the current content of the TaskEdit window.</summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.TrySaveAndShouldClose">
            <summary>Tries to save the task based on the current state of the window. Warns the user if anything is wrong.
            Sets the DialogResult correctly and sends task signals if necessary.
            Returns true if the calling method should close the window. Otherwise false, which indicates that the window should stay open.</summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.butSend_Click(System.Object,System.EventArgs)">
            <summary>Send to another user.</summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.SaveCopy(System.Collections.Generic.List{System.Int64})">
            <summary>Copies/Inserts task and sends to inboxes if multiple lists were selected.</summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.SetFormToDeletedMode">
            <summary>Sets the form into "Deleted" mode to disallow changes to be made.</summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.SetFormReadOnly(System.Boolean)">
            <summary>Sets fields and buttons that modify the task enabled or disabled based on the input  </summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.DisableMostControls">
            <summary>Sets all controls to read-only or disabled except cancel and copy button.</summary>
        </member>
        <member name="M:OpenDental.FormTaskEdit.SendSignalsRefillLocal(OpenDentBusiness.Task,System.Int64,System.Boolean)">
            <summary>Determines which signals need to be sent, and sends them.  Pass in taskListNumOld if the taskListNum has possibly changed.</summary>
        </member>
        <member name="T:OpenDental.FormTaskListEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskListEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskListEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskListEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTaskListEdit.#ctor(OpenDentBusiness.TaskList)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormTaskListSelect">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskListSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskListSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskListSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskListSelect._taskListUserInbox">
            <summary>Can be null. The inbox of the current users. Used in order to add a shortcut to send to at top of list.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListSelect.#ctor(OpenDentBusiness.TaskObjectType,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTaskListSelect.GetOTypeDescription">
            <summary>Returns a translated string representing the OType to be shown in the UI.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListSelect.SortTaskListByDescript(OpenDentBusiness.TaskList,OpenDentBusiness.TaskList)">
            <summary>Compares two given tasklist based on their Descript.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListSelect.GetUserInboxTaskLists">
            <summary>Returns a list of TaskList inboxes for non hidden users with an inbox setup.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListSelect.GetListUser">
            <summary>Builds a list of task list inboxes for a given user, and stores the resulting list and descriptions in the out vars.
            Also performs filtering of the list</summary>
        </member>
        <member name="M:OpenDental.FormTaskListSelect.GetListAll">
            <summary>Fills listMain with all tasklists with DateType.None.  Each task list will also list out it's children lists.
            Items will be filtered the same way as FillListUser (based on textFilter).</summary>
        </member>
        <member name="M:OpenDental.FormTaskListSelect.GetFilteredList">
            <summary>Returns a filtered list of tasklists with descriptions that include paths for sublists.  If textFilter is not empty, the filtered
            list will be ordered by those tasklists whose names start with textFilter above those whose names contain textFilter but don't start with it,
            then by description.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListSelect.SetLabelText">
            <summary>Sets the main label on this form depending on OType.</summary>
        </member>
        <member name="T:OpenDental.FormTasks">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTasks.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTasks.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormTasks.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTasks.ShowTriage">
            <summary>Used by OD HQ.</summary>
        </member>
        <member name="M:OpenDental.FormTasks.FillGridWebChats">
            <summary>Only for ODHQ triage.</summary>
        </member>
        <member name="T:OpenDental.FormTelephone">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTelephone.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormTelephone.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTelephone.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormTelephone.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormTerminal">
            <summary>Fills the primary monitor with the kiosk screen.</summary>
        </member>
        <member name="M:OpenDental.FormTerminal.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTerminal._listSheets">
            <summary>This is the list of sheets that the patient will be filling out.</summary>
        </member>
        <member name="F:OpenDental.FormTerminal.PatNum">
            <summary>This gets set externally when IsSimpleMode, and it also gets set when NOT IsSimpleMode in ProcessSignals.</summary>
        </member>
        <member name="F:OpenDental.FormTerminal.IsSimpleMode">
            <summary>In simple mode, the terminal is launched from the local machine, and is not tracked in the database in any way.</summary>
        </member>
        <member name="F:OpenDental.FormTerminal._formSheetFillEdit">
            <summary>Form used to display sheets to fill for patient.  This is class-wide so that it can be accessed when the timer ticks in order to force
            the form to close itself.</summary>
        </member>
        <member name="M:OpenDental.FormTerminal.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTerminal.ProcessSignalODs(System.Collections.Generic.List{OpenDentBusiness.Signalod})">
            <summary>Only subscribed to signal processing if NOT SimpleMode.  Only processes signals of type InvalidType.Kiosk.</summary>
        </member>
        <member name="M:OpenDental.FormTerminal.timer1_Tick(System.Object,System.EventArgs)">
            <summary>Only in nonSimpleMode.  Occurs every 4 seconds. Checks the database to verify that this kiosk should still be running and that the
            correct patient's forms are loaded.  If there shouldn't be forms loaded, clears the forms.  If this kiosk (terminalactive row) has been deleted
            then this form is closed.  If FormSheetFillEdit is visible, signals that form to force it closed (user will lose any unsaved data).</summary>
        </member>
        <member name="M:OpenDental.FormTerminal.LoadPatient(System.Boolean)">
            <summary>Used in both modes.  Loads the list of sheets into the listbox.  Then launches the first sheet and goes through the sequence of sheets.
            If user clicks cancel, the seqeunce will exit.  If NOT IsSimpleMode, then the TerminalManager can also send a signal to immediately terminate
            the sequence.  If PatNum is 0, this will unload the patient by making the form list not visible and the welcome message visible.</summary>
        </member>
        <member name="T:OpenDental.FormTerminalConnection">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTerminalConnection.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.OpenConnection(System.Int32)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.CloseConnection">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.Dial(System.String)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.Send(System.String)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.Send(System.Byte[])">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.Send(System.Char)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.WaitFor(System.String,System.Double)">
            <summary>Throws an exception if expected text not received within timeout period.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.WaitFor(System.String,System.String,System.Double)">
            <summary>Throws an exception if expected text not received within timeout period. Returns the response received out of the given expectedReplies.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.WaitFor(System.Byte,System.Double)">
            <summary>Throws an exception if expected byte not received within timeout period.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.GetOneByte(System.Double)">
            <summary>Gets a single byte from the RxBuff. Throws exception if no byte received within the given time. Does not clear this byte from the RxBuff in any way.  That's up to the calling code.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.GetBytes(System.Int32,System.Double)">
            <summary>Gets a precise number of bytes from RxBuff. Throws an error if not received in time.  Also, make sure to clear RxBuff before and after using this function.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.ClearRxBuff">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.Receive(System.Double)">
            <summary>Receives all text within the given timespan.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.Pause(System.Double)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.UploadXmodem(System.String)">
            <summary>Transmits a file using Xmodem protocol.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.DownloadXmodem(System.String)">
            <summary>Receives a file using Xmodem protocol.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.Sout(System.String,System.Int32,System.Int32)">
            <summary>Converts any string to an acceptable format for modem ASCII. Converts to all caps and strips off all invalid characters. Optionally shortens the string to the specified length and/or makes sure the string is long enough by padding with spaces.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.Sout(System.String,System.Int32)">
            <summary>Converts any string to an acceptable format for modem ASCII. Converts to all caps and strips off all invalid characters. Optionally shortens the string to the specified length and/or makes sure the string is long enough by padding with spaces.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalConnection.Sout(System.String)">
            <summary>Converts any string to an acceptable format for modem ASCII. Converts to all caps and strips off all invalid characters. Optionally shortens the string to the specified length and/or makes sure the string is long enough by padding with spaces.</summary>
        </member>
        <member name="T:OpenDental.FormTimeAdjustEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTimeAdjustEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTimeAdjustEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTimeAdjustEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTimeAdjustEdit.IsNew">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormTimeAdjustEdit.UnpaidProtectedLeaveLogType">
            <summary>Used to determine what type of security log text to generate.</summary>
        </member>
        <member name="M:OpenDental.FormTimeAdjustEdit.#ctor(OpenDentBusiness.TimeAdjust)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormTimeCard">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTimeCard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTimeCard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTimeCard.IsBreaks">
            <summary>True to default to viewing breaks. False for regular hours.</summary>
        </member>
        <member name="F:OpenDental.FormTimeCard._timeSpanDelta">
            <summary>Server time minus local computer time, usually +/- 1 or 2 minutes</summary>
        </member>
        <member name="F:OpenDental.FormTimeCard._arrayListMerged">
            <summary>An array list of ojects representing the rows in the table. Can be either clockEvents or timeAdjusts.</summary>
        </member>
        <member name="F:OpenDental.FormTimeCard._timeSpanArrayWeeklyTotals">
            <summary>The running weekly total, whether it gets displayed or not.</summary>
        </member>
        <member name="F:OpenDental.FormTimeCard.IsByLastName">
            <summary>Used to determine the order to advance through employee timecards in this window.</summary>
        </member>
        <member name="F:OpenDental.FormTimeCard._listEmployees">
            <summary>Cached list of employees sorted based on IsByLastName</summary>
        </member>
        <member name="F:OpenDental.FormTimeCard._timeSpanStoredWeek">
            <summary>Filled when FillMain is called and fromDB=true.  If fromDB is false, we used this stored value from before instead to reduce calls to DB.  Because fillgrid does math on weekspan, this is a temporary cache of the last time we calculated it from the database.</summary>
        </member>
        <member name="P:OpenDental.FormTimeCard._cannotEditOwnTimecard">
            <summary>If true, the current employee cannot edit their own time card.</summary>
        </member>
        <member name="P:OpenDental.FormTimeCard._isTimeCardSecurityApplicable">
            <summary>If true, Time Card Security is enabled and should be considered for the current user.</summary>
        </member>
        <member name="P:OpenDental.FormTimeCard._cannotEditSelectedPayPeriod">
            <summary>If true, the current employee can only edit their timecard for the current pay period</summary>
        </member>
        <member name="M:OpenDental.FormTimeCard.#ctor(System.Collections.Generic.List{OpenDentBusiness.Employee})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTimeCard.GetTitle">
            <summary>Returns title of FormTimeCard based on employee name and any restrictions that may apply to editing.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCard.FillPayPeriod">
            <summary>SelectedPayPeriod should already be set.  This simply fills the screen with that data.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCard.GetOrCreatePayPeriodNote">
            <summary>Gets the pay period note from the timeadjust row on midnight of the first day in the pay period from the database,
            otherwise creates a new TimeAdjust object in memory to be inserted later.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCard.FillMain(System.Boolean)">
            <summary>fromDB is set to false when it is refreshing every second so that there will be no extra network traffic.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCard.pd_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>raised for each page to be printed.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCard.timerUpdateBreak_Tick(System.Object,System.EventArgs)">
            <summary>This timer updates break times so that you can see your break timer counting.</summary>
        </member>
        <member name="T:OpenDental.FormTimeCardBenefitRp">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTimeCardBenefitRp.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardBenefitRp.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTimeCardBenefitRp.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormTimeCardSetup">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTimeCardSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTimeCardSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTimeCardSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTimeCardSetup._listPayPeriods">
            <summary>Locally cached list of pay periods.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardSetup.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTimeCardSetup.FillGrid">
            <summary>Does not refresh the cached list.  Make sure any updates to _listPayPeriods are done before calling this method.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardSetup.IsSafeToDelete(System.Collections.Generic.List{OpenDentBusiness.PayPeriod})">
            <summary>Makes sure that the pay periods that the user has selected are safe to delete.
            A pay period cannot be deleted in bulk if: 
            a) It is in the past OR 
            b) There are clockevents tied to it and there are no other pay periods for the date of the clockevent.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardSetup.butDelete_Click(System.Object,System.EventArgs)">
            <summary>Deletes all the selected pay periods. Performs validation to make sure the delete is safe.</summary>
        </member>
        <member name="T:OpenDental.FormToothChartingBig">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormToothChartingBig.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormToothChartingBig.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormToothChartingBig.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormToothChartingBig.toothChart">
            <summary>This is the new Sparks3D toothChart.</summary>
        </member>
        <member name="M:OpenDental.FormToothChartingBig.#ctor(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormToothChartingBig.FillToothChart">
            <summary>This is, of course, called when module refreshed.  But it's also called when user sets missing teeth or tooth movements.  In that case, the Progress notes are not refreshed, so it's a little faster.  This also fills in the movement amounts.</summary>
        </member>
        <member name="T:OpenDental.FormTPsign">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTPsign.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:OpenDental.FormTPsign.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTPsign.signatureBoxWrapperPractice">
            <summary>Currently the size of this control is (331,79). If this is ever changed then eClipboard needs to be considered.</summary>
        </member>
        <member name="F:OpenDental.FormTPsign.signatureBoxWrapper">
            <summary>Currently the size of this control is (331,79). If this is ever changed then eClipboard needs to be considered.</summary>
        </member>
        <member name="F:OpenDental.FormTPsign.TotalPages">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTPsign.PrintDocumentCur">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTPsign._listProcTPs">
            <summary>Must be sorted by primary key.</summary>
        </member>
        <member name="F:OpenDental.FormTPsign.SaveFileAsDocDelegate_">
            <summary>Should be set to ContrTreat.SaveTPAsDocument(). Can save multiple copies if multiple TP image categories are defined.</summary>
        </member>
        <member name="F:OpenDental.FormTPsign.DoPrintUsingSheets">
            <summary>True if printing with sheets, false if printing with classic view.</summary>
        </member>
        <member name="F:OpenDental.FormTPsign._hasSigPractice">
            <summary>True if sheetTP has a practice signature box.</summary>
        </member>
        <member name="M:OpenDental.FormTPsign.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTPsign.SignatureBoxSheetCheck(OpenDentBusiness.SheetField,OpenDental.UI.SignatureBoxWrapper)">
            <summary>SignatureBoxes can be restricted to providers, and are allowed to be signed electronically if enabled within sheets.</summary>
        </member>
        <member name="M:OpenDental.FormTPsign.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="T:OpenDental.FormTrackNext">
            <summary>The Next appoinment tracking tool.</summary>
        </member>
        <member name="M:OpenDental.FormTrackNext.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTrackNext.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormTrackNext.#ctor">
            <summary>PatientGoTo must be set before calling Show() or ShowDialog().</summary>
        </member>
        <member name="M:OpenDental.FormTrackNext.FormTrackNext_Shown(System.Object,System.EventArgs)">
            <summary>There is a bug in ODProgress.cs that forces windows that use a progress bar on load to go behind other applications. 
            This is a temporary workaround until we decide how to address the issue.</summary>
        </member>
        <member name="T:OpenDental.FormTransactionEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTransactionEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTransactionEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTransactionEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTransactionEdit._accountOfOrigin">
            <summary>The account where the edit originated from.  This affects how the simple version gets displayed, and the signs on debit and credit.</summary>
        </member>
        <member name="F:OpenDental.FormTransactionEdit._accountPicked">
            <summary>When in simple mode, this is the 'other' account, not the one of origin.  It can be null.</summary>
        </member>
        <member name="F:OpenDental.FormTransactionEdit.IsNew">
            <summary>Just used for security.</summary>
        </member>
        <member name="M:OpenDental.FormTransactionEdit.#ctor(OpenDentBusiness.Transaction,System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTransactionEdit.FillCompound">
            <summary>Used when compound view (3 or more journal entries).  Account nums allowed to be 0.</summary>
        </member>
        <member name="M:OpenDental.FormTransactionEdit.FillSimple">
            <summary>Used when switching simple view (0, 1, or 2 journal entries with identical notes).  This function fills in the correct fields in the simple view, and then deletes any journal entries.  2 journal entries will be recreated upon leaving for compound view by CreateTwoEntries.  This is only called once upon going to simple view.  It's not called repeatedly as a way of refreshing the screen.</summary>
        </member>
        <member name="M:OpenDental.FormTransactionEdit.CreateTwoEntries">
            <summary>When leaving simple view, this function takes the info from the screen and creates two journal entries.  Never fails.  One of the journal entries might accountNum=0, and they might both have amounts of 0.  This is all in preparation for either saving or for viewing as compound.</summary>
        </member>
        <member name="T:OpenDental.FormTranslation">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTranslation.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTranslation.#ctor(System.String)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormTranslationCat">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTranslationCat.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTranslationCat.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTranslationCat.butExport_Click(System.Object,System.EventArgs)">
            <summary>Only exports for the current culture.</summary>
        </member>
        <member name="T:OpenDental.FormTranslationEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTranslationEdit.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTranslationEdit.#ctor(OpenDentBusiness.Language,OpenDentBusiness.LanguageForeign,System.String)">
            <summary>lanForeign might be null.</summary>
        </member>
        <member name="T:OpenDental.FormTreatPlanEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTreatPlanEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTreatPlanEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTreatPlanEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormTreatPlanEdit.#ctor(OpenDentBusiness.TreatPlan)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormTrojanCollect">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTrojanCollect.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:OpenDental.FormTrojanCollect.InitializeComponent">
            <summary>Required method for Designer support - do not modify the contents of this method with the code editor.</summary>
        </member>
        <member name="M:OpenDental.FormTrojanCollect.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormTrojanCollect.Clip(System.String,System.Int32)">
            <summary>Clips the input string to the specified length.  Also strips out any *, tabs, newlines, etc.  If inputstr is null or empty returns empty string.</summary>
        </member>
        <member name="T:OpenDental.FormTrojanCollectSetup">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTrojanCollectSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTrojanCollectSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTrojanCollectSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormTrojanCollectSetup.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormTrojanHelp">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTrojanHelp.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTrojanHelp.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormTrojanHelp.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormTrojanHelp.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormUAppoint">
            <summary> </summary>
        </member>
        <member name="M:OpenDental.FormUAppoint.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormUAppoint.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormUAppoint.IsNew">
            <summary>This Program link is new.</summary>
        </member>
        <member name="M:OpenDental.FormUAppoint.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormUAppoint.StartThreadIfEnabled">
            <summary>Spawns a thread that handled uploading data to UAppoint in real time.  If the thread is already running, then this restarts it.  If the uploading should no longer happen, then this aborts the thread and exits.</summary>
        </member>
        <member name="T:OpenDental.FormUnsched">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormUnsched.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormUnsched.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormUnsched.ProceduresForCur">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormUnsched.#ctor">
            <summary>PatientGoTo must be set before calling Show() or ShowDialog().</summary>
        </member>
        <member name="M:OpenDental.FormUnsched.FormUnsched_Shown(System.Object,System.EventArgs)">
            <summary>There is a bug in ODProgress.cs that forces windows that use a progress bar on load to go behind other applications. 
            This is a temporary workaround until we decide how to address the issue.</summary>
        </member>
        <member name="M:OpenDental.FormUnsched.SeeChart_Click">
            <summary>If multiple patients are selected in UnchedList, will select the last patient to remain consistent with sending to pinboard behavior.</summary>
        </member>
        <member name="T:OpenDental.FormUpdateSetup">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormUpdateSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormUpdateSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormUpdateSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormUpdateSetup.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormUserPassword">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormUserPassword.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormUserPassword.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormUserPassword.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormUserPassword.#ctor(System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>Set isPasswwordReset to true if creating rather than changing a password.</summary>
        </member>
        <member name="M:OpenDental.FormVideo.Play">
            <summary>This stops any existing camera, first, then plays the new one.</summary>
        </member>
        <member name="F:OpenDental.FormVideo.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormVideo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormVideo.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMassEmailTemplates._listEmailHostingTemplates">
            <summary>Selected template. Viewable here only. User needs to make edits in a different form.</summary>
        </member>
        <member name="M:OpenDental.FormMassEmailTemplates.FillGrid">
            <summary>Also refreshes data for the list of email hosting templates.</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailTemplates.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMassEmailTemplates.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMassEmailTemplates.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormProdSelect">
            <summary>A window for displaying and selecting outstanding production that utilizes some of the same logic from the income transfer system.</summary>
        </member>
        <member name="F:OpenDental.FormProdSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProdSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProdSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEditTestModeOverrides.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEditTestModeOverrides.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEditTestModeOverrides.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMultiVisitGroup.Changed">
            <summary> If true, then this form removed one or more ProcMultiVisit items from the db </summary>
        </member>
        <member name="F:OpenDental.FormMultiVisitGroup.FuncBuildGridRow">
            <summary> The function that builds a grid row for display, given an input DataRow </summary>
        </member>
        <member name="F:OpenDental.FormMultiVisitGroup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMultiVisitGroup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMultiVisitGroup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineAuthorization.AuthCode">
            <summary>The authorization code entered by the user.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineAuthorization.RealmId">
            <summary>The realm Id entered by the user.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineAuthorization.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormQuickBooksOnlineAuthorization.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormQuickBooksOnlineAuthorization.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._isFromFormProgramLinks">
            <summary>Only show Enabled checkbox if we are opening this form from the Program Links window.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._progCur">
            <summary>Holds the current state of the QuickBooks Online program.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._progOld">
            <summary>Holds the state of the QuickBooks Online program stored in the DB.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._programPropAccessToken">
            <summary>Holds the access token in the DB.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._programPropRefreshToken">
            <summary>Holds the refresh token in the DB.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._tokens">
            <summary>Holds the current refresh and access tokens. Also holds exceptions that occurred during a token request or token refresh request.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._programPropDepositAccounts">
            <summary>Holds the string of deposit accounts stored in the DB.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._listDepositAccountsInOD">
            <summary>List of deposit accounts selected for use in Open Dental.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._listDepositAccountsAvailable">
            <summary>List of deposit accounts available from QuickBooks Online.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._programPropIncomeAccounts">
            <summary>Holds the string of income accounts stored in the DB.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._listIncomeAccountsInOD">
            <summary>List of income accounts selected for use in Open Dental.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._listIncomeAccountsAvailable">
            <summary>List of income accounts available from QuickBooks Online.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._programPropClassRefs">
            <summary>Holds the string of class refs stored in the DB.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._listClassRefsInOD">
            <summary>List of class refs selected for use in Open Dental.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._listClassRefsAvailable">
            <summary>List of class refs available from QuickBooks Online.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._programPropRealmId">
            <summary>The realm ID stored in the DB.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._realmIdCur">
            <summary>The current realm ID.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup._hasQboError">
            <summary>True when an error response is received while attempting to get accounts and classes from QBO.</summary>
        </member>
        <member name="M:OpenDental.FormQuickBooksOnlineSetup.GetDepositAccountsFromQBO">
            <summary>Throws exceptions</summary>
        </member>
        <member name="M:OpenDental.FormQuickBooksOnlineSetup.GetIncomeAccountsFromQBO">
            <summary>Throws exceptions</summary>
        </member>
        <member name="M:OpenDental.FormQuickBooksOnlineSetup.GetClassRefsFromQBO">
            <summary>Throws exceptions</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksOnlineSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormQuickBooksOnlineSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormQuickBooksOnlineSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksSetup._listClassRefsQB">
            <summary>The list of currently available QuickBook classes.  Stored in a preference.</summary>
        </member>
        <member name="M:OpenDental.FormQuickBooksSetup.GetAccountsQB">
            <summary>Launches the account pick window and lets user choose several accounts.  Returns null if anything went wrong or user canceled out.</summary>
        </member>
        <member name="F:OpenDental.FormQuickBooksSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormQuickBooksSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormQuickBooksSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedAdvanced._listClinicPrefs">
            <summary>List of a List that holds information on what preferences have been changed</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedAdvanced._signupOut">
            <summary>Used for retrieving eService data.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedAdvanced._listEserviceClinicNames">
            <summary>Used to fill the Clinics grid.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedAdvanced._listUserControlHostedURLs">
            <summary>Holds all the edited UserControlHostedURLs. Our way of 'saving' before we save to DB.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedAdvanced.LoadAndDisplayClinic(OpenDental.FormEServicesWebSchedAdvanced.EServiceClinicName)">
            <summary>Loads a UserControlHostedURL control and displays it. If there is one previously 'saved' that will be used. Inserts 7 clinicprefs into _listClinicPrefs. </summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedAdvanced.GetEserviceClinicNames">
            <summary>Returns a list of EserviceClinicNames for all the clinics in the DB. If the EserviceClinicName cannot be found, N/A is used. The list is ordered by ClinicName.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedAdvanced.LayoutUserControlHostedURL(OpenDental.FormEServicesWebSchedAdvanced.EServiceClinicName,System.Boolean)">
            <summary>Clears and fills panelHostedURLs with a new userCOntrolHostedURL control</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedAdvanced.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedAdvanced.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedAdvanced.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedPat._isNewPat">
            <summary>Determines which preference set we should use (new or existing patients).</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedPat.SignupOut">
            <summary>Used to get IsEnabled for each clinic when filling out gridApptTimeSlots.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedPat.SaveWebSchedPat">
            <summary>Saves either the NewPat or ExistingPat preferences, depending on which mode the control was created.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedPat.FillComboClinics">
            <summary>Fills comboClinics with the related signup information per clinic.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedPat.GetAllowedBlockoutTypes">
            <summary>Fetches either NewPat or ExistingPat allowed blockout types, depending on which mode the control was created.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedPat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedPat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedPat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedNotify._clinicNumDefault">
            <summary>The fake clinic num used for the "Default" clinic option in the WebSchedVerify clinic combo box.  We need to change this to the constant that's in the combobox for clarity.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedNotify._listClinicPrefsWebSchedVerify">
            <summary>The in-memory list of updated ClinicPrefs related to WebSchedVerify, used to track changes made while the window is open.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedNotify._listClinicPrefsWebSchedVerify_Old">
            <summary>The in-memory list of original ClinicPrefs related to WebSchedVerify, used to compare changes when saving on window close.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedNotify._listPrefNamesWebSchedVerify">
            <summary>The list of prefNames that will be modified.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedNotify._listPrefNamesWebSchedVerifyAsap">
            <summary>The list of preferences to use for ASAP.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedNotify._listPrefNamesWebSchedVerifyExistingPat">
            <summary>The list of preferences to use for ExistingPat.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedNotify._listPrefNamesWebSchedVerifyNewPat">
            <summary>The list of preferences to use for NewPat.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedNotify._listPrefNamesWebSchedVerifyRecall">
            <summary>The list of preferences to use for Recall.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedNotify._webSchedType">
            <summary>The type of notification to load / save</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.FillTemplate">
            <summary>Fill in the template data for the current clinic and caller.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.butRestore_Click(System.Object,System.EventArgs)">
            <summary>All the user to undo all changes they have made to the currently selected clinic.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.checkUseDefaults_CheckChanged(System.Object,System.EventArgs)">
            <summary>Event handler for CheckUseDefaults check changed.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.comboClinicVerify_SelectionChangeCommitted(System.Object,System.EventArgs)">
            <summary>Event handler for ComboClinics index changed.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.toolStripMenuItemCopy_Click(System.Object,System.EventArgs)">
            <summary>This form uses a generic contextMenu for textboxes, so we need to use these event handlers to override the default menu.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.toolStripMenuItemCut_Click(System.Object,System.EventArgs)">
            <summary>This form uses a generic contextMenu for textboxes, so we need to use these event handlers to override the default menu.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.toolStripMenuItemPaste_Click(System.Object,System.EventArgs)">
            <summary>This form uses a generic contextMenu for textboxes, so we need to use these event handlers to override the default menu.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.toolStripMenuItemInsertReplacements_Click(System.Object,System.EventArgs)">
            <summary>Opens FormMessageReplacements to allow the user to select from replaceable tags to include in the templates.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.toolStripMenuItemSelectAll_Click(System.Object,System.EventArgs)">
            <summary>This form uses a generic contextMenu for textboxes, so we need to use these event handlers to override the default menu.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.toolStripMenuItemUndo_Click(System.Object,System.EventArgs)">
            <summary>This form uses a generic contextMenu for textboxes, so we need to use these event handlers to override the default menu.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.WebSchedVerify_RadioButtonCheckChanged(System.Object,System.EventArgs)">
            <summary>Event handler for RadioButtons check changed.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.GetTemplateVal(OpenDentBusiness.PrefName)">
            <summary>Returns the clinic pref value for the currently selected clinic and provided PrefName, or the default pref if there is none.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.SetRadioButtonVal(OpenDentBusiness.PrefName)">
            <summary>Checks the currently selected radio button for the given PrefName and groupBox, based on the radio button tags.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.TryRestoreClinicPrefOld(OpenDentBusiness.PrefName)">
            <summary>Tries to get the original clinic pref that was loaded in when the form first opened, and reload it into the in-memory clinic pref 
            list. If there is no old pref, this loads the default pref value for that clinic into the in-memory list.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.UpdateClinicPref(OpenDentBusiness.PrefName,System.String)">
            <summary>Updates the in-memory clinic pref list with the given valueString for the provided prefName and currently selected clinic.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.SaveWebSchedVerify">
            <summary>Save template changes made in WebSchedVerify.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedNotify.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedNotify.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedRecall._listRecallTypes">
            <summary>A list of recall types to display.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedRecall._listClinicsAll">
            <summary>A list of all clinics.  This list could include clinics that the user should not have access to so be careful using it. For the sake of modular code, there are seperate lists for the Integrated Texting (sms) and Automated eConfirmation (eC) tabs.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedRecall._listProvidersAll">
            <summary>A deep copy of Providers.ListShortDeep.  Use the cache instead of this list if you need an up to date list of providers.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedRecall._listOperatoriesWebSched">
            <summary>A list of all operatories that have IsWebSched set to true.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedRecall._clinicNum">
            <summary>Clinic number used to filter the Time Slots grid.  0 is treated as 'Unassigned'</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedRecall._provNum">
            <summary>Provider number used to filter the Time Slots grid.  0 is treated as 'All'</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedRecall.FillGridWebSchedRecallTypes">
            <summary>Also refreshed the combo box of available recall types.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedRecall.FillBlockoutTypeListboxes">
            <summary>Fills the Generally Allowed and Restricted To blockout listboxes. </summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedRecall.ShowOperatoryEditAndRefreshGrids">
            <summary>Shows the Operatories window and allows the user to edit them.  Does not show the window if user does not have Setup permission.
            Refreshes all corresponding grids within the Web Sched tab that display Operatory information.  Feel free to add to this method.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesWebSchedRecall.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedRecall.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesWebSchedRecall.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormGraphEmployeeView._listEmployees">
            <summary>A list of all employees.</summary>
        </member>
        <member name="F:OpenDental.FormGraphEmployeeView._listPhoneGraphsEmpCur">
            <summary>A list of phone graphs for the currently selected employee.</summary>
        </member>
        <member name="F:OpenDental.FormGraphEmployeeView._listSchedulesEmpCur">
            <summary>A list of schedules for the currently selected employee.</summary>
        </member>
        <member name="F:OpenDental.FormGraphEmployeeView._listSchedulesProvCur">
            <summary>A list of schedules for the currently selected employee's provider within the date range from the odDatePickers.</summary>
        </member>
        <member name="F:OpenDental.FormGraphEmployeeView._provNum">
            <summary>ProvNum for the currently selected employee</summary>
        </member>
        <member name="F:OpenDental.FormGraphEmployeeView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormGraphEmployeeView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormGraphEmployeeView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormActivityLog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormActivityLog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormActivityLog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormWebView">
            <summary>A wrapper form to display an Internet browser within an Open Dental window.
            This is essentially a Microsoft Internet Explorer control embedded into our form.
            The browser.ScriptErrorsSuppressed is true in order to prevent javascript error popups from annoying the user.
            When links are clicked inside this browser, the link is followed directly inside the browser instead of opening a new window.</summary>
        </member>
        <member name="F:OpenDental.FormWebView.UrlBrowseTo">
            <summary>Set to the value passed into the constructor if one was passed in.  Navigates the browser control to this url on load.</summary>
        </member>
        <member name="F:OpenDental.FormWebView.PostData">
            <summary>Set to the post data to be sent to the browser.</summary>
        </member>
        <member name="F:OpenDental.FormWebView.AdditionalHeaders">
            <summary>Any additional headers will be sent to the browser. Will only be sent if postData is set as well.</summary>
        </member>
        <member name="F:OpenDental.FormWebView.CanWrapNewWindow">
            <summary>Decides whether or not to wrap new windows in FormWebBrowser controls, or just open them in their regular browser instance.</summary>
        </member>
        <member name="F:OpenDental.FormWebView.IsUrlSingleUse">
            <summary>Default to false. Determines if url is single use or not. When this is set to true, then the refresh button is not added. See LayoutToolBar() 
            Bamboo's API returns a single use URL for PHI security reasons. Hitting refresh would cause an unauthorized message to show from their server which would force offices to close and relaunch the bridge.
            </summary>
        </member>
        <member name="F:OpenDental.FormWebView.Title">
            <summary>This will be a static form title that overrides the dynamic website title.</summary>
        </member>
        <member name="M:OpenDental.FormWebView.#ctor">
            <summary>Used when opening a new browser window via a link or to display html content.
            If html content and url specified, url will be used and given content ignored. postData and additionalHeaders will only be used if url is 
            passed in.</summary>
        </member>
        <member name="M:OpenDental.FormWebView.LayoutToolBars">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWebView.SetTitle">
            <summary>Sets the text of the form to the browser's DocumentTitle.</summary>
        </member>
        <member name="F:OpenDental.FormWebView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWikiCompare.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiCompare.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiCompare.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormXchargeSetup">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormXchargeSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormXchargeSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormXchargeSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormXchargeSetup._listProgramProperties">
            <summary>List of X-Charge prog props for all clinics.  Includes props with ClinicNum=0 for headquarters/props unassigned to a clinic.</summary>
        </member>
        <member name="F:OpenDental.FormXchargeSetup._clinicNumRevert">
            <summary>Used to revert the clinic drop down if the user tries to change clinics and the payment type hasn't been set.</summary>
        </member>
        <member name="M:OpenDental.FormXchargeSetup.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormXchargeSetup.FillFields">
            <summary>Fills all but comboClinic, checkEnabled, textPath, and textOverride which are filled on load.</summary>
        </member>
        <member name="M:OpenDental.FormXchargeSetup.ValidateXWeb(System.Boolean)">
            <summary>Validate XWebID, AuthKey, and TerminalID.  XWebID and TerminalID must be numbers only, 12 digits and 8 digits long respectively.
            AuthKey must be alphanumeric, 32 digits long.</summary>
        </member>
        <member name="M:OpenDental.FormXchargeSetup.ValidatePaymentTypes(System.Boolean)">
            <summary>If isValidateAllClinics is true, validates the PaymentType for all clinics with X-Charge enabled.
            <para>If the current user is restricted to a clinic or if clinics are not enabled and the enabled checkbox is checked,
            or if isValidateAllClinics is false, only comboPaymentType.SelectedIndex will be validated.</para>
            <para>If clinics are enabled and isValidateAllClinics is true and the current user is not restricted to a clinic, the PaymentType for any
            clinic with Username and Password set or with any of the XWeb settings set will be validated.</para></summary>
        </member>
        <member name="M:OpenDental.FormXchargeSetup.SyncWithHQ">
            <summary>Updates the values in the local list of program properties for each clinic.
            Only modifies other clinics if _listUserClinicNums[_indexClinicRevert]=0, meaning user just modified the HQ values.
            If the clinic X-Charge client Username and Password are the same as HQ, the clinic values will be updated with the values entered.
            If the clinic XWeb values are the same as HQ, the clinic XWeb values will be updated with the values entered.
            If both the X-Charge client values and the XWeb values are the same as HQ, the payment type will be updated.
            The values in the local list for HQ, or for the clinic modified if it was not HQ, have to be updated after calling this method.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProcBlueBookLog._listInsBlueBookLogs">
            <summary>List of InsBlueBookLogs for a ClaimProc.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProcBlueBookLog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimProcBlueBookLog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimProcBlueBookLog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormCareCreditWeb">
            <summary>Internet browser window for CareCredit. This is essentially a Microsoft Internet Explorer control embedded into our form.</summary>
        </member>
        <member name="F:OpenDental.FormCareCreditWeb._urlBrowseTo">
            <summary>Set to the value passed into the constructor if one was passed in.  Navigates the browser control to this url on load.</summary>
        </member>
        <member name="F:OpenDental.FormCareCreditWeb._patient">
            <summary>The patient CareCredit was opened for.</summary>
        </member>
        <member name="F:OpenDental.FormCareCreditWeb.IsUrlSingleUse">
            <summary>Default to false. Determines if url is single use or not. When this is set to true, then the refresh button is not added. See LayoutToolBar() 
            Bamboo's API returns a single use URL for PHI security reasons. Hitting refresh would cause an unauthorized message to show from their server which would force offices to close and relaunch the bridge.
            </summary>
        </member>
        <member name="F:OpenDental.FormCareCreditWeb.SessionId">
            <summary>The session ID of the CareCredit prefill response.</summary>
        </member>
        <member name="M:OpenDental.FormCareCreditWeb.#ctor(System.String,OpenDentBusiness.Patient)">
            <summary>Used when opening a new browser window via a link.</summary>
        </member>
        <member name="M:OpenDental.FormCareCreditWeb.LayoutToolBars">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormCareCreditWeb.SetTitle">
            <summary>Sets the text of the form to the browser's DocumentTitle.</summary>
        </member>
        <member name="F:OpenDental.FormCareCreditWeb.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCareCreditWeb.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCareCreditWeb.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormChangeCloudPassword.ChangePasswordLBE(System.String)">
            <summary>Checks if cloud setup is a load balanced environment and updates the cloud servers.</summary>
        </member>
        <member name="F:OpenDental.FormChangeCloudPassword.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormChangeCloudPassword.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormChangeCloudPassword.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsBlueBookRuleEdit._insBlueBookRule">
            <summary>A copy of the rule passed to the form's constructor that is OK to edit.</summary>
        </member>
        <member name="F:OpenDental.FormInsBlueBookRuleEdit._insBlueBookRuleOld">
            <summary>A copy of the rule passed to the form's constructor for preserving the rule's original state.</summary>
        </member>
        <member name="M:OpenDental.FormInsBlueBookRuleEdit.GetInsBlueBookRuleCur">
            <summary>Allows parent form to access the rule that the user has modified.</summary>
        </member>
        <member name="M:OpenDental.FormInsBlueBookRuleEdit.EnableTextLimitValue">
            <summary>Enables textLimitValue unless limit type "None" is selected.</summary>
        </member>
        <member name="F:OpenDental.FormInsBlueBookRuleEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsBlueBookRuleEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInsBlueBookRuleEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormCareCredit.UpdateCareCreditQuickScreen(OpenDentBusiness.CareCreditWebResponse)">
            <summary>Update pullback status and PatFieldDef one more time. Remove once CareCredit fixes non-null QuickScreen details object.</summary>
        </member>
        <member name="F:OpenDental.FormCareCredit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCareCredit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCareCredit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsBlueBookRules._listInsBlueBookRules">
            <summary>Stores the original state of all rules from the insbluebookrule table when we firts get them from the db.</summary>
        </member>
        <member name="M:OpenDental.FormInsBlueBookRules.UpdatePrefs">
            <summary>Updates prefs and cache as needed.</summary>
        </member>
        <member name="M:OpenDental.FormInsBlueBookRules.UpdateRules">
            <summary>As of now, the old and new rule lists should always have one of each rule type because the type is not editable by the user and rules never get added or deleted.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormInsBlueBookRules.GenerateAllowedFeeSchedules" -->
        <member name="F:OpenDental.FormInsBlueBookRules.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsBlueBookRules.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInsBlueBookRules.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormCloudSessionLimit.GetHiddenPrefString(OpenDentBusiness.PrefName)">
            <summary>Returns the ValueString of a pref or a blank string if that pref is not found in the database.</summary>
        </member>
        <member name="F:OpenDental.FormCloudSessionLimit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCloudSessionLimit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCloudSessionLimit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReportsFiltered.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReportsFiltered.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReportsFiltered.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMassEmailBirthdays._listClinicPrefsDefaultOld">
            <summary>Used for syncing clinics, which clinics are using the default rules.</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailBirthdays._listClinicPrefsEnabledOld">
            <summary>Used for syncing clinics, which clinics are enabled to send messages for birthdays.</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailBirthdays._isEnabled">
            <summary>Used when clinics are not enabled to determine if the rule is enabled.</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailBirthdays._isLoading">
            <summary>True while in the load method.</summary>
        </member>
        <member name="M:OpenDental.FormMassEmailBirthdays.ClinicNumEffective">
            <summary>Is either the selected clinic num from the combo box OR clinic zero if selected clinic is using defaults. Will also return 0 if clinics are  turned off.</summary>
        </member>
        <member name="M:OpenDental.FormMassEmailBirthdays.FillForClinic">
            <summary>Fills all necessary data for the clinic.</summary>
        </member>
        <member name="M:OpenDental.FormMassEmailBirthdays.SwitchFromDefaultsBirthday">
            <summary>Switches the currently selected clinic over to using non-defaults. Also prompts user before continuing. 
            Returns false if user cancelled or if there is no need to have switched to defaults.</summary>
        </member>
        <member name="M:OpenDental.FormMassEmailBirthdays.SwitchToDefaultsBirthday">
            <summary>Switches the currently selected clinic over to using defaults. Also prompts user before continuing. 
            Returns false if user cancelled or if there is no need to have switched to defaults.</summary>
        </member>
        <member name="M:OpenDental.FormMassEmailBirthdays.MapUiToRules(OpenDentBusiness.ApptReminderRule)">
            <summary>This will update the passed in rule based on the current UI state. It will only save if the user ends up clicking ok.
            This should be called with the default rule passed in (no language set).</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailBirthdays.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMassEmailBirthdays.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMassEmailBirthdays.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormMassEmailAnalytics.FillGridAnalytics">
            <summary>Fills the main grid on the analytics tab. Hits the database everytime this method is called.</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailAnalytics.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMassEmailAnalytics.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMassEmailAnalytics.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormMassEmailSetup.SignupMassEmail(System.Int64)">
            <summary>Makes a web call to HQ to signup for Mass Email and generate Hosted Email credentials if necessary.</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMassEmailSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMassEmailSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormCloudManagement.butDeleteAddress_Click(System.Object,System.EventArgs)">
            <summary>Deletes all selected IP addresses from the list of allowed addresses.</summary>
        </member>
        <member name="M:OpenDental.FormCloudManagement.butAddCurrent_Click(System.Object,System.EventArgs)">
            <summary>Adds the current IP address to the list, sets the last user to the current user, and sets the time to the current time.</summary>
        </member>
        <member name="M:OpenDental.FormCloudManagement.butAllowAddress_Click(System.Object,System.EventArgs)">
            <summary>Adds the current IP address to the list with UserNumLastConnect=0 and DateTimeLastConnect=DateTime.Min.</summary>
        </member>
        <member name="F:OpenDental.FormCloudManagement.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCloudManagement.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCloudManagement.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAlerts._gridNum">
            <summary>Used to maintain selected griditem after button events.</summary>
        </member>
        <member name="M:OpenDental.FormAlerts.butAcknowledge_Click(System.Object,System.EventArgs)">
            <summary>Only clickable when multiple rows are selected. Deletes all selected AlertItems that can be deleted. Any that cannot be deleted are marked as read.</summary>
        </member>
        <member name="M:OpenDental.FormAlerts.AlertMenuItemHelper(OpenDentBusiness.AlertItem)">
            <summary>Helper function to translate the title for the given alertItem.</summary>
        </member>
        <member name="F:OpenDental.FormAlerts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAlerts.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAlerts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormMassEmailSend.LoadVerifiedEmails(System.Int64)">
            <summary>Asynchronously loads verified email addresses from AccountApi.</summary>
        </member>
        <member name="M:OpenDental.FormMassEmailSend.SetEmailAddressSender(OpenDentBusiness.EmailAddress,System.Int64)">
            <summary>Sets the sender EmailAddress, updates the UI, and shows/hides the checkbox to use the SenderAddress.</summary>
        </member>
        <member name="M:OpenDental.FormMassEmailSend.UpdateSendFromMyAddress(System.Int64)">
            <summary>Sets the checkbox visible if the ReplyToAddress is a verified EmailAddress</summary>
        </member>
        <member name="M:OpenDental.FormMassEmailSend.GetIdentity(OpenDentBusiness.EmailAddress)">
            <summary>Determines if the given EmailAddress has been verified with the EmailHosting service.</summary>
        </member>
        <member name="M:OpenDental.FormMassEmailSend.GetEmailAlias(System.Int64)">
            <summary>Returns the email alias.</summary> 
        </member>
        <member name="F:OpenDental.FormMassEmailSend.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMassEmailSend.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMassEmailSend.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMassEmailTemplate.NewTemplateCurPriKey">
            <summary>When a new template gets inserted in this form, this will be set to the primary key that the template cur receives.</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailTemplate._emailHostingTemplate">
            <summary>The template passed into this form. Shallow copy so anything that happens in this form will persist.</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailTemplate._emailType">
            <summary>Enum to keep track of the changes that happened while editing in the html email editor.</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailTemplate._htmlText">
            <summary>To save the changes that were made to the html body while in the email editor.</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailTemplate._canDeleteTemplate">
            <summary>Set to false if the template currently being viewed should not be able to be deleted. Templates with TemplateType Birthday should never be deleted</summary>
        </member>
        <member name="F:OpenDental.FormMassEmailTemplate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMassEmailTemplate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMassEmailTemplate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRedundantIndexes.SaveLogToFile(System.String)">
            <summary>Adds the logText to a centralized log file for the current day if the current data storage type is LocalAtoZ.
            Throws exceptions to be displayed to the user.</summary>
        </member>
        <member name="F:OpenDental.FormRedundantIndexes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRedundantIndexes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRedundantIndexes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEdgeExpressSetup._clinicNumRevert">
            <summary>Used to revert the clinic drop down if the user tries to change clinics and the payment type hasn't been set.</summary>
        </member>
        <member name="F:OpenDental.FormEdgeExpressSetup._listProgramProperties">
            <summary>List of EdgeExpress prog props for all clinics.  Includes props with ClinicNum=0 for headquarters/props unassigned to a clinic.</summary>
        </member>
        <member name="M:OpenDental.FormEdgeExpressSetup.FillFields">
            <summary>Fills all but comboClinic, checkEnabled which are filled on load.</summary>
        </member>
        <member name="M:OpenDental.FormEdgeExpressSetup.ValidateXWeb(System.Boolean)">
            <summary>Validate XWebID, AuthKey, and TerminalID.  XWebID and TerminalID must be numbers only, 12 digits and 8 digits long respectively.
            AuthKey must be alphanumeric, 32 digits long.</summary>
        </member>
        <member name="M:OpenDental.FormEdgeExpressSetup.ValidatePaymentTypes(System.Boolean)">
            <summary>If isValidateAllClinics is true, validates the PaymentType for all clinics with EdgeExpress enabled.
            <para>If the current user is restricted to a clinic or if clinics are not enabled and the enabled checkbox is checked,
            or if isValidateAllClinics is false, only comboPaymentType.SelectedIndex will be validated.</para>
            <para>If clinics are enabled and isValidateAllClinics is true and the current user is not restricted to a clinic, the PaymentType for any
            clinic with Username and Password set or with any of the XWeb settings set will be validated.</para></summary>
        </member>
        <member name="M:OpenDental.FormEdgeExpressSetup.SyncWithHQ">
            <summary>Updates the values in the local list of program properties for each clinic.
            Only modifies other clinics if _listUserClinicNums[_indexClinicRevert]=0, meaning user just modified the HQ values.
            If the clinic EdgeExpress client Username and Password are the same as HQ, the clinic values will be updated with the values entered.
            If the clinic XWeb values are the same as HQ, the clinic XWeb values will be updated with the values entered.
            If both the EdgeExpress client values and the XWeb values are the same as HQ, the payment type will be updated.
            The values in the local list for HQ, or for the clinic modified if it was not HQ, have to be updated after calling this method.</summary>
        </member>
        <member name="M:OpenDental.FormEdgeExpressSetup.UpdateProperty(System.Int64,System.String,System.String)">
            <summary>Updates the program property for this clinic. Creates and adds to the list if it cannot be found.</summary>
        </member>
        <member name="F:OpenDental.FormEdgeExpressSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEdgeExpressSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEdgeExpressSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCareCreditSetup._listProgramProperties">
            <summary>List of CareCredit program properties for all clinics.
            Includes properties with ClinicNum=0, the headquarters properties or properties not assigned to a clinic.</summary>
        </member>
        <member name="F:OpenDental.FormCareCreditSetup._previouslySelectedClinicNum">
            <summary>Used to switch back to clinics if user selected a different clinic and validation did not pass.</summary>
        </member>
        <member name="F:OpenDental.FormCareCreditSetup.DEFAULT_DAYS">
            <summary>Default days for program property.</summary>
        </member>
        <member name="P:OpenDental.FormCareCreditSetup.ListDaysOut">
            <summary>Used for comboboxDaysOut. The number of days a user can set.</summary>
        </member>
        <member name="M:OpenDental.FormCareCreditSetup.DisableControlsForMerchantClosed">
            <summary>Determine if the practice or currently selected clinic merchant is closed and if so, disable all controls that will allow the user to change settings that would affect CareCredit actions. A closed merchant number is one with a 'x' prepended.</summary>
        </member>
        <member name="M:OpenDental.FormCareCreditSetup.GetHQMerchantNumber">
            <summary>Returns the Merchant Number program property from the in memory list of program properties for ClinicNum 0.</summary>
        </member>
        <member name="M:OpenDental.FormCareCreditSetup.AddNeededProgramProperties(System.Int64)">
            <summary>Adds any missing program property for the passed in clinic.</summary>
        </member>
        <member name="M:OpenDental.FormCareCreditSetup.SetDefaultCareCreditPaymentType">
            <summary>Sets the Payment Type combobox to the first "CareCredit" payment type in the combo box. A new "CareCredit" payment type will be created and added to the combo box if there were none to select when this method was invoked. A "CareCredit" payment type is guaranteed to be selected when this method returns.</summary>
        </member>
        <member name="M:OpenDental.FormCareCreditSetup.UpdatePropertiesInMemory(System.Int64)">
            <summary>Updates each clinic's property values with the values on the form. Validation should happen before calling this method.</summary>
        </member>
        <member name="F:OpenDental.FormCareCreditSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCareCreditSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCareCreditSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesPatientPortal.butCustomUrl_Click(System.Object,System.EventArgs)">
            <summary>When customize URL button is clicked, prompt for custom URL.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesPatientPortal.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesPatientPortal.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesPatientPortal.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormEServicesEConnector._colorCritBackground" -->
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormEServicesEConnector._colorCritText" -->
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormEServicesEConnector._colorErrBackground" -->
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormEServicesEConnector._colorErrText" -->
        <member name="M:OpenDental.FormEServicesEConnector.#ctor">
            <summary>Output from HQ initialized in FillForm().</summary>
        </member>
        <member name="M:OpenDental.FormEServicesEConnector.FillTextListenerServiceStatus">
            <summary>Updates the text box that is displaying the current status of the Listener Service.  Returns the status just in case other logic is needed outside of updating the status box.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesEConnector.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesEConnector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesEConnector.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileWeb.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileWeb.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesMobileWeb.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesAutoMsging._listClinicPrefs">
            <summary>A list used to track ClinicPrefs that have been created or changed.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesAutoMsging._listApptReminderRules">
            <summary>All rules for all clinics.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsging.SetListClinicsAndRulesHelper">
            <summary>Fills in memory Rules dictionary and clinics list based. This is very different from AppointmentReminderRules.GetRuleAndClinics.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsging.SwitchFromDefaults(OpenDentBusiness.ApptReminderType)">
            <summary>Switches the currently selected clinic over to using defaults. Also prompts user before continuing. 
            Returns false if user cancelled or if there is no need to have switched to defaults.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsging.SwitchToDefaults(OpenDentBusiness.ApptReminderType)">
            <summary>Switches the currently selected clinic over to using defaults. Also prompts user before continuing. 
            Returns false if user cancelled or if there is no need to have switched to defaults.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsging.GetIsClinicPrefEnabled(OpenDentBusiness.PrefName,System.Int64)">
            <summary>Returns true if the clinicpref exists and is set to true.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsging.GetShortenedNote(System.String)">
            <summary>Helper function that limits strings to 100 characters and adds an ellipsis.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesAutoMsging.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsging.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesAutoMsging.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesEClipboard._clinicPrefHelper">
            <summary>Helper to manager prefs relating to eClipboard and getting them to/from the db.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesEClipboard._listEClipboardSheetDefs">
            <summary>A list of all eclipboard sheet defs that are edited in this window. Synced with the database list on the ok click.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesEClipboard._listEClipboardImageCaptureDefs">
            <summary>A list of all eclipboard image capture defs that are edited in this window. Synced with the database list on the ok click.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesEClipboard.GetClinicNumEClipboardTab">
            <summary>The current clinic num for this tab, handles whether or not the practice has clinics.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesEClipboard.FillImageCaptureFrequencyUI">
            <summary>Updates the eclipboard image defs textbox to show which eclipboard images users are allowed to submit and the frequenicies at
            which they should submit images.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesEClipboard.EClipboardSetControlsToPrefDefaults">
            <summary>Doesn't touch the Defaults checkbox itself.  Sets the 5 checkboxes and the textbox that are involved in prefs.  Importantly, it also sends those same default values to the list of clinicprefs in memory where they will later be synched.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesEClipboard.EClipboardSetControlsForClinicPrefs">
            <summary>Sets the Defaults checkbox itself.  Then sets the 5 other checkboxes and the textbox that are involved in prefs.  Sets them based on the values in the local clinicpref list.  Does not change any of those values.  Called only on startup.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesEClipboard.FillGridEClipboardSheetInUse">
            <summary>Fills listEClipboardSheetsAvailable and small grid to its right.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesEClipboard.SetUIEClipboardEnabled">
            <summary>Called when user clicks on use defaults for clinic, AuthorizeTab, clinicPicker.SelectedIndexChanged, and CheckEClipboardCreateMissingForms_Click.  It sets various areas enabled or disabled.  Doesn't change the checked values.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesEClipboard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesEClipboard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesEClipboard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesMisc._wasShortOrLongDateClicked">
            <summary>Keeps track if the user selected the Short Date or Long Date format.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesMisc.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesMisc.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesMisc.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileSynch._isSynching">
            <summary>This variable prevents the synching methods from being called when a previous synch is in progress.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileSynch._isServerAvail">
            <summary>This variable prevents multiple error message boxes from popping up if mobile synch server is not available.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileSynch._isTroubleshootMode">
            <summary>If this variable is true then records are uploaded one at a time so that an error in uploading can be traced down to a single record</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.SavePrefs">
            <summary>Returns false if validation failed.  This also makes sure the web service exists, the customer is paid, and the registration key is correct.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.UploadPreference(OpenDentBusiness.PrefName)">
            <summary>Uploads Preferences to the Patient Portal /Mobile Web.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.UploadWorker(System.DateTime,System.DateTime)">
            <summary>This is the function that the worker thread uses to actually perform the upload.  Can also call this method in the ordinary way if the data to be transferred is small.  The timeSynchStarted must be passed in to ensure that no records are skipped due to small time differences.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.SynchGeneric(System.Collections.Generic.List{System.Int64},OpenDental.FormEServicesMobileSynch.SynchEntity,System.Double,System.Double@)">
            <summary>a general function to reduce the amount of code for uploading</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.TestWebServiceExists">
            <summary>An empty method to test if the webservice is up and running. This was made with the intention of testing the correctness of the webservice URL. If an incorrect webservice URL is used in a background thread the exception cannot be handled easily to a point where even a correct URL cannot be keyed in by the user. Because an exception in a background thread closes the Form which spawned it.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.SynchFromMain(System.Boolean)">
            <summary>Called from FormOpenDental and from FormEhrOnlineAccess.  doForce is set to false to follow regular synching interval.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.IgnoreCertificateErrors">
            <summary>This allows the code to continue by not throwing an exception even if there is a problem with the security certificate.</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.CreatePatients(System.Int32)">
            <summary>For testing only</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.CreateAppointments(System.Int32)">
            <summary>For testing only</summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.CreatePrescriptions(System.Int32)">
            <summary>For testing only</summary>
        </member>
        <member name="F:OpenDental.FormEServicesMobileSynch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesMobileSynch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesSetup._signupOut">
            <summary>Output from HQ initialized in FillForm().</summary>
        </member>
        <member name="M:OpenDental.FormEServicesSetup.ProcessSendSmsException(System.Exception)">
            <summary>When the user is trying to send a text message, if sending the text would exceed the users spending limit, this handles that error.
            If the user has permission to increase the spending limit, open a new FormEservicesSetup to allow them to increase their spending limit,
            otherwise warn them that they do not have permission. Returns true if the error passed in matches the spending limit error, false otherwise. </summary>
        </member>
        <member name="M:OpenDental.FormEServicesSetup.GetSignupOut(OpenDentBusiness.WebServiceMainHQProxy.EServiceSetup.SignupOut)">
            <summary>Makes a web call to WebServiceMainHQ to get the corresponding EServiceSetupFull information and then attempts to fill each tab.
            If anything goes wrong within this method a message box will show to the user and then the window will auto close via Abort.</summary>
        </member>
        <member name="F:OpenDental.FormEServicesSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesTexting.GetShortCodeOptInClinicTitle">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEServicesTexting.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesTexting.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesTexting.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEServicesSignup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEServicesSignup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEServicesSignup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormImageCatMerge.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormImageCatMerge.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormImageCatMerge.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMountItemDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMountItemDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMountItemDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMountDefGenerate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMountDefGenerate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMountDefGenerate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._isNew">
            <summary>True only when the form is opened by adding a new OrthoCase from the Account Module.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._doClearAndDisableTextFields">
            <summary>Flag for allowing or preventing the clearing of most text boxes.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._patient">
            <summary>Currently selected patient.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._procedureBanding">
            <summary>Will be null if the Orthocase is a transfer or a banding proc has not been selected yet.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._procedureDebond">
            <summary>Will be null if a debond procedure has not been completed yet.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._listOrthoProcLinksVisit">
            <summary>List of all Visit procedure links for completed visit procs.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._listProceduresVisit">
            <summary>List of all Visit procedure completed for the OrthoCase.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._orthoCaseOld">
            <summary>Assigned a copy of _orthoCaseCur on load if _isNew is false.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._orthoCase">
            <summary>Null when OrthoCase is new.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._orthoScheduleOld">
            <summary>Assigned a copy of _orthoScheduleCur on load if _isNew is false.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._orthoSchedule">
            <summary>Null when OrthoCase is new.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._orthoPlanLinkScheduleOld">
            <summary>Assigned a copy of _orthoPlanLinkScheduleCur on load if _isNew is false.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._orthoPlanLinkSchedule">
            <summary>Null when OrthoCase is new.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._orthoProcLinkBanding">
            <summary>Null when OrthoCase is new or is a transfer.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._orthoProcLinkDebond">
            <summary>Null when banding procedure hasn't been completed yet.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._listOrthoProcLinksDetached">
            <summary>list of proclinks that have been detached from the OrthoCase. Will be deleted if user clicks OK or Closes Case.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._doPreventTextChangedEvent">
            <summary>Used to return early from TextChanged events.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._isShowingSecondary">
            <summary>Used to communicate if this case is showing secondary insurance fields</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._payPlanPatient">
            <summary>Dynamic payment plan linked to the ortho case. Can be null.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase._orthoPlanLinkPatPayPlan">
            <summary>OrthoPlanLink between dynamic pay plan and ortho case. Can be null.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoCase.ListAllCompletedProcs">
            <summary>List of all completed procedures linked to ortho case. Includes banding, debond, and all visit procs. Nulls are removed.</summary>
        </member>
        <member name="T:OpenDental.FormOrthoCase.FieldType">
            <summary>Used to determine what calculation we should make for a field linked field after a textChanged event.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase.FieldType.Fee">
            <summary> 0 - Either the insurance portion or the patient portion</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase.FieldType.Percent">
            <summary> 1- A banding, debond, or all visit percent</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase.FieldType.Amount">
            <summary> 2- A banding, debond, or all visit amount</summary>
        </member>
        <member name="M:OpenDental.FormOrthoCase.TextFieldChangedHelper(OpenDental.ValidDouble,System.Double,OpenDental.ValidDouble,OpenDental.FormOrthoCase.FieldType,OpenDental.ValidDouble)">
            <summary>Updates the field linked to the changed field. Sets field color red where there are errors. Clears subordinate fields.  validDoubleSecondLinkedField is specifically for fields of the Fee Details group box. Behavior changes when secondary ins is visible.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoCase.ClearSubordinateFields(System.Object)">
            <summary>This form is intended to be filled from top to bottom. To encourage this and to prevent some amounts from being invalid,
            we clear certain fields when a field they depend on has changed.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoCase.GridOrthoSchedule_CellClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Selects all rows at and below the selected row.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoCase.SelectOrthoGridRowsHelper">
            <summary>Ortho grid rows should never have only 1 grid row selected. This is because when detaching procedures, all procedures
            under the one selected need to be removed as well.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoCase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoCase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoCase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoNoteExport.ExportDialogSetup">
            <summary>Helper method that sets up the SaveFileDialog form and then returns that </summary>
        </member>
        <member name="F:OpenDental.FormAutoNoteExport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoNoteExport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAutoNoteExport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedGroups._listClinicsAll">
            <summary>All clinics in the cache.</summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedGroups._listClinicsForGroup">
            <summary>List of all clinics for the selected FeeSchedGroup in the grid.  Used to fill gridClinics.</summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedGroups._listFeeSchedGroups">
            <summary>List of all FeeSchedGroups in db.</summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedGroups._listFeeSchedGroupsFiltered">
            <summary>List of all FeeSchedGroups that will populate the grid. This is a filtered version of the list retrieved from the cache.</summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedGroups.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedGroups.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFeeSchedGroups.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormFeeSchedGroupEdit">
            <summary>Clinics are assumed to be unrestricted by the time we get to this form.  If the user is restricted to a subset of clinics, bad things could occur.</summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedGroupEdit._feeSchedGroup">
            <summary>_feeSchedGroupCur is held by reference from the calling form when it is passed in.
            All changes to this variable are immediately available to the calling form, so we should only write to this when we are hitting OK.</summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedGroupEdit._listFeeSchedGroupsOther">
            <summary>Refresh list when the current group's fee schedule changes to quickly validate what clinics can be added to the current group.</summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedGroupEdit.RefreshAvailableClinics">
            <summary>Call this method after making changes to _listClinicsInGroup to update _listClinicsAvailable correctly.</summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedGroupEdit.ValidateUserInput">
            <summary>Checks that all information has been entered and checks if a clinic has been added to multiple groups for the same fee schedule.</summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedGroupEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedGroupEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFeeSchedGroupEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissionHashVitals._listBugSubmissionHashes">
            <summary>List of all BugSubmissionHashes in date range.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormBugSubmissionHashVitals._dictionaryBugSubmissionsByHashNum" -->
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormBugSubmissionHashVitals._dictionaryBugs" -->
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormBugSubmissionHashVitals._dictionaryPatients" -->
        <member name="M:OpenDental.FormBugSubmissionHashVitals.RefreshAll">
            <summary>Refreshes the form data, then grids, then chart.</summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissionHashVitals.RefreshData">
            <summary>Reloads all data for form.</summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissionHashVitals.RefreshGrids">
            <summary>Clears all rows and columns from every grid. Only fills gridHashes with _listHashes based on grouping option.</summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissionHashVitals.PassesHashFilter(OpenDentBusiness.BugSubmissionHash)">
            <summary>Returns true if given hash passes filter validation.</summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissionHashVitals.RefreshChart">
            <summary>Clears and loads line chart into view based on hashes in date range.</summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissionHashVitals.gridHashes_CellClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>When grid is clicked, show bug submissions grouped by version in Hash Data grid.</summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissionHashVitals.gridHashData_CellClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>When grid is clicked, show individual bug submissions in Submissions grid.</summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissionHashVitals.gridSubs_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>When grid is double clicked, open bug submission form.</summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissionHashVitals.butCheckHash_Click(System.Object,System.EventArgs)">
            <summary>When clicked, allows user to past stacktrace and enter version to attempt to find hash and matched info.</summary>
        </member>
        <member name="T:OpenDental.FormBugSubmissionHashVitals.GroupingOptions">
            <summary>Enum defining what is shown in comboGrouping.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissionHashVitals.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissionHashVitals.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBugSubmissionHashVitals.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMobileCode._funcUnlockGeneratedMobileDataByte">
            <summary>An external function that is called when we have a valid unlock code that is ready to use.
            Should only be called in TryInvoke(...) so that we can handle and display intentional thrown exception errors.</summary>
        </member>
        <member name="F:OpenDental.FormMobileCode._mobileDataByte">
            <summary>Can be null.</summary>
        </member>
        <member name="F:OpenDental.FormMobileCode._unlockCodeTimer">
            <summary>Timer used to track when a unlock code has been removed from the DB.</summary>
        </member>
        <member name="F:OpenDental.FormMobileCode._isFormLocked">
            <summary>True when a QR is beind displayed in the form, otherwise false.
            When false user can edit unlock code textboxs.</summary>
        </member>
        <member name="F:OpenDental.FormMobileCode.HasMobileCodeBeenReceived">
            <summary>True when a QR has been picked up by Xam app. False otherwise.</summary>
        </member>
        <member name="M:OpenDental.FormMobileCode.#ctor(System.Func{System.String,OpenDentBusiness.MobileDataByte})">
            <summary>Set unlockGeneratedFunc to a fuction that inserts and returns the MobileDataBye row once we have a valid unlock code.</summary>
        </member>
        <member name="M:OpenDental.FormMobileCode.VerifyAndSetUnlockCode(System.String)">
            <summary>Verifies the given unlockCode and Invokes _unlockGeneratedFuc before setting the form locked.</summary>
        </member>
        <member name="M:OpenDental.FormMobileCode.TryInvoke(System.String,OpenDentBusiness.MobileDataByte@)">
            <summary>This is the only method that should call _unlockGeneratedFunc.Invoke(...).</summary>
        </member>
        <member name="M:OpenDental.FormMobileCode.UnlockCodeTimer_Tick(System.Object,System.EventArgs)">
            <summary>Once we have a valid Unlock Code in the DB we check to see if the Unlock Code has been used yet.
            Once it has we close the form.</summary>
        </member>
        <member name="M:OpenDental.FormMobileCode.GetUiUnlockCode">
            <summary>Returns the 6 textboxes Text as a single string.</summary>
        </member>
        <member name="M:OpenDental.FormMobileCode.SetFormLocked(System.String)">
            <summary>Locks the form so that a mobile device can scan the QR code for the given unlockCode.
            Also sets various UI fields.</summary>
        </member>
        <member name="M:OpenDental.FormMobileCode.SetFormUnlocked">
            <summary>Unlocks the form so the user can enter an Unlock Code.</summary>
        </member>
        <member name="M:OpenDental.FormMobileCode.butLock_Click(System.Object,System.EventArgs)">
            <summary>Currently not used. We might bring this back one day.
            Locks or Unlocks the form when clicked.</summary>
        </member>
        <member name="M:OpenDental.FormMobileCode.textBox_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>Moves the focus between the textBoxes and butLock as needed.</summary>
        </member>
        <member name="M:OpenDental.FormMobileCode.FormMobileCode_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>When the form closes make sure to delete any MobileDataByte rows.</summary>
        </member>
        <member name="F:OpenDental.FormMobileCode.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMobileCode.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMobileCode.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsEditPatLog.#ctor(OpenDentBusiness.PatPlan)">
            <summary>Opens the window with the passed-in parameters set as the default.</summary>
        </member>
        <member name="M:OpenDental.FormInsEditPatLog.ConstructGridRows">
            <summary>Actually creates the GridRows and returns them in a list.</summary>
        </member>
        <member name="F:OpenDental.FormInsEditPatLog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsEditPatLog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInsEditPatLog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormPayment">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPayment.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPayment.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayment.PaySplitNumInitial">
            <summary>Set this value to a PaySplitNum if you want one of the splits highlighted when opening this form.</summary>
        </member>
        <member name="F:OpenDental.FormPayment.IsIncomeTransfer">
            <summary>Set to true if this payment is supposed to be an income transfer.</summary>
        </member>
        <member name="F:OpenDental.FormPayment.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPayment.ListAccountEntriesPayFirst">
            <summary>Procedures and payplan charges from account module we want to make splits for on this payment.</summary>
        </member>
        <member name="F:OpenDental.FormPayment.UnearnedAmt">
            <summary>Set to a positive amount if there is an unearned amount for the patient and they want to use it.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._dictGridChargesPaySplitIndices">
            <summary>A dictionary that stores the selected indices for the Outstanding Charges grid that are associated to a single PaySplit.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._dictGridSplitsPaySplitIndices">
            <summary>A dictionary that stores the selected indices for the Current Payment Splits grid that are associated to a single PaySplit.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._dictGridTreatPlanPaySplitIndices">
            <summary>A dictionary that stores the selected indices for the Treat Plan grid that are associated to a single PaySplit.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._dictPatients">
            <summary>A dictionary or patients that we may need to reference to fill the grids to eliminate unnecessary calls to the DB.
            Should contain all patients in the current family along with any patients of payment plans of which a member of this family is the guarantor.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._family">
            <summary>Direct family members of the current patient.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._listAccountEntriesCharges">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPayment._listCreditCards">
            <summary>Stored CreditCards for _patCur.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._listClinics">
            <summary>List of all clinics.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._listPaySplitsForSecLog">
            <summary>List of paysplit that were deleted and need a securitylog entry.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._listPaySplitsOld">
            <summary>The original splits that existed when this window was opened.  Empty for new payments.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._listPaySplits">
            <summary>A current list of splits showing on the left grid.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._loadData">
            <summary>Holds most all the data needed to load the form.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._tableBalances">
            <summary>This table gets created and filled once at the beginning.  After that, only the last column gets carefully updated.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._wasCreditCardSuccessful">
            <summary>Set to true when X-Charge or PayConnect makes a successful transaction, except for voids.</summary>
        </member>
        <member name="F:OpenDental.FormPayment.XchargeMilestone">
            <summary>Used to track position inside the MakeXChargeTransaction(), for troubleshooting purposes.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._xPath">
            <summary>The local override path or normal path for X-Charge.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._programX">
            <summary>Program X-Charge.</summary>
        </member>
        <member name="F:OpenDental.FormPayment._xWebResponse">
            <summary>The XWebResponse that created this payment. Will only be set if the payment originated from XWeb or EdgeExpress Card Not Present.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.#ctor(OpenDentBusiness.Patient,OpenDentBusiness.Family,OpenDentBusiness.Payment,System.Boolean)">
            <summary>PatCur and FamCur are not for the PatCur of the payment.  They are for the patient and family from which this window was accessed.
            Use listSelectedProcs to automatically attach payment to specific procedures.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.GetFamilyOrSuperFamily">
            <summary>Returns either the family or super family of the current patients 
            depending on whether or not the "Show Charges for Superfamily" checkbox is checked.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.GetListProcCodesFiltered">
            <summary>List of user-inputed proc codes to filter outstanding charges grid on.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.FormPayment_Shown(System.Object,System.EventArgs)">
            <summary>The shown event is for code that requires the Payment window to be visible already. E.g. showing MsgBoxCopyPaste.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.butAddManualSplit_Click(System.Object,System.EventArgs)">
            <summary>Creates a paysplit for the user to edit manually.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.checkShowSuperfamily_Click(System.Object,System.EventArgs)">
            <summary>Constructs a list of AccountCharges and goes through and links those charges to credits.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.gridCharges_CellClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>When a charge is selected this method highlights all paysplits associated with it.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.gridSplits_CellClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>When a paysplit is selected this method highlights all charges associated with it.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.gridSplits_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Allows editing of an individual double clicked paysplit entry.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.gridTreatPlan_CellClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>When a Treatment Plan Procedure is selected this method highlights all paysplits associated with it.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.ShowOverridePrompt">
            <summary>Prompt the user if this payment already had IsCcCompleted set to true.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.GetProvNum">
            <summary>Returns the selected provider or first provider. Otherwise returns -1.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.AddOneSplit(System.Boolean)">
            <summary>Adds one split to _listPaySplits to work with.  Does not link the payment plan, that must be done outside this method.
            Called when checkPayPlan click, or upon load if auto attaching to payplan, or upon OK click if no splits were created.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.GetSuggestedAutoSplits">
            <summary>Executes auto-split logic for the current state of the window and returns the suggested payment splits.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.CanAddNewCreditCard(OpenDentBusiness.Program,System.String)">
            <summary>Returns true if the user can add a new credit card.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.CellClickHelper(OpenDental.UI.GridOD)">
            <summary>Takes an ODGrid and evaluates its single click events - proccessing selections based on paySplit type and entry type.
            This method requires the passed in grids to have the same number of rows.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.CheckUIState">
            <summary>Mimics FormClaimPayEdit.CheckUIState().</summary>
        </member>
        <member name="M:OpenDental.FormPayment.CreateSplit(OpenDentBusiness.AccountEntry,System.Decimal,System.Boolean)">
            <summary>Creates a split similar to how CreateSplitsForPayment does it, but with selected rows of the grid.
            If payAmt==0, attempt to pay charge in full.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.CreatePartialSplitClickHelper(OpenDental.UI.GridOD)">
            <summary>A method which, for a given grid, allows the user to split a payment between procedures on it.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.CreatPartialSplitForAccountEntries(OpenDentBusiness.AccountEntry[])">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPayment.DeleteSelected(System.Boolean)">
            <summary>Deletes selected paysplits from the grid and attributes amounts back to where they originated from.
            This will return a list of payment plan charges that were affected. This is so that splits can be correctly re-attributed to the payplancharge
            when the user edits the paysplit. There should only ever be one payplancharge in that list, since the user can only edit one split at a time.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.DisablePaymentControls">
            <summary>Disables merchant buttons if the PaymentsCompletedDisableMerchantButtons pref is true.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.DoShowAccountEntry(OpenDentBusiness.AccountEntry)">
            <summary>Returns true if the AccountEntry matches the currently selected filters.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.DoHighlightPaySplit(OpenDentBusiness.PaySplit)">
            <summary>Returns true if the PaySplits matches the currently selected filters.
            Returns false if no filters are selected or the paysplit doesn't fit the filter.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.FillFiltersChargesTreatPlan(System.Boolean)">
            <summary>Fills the filter controls and preserves the current values based on the parameter passed in.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.FillGridCharges">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPayment.FillGridSplits">
            <summary>Fills the Current Payment Splits grid and then invokes methods to refresh the charges, treat plan, and allocated grids.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.FillGridTreatPlan">
            <summary>Fills Treatment Plan Procedures grid.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.FilterChangeCommittedChargesTreatPlan(System.Object,System.EventArgs)">
            <summary>Called whenever any of the Outstanding or Treat Plan filtering objects are changed.  Rechecks filtering and refreshes the grid.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.FilterChangeCommittedPaySplits(System.Object,System.EventArgs)">
            <summary>Called whenever any of the Payment Splits filtering objects are changed.  Rechecks filtering and refreshes the grid.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.GetAccountEntriesFromGrid(OpenDental.UI.GridOD)">
            <summary>This method goes through the passed in grid and returns the selected account entries in a normalized list of list of account entries.
            If there are no current selections in the grid passed in then all rows will be treated as selected.
            This is considered normalized because the Outstanding Charges and Treatment Planned Procedures grids can have a single AccountEntry object
            per row (not grouped) or a list of AccountEntry objects per row (when using the Group By combo box).</summary>
        </member>
        <member name="M:OpenDental.FormPayment.HandleVoidPayment(System.String,System.Double,System.String,OpenDentBusiness.CreditCardSource,System.Boolean)">
            <summary>Prints receipt, adds splits, etc. Closes the current window.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.HandleVoidPaymentForFormClosing(System.String,System.String,System.Boolean,System.Double,OpenDentBusiness.CreditCardSource)">
            <summary>Only for when the user hits Cancel and causes the previous payment to be voided.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.HasPayConnect">
            <summary>Returns true if payconnect is enabled and completely setup.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.HasPaySimple">
            <summary>Returns true if PaySimple is enabled and completely setup.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.HighlightChargesForSplits">
            <summary>Highlights the charges that corresponds to the selected paysplit.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.Init(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Performs all of the Load functionality.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.MakeEdgeExpressTransactionRCM(OpenDentBusiness.EdgeExpressTransType,System.Double,System.Boolean,System.String,System.String,System.Decimal,OpenDentBusiness.CreditCard)">
            <summary>Processes a credit card transaction using EdgeExpress.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.CleanString(System.String)">
            <summary>Helper for EdgeExpress.CleanString()</summary>
        </member>
        <member name="M:OpenDental.FormPayment.CheckDynamicPaymentPlanRebalance">
            <summary>Checks if the dynamic payment plan has any charges with overpaid interest or principal. If it does, prompts the user to balance on prepay, principal, or return to payment page. Returns false if the user wants to stay in the Payment window.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.SetComboDepositAccounts">
            <summary>Call this method when listPayType changes.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.UpdateChargeTotalWithSelectedEntries">
            <summary>Updates the 'Total' text box that displays underneath the Outstanding Charges and Treat Plan grids with their selected rows. Totals all rows when no rows are selected.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.ValidateForCreditCardPayment(System.Boolean,OpenDentBusiness.CreditCard@)">
            <summary>Returns false if this payment cannot be processed.</summary>
            <param name="creditCardSelected">The credit card selected in the combo box. Will be null if nothing is selected.</param>
        </member>
        <member name="M:OpenDental.FormPayment.VoidEdgeExpressTransaction(System.String)">
            <summary>Only used to void a transaction that has just been completed when the user hits Cancel. Uses the same Print Receipt settings as the 
            original transaction.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.VoidXChargeTransaction(System.String,System.String,System.Boolean)">
            <summary>Only used to void a transaction that has just been completed when the user hits Cancel. Uses the same Print Receipt settings as the 
            original transaction.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.MakePayConnectTransaction(System.Double)">
            <summary>Launches the PayConnect transaction window.  Returns null upon failure, otherwise returns the transaction detail as a string.
            If prepaidAmt is not zero, then will show the PayConnect window with the given prepaid amount and let the user enter card # and exp.
            A patient is not required for prepaid cards.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.MakePaySimpleTransaction(System.Double,System.String)">
            <summary>Launches the PaySimple transaction window.  Returns null upon failure, otherwise returns the transaction detail as a string.
            If prepaidAmt is not zero, then will show the PaySimple window with the given prepaid amount and let the user enter card # and exp.
            A patient is not required for prepaid cards.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.MakeXChargeTransaction(System.Double)">
            <summary>Launches the XCharge transaction window and then executes whatever type of transaction was selected for the current payment.
            This is to help troubleshooting. Returns null upon failure, otherwise returns the transaction detail as a string.
            If prepaidAmt is not zero, then will show the xcharge window with the given prepaid amount and let the user enter card # and exp.
            A patient is not required for prepaid cards.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.MakeEdgeExpressTransaction(System.Double,System.Int64)">
            <summary>Returns null upon failure, otherwise returns the transaction detail as a string.</summary>
        </member>
        <member name="M:OpenDental.FormPayment.butDeleteAllSplits_Click(System.Object,System.EventArgs)">
            <summary>Deletes all payment splits in the grid.</summary>
        </member>
        <member name="T:OpenDental.FormPayment.PaySplitHelper">
            <summary>Helper struct to accommodate equating PaySplit objects to one another.
            This window shows PaySplits in one grid and AccountEntries in another grid and selections in one grid need to affect the other.
            Matching is done by looking for and selecting any related entries to the PaySplit in question.
            This helper struct is required because editing old payments won't have equating PaySplit objects but will have equating SplitNums
            and new PaySplits won't have equating SplitNums but will have equating TagOD objects.  Both need to be supported at the same time.
            E.g. if a PaySplit is selected, loop through the account entries in the other grid looking for a match in the SplitCollection.</summary>
        </member>
        <member name="F:OpenDental.FormPayment.PaySplitHelper.SplitNum">
            <summary>The primary key of PaySplitCur.  Can be 0 when the PaySplit is new (user just added it and hasn't been inserted yet).</summary>
        </member>
        <member name="F:OpenDental.FormPayment.PaySplitHelper.SplitGUID">
            <summary>The GUID from the TagOD on the PaySplit object that this PaySplitHelper represents.</summary>
        </member>
        <member name="T:OpenDental.FormPayPlanDynamic">
            <summary>This window is used to set up Dyanmic Payment Plans.  These rules will be used by the OpenDentalService for making charges.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanDynamic.PatNumGoto">
            <summary>Go to the specified patnum. If this number is not 0, patients.Cur will change to new patnum, and Account refreshed.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanDynamic._listProceduresForNewPayPlan">
            <summary>List of procedures that should be attached to a pay plan if it is new.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanDynamic._hasGoToButtons">
            <summary>Will be false if pay plan was opened from another window</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.#ctor(OpenDentBusiness.PayPlan,System.Boolean,System.Collections.Generic.List{OpenDentBusiness.Procedure})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.LoadPayDataFromDB">
            <summary>Used to load the local payment plan data. Passing in an optional payPlan will override the use of the class wide pay plan module data. Using the optional for the initial load.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.FillCharges(System.Boolean)">
            <summary>Fills both charges that have come due (black in color) and expected charges (grey) that have not been added yet as well
            as payments that have been made for the charges that have come due. Returns true if the method wasn't returned from early due to errors.
            Returns false if TryGetTermsFromUI fails or terms.AreTermsValid fails.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.TryGetTermsFromUI(OpenDentBusiness.PayPlanTerms@,System.Boolean,System.Boolean)">
            <summary>Helper to get and store the UI elements so we do not need to pass in more than what is necessary. Set from the UI, not DB.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.SetTermsFromDb">
            <summary>Resets the UI to what was loaded from the database.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.ButUnlock_Click(System.Object,System.EventArgs)">
            <summary>Unlocks a saved payment plan for editing. Allows users to try out new terms which will not be saved unless user specifies.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.ButCancelTerms_Click(System.Object,System.EventArgs)">
            <summary>Sets UI elements back to what they were before unlocking (change back to what the window loaded with originally)</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.LockTerms(System.Boolean,System.Boolean)">
            <summary>This is the gentle "lock", not the permanent one.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.UnlockTerms">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.LockProduction">
            <summary>different then locking the terms. This checkbox should lock the entire payment plan down. No changing terms, no adding production.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.UnlockProduction">
            <summary>allowed for user to change their mind on new payment plans. They will be stopped during validation if they have APR (required to be locked)</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.AddProcedures(System.Collections.Generic.List{OpenDentBusiness.Procedure})">
            <summary>Creates pay plan links and pay plan production entries for the list of procs passed in.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.CreateSchedule">
            <summary>Goes through the logic to create a new schedule. Returns true if a terms were successfully validated and correct.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.CalculateDateInterestStartFromInterestDelay">
            <summary>Calculates the interest start date and assigns it to the UI field, then returns the interest start date.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.butAddCharge_Click(System.Object,System.EventArgs)">
            <summary>When the button to issue new charges is pressed.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.gridLinkedProduction_CellClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>This will enable/disable the delete production button depending on the cell type.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.PushSelectedPayPlanToEclipboard(OpenDentBusiness.MobileAppDevice)">
            <summary>Sends the current PayPlan to a given target mobile device.
            Shows a MsgBox when done or if error occurs.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.OpenUnlockCodeForPayPlan">
            <summary>Opens a FormMobileCode window with the current PayPlan.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.GetPayPlanPDF(OpenDentBusiness.PayPlan)">
            <summary>Returns a PDF for the current PayPlan and sets out PayPlan to the current PayPlan.
            If nothing is selected in gridPayPlans then returns null and out PaymentPlan is set to null.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.PayPlanToSheet(OpenDentBusiness.PayPlan)">
            <summary>Creates a new sheet from a given Pay plan.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.SaveData(System.Boolean,System.Boolean)">
            <summary>Returns true for successful saving and false if there was a problem. 
            isUiValid is only true if a previous method running TryGetTermsFromUI and has returned true. 
            isUiValid is false when another method has run TryGetTermsFromUI and returned false, 
            meaning an error message has been presented and we don't want to present another here.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanDynamic.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlanDynamic.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcBandingSelect._patNum">
            <summary>PatNum of currently selected patient.</summary>
        </member>
        <member name="F:OpenDental.FormProcBandingSelect._listProceduresTpBanding">
            <summary>List of treatment planned banding procedures for the current patient.</summary>
        </member>
        <member name="F:OpenDental.FormProcBandingSelect.ProcedureSelected">
            <summary>The procedure selected from the grid.</summary>
        </member>
        <member name="F:OpenDental.FormProcBandingSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcBandingSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProcBandingSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormProcSelect">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProcSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcSelect._listProcedures">
            <summary>A list of completed procedures that are associated to this patient or their payment plans.</summary>
        </member>
        <member name="F:OpenDental.FormProcSelect._isSimpleView">
            <summary>Does not perform FIFO logic.</summary>
        </member>
        <member name="F:OpenDental.FormProcSelect._isMultiSelect">
            <summary>Set to true to enable multiple procedure selection mode.</summary>
        </member>
        <member name="F:OpenDental.FormProcSelect.ListProceduresSelected">
            <summary>If form closes with OK, this contains selected proc num.</summary>
        </member>
        <member name="F:OpenDental.FormProcSelect.ListPaySplits">
            <summary>List of paysplits for the current payment.</summary>
        </member>
        <member name="M:OpenDental.FormProcSelect.#ctor(System.Int64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Displays completed procedures for the passed-in pat. 
            Pass in true for isSimpleView to show all completed procedures, 
            otherwise the user will be able to pick between credit allocation strategies (FIFO, Explicit, All).</summary>
        </member>
        <member name="M:OpenDental.FormProcSelect.SetSelectedAccountEntries">
            <summary>Sets the public field lists with the selected grid items. ListSelectedProcs and ListAccountEntries.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkHideClinics.showClinicStateWarning(System.Boolean)">
            <summary>Show label warning the user clinics may not be visible due to clinic restriction if they are in fact clinic restricted.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkHideClinics.SyncHiddenProgramProperties">
            <summary>Syncs any changes made by the user to the list of Program Properties that indicates this Program Link's button should be hidden
            per clinic.  Only syncs changes made to ProgramProperties for clinics the user has access to.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkHideClinics.NaturalSort(OpenDentBusiness.Clinic,OpenDentBusiness.Clinic)">
            <summary>A sort to switch list sorting between ASCIIbetical and Alphabetical. This method is ClinicSort(...) from FormClinics.cs.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkHideClinics.butRight_Click(System.Object,System.EventArgs)">
            <summary>Moving a clinic from Hidden to Visible</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkHideClinics.butLeft_Click(System.Object,System.EventArgs)">
            <summary>Moving a clinic from Visible to Hidden</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkHideClinics.MoveClinics(OpenDental.UI.ListBox,OpenDental.UI.ListBox)">
            <summary>Method reads in a ListBox to move items from, and another ListBox to move items into. It checks the first list's selected indices and then, if it 
            finds a matching clinic it removes it from the "from" list and moves it to the "to" list.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkHideClinics.CheckOrderAlphabetical_CheckedChanged(System.Object,System.EventArgs)">
            <summary>If the ordering has changed, update the list and maintain selection.</summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkHideClinics.ReselectClinics(OpenDental.UI.ListBox,System.Collections.Generic.List{System.Int64})">
            <summary>Maintain the selection of the user when either moving items between sides or changing sort typyes.</summary>
        </member>
        <member name="F:OpenDental.FormProgramLinkHideClinics.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkHideClinics.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProgramLinkHideClinics.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormQueryMonitor._concurrentQueueDbQueryObjs">
            <summary>Queries will be coming in at an alarming rate and this queue will get filled via DbMonitor events that are fired.
            There will be a timer running on the UI thread that will be pulling queries out of this queue and storing them into a dictionary.</summary>
        </member>
        <member name="F:OpenDental.FormQueryMonitor._dictionaryQueries">
            <summary>Stores all query objects that this instance of the query monitor has captured. 2022-10-05-js-dictionary ok</summary>
        </member>
        <member name="F:OpenDental.FormQueryMonitor._dbQueryObj">
            <summary>Shallow copy of the currently selected query object.  Do not trust the grid because it gets truncated as the feed grows.</summary>
        </member>
        <member name="F:OpenDental.FormQueryMonitor.IsPayloadMonitor">
            <summary> True if monitoring Middle Tier Payloads, false if monitoring queries on a direct DB connection </summary>
        </member>
        <member name="F:OpenDental.FormQueryMonitor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormQueryMonitor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormQueryMonitor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFHIRAssignKey.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFHIRAssignKey.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFHIRAssignKey.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSupportStatus.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSupportStatus.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSupportStatus.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaxAddress.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaxAddress.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTaxAddress.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormUserEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormUserEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormUserEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormUserEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormUserEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormUserEdit.UserodCur">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormUserEdit._passwordTyped">
            <summary>The password that was entered in FormUserPassword.</summary>
        </member>
        <member name="F:OpenDental.FormUserEdit._listAlertCategories">
            <summary>The alert categories that are available to be selected. Some alert types will not be displayed if this is not OD HQ.</summary>
        </member>
        <member name="F:OpenDental.FormUserEdit._userOdPrefDoseSpotDefault">
            <summary>The UserOdPref for DoseSpot User ID.</summary>
        </member>
        <member name="M:OpenDental.FormUserEdit.#ctor(OpenDentBusiness.Userod,System.Boolean,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormUserEdit.RefreshUserTree">
            <summary>Refreshes the security tree in the "Users" tab.</summary>
        </member>
        <member name="F:OpenDental.FormEdgeExpressTrans.DoPromptSignature">
            <summary>Set on the way in based on the property value for the clinic on the payment.  Sets the initial checked state of checkSignature.
            When the user presses OK, this value reflects the final state of checkSignature when the user hits OK.</summary>
        </member>
        <member name="F:OpenDental.FormEdgeExpressTrans.DoPrintReceipt">
            <summary>Set on the way in based on the property value for the clinic on the payment.  Sets the initial checked state of checkPrintReceipt.
            When the user presses OK, this value reflects the final state of checkPrintReceipt when the user hits OK.</summary>
        </member>
        <member name="F:OpenDental.FormEdgeExpressTrans.TransactionId">
            <summary>The transaction ID entered. Only for voids and returns.</summary>
        </member>
        <member name="F:OpenDental.FormEdgeExpressTrans.EdgeExpressApiTypeCur">
            <summary>'P' for pinpad, run transaction using RCM. 'C' for computer, run transaction using Card Not Present</summary>
        </member>
        <member name="F:OpenDental.FormEdgeExpressTrans.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEdgeExpressTrans.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEdgeExpressTrans.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormXDRSetup._listClinicNumsUser">
            <summary>Local cache of all of the clinic nums the current user has permission to access at the time the form loads.
            Filled at the same time as comboClinic and is used to set programproperty.ClinicNum when saving.</summary>
        </member>
        <member name="F:OpenDental.FormXDRSetup._clinicNum">
            <summary>Can be 0 for "Headquarters" or non clinic users.</summary>
        </member>
        <member name="M:OpenDental.FormXDRSetup.SaveLocationIdToList">
            <summary>Updates the in memory list with any changes made to the current locationID for each clinic before showing the next one.</summary>
        </member>
        <member name="F:OpenDental.FormXDRSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormXDRSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormXDRSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormTerminalManager">
            <summary>Form used to manage kiosk terminals and load/clear patient forms displayed on the kiosks.</summary>
        </member>
        <member name="F:OpenDental.FormTerminalManager.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTerminalManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTerminalManager.InitializeComponent">
            <summary>
             Required method for Designer support - do not modify
             the contents of this method with the code editor.
             </summary>
        </member>
        <member name="M:OpenDental.FormTerminalManager.#ctor(System.Boolean,OpenDentBusiness.Appointment)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormTerminalManager.SheetDevice">
            <summary>A wrapper class so that we can treat TerminalActives and MobileAppDevices interchangeably within this form. Contains a Kiosk
            and a MobileDevice object, however only one of them can have a value for each instance of this class.</summary>
        </member>
        <member name="F:OpenDental.FormTerminalManager.SheetDevice.TerminalActiveComputerKiosk">
            <summary>The ComputerKiosk we are looking at. Must be null if MobileDevice is not null.</summary>
        </member>
        <member name="F:OpenDental.FormTerminalManager.SheetDevice.MobileAppDevice">
            <summary>The Mobile Device we are looking at. Must be null if ComputerKiosk is not null.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalManager.SheetDevice.GetTerminalName">
            <summary>The name the office uses to identify this device. The ComputerName for Kiosks and the DeviceName for MobileDevices.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalManager.SheetDevice.GetSessionName">
            <summary>The SessionName for the Kiosk that we use to uniquely identify each kiosk. Not applicable for MobileDevices and returns 
            an empty string when this instance represents a MobileDevice.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalManager.SheetDevice.GetPatNum">
            <summary>The PatNum for the patient who is currently using this device or computer. 0 If none. -1 for MobileDevices only, which
            indicates a patient is checking in but we don't know which patient it is yet.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalManager.SheetDevice.GetPatName">
            <summary>The name of the patient who is currently using this device or computer. Returns empty string if no patient, returns the
            message "Check-In In-Progress" if someone is checking in but we don't know who yet.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalManager.SheetDevice.IsKiosk">
            <summary>Returns true if ComputerKiosk is not null and false if it is. This makes the assumption that only one or the other
            of ComputerKiosk or MobileDevice can be initialized at a time (which shouldbe enforced by the structure of this class.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalManager.SheetDevice.IsMobileAppDevice">
            <summary>Returns true if _mobileDevice is not null and false if it is. This makes the assumption that only one or the other
            of ComputerKiosk or MobileDevice can be initialized at a time (which shouldbe enforced by the structure of this class.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalManager.SheetDevice.Matches(OpenDental.FormTerminalManager.SheetDevice)">
            <summary>Just checks if the primary keys for this device and the passed in device matches</summary>
        </member>
        <member name="M:OpenDental.FormTerminalManager.SheetDevice.Delete">
            <summary>Delete the Kiosk or MobileDevice.</summary>
        </member>
        <member name="M:OpenDental.FormTerminalManager.SheetDevice.SetPatNum(System.Int64)">
            <summary>Sets the PatNum for the selected Kiosk or MobileDevice.</summary>
        </member>
        <member name="F:OpenDental.FormScheduledProcessesEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormScheduledProcessesEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormScheduledProcessesEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormScheduledProcesses.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormScheduledProcesses.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormScheduledProcesses.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormAdjust">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAdjust.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAdjust.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAdjust.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAdjust.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAdjust._checkZeroAmount">
            <summary>When true, the OK click will not let the user leave the window unless the check amount is 0.</summary>
        </member>
        <member name="F:OpenDental.FormAdjust._listDefsAdjPosCats">
            <summary>All positive adjustment defs.</summary>
        </member>
        <member name="F:OpenDental.FormAdjust._listDefsAdjNegCats">
            <summary>All negative adjustment defs.</summary>
        </member>
        <member name="F:OpenDental.FormAdjust._adjRemAmt">
            <summary>Filtered list of providers based on which clinic is selected. If no clinic is selected displays all providers. Also includes a dummy clinic at index 0 for "none"</summary>
        </member>
        <member name="M:OpenDental.FormAdjust.#ctor(OpenDentBusiness.Patient,OpenDentBusiness.Adjustment,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormAdjust.FillComboProv">
            <summary>Fills combo provider based on which clinic is selected and attempts to preserve provider selection if any.</summary>
        </member>
        <member name="T:OpenDental.FormApptEdit">
            <summary>_appointment.AptNum cannot be trusted fully inside of this form. This form can create new appointments without inserting them into the DB. Due to this, make sure you consider new appointments and handle accordingly. See _isInsertRequired. Edit window for appointments.  Will have a DialogResult of Cancel if the appointment was marked as new and is deleted.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormApptEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptEdit.HasProcsChangedAndCancel">
            <summary>Procedure were attached/detached from appt and the user clicked cancel or closed the form.  Used in ApptModule to tell if we need to refresh.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit.IsEcwCloseOD">
            <summary>This is the way to pass a "signal" up to the parent form that OD is to close.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit.IsInChartModule">
            <summary>True if appt was double clicked on from the chart module gridProg.  Currently only used to trigger an appointment overlap check.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit.IsInViewPatAppts">
            <summary>True if appt was double clicked on from the ApptsOther form.  Currently only used to trigger an appointment overlap check.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._apptBreakSelection">
            <summary>Used when FormApptBreak is required to track what the user has selected.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._isEcwHL7Sent">
            <summary>eCW Tight or Full enabled and a DFT msg for this appt has already been sent.  The 'Finish &amp; Send' button will say 'Revise'</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._isInsertRequired">
            <summary>If no aptNum was passed into this form, this boolean will be set to true to indicate that _appointment.AptNum cannot be trusted until after the insert occurs. Someday we should consider using the IsNew flag instead after we remove all of the appointment pre-insert logic.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._isOnLoad">
            <summary>Used when first loading the form to skip calling fill methods multiple times.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._isSchedulingUnscheduledAppt">
            <summary>Indicates this appointment has been opened from the Unscheduled list.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._listLabCases">
            <summary>Labs for the current appointment.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._listAdjustments">
            <summary>A list of all Adjustments that are related to the patient's current procedures</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._listAppointments">
            <summary>A list of all appointments that are associated to any procedures in the Procedures on this Appointment grid.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._listAppointmentsOld">
            <summary>Stale deep copy of _listAppointments to use with sync.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._listAppointmentTypes">
            <summary>Matches list of appointments in comboAppointmentType. Does not include hidden types unless current appointment is of that type.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._listClaimProcs">
            <summary>A list of all ClaimProcs that are related to the patient's current procedures</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._listProceduresForAppointment">
            <summary>List of all procedures that show within the Procedures on this Appointment grid.  Filled on load.  Used to double check that we update other appointments that we could steal procedures from (e.g. planned appts with tp procs).</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._listProcNumsAttachedStart">
            <summary>All ProcNums attached to the appt when form opened.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._listProcNumsPreSelected">
            <summary>All ProcNums intended to be selected on load, but without altering any procedure properties.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._loadData">
            <summary>The data necessary to load the form.</summary>
        </member>
        <member name="F:OpenDental.FormApptEdit._timerLockDelay">
            <summary>Timer prevents accidental clicks by delaying interaction with gridProc, listQuickAdd, and butAttachAll based on PrefName.FormClickDelay value. Disposed.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.#ctor(System.Int64,System.Int64,System.Boolean,OpenDentBusiness.Patient,System.Collections.Generic.List{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.Int64})">
            <summary>When aptNum is 0, make sure to set a valid patNum because a new appointment will be created/inserted on OK click.
            Set useApptDrawingSettings to true if the user double clicked on the appointment schedule in order to make a new appointment.
            listPreSelectedProcNums is used to preselect procs in the grid without pre-altering the procs properties, such as AptNum/PlannedAptNum</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.checkShowCommAuto_Click(System.Object,System.EventArgs)">
            <summary>Uses the UserODPref to store ShowAutomatedCommlog separately from the chart module.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.comboApptType_SelectionChangeCommitted(System.Object,System.EventArgs)">
            <summary>Only catches user changes, not programatic changes. For instance this does not fire when loading the form.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.IsSchedulingUnscheduledAppt(System.Boolean)">
            <summary>Indicates the Appointment is being opened from the unscheduled list.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.AptTypeHelper">
            <summary>Returns true if the appointment type was successfully changed, returns false if the user decided to cancel out of doing so.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.CalcEstPatientPortion">
            <summary>Calculates the estimated patient portion to insert into the grid</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.CalcPatientFeeThisAppt">
            <summary>Calculates the fee for this appointment using the highlighted procedures in the procedure list.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.DisableDetachingOfCompletedProcFromCompletedAppt(OpenDentBusiness.Procedure,OpenDentBusiness.Appointment,System.String@)">
            <summary>Validates a given procedure and appointment if the PrefName.ApptPreventChangesToCompleted is true. 
            If the preference is on, the Procedure is complete and the Appointment is complete - it returns true. 
            If the preference is off, the Procedure is not complete OR the Appointment is not complete, it returns false. 
            This method outs a msg variable that is passed up from DoPreventCompletedApptProcChange(...).</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.DoPreventCompletedApptChange(OpenDental.PreventChangesApptAction)">
            <summary>Returns true if the user is not allowed to change a completed appointment.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.DoPreventCompletedApptProcChange(OpenDentBusiness.Procedure,System.String@)">
            <summary>An overload for DoPreventCompletedApptChange(...) that also handles Procedures. The inclusion of Proc's being blocked from
            detachment when complete on a complete Appt necessitates a Proc be passed in to validate its status and a list of Procs be passed 
            in to ensure that when a singular Proc remains on an Appt, the list can be checked to ensure that we do not allow its detachment 
            from the Appt due to consumate logic.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.FillCombosProv">
            <summary>Fills combo providers based on which clinic is selected and attempts to preserve provider selection if any.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.GenerateProceduresIntoPdf">
            <summary>Creates a new .pdf file containing all of the procedures attached to this appointment and returns the contents of the .pdf file as a base64 encoded string.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.GetApptStatusSelected">
            <summary>The currently selected ApptStatus.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.InvertCurProcSelected(System.Int32)">
            <summary>Will only invert the specified procedure in the grid, even if the procedure belongs to another appointment.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.OnDelete_Click(System.Boolean)">
            <summary>Deletes the appointment, creating appropriate logs and commlogs.  Pass in </summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.RefreshEstPatientPortion">
            <summary>Fully refreshes the data and then calculate the estimated patient portion</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.SetAptCurComboStatusSelection">
            <summary>Sets comboStatus based on _appointment.AptStatus.
            _appointment.AptStatus is not updated with UI selection until after UpdateListAndDB(...) is called.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.SetTimeSliderColors">
            <summary>This was FillTime, but all it does now is set the color.  This is still useful.  Color can change frequently.</summary>
        </member>
        <member name="M:OpenDental.FormApptEdit.UpdateListAndDB(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Validates and saves appointment and procedure information to DB.</summary>
        </member>
        <member name="M:OpenDental.FormBackup.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormBackup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormBackup.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormBackup.hasDriveSpace(System.String,System.Double)">
            <summary>
            used to check drive space before performing a backup. Happens on main thread before passing the backup method to ProgressOD.
            </summary>
            <returns>bool: True if there is enough disk space, or disk space cannot be determined. Otherwise false.</returns>
        </member>
        <member name="M:OpenDental.FormBackup.InstanceMethodDatabaseBackup(System.String,System.String,System.String,System.Boolean,System.String@)">
            <summary>Throws exceptions</summary>
        </member>
        <member name="M:OpenDental.FormBackup.InstanceMethodRestore(System.String,System.String)">
            <summary>This is the function that the worker thread uses to restore the A-Z folder.</summary>
        </member>
        <member name="M:OpenDental.FormBackup.GetFileSizes(System.String,System.String)">
            <summary>Counts the total KB of all files that will need to be copied from one directory to another recursively. Used to display the progress bar.  Supplied paths must end in \. toPath might not exist.</summary>
        </member>
        <member name="M:OpenDental.FormBackup.GetFileSizes(System.String)">
            <summary>Counts the total KB of all files in the given directory.  Not recursive since it's just used for db files.  Used to display the progress bar.</summary>
        </member>
        <member name="M:OpenDental.FormBackup.CopyDirectoryIncremental(System.String,System.String,System.Double,System.Boolean)">
            <summary>A recursive fuction that copies any new or changed files or folders from one directory to another.  An exception will be thrown if either directory does not already exist.  fromPath is the fully qualified path of the directory to copy.  toPath is the fully qualified path of the destination directory.  Both paths must include a trailing \.  The max size should be calculated ahead of time.  It's passed in for use in progress bar.</summary>
        </member>
        <member name="T:OpenDental.FormClaimEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit.IsFromBatchWindow">
            <summary>If this claim edit window is accessed from the batch ins window, then set this to true to hide the batch button in this window and prevent loop.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._listClaimProcsForClaim">
            <summary>Call SetListClaimProcsForClaim() instead of assigning a list directly to this. Contains the claimprocs for the claim.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._listClaimProcs">
            <summary>All claimprocs for the patient. Used to calculate remaining benefits, etc.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._listProcedures">
            <summary>List of all procedures for this patient.  Used to get descriptions, etc.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._listSubstituionLinks">
            <summary>List of substitution links.  Lazy loaded, do not directly use this variable, use the property instead.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._isNotAuthorized">
            <summary>When user first opens form, if the claim is S or R, and the user does not have permission, the user is informed, and this is set to true.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._claimCondCodeLog">
            <summary>can be null</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._canadianSecondaryClaimNum">
            <summary>Can be zero. Only populated when a secondary Canadian claim is automatically sent as a result of sending primary.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._provNumOrdering">
            <summary>The Ordering provider, for medical claims.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._referralOrdering">
            <summary>If this claim is attached to an ordering referral, then this varible will not be null.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._isForOrthoAutoPay">
            <summary>When true, a supplemental payment will get automatically created on Shown().</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._isPaymentEntered">
            <summary>Set true if user entered payment.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._loadData">
            <summary>Data necessary to load the form.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._listClaimStatuses">
            <summary>Claim status based on preference and claim type. Used to fill comboClaimStatus too.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._blueBookEstimateData">
            <summary>Call GetBlueBookEstimateData() instead of using this directly. Holds all data needed to make blue book estimates.</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._clearinghouse">
            <summary>Clearinghouse for current claim set in load method and then used to skip any unneccessary flag setting logic in UpdateClaim()</summary>
        </member>
        <member name="F:OpenDental.FormClaimEdit._heightCalculated">
            <summary>Used to adjust the height of the window so that we show as much of the Form as possible with larger screens. In some cases, such as with zoom, the window will have it's height shortened in order to fit into the screen more efficiently. We needed a variable so that we could do these calculations within the constructor and then change the height within the load method.</summary>
        </member>
        <member name="P:OpenDental.FormClaimEdit.PermissionClaimEdit">
            <summary>The permissions that logs should be made under. Uses the status of the claim when entering the window.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.#ctor(OpenDentBusiness.Claim,OpenDentBusiness.Patient,OpenDentBusiness.Family,System.Boolean)">
            <summary>Set isForOrthoAutoPay to true to automatically show the supplemental payment window on Shown().</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.FormClaimEdit_LocationChanged(System.Object,System.EventArgs)">
            <summary>Only using the Paint event handler caused the form to flicker when moving it. This method greatly reduces flickering.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.SetFormReadOnly(System.Windows.Forms.Control)">
            <summary>Recursively disables all controls for the control passed in by looping through any sub controls and disabling them.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.FillCombosProv">
            <summary>Fills combo provider based on which clinic is selected and attempts to preserve provider selection if any.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.GetListComboClaimStatus">
            <summary>Returns list of claim status that is filled on load based on PriClaimAllowSetToHoldUntilPriReceived pref and ClaimCur.ClaimType and status of claim.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.TryGetClaimStatusEnumFromCurClaim(OpenDentBusiness.ClaimStatus@)">
            <summary>Provides ClaimStatus enum from the current claim. Defaults to None (this should never happen)</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.FillForm">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.FillValCode(System.Collections.Generic.List{OpenDentBusiness.ClaimValCodeLog},System.Int32,System.Windows.Forms.TextBox,System.Windows.Forms.TextBox)">
            <summary>If valCodeIdx>listClaimValCodes.Count then nothing will happen, otherwise it will fill the text boxes with appropriate values
            from the listClaimValCodes[valCodeIdx].</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.DoConsolidateOrthoPayments">
            <summary>Returns true if the claim's carrier is set to block users from entering payments on claims made by the Auto Ortho Tool. Otherwise, returns false.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.SelectLabProcs">
            <summary>Selects any lab procedures that go along with the currently selected procedures.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.GetListLabsForProc(System.Int64,OpenDentBusiness.ClaimProc)">
            <summary>Takes in the appropriate ProcNum and current claimproc to get the number of claimprocs associated with that procedure</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.GetListClaimProcsForProcNumLabsParent(System.Int64)">
            <summary>For a given procNumParent, return a list of ClaimProcs for that lab(s) that is on the current _claim.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.TrySelectClaimPayment(System.Collections.Generic.List{OpenDentBusiness.ClaimPayment},OpenDentBusiness.ClaimPayment@)">
            <summary>Called when there are multiple ClaimPayments that have EOBs attached to them and we don't know what one the user would like to view.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.FormFinalizePaymentHelper(OpenDentBusiness.ClaimPayment,OpenDentBusiness.Claim,OpenDentBusiness.Patient,OpenDentBusiness.Family,System.Int64)">
            <summary>Called after finalizing an insurance payment to bring up various forms for the user.
            If finalizing an individual claim (Edit Claim window only), then onlyOneClaimNum must be the current ClaimNum.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.ShowProviderTransferWindow(OpenDentBusiness.Claim,OpenDentBusiness.Patient,OpenDentBusiness.Family)">
            <summary>Helper method that shows the payment window if the user has the "Show provider income transfer window after entering insurance payment"
            preference enabled.  This method should always be called after an insurance payment has been made.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.CheckProviderTerm">
            <summary>Checks the providers' term dates to see if a claim should be sent.
            True represents valid providers.  Otherwise; false.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.SendClaimCanadian(OpenDentBusiness.Clearinghouse,OpenDentBusiness.ClaimSendQueueItem)">
            <summary>Helper method that only allows one Canadian claim to be sent at a time. Returns true if the claim was sent, otherwise false.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.HasIcd9Codes">
            <summary>Returns true if the claim has ICD9 codes and the user insists on sending the claim with them attached.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.butReverse_Click(System.Object,System.EventArgs)">
            <summary>Canada only.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.butEDSClaimAttachment_Click(System.Object,System.EventArgs)">
            <summary>Opens FormClaimAttachmentEDS. This form is used for managing attachments to send to EDS.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.OpenAttachmentForm(OpenDental.FormClaimAttachment)">
            <summary>Helper method to centralize code for opening DXC and EDS attachment forms.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.AddClaimCustomTracking(OpenDentBusiness.Claim,System.String)">
            <summary>Returns true if user inserted a new ClaimTracking and selected an Error Code.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.ClaimIsValid">
            <summary>Also handles Canadian warnings.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.CanadianWarnings">
            <summary>Only called from one location above.  In its own method for readability.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.UpdateClaim">
            <summary>Updates this claim to the database.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.DeleteClaimHelper(System.Collections.Generic.List{System.Int64})">
            <summary>This window is complicated and can do many things. Therefore, we pre-insert the claim and other associated entities.
            This helper method does all of the work necessary to clean up after all of said entities and deletes the claim as well.
            If ClaimType is 'PreAuth' or 'Cap', claimprocs will be deleted. Otherwise, all pay-as-total and supplemental claimprocs
            are deleted, and all other claimprocs are returned to estimate status, their ClaimNum is set to zero, we run 
            ClaimProcs.ComputeBaseEstimates() for them, and they are updated to the DB. Any claimprocs associated to dropped patplans are deleted. 
            Canadian lab claimprocs have their status synced with parent claimprocs and are ommitted when running ClaimProcs.ComputeBaseEstimates()
            as their estimates are calculated when ClaimProcs.ComputeBaseEstimates() is called for thier parent claimprocs.
            It is okay to default list835Attaches to null if this is called when cancelling a new claim as none should exist.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.GetBlueBookEstimateData">
            <summary>Sets _blueBookEstimateData if it is null, then returns it.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.ReceiveAsNoPaymentIfNeeded">
            <summary>If InsAutoReceiveNoAssign pref is on, can automatically receive the claim displayed in the form if its status has changed to Sent.
            If a Canadian claim was sent, this may receive it and any automatically sent secondary claims.
            Returns true if claim ends up received.</summary>
        </member>
        <member name="M:OpenDental.FormClaimEdit.SetListClaimProcsForClaim(System.Collections.Generic.List{OpenDentBusiness.ClaimProc})">
            <summary>We have to set _blueBookEstimateData to null when _listClaimProcsForClaim is assigned because we may not have all of the
            blue book data that we need for the procedures associated to our new list of ClaimProcs.</summary>
        </member>
        <member name="T:OpenDental.FormClaimPayTotal">
            <summary>Summary description for FormClaimPayTotal.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayTotal.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimPayTotal.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimPayTotal.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimPayTotal._isWriteOffEditable">
            <summary>True if the user has permission to edit WriteOffs based on the minimum proc.DateEntryC of the procedures to which the claimprocs
            in the ClaimProcsToEdit array are attached.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayTotal._doShowPatResp">
            <summary>True if the Pat Resp column is showing in gridMain.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayTotal._blueBookEstimateData">
            <summary>Holds all data needed to make blue book estimates.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayTotal._totalPayAmt">
            <summary>The amount of money to allocate coming from a Pay As Total payment. </summary>
        </member>
        <member name="F:OpenDental.FormClaimPayTotal.ClaimProcArray">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimPayTotal.IsCalledFromClaimEdit">
            <summary>Is only set when called from FormClaimEdit and to signify the recieving of a claim.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayTotal.#ctor(OpenDentBusiness.Patient,OpenDentBusiness.Family,System.Collections.Generic.List{OpenDentBusiness.InsPlan},System.Collections.Generic.List{OpenDentBusiness.PatPlan},System.Collections.Generic.List{OpenDentBusiness.InsSub},OpenDentBusiness.BlueBookEstimateData,System.Double)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormClaimPayTotal.ApplyAsTotalPayment">
            <summary>Goes through logic to apply an AsTotal payment to specific procedures depending on their current amount of allocated money. </summary>
        </member>
        <member name="M:OpenDental.FormClaimPayTotal.FillTotals">
            <Summary>Fails silently if text is in invalid format.</Summary>
        </member>
        <member name="M:OpenDental.FormClaimPayTotal.ValidateTotals">
            <summary>Checks the ValidDouble fields below the grid and makes sure they are within their min/max values.  Returns true if valid.</summary>
        </member>
        <member name="M:OpenDental.FormClaimPayTotal.GetListClaimProcHypothetical">
            <summary>Translates the grid into claimprocs, with edits applied.</summary>
        </member>
        <member name="T:OpenDental.FormClaimProc">
            <summary>Summary description for FormClaimProcEdit.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProc.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimProc.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimProc.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimProc._claimProcOld">
            <summary>If user hits cancel, then the claimproc is reset using this.  Do not modify the values in this claimproc anywhere in this form.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProc.ClaimProcInitial">
            <summary>Similar to ClaimProcOld, except this variable is set at the end of initialization, because the ClaimProcCur can change during
            initialization, due to calling ComputeAmounts()</summary>
        </member>
        <member name="F:OpenDental.FormClaimProc._procedure">
            <summary>The procedure to which this claimproc is attached.  Sent in if this is launched from the Procedure Edit window,
            otherwise pulled from the db when form loads if ClaimProcCur.ProcNum>0, which also causes IsProc to be set to true.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProc.IsProc">
            <summary>True if this is a procedure, and false if only a claim total.  Private variable, name should be updated.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProc._listSubstitutionLinks">
            <summary>List of substitution links.  Lazy loaded, do not directly use this variable, use the property instead.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProc._paidOtherInsTotal">
            <summary>This value is obtained by a query when this window first opens.  It includes estimates if the other claims are not received and 
            includes the payment amount if the other claims are received.  Will be 0 if this is a primary estimate.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProc._writeOffOtherIns">
            <summary>This value is obtained by a query when this window first opens.  It includes both actual writeoffs and estimated writeoffs.  Will be 0 if this is a primary estimate.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProc.BlueBookEstimateData_">
            <summary>Holds all data needed to calculate a blue book allowed amount.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProc.IsInClaim">
            <summary>Set to true if this claimProc is accessed from within a claim or from within FormClaimPayTotal. This changes the behavior of the form, allowing more freedom with fields that are also totalled for entire claim.  This freedom is normally restricted so that claim totals will stay synchronized with individual claimprocs.  If true, it will still save changes to db, even though this is duplicated effort in FormClaimPayTotal.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProc.NoPermissionProc">
            <summary>Set this to true if user does not have permission to edit procedure.</summary>
        </member>
        <member name="F:OpenDental.FormClaimProc.IsCalledFromClaimEdit">
            <summary>Is only set when called from FormClaimEdit and to signify the recieving of a claim.</summary>
        </member>
        <member name="M:OpenDental.FormClaimProc.#ctor(OpenDentBusiness.ClaimProc,OpenDentBusiness.Procedure,OpenDentBusiness.Family,OpenDentBusiness.Patient,System.Collections.Generic.List{OpenDentBusiness.InsPlan},System.Collections.Generic.List{OpenDentBusiness.ClaimProcHist},System.Collections.Generic.List{OpenDentBusiness.ClaimProcHist}@,System.Collections.Generic.List{OpenDentBusiness.PatPlan},System.Boolean,System.Collections.Generic.List{OpenDentBusiness.InsSub})">
            <summary>procCur can be null if not editing from within an actual procedure.  If the save is to happen within this window, then set saveToDb true.  If the object is to be altered here, but saved in a different window, then saveToDb=false.</summary>
        </member>
        <member name="M:OpenDental.FormClaimProc.Initialize">
            <summary>Same as calling FormClaimProcEdit_Load().  Used in unit test 28.</summary>
        </member>
        <member name="M:OpenDental.FormClaimProc.GetTextValue(System.String)">
            <summary>Do not use in release mode.  Used for unit test 28 to get UI values for text boxes in this form.  Returns null if textBoxName does not exist.</summary>
        </member>
        <member name="M:OpenDental.FormClaimProc.GetTextValue(System.Windows.Forms.Control,System.String)">
            <summary>Recursive.  Do not use in release mode.  Used for unit test 28 to get UI values for text boxes in this form.  Returns null if textBoxName does not exist.</summary>
        </member>
        <member name="M:OpenDental.FormClaimProc.FillInitialAmounts">
            <summary>All text boxes will be blank before this is run.  It is only run once.</summary>
        </member>
        <member name="M:OpenDental.FormClaimProc.FillAllowed(OpenDentBusiness.BlueBookEstimateData)">
            <summary>Fills the carrier allowed amount.  Called from FillInitialAmounts and from butUpdateAllowed_Click</summary>
        </member>
        <member name="M:OpenDental.FormClaimProc.butDelete_Click(System.Object,System.EventArgs)">
            <summary>Claimprocs with various statuses can be deleted,
            except certain specific scenarios where the user does not have permission (multiple different permissions are considered).</summary>
        </member>
        <member name="F:OpenDental.FormAdjustSelect._amtPaySplitDisplay">
            <summary>The display the opposite amount of the amtPaySplitCur that was originally passed in.
            This is because PaySplits are stored in the opposite of how they are applied.
            E.g. A PaySplit stored as $30 will subtract $30 from something (and visa versa).</summary>
        </member>
        <member name="F:OpenDental.FormAdjustSelect._listAccountEntriesAdjPat">
            <summary>Account entries made out of all adjustments that are not associated to a procedure for the patient.</summary>
        </member>
        <member name="M:OpenDental.FormAdjustSelect.#ctor(System.Double,OpenDentBusiness.PaySplit,System.Collections.Generic.List{OpenDentBusiness.PaySplit},System.Collections.Generic.List{OpenDentBusiness.Adjustment},System.Collections.Generic.List{OpenDentBusiness.PaySplit})">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAdjustSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAdjustSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAdjustSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormApptsOther">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormApptsOther.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptsOther.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:OpenDental.FormApptsOther.AllowSelectOnly">
            <summary>Set to true to allow selecting appointments.</summary>
        </member>
        <member name="F:OpenDental.FormApptsOther.DateTimeClicked">
            <summary>DateTime that the user clicked in the Appt module before arriving here. Pass in if IsInitialDoubleClick.</summary>
        </member>
        <member name="F:OpenDental.FormApptsOther.IsInitialDoubleClick">
            <summary>True if user double clicked on a blank area of appt module to get to this point. Also, pass in DateTimeClicked and OpNumClicked.</summary>
        </member>
        <member name="F:OpenDental.FormApptsOther.ListAptNumsSelected">
            <summary>After closing, this may contain aptNums of appointments that should be placed on the pinboard. Used when picking appointment for task lists or when the GoTo, Create new, or Recall buttons are pushed.</summary>
        </member>
        <member name="F:OpenDental.FormApptsOther.OpNumClicked">
            <summary>OpNum that the user clicked in the Appt module before arriving here. Pass in if IsInitialDoubleClick.</summary>
        </member>
        <member name="F:OpenDental.FormApptsOther.StringDateJumpTo">
            <summary>After closing, if OResult=PinboardAndSearch then this will contain the date to jump to when beginning the search. If OResult=GoTo then this will also contain the date.  Can't use DateTime type because C# complains about marshal by reference.</summary>
        </member>
        <member name="F:OpenDental.FormApptsOther.ListAptViewJumpTos">
            <summary>List of appointment view nums that contain the operatory num for the appointment to jump to.</summary>
        </member>
        <member name="F:OpenDental.FormApptsOther._family">
            <summary>The result of the window.  In other words, which button was clicked to exit the window.</summary>
        </member>
        <member name="F:OpenDental.FormApptsOther._listPinboardApptNums">
            <summary>List of Appointment.AptNum that are on the pinboard when FormApptsOther was loaded.</summary>
        </member>
        <member name="M:OpenDental.FormApptsOther.#ctor(System.Int64,System.Collections.Generic.List{System.Int64})">
            <summary>Pass in list of Appointment.AptNum for appointments that are currently on the pinboard if not in AllowSelectOnly mode.</summary>
        </member>
        <member name="M:OpenDental.FormApptsOther.GetOtherResult">
            <summary>Gets FormApptsOther's result when closing. Meaning, which button was clicked to exit the window.</summary>
        </member>
        <member name="M:OpenDental.FormApptsOther.MakeRecallAppointment">
            <summary>Creates a single recall appointment. If it's from a double click, then it will end up on that spot in the Appts module.  If not, it will end up on the pinboard with StringDateJumpTo as due date to jump to.  ListAptNumsSelected will contain the AptNum of the new appointment.</summary>
        </member>
        <member name="M:OpenDental.FormApptsOther.MakeRecallFamily">
            <summary>Creates appointments for each patient in _famCur.  MsgBox informs user of anyone skipped.  StringDateJumpTo will contain the due date (of the last family member) to jump to.  ListAptNumsSelected will contain the AptNums of the new appointments on the pinboard.</summary>
        </member>
        <member name="M:OpenDental.FormApptsOther.MakeAppointment">
            <summary>Offers to use unscheduled appt.  Shows ApptEdit window. Sets Prospective, if necessary.  Fires Automation triggers.  ListAptNumsSelected will contain the AptNum of the new appointment.</summary>
        </member>
        <member name="M:OpenDental.FormApptsOther.IsSelectedApptOtherNull">
            <summary>Returns true if SelectedApptOther is null or is set to an appointment with an AptNum that is not in the database.
            If SelectedApptOther was null or set to a valid appointment but is now invalid (no longer in the database) then a warning message will display
            to the user and RefreshAppts will be invoked in order to remove the invalid appt from the UI.</summary>
        </member>
        <member name="F:OpenDental.FormDashboardWidgets.SheetDefDashboardWidget">
            <summary>The dashboard that has been selected.</summary>
        </member>
        <member name="F:OpenDental.FormDashboardWidgets.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDashboardWidgets.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDashboardWidgets.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormLimitedStatementSelect._lookupSelectedRows">
            <summary>Used for reselecting rows after sorting by column or filling the grid on load etc.</summary>
        </member>
        <member name="T:OpenDental.FormLimitedStatementSelect.LimitedRow">
            <summary>Class to represent items coming in from the account module grid.</summary>
        </member>
        <member name="F:OpenDental.FormLimitedStatementSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLimitedStatementSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormLimitedStatementSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormGridSelection._listGridColumns">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormGridSelection._listGridRows">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormGridSelection.ListSelectedTags">
            <summary>Set to the tag of the rows that are double selected.</summary>
        </member>
        <member name="M:OpenDental.FormGridSelection.#ctor(System.Collections.Generic.List{OpenDental.UI.GridColumn},System.Collections.Generic.List{OpenDental.UI.GridRow},System.String,System.String,OpenDental.UI.GridSelectionMode)">
            <summary>listGridRows must have tags set.</summary>
        </member>
        <member name="F:OpenDental.FormGridSelection.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormGridSelection.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormGridSelection.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormPatientEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPatientEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:OpenDental.FormPatientEdit.IsNew">
            <summary>Set true if this is a new patient. Patient must have been already inserted. If users clicks cancel, this patient will be deleted.</summary>
        </member>
        <member name="F:OpenDental.FormPatientEdit.Patient">
            <summary>This is the object that is altered in this form.</summary>
        </member>
        <member name="F:OpenDental.FormPatientEdit._isUsingNewRaceFeature">
            <summary>Because adding the new feature where patients can choose their race from hundreds of options would cause us to need to recertify EHR, 
            we committed all the code for the new feature while keeping the old behavior for EHR users. When we are ready to switch to the new feature, 
            all we need to do is set this boolean to true (hopefully).</summary>
        </member>
        <member name="F:OpenDental.FormPatientEdit._listDefsBillingType">
            <summary>Used to display the available billing types. Will contain hidden billing types.</summary>
        </member>
        <member name="F:OpenDental.FormPatientEdit._listGuardiansForFamOld">
            <summary>If the user presses cancel, use this list to revert any changes to the guardians for all family members.</summary>
        </member>
        <member name="F:OpenDental.FormPatientEdit._listLanguages">
            <summary>Will include the languages setup in the settings, and also the language of this patient if that language is not on the selection list.</summary>
        </member>
        <member name="F:OpenDental.FormPatientEdit._listPatientStatuses">
            <summary>List of PatientStatuses shown in listStatus, must be 1:1 with listStatus.
            Deleted is excluded, unless PatCur is flagged as deleted.
            Needed due to index differences when deleted is not present.</summary>
        </member>
        <member name="F:OpenDental.FormPatientEdit._listRefAttaches">
            <summary>Local cache of RefAttaches for the current patient.  Set in FillReferrals().</summary>
        </member>
        <member name="F:OpenDental.FormPatientEdit._maskedSSNOld">
            <summary>Used to keep track of what masked SSN was shown when the form was loaded, and stop us from storing masked SSNs on accident.</summary>
        </member>
        <member name="F:OpenDental.FormPatientEdit._patientNote">
            <summary>This is the object that is altered in this form, since it is an extension of the patient table.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.FillCombosProv">
            <summary>Fills combo provider based on which clinic is selected and attempts to preserve provider selection if any.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.SetRequiredFields">
            <summary>Puts an asterisk next to the label and highlights the textbox/listbox/combobox/radiobutton background for all RequiredFields that
            have their conditions met.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.ConditionsAreMet(OpenDentBusiness.RequiredField)">
            <summary>Returns true if all the conditions for the RequiredField are met.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.CheckMedicaidIDLength">
            <summary>Checks to see if the Medicaid ID is the proper number of digits for the Medicaid State.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.SetRequiredTextBox(System.Windows.Forms.Label,System.Windows.Forms.TextBox,System.Boolean)">
            <summary>Puts an asterisk next to the label if the field is required and the conditions are met. If it also blank, sets the error provider.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.SetRequiredComboBoxOD(System.Windows.Forms.Label,OpenDental.UI.ComboBox,System.Boolean,System.Int32,System.String)">
            <summary>Puts an asterisk next to the label if the field is required and the conditions are met. If the disallowedIdx is also selected, 
            sets the error provider.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.SetRequiredComboBoxOD(System.Windows.Forms.Label,OpenDental.UI.ComboBox,System.Boolean,System.Collections.Generic.List{System.Int32},System.String)">
            <summary>Puts an asterisk next to the label if the field is required and the conditions are met. If a disallowedIndices is also selected, sets the error provider.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.textZip_Leave(System.Object,System.EventArgs)">
            <summary>TextZip needs it's own event to fill zip codes in the case where the zip code field is left blank.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.ListBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>Status and Gender</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.textAnyPhoneNumber_TextChanged(System.Object,System.EventArgs)">
            <summary>All text boxes on this form that accept a phone number use this text changed event.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.PromptForSmsIfNecessary(OpenDentBusiness.Patient,OpenDentBusiness.Patient)">
            <summary>Offers the user, if necessary, the opportunity to send a text message to the patient when changes have been made to texting settings.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.UpdateLocalNameHelper">
            <summary>Validates there is still a last name entered and updates the last, first, middle and preferred name of PatCur to what is currently
            typed in the text boxes.  May not match what is in the database.  Does not save the changes to the database so user can safely cancel and
            revert the changes.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.RemoveIllogicalRaceCombinations">
            <summary>Disallows the user from selecting illogical combinations such as 'DeclinedToSpecify' and 'Asian'.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.GetEmployerNum">
            <summary>Gets an employerNum based on the name entered. Called from FillCur</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.FillReferrals">
            <summary>Fills the Referred From text box with the oldest (lowest ItemOrder) referral source with ReferralType.RefFrom.</summary>
        </member>
        <member name="M:OpenDental.FormPatientEdit.IsAnySameChecked">
            <summary>Returns true if any of the checkboxes indicating all family members should be updated with the corresponding data are checked.</summary>
        </member>
        <member name="T:OpenDental.FormPaySplitEdit">
            <summary>Summary description for FormPaySplitEdit.</summary>
        </member>
        <member name="F:OpenDental.FormPaySplitEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPaySplitEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:OpenDental.FormPaySplitEdit.IsNew">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPaySplitEdit.Remain">
            <summary>The value needed to make the splits balance.</summary>
        </member>
        <member name="F:OpenDental.FormPaySplitEdit.ListPaySplits">
            <summary>Used to figure out what procedures have amounts left due on them when attaching this splits to a proc. 
            Splits from the current payment are also included in this calculation.</summary>
        </member>
        <member name="F:OpenDental.FormPaySplitEdit.PaySplitCur">
            <summary>The pattern in this window is different than other windows.  We generally keep PaySplitCur updated as we go, rather than when we click OK. This is because we sometimes send it out for calcs.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormPaySplitEdit.SetEnabledProc" -->
        <member name="M:OpenDental.FormPaySplitEdit.FillComboProv">
            <summary>Fills combo provider based on which clinic is selected and attempts to preserve provider selection if any.</summary>
        </member>
        <member name="M:OpenDental.FormPaySplitEdit.FillPatient">
            <summary>PaySplit.Patient is one value that is always kept in synch with the display.  If program changes PaySplit.Patient, then it will run this method to update the display.  If user changes display, then _MouseDown is run to update the PaySplit.Patient.</summary>
        </member>
        <member name="M:OpenDental.FormPaySplitEdit.ComputeTotals">
            <summary>Does not alter any of the proc amounts except PaidHere and Remaining.  Also calculates Adjust Amounts</summary>
        </member>
        <member name="M:OpenDental.FormPaySplitEdit.DetachPayPlan">
            <summary>Helper Method that detaches Payment Plan Info from PaySplitCur </summary>
        </member>
        <member name="M:OpenDental.FormPaySplitEdit.butAttachProc_Click(System.Object,System.EventArgs)">
            <summary>Attaches procedure, sets the selected provider, and fills Procedure information.</summary>
        </member>
        <member name="M:OpenDental.FormPaySplitEdit.AttachPayPlan(OpenDentBusiness.PayPlan)">
            <summary>Attaches this payment split to the payment plan passed in. Also attaches the split to the oldest payment plan charge due if present.</summary>
        </member>
        <member name="T:OpenDental.FormProcEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProcEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:OpenDental.FormProcEdit.IsNew">
            <summary>Mostly used for permissions.</summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._listSubstitutionLinks">
            <summary>Lazy loaded, do not directly use this variable, use the property instead.</summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._listPayments">
            <summary>List of all payments (not paysplits) that this procedure is attached to.</summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._isStartingUp">
            <summary>This keeps the noteChanged event from erasing the signature when first loading.</summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._Userod">
            <summary>Users can temporarily log in on this form.  Defaults to Security.CurUser.</summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._hasUserChanged">
            <summary>True if the user clicked the Change User button.</summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._provNumSelectedOrder">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._referralOrdering">
            <summary>If this procedure is attached to an ordering referral, then this varible will not be null.</summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._isEstimateRecompute">
            <summary>True only when modifications to this canadian lab proc will affect the attached parent proc ins estimate.</summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._loadData">
            <summary>Most of the data necessary to load this form.</summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._lookupFees">
            <summary>There are a number of places in this form that need fees, but none of them are heavily used.  This will help a little.  Lazy loaded, do not directly use this variable, use the property instead.</summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._listFees">
            <summary>See _lookupFees.  Sometimes, we need a list instead of a lookup.</summary>
        </member>
        <member name="F:OpenDental.FormProcEdit._listPriTeeths">
            <summary>All primary teeth currently being displayed in the UI, but stored as permanent teeth so that indexes are easy to calculate.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.#ctor(OpenDentBusiness.Procedure,OpenDentBusiness.Patient,OpenDentBusiness.Family,System.Boolean,System.Collections.Generic.List{OpenDentBusiness.ToothInitial})">
            <summary>Inserts are not done within this dialog, but must be done ahead of time from outside.  You must specify a procedure to edit, and only the changes that are made in this dialog get saved.  Only used when double click in Account, Chart, TP, and in ContrChart.AddProcedure().  The procedure may be deleted if new, and user hits Cancel.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.FillComboProv">
            <summary>Fills combo provider based on which clinic is selected and attempts to preserve provider selection if any.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.FillControlsOnStartup">
            <summary>ONLY run on startup. Fills the basic controls, except not the ones in the upper left panel which are handled in SetControlsUpperLeft.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.PromptForAutoNotes">
            <summary>Loops through textNotes.Text and will insert auto notes and prompt them for prompting auto notes.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.SetControlsUpperLeft">
            <summary>Called on open and after changing code.  Sets the visibilities and the data of all the fields in the upper left panel.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.SetControlsDisabled(System.Collections.Generic.List{System.Windows.Forms.Control})">
            <summary>Takes in a list of controls and loops through to disable the necesary components</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.SetControlsEnabled(System.Boolean)">
            <summary>Enable/disable controls based on permissions for a completed procedures.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.ClearClaimProcs(System.Collections.Generic.List{OpenDentBusiness.ClaimProc})">
            <summary>Deletes any ClaimProcs in the list that do not have a claim payment.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.UpdateFinalMin">
            <summary>Populates final time box with total number of minutes.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.butLock_Click(System.Object,System.EventArgs)">
            <summary>This button is only visible if 1. Pref ProcLockingIsAllowed is true, 2. Proc isn't already locked, 3. Proc status is C.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.butInvalidate_Click(System.Object,System.EventArgs)">
            <summary>This button is only visible when proc IsLocked.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.butAppend_Click(System.Object,System.EventArgs)">
            <summary>This button is only visible when proc IsLocked.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.SaveAndClose">
            <summary>MUST call EntriesAreValid first.  Used from OK_Click and from butSetComplete_Click</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.GetListDiagnosticCodes">
            <summary>Returns a list of all the diagnostic code boxes.</summary>
        </member>
        <member name="M:OpenDental.FormProcEdit.SetControlsAttachedToClaim">
            <summary>Disables/enables various controls if the current procedure is attached to a claim.</summary>
        </member>
        <member name="T:OpenDental.FormReactivationEdit">
            <summary>Summary description for FormReactivationEdit.
            Note that the form returns different dialog results for different "states". DialogResult.Yes indicates that the reactivation status changed
            and was saved, so the parent form knows to do any additional associated work. DialogResult.Ok indicates that the reactivation was saved, but the
            status was not changed. DialogResult.Abort indicates the user clicked "Delete" to explicitly remove the reactivation. DialogResult.Cancel
            indicates the user clicked Cancel or closed normally.</summary>
        </member>
        <member name="M:OpenDental.FormReactivationEdit.#ctor(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormReactivationEdit.#ctor(OpenDentBusiness.Reactivation)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormReactivationEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReactivationEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReactivationEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormReactivationSetup">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormReactivationSetup.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormReactivationSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReactivationSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReactivationSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormRegistrationKeyEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRegistrationKeyEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRegistrationKeyEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRegistrationKeyEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRegistrationKeyEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRegistrationKeyEdit.butPracticeTitleReset_Click(System.Object,System.EventArgs)">
            <summary>Inserts RegistrationKey with blank PracticeTitle into bugs database so next time cusotmer hits the update service it will reset their PracticeTitle.</summary>
        </member>
        <member name="T:OpenDental.FormShowFeatures">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormShowFeatures.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormShowFeatures.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormShowFeatures.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormShowFeatures.checkShowEnterprise">
            <summary>Keeps track the clinic preference state when the window was loaded.</summary>
        </member>
        <member name="M:OpenDental.FormShowFeatures.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormShowFeatures.RestoreClinicCheckBox">
            <summary>Restores checkEnableClinics to original value when form was opened.</summary>
        </member>
        <member name="M:OpenDental.FormShowFeatures.IsClinicCheckBoxOk">
            <summary>Validates that PrefName.EasyNoClinics is ok to be changed and changes it when necessary. Sends an alert to eConnector to perform the conversion.
            If fails then restores checkEnableClinics to original value when form was opened.</summary>
        </member>
        <member name="F:OpenDental.FormUpdate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormUpdate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormUpdate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormUpdate.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormUpdate.ParseXml(System.String)">
            <summary>Parses the xml result from the server and uses it to fill class wide variables.  Throws exceptions.</summary>
        </member>
        <member name="M:OpenDental.FormUpdate.IsDynamicMode">
            <summary>Determines if the current application is ran within the dynamic folder (startup path contains "DynamicMode").
            If so, shows a message to the user and then returns true so that the calling method can stop the user from updating.</summary>
        </member>
        <member name="M:OpenDental.FormUpdate.butDownMsiBuild_Click(System.Object,System.EventArgs)">
            <summary>Downloads the build update MSI file and starts the install, closing OpenDental.</summary>
        </member>
        <member name="M:OpenDental.FormUpdate.butDownloadMsiStable_Click(System.Object,System.EventArgs)">
            <summary>Downloads the stable update MSI file and starts the install, closing OpenDental.</summary>
        </member>
        <member name="M:OpenDental.FormUpdate.butDownloadMsiBeta_Click(System.Object,System.EventArgs)">
            <summary>Downloads the beta update MSI file and starts the install, closing OpenDental.</summary>
        </member>
        <member name="M:OpenDental.FormUpdate.butLicense_Click(System.Object,System.EventArgs)">
            <summary>No longer used here. Moved to FormAbout.</summary>
        </member>
        <member name="F:OpenDental.FormDashboardWidgetSetup._listGroupPermissions">
            <summary>A list of all DashboardWidget permissions. Safe to manipulate. Used to synchronize when leaving the window.</summary>
        </member>
        <member name="F:OpenDental.FormDashboardWidgetSetup._listGroupPermissionsOld">
            <summary>A list of all DashboardWidget permissions filled when the window loaded. Not safe to manipulate. Used to synchronize when leaving the window.</summary>
        </member>
        <member name="F:OpenDental.FormDashboardWidgetSetup._colAllowed">
            <summary>The index of the Allowed column in gridCustom.</summary>
        </member>
        <member name="F:OpenDental.FormDashboardWidgetSetup._hasChanged">
            <summary>Set to true when a change is made to a sheetDef.</summary>
        </member>
        <member name="M:OpenDental.FormDashboardWidgetSetup.HasDashboardWidgetPermissionAll(System.Int64)">
            <summary>Returns true if the currently selected user group has permission to all DashboardWidgets. Optionally pass in a specific user group.
            This method can manipulate the 'new' group permission list in order to correct the GroupPermission cache when necessary.</summary>
        </member>
        <member name="M:OpenDental.FormDashboardWidgetSetup.GiveUserGroupPermissionAll(System.Int64)">
            <summary>Removes all widget specific permissions and gives the user group a single 'zero FKey' permission.</summary>
        </member>
        <member name="M:OpenDental.FormDashboardWidgetSetup.ToggleDashboardPermission(OpenDentBusiness.UserGroup,OpenDentBusiness.SheetDef)">
            <summary>Toggles the widget specific permission for the user group passed in. Returns a boolean indicator that represents the new state for the permission.</summary>
        </member>
        <member name="M:OpenDental.FormDashboardWidgetSetup.EditWidget(OpenDentBusiness.SheetDef)">
            <summary>Opens a SheetDefEdit window and returns the SheetDef.SheetDefNum.  Returns -1 if user cancels or deletes the Dashboard.</summary>
        </member>
        <member name="M:OpenDental.FormDashboardWidgetSetup.SelectDashboardDef(OpenDentBusiness.SheetDef)">
            <summary>Selects the Cell corresponding to sheetDef. Important to only select the Cell, as opposed to the Row, since in OneCell mode.</summary>
        </member>
        <member name="F:OpenDental.FormDashboardWidgetSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDashboardWidgetSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDashboardWidgetSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormRecallList">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRecallList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:OpenDental.FormRecallList._listClinicNumsWebSched">
            <summary>The clinics that are signed up for Web Sched.</summary>
        </member>
        <member name="F:OpenDental.FormRecallList._isOnSupport">
            <summary>Indicates whether the Reg Key is currently on Open Dental support.</summary>
        </member>
        <member name="F:OpenDental.FormRecallList._hasClickedWebSched">
            <summary>The user has clicked the Web Sched button while a thread was busy checking which clinics are signed up for Web Sched.</summary>
        </member>
        <member name="F:OpenDental.FormRecallList._listProviders">
            <summary>Short list, for the two combo boxes.</summary>
        </member>
        <member name="F:OpenDental.FormRecallList._reactDateStopOffset">
            <summary>Default starting offset from Date Since for Date Stop.</summary>
        </member>
        <member name="P:OpenDental.FormRecallList._grid">
            <summary>Each tab should have an ODGrid set as the tag, returns the grid attached to the currently selected tab.</summary>
        </member>
        <member name="P:OpenDental.FormRecallList._patNumCur">
            <summary>Returns the PatNum of the first selected row in the corresponding grid.  Can return 0.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRecallList.FormRecallList_Shown(System.Object,System.EventArgs)">
            <summary>Due to a bug in ODProgress.cs load methods that spawn progress bars must be moved into the Shown() event to prevent the form from popping up behind the main program. (this seems like an old irrelevant note)</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.GetRecallTable">
            <summary> Gets the main recall table list </summary>
        </member>
        <member name="M:OpenDental.FormRecallList.FillRecalls">
            <summary>Shows a progress window and fills the main Recall List grid. Goes to database.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.grid_CellClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary> 
        </member>
        <member name="M:OpenDental.FormRecallList.SchedPatRecall(System.Int64,OpenDentBusiness.Patient,System.Collections.Generic.List{OpenDentBusiness.InsSub},System.Collections.Generic.List{OpenDentBusiness.InsPlan})">
            <summary>Creates a recall appointment and returns the AptNum in a list.  Validation should be done prior to invoking this method.
            Shows an error message to the user and then returns an empty list if anything goes wrong.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.SchedFamRecall(OpenDentBusiness.Family,System.Collections.Generic.List{OpenDentBusiness.InsSub},System.Collections.Generic.List{OpenDentBusiness.InsPlan})">
            <summary>Creates recall appointments for the family and returns a list of all the AptNums.
            Validation should be done prior to invoking this method.
            Shows a message to the user if there were any restricted patients or no appointments created.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.OpenSignupPortal">
            <summary>Automatically open the eService Setup window so that they can easily click the Enable button. 
            Calls CheckClinicsSignedUpForWebSched() before exiting.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.butLabels_Click(System.Object,System.EventArgs)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.butLabelOne_Click(System.Object,System.EventArgs)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.butPostcards_Click(System.Object,System.EventArgs)">
            <summary>Changes made to printing recall postcards need to be made in FormConfirmList.butPostcards_Click() as well.
            Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.butEmail_Click(System.Object,System.EventArgs)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.ProcessComms(OpenDentBusiness.CommItemTypeAuto,System.Boolean,OpenDentBusiness.CommItemMode,System.Collections.Generic.List{OpenDental.FormRecallList.PatRowTag})">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes. If gridRows is null, will make commlogs for
            the selected rows.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.pdLabels_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>raised for each page to be printed.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.pdCards_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>raised for each page to be printed.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.butRefresh_Click(System.Object,System.EventArgs)">
            <summary>Shared functionality with Recalls, Recently Contacted, and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.butGotoFamily_Click(System.Object,System.EventArgs)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.butGotoAccount_Click(System.Object,System.EventArgs)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.butCommlog_Click(System.Object,System.EventArgs)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.CommCreate(OpenDentBusiness.CommItemTypeAuto,System.Boolean,System.Int64)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.butPrint_Click(System.Object,System.EventArgs)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.pd_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.tabControl_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>We don't fill tabPageRecall when selected as that is the default selected tab and is filled on load.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.IsGridEmpty">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.IsAnyRowSelected">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.IsOneRowSelected">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.IsStatusSet(OpenDentBusiness.PrefName,OpenDentBusiness.PrefName)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.IsAnyPatToContact(System.String,OpenDentBusiness.ContactMethod,System.Boolean)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.GetPostcardMessage(System.String,System.Boolean,System.String)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.butSched_Click(System.Object,System.EventArgs)">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.GetAddrTable">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.</summary>
        </member>
        <member name="T:OpenDental.FormRecallList.PatRowTag">
            <summary>Shared functionality with Recalls and Reactivations, be careful when making changes.
            Contains the various properties we might need when the user wants to do an operation for a specific row or set of rows.
            TODO in the future, use this to replace the need to use _tableRecalls in this form.</summary>
        </member>
        <member name="F:OpenDental.FormRecallList.PatRowTag.PriKeyNum">
            <summary>Can be either the recall num or the reactivation num depending on the grid.</summary>
        </member>
        <member name="M:OpenDental.FormRecallList.gridContextMenu_Popup(System.Object,System.EventArgs)">
            <summary>Rebuilds the context menu when the user right-clicks on the grids in this form. Rebuilding the context menu each time rather than just once on form_load is necessary to ensure that the correct context values are passed along to the user's selected function.</summary>
        </member>
        <member name="F:OpenDental.FormWebChatSurveys.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebChatSurveys.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebChatSurveys.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebChatTools.FillGridWebChats">
            <summary>Only for ODHQ triage.</summary>
        </member>
        <member name="F:OpenDental.FormWebChatTools.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebChatTools.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebChatTools.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsHistSetup._listProceduresEoAndC">
            <summary>EO and C procedures associated with the InsHist and Received claimprocs for the inssub passed into the constructor.</summary>
        </member>
        <member name="F:OpenDental.FormInsHistSetup._listClaimProcsForEoAndCProcs">
            <summary>InsHist and Received claimprocs associated with EO and C procedures for the inssub passed into the constructor.</summary>
        </member>
        <member name="M:OpenDental.FormInsHistSetup.GetControlForPrefName(OpenDentBusiness.PrefName)">
            <summary>Returns the text box control corresponding to the given procType</summary>
        </member>
        <member name="M:OpenDental.FormInsHistSetup.IsValid">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInsHistSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsHistSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInsHistSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormLogOn">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLogOn.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLogOn.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormLogOn.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormLogOn._isSimpleSwitch">
            <summary>Used when temporarily switching users. Currently only used when overriding signed notes.
            The user will not be logged on (Security.CurUser is untouched) but CurUserSimpleSwitch will be set to the desired user.</summary>
        </member>
        <member name="F:OpenDental.FormLogOn.UserodSimpleSwitch">
            <summary>Gets set to the user that just successfully logged in when in Simple Switch mode.</summary>
        </member>
        <member name="F:OpenDental.FormLogOn._userNameAutoSelect">
            <summary>If set AND available, this will be the user automatically selected when the form opens.</summary>
        </member>
        <member name="F:OpenDental.FormLogOn.RefreshSecurityCache">
            <summary>This form will not always be able to directly refresh the userod cache (Security) so it will be up to calling methods.
            Will be true when the calling method needs to refresh the security cache itself due to changes
            </summary>
        </member>
        <member name="F:OpenDental.FormLogOn._doRefreshSecurityCache">
            <summary>Set to true when the calling method has indicated that it will take care of any Security cache refreshing.</summary>
        </member>
        <member name="F:OpenDental.FormLogOn._doClearCaches">
            <summary>Set to true if we should clear out ALL caches prior to the user getting logged in</summary>
        </member>
        <member name="F:OpenDental.FormLogOn._dispatcherTimer">
            <summary>Tracks the amount of time since start of keydown input. On the timer tick, attempt to log in.</summary>
        </member>
        <member name="F:OpenDental.FormLogOn._keyboardInput">
            <summary>Keeps track of keyboard inputs. Will be cleared if any input entered is not a number as it is looking for an employee badge Id. Will also be cleared if the key inputs come in too slow to prevent users from typing out an Id manually. The correct way to fill this string is by using a badge scanner.</summary>
        </member>
        <member name="M:OpenDental.FormLogOn.#ctor(System.Int64,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Set userNumSelected to automatically select the corresponding user in the list (if available).  Set isSimpleSwitch true if temporarily switching users for some reason.  This will leave Security.CurUser alone and will instead indicate which user was chosen / successfully logged in via CurUserSimpleSwitch.</summary>
        </member>
        <member name="M:OpenDental.FormLogOn.FillListBox">
            <summary>Fills the User list with non-hidden, non-CEMT user names.  Only shows non-hidden CEMT users if Show CEMT users is checked.</summary>
        </member>
        <member name="M:OpenDental.FormLogOn._dispatcherTimer_Tick(System.Object,System.EventArgs)">
            <summary>Looks for input from badge reader. Will open FrmUserodHistory if there is a user matching the input ID. The timer interval should be faster a user could type.</summary>
        </member>
        <member name="M:OpenDental.FormLogOn.FormLogOn_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>Starts dispatch timer and determines what keys are being pressed. Focus must be on this frm to work.</summary>
        </member>
        <member name="M:OpenDental.FormTsiHistory.GetListIndexesFiltered">
            <summary>Return a list of filtered indexes relative to the index in _listTsiTransLogs.
            We use indexes to conserve memory.</summary>
        </member>
        <member name="F:OpenDental.FormTsiHistory.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTsiHistory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTsiHistory.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCareCreditTransactions._listPatientNames">
            <summary>A list of Patient.PatientNames, filled with _listCareCreditWebResponses. Gets refulled every time FillGrid() is invoked.</summary>
        </member>
        <member name="F:OpenDental.FormCareCreditTransactions._patient">
            <summary>If null, we will get transactions for all patients. If set, we will only show transactions for the patient passed in.</summary>
        </member>
        <member name="M:OpenDental.FormCareCreditTransactions.getGrid">
            <summary>Menuitem events are shared between the grids in each tab. This returns the grid based on the current tab selected.</summary>
        </member>
        <member name="F:OpenDental.FormCareCreditTransactions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCareCreditTransactions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCareCreditTransactions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTeamSummary.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTeamSummary.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTeamSummary.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCodeReviewReport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCodeReviewReport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCodeReviewReport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobTeamEdit.IsTeamInfoValid">
            <summary>To be considered valid, the team info must have all non-empty or non-None enum.</summary>
        </member>
        <member name="F:OpenDental.FormJobTeamEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobTeamEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobTeamEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobTeamUserSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobTeamUserSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobTeamUserSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailJobs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailJobs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailJobs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailJobs.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEmailJobs.butSend_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormJobEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobEstimate.#ctor(OpenDentBusiness.Job)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormJobEstimate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobEstimate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobEstimate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobLogs._jobLogs">
            <summary>A list of bugs, features, and tasks related to this job.</summary>
        </member>
        <member name="M:OpenDental.FormJobLogs.#ctor(OpenDentBusiness.Job)">
            <summary>Opens with links to the passed in JobNum.</summary>
        </member>
        <member name="F:OpenDental.FormJobLogs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobLogs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobLogs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobManagerDashboard.RefreshAll">
            <summary>Calculates the info for the dashboard</summary>
        </member>
        <member name="M:OpenDental.FormJobManagerDashboard.FillGridOldBugs(System.Collections.Generic.List{OpenDentBusiness.Job})">
            <summary>Fills with bug jobs have not had a timelog in the last 7 days. Ordered by last non-viewed log date.</summary>
        </member>
        <member name="M:OpenDental.FormJobManagerDashboard.FillGridOldEnhancements(System.Collections.Generic.List{OpenDentBusiness.Job})">
            <summary>Fills with enhancement jobs have not had a timelog in the last 7 days. Ordered by last non-viewed log date.</summary>
        </member>
        <member name="M:OpenDental.FormJobManagerDashboard.DrawCompletedPieChart(System.Collections.Generic.List{System.Double})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJobManagerDashboard.DrawCompletedBackportPieChart(System.Collections.Generic.List{System.Double})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJobManagerDashboard.DrawRemainingPieChart(System.Collections.Generic.List{System.Double})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJobManagerDashboard.DrawRemainingBackportPieChart(System.Collections.Generic.List{System.Double})">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormJobManagerDashboard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobManagerDashboard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobManagerDashboard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobSprints.#ctor">
            <summary>Opens with links to the passed in JobNum.</summary>
        </member>
        <member name="F:OpenDental.FormJobSprints.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobSprints.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobSprints.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobTeams._listJobTeamsOld">
            <summary>Old copy of teams to sync against.</summary>
        </member>
        <member name="F:OpenDental.FormJobTeams._listJobTeams">
            <summary>New copy of teams to make changes and sync to DB when form closes.</summary>
        </member>
        <member name="F:OpenDental.FormJobTeams._listJobTeamUsersOld">
            <summary>Old copy of team members to sync against.</summary>
        </member>
        <member name="F:OpenDental.FormJobTeams._listJobTeamUsers">
            <summary>New copy of team members to make changes and sync to DB when form closes.</summary>
        </member>
        <member name="F:OpenDental.FormJobTeams._listUsers">
            <summary>List of all the users in Open Dental that are engineers.</summary>
        </member>
        <member name="F:OpenDental.FormJobTeams._listJobTeamUsersCur">
            <summary>List of all the users who are associated to the currently selected JobTeam (not hidden).</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormJobTeams.FillGridTeams(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormJobTeams.FillListTeamUsers" -->
        <member name="M:OpenDental.FormJobTeams.butDeleteTeamSelected_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJobTeams.DeleteTeam(OpenDentBusiness.JobTeam)">
            <summary>Delete the passed in team and its members. Assumes a non-null JobTeam.</summary>
        </member>
        <member name="M:OpenDental.FormJobTeams.gridTeams_SelectionCommitted(System.Object,System.EventArgs)">
            <summary>Changes the team members displayed depending on the manually selected row.</summary>
        </member>
        <member name="M:OpenDental.FormJobTeams.butChangeTeamLead_Click(System.Object,System.EventArgs)">
            <summary>Changes the team lead to the selected one and sets the old one (if applicable) to not be.</summary>
        </member>
        <member name="M:OpenDental.FormJobTeams.butAddTeamMember_Click(System.Object,System.EventArgs)">
            <summary>Associate a JobTeamUser to the selected Userod and JobTeam.</summary>
        </member>
        <member name="F:OpenDental.FormJobTeams.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobTeams.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobTeams.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormMobileBugEdit.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormMobileBugEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMobileBugEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMobileBugEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSprintManagerDashboard._listJobSprintLinks">
            <summary>Managed list of JobSprintLinks. Gets filled on LoadSprint and then added and removed from thereafter.</summary>
        </member>
        <member name="M:OpenDental.FormSprintManagerDashboard.RefreshAll">
            <summary>Calculates the info for the dashboard</summary>
        </member>
        <member name="M:OpenDental.FormSprintManagerDashboard.FillGridOldBugs(System.Collections.Generic.List{OpenDentBusiness.Job})">
            <summary>Fills with bug jobs have not had a timelog in the last 5 days. Ordered by last non-viewed log date.</summary>
        </member>
        <member name="M:OpenDental.FormSprintManagerDashboard.FillGridQueue">
            <summary>Fills with jobs that are attached to the selected sprint and are not complete. Ordered by owner and then category.</summary>
        </member>
        <member name="M:OpenDental.FormSprintManagerDashboard.FillGridActiveDevelopment">
            <summary>Fills with jobs that are in development and attached to the selected sprint. Ordered by last timelog.</summary>
        </member>
        <member name="M:OpenDental.FormSprintManagerDashboard.DrawCompletedPieChart(System.Collections.Generic.List{System.Double})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSprintManagerDashboard.DrawRemainingPieChart(System.Collections.Generic.List{System.Double})">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormSprintManagerDashboard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSprintManagerDashboard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSprintManagerDashboard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobTimeLog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobTimeLog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobTimeLog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit._jobCur">
            <summary>Current Project selected in FormJobManager.gridProjectManagement.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit._isChanged">
            <summary>Private member for IsChanged Property. Private setter, public getter.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.IsPopout">
            <summary>Set this to true when the job is open outside of FormJobManager. Disables some functionality.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.LoadJob(OpenDentBusiness.Job)">
            <summary>Should only be called once when new job should be loaded into control. If called again, changes will be lost.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.FillGridDiscussion">
            <summary>Helper method that fills the grid passed in with the corresponding job notes.
            This is here because right now every grid that displays JobNotes shows them the same way.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.GetJob">
            <summary>Not a property so that this is compatible with the VS designer.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.CheckPermissions">
            <summary>Based on job status, category, and user role, this will enable or disable various controls.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.butActions_Click(System.Object,System.EventArgs)">
            <summary>This is a nasty method. Be careful with making changes to it.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.PickUserByJobPermission(System.String,OpenDentBusiness.JobPerm,System.Int64@,System.Int64,System.Boolean)">
            <summary>If returns false if selection is cancelled. DefaultUserNum is usually the currently set usernum for a given role.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.LoadMergeJob(OpenDentBusiness.Job)">
            <summary>When editing a job, and the job has been changed, this loads changes into the current control.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.GetSelectedJob(OpenDental.UI.GridOD,System.Int32)">
            <summary>Helper method to get job from the passed in grid and row selection. Can return null if not called correctly.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.RemoveJobLink(OpenDentBusiness.JobLinkType,System.Int64)">
            <summary>A helper function that removes a job link for the given key and type.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.gridContextMenu_Popup(System.Object,System.EventArgs)">
            <summary>Use this to set custom rules for enabling/disabling MenuItems for a grid's ContextMenu.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.menuItemCreateChildJob_Popup(System.Object,System.EventArgs)">
            <summary>Use this to set custom rules for enabling/disabling JobCategory MenuItems in the ContextMenu.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.AddChildJobCategoriesToMenuItem(System.Windows.Forms.MenuItem,OpenDental.UI.GridOD)">
            <summary>Adds MenuItems to the MenuItem passed in, one for each JobCategory the user has permission to. For clarity: this manipulates the passed in object.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.SaveJob(OpenDentBusiness.Job)">
            <summary>Job must have all in memory fields filled. Eg. Job.ListJobLinks, Job.ListJobNotes, etc. Also makes some of the JobLog entries.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.AddJobNote(OpenDentBusiness.JobNoteTypes)">
            <summary>Displays the Job Note Edit to the user.  Manipulates _jobCur.ListJobNotes accordingly.
            Returns true if the note was added; Otherwise, false.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.EditJobNote(OpenDentBusiness.JobNote)">
            <summary>Edits the job note at the selected index provided.  Updates _jobCur.ListJobNotes accordingly.
            Returns true if the note was changed; Otherwise, false.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.textEditor_SaveClick(System.Object,System.EventArgs)">
            <summary>SaveClick for textboxes: Concept</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.textEditor_OnTextEdited">
            <summary>This is fired whenever a change is made to the textboxes: Concept, Writeup, Documentation.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.GetDescedentJobs(System.Int64,System.Boolean)">
            <summary>Gets a list of all descendents that are not cancelled jobs.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlProjectEdit.RemoveCompletedJobsFromListJobs(System.Collections.Generic.List{OpenDentBusiness.Job})">
            <summary>Removes completed jobs from provided list if checkIncludeComplete is not checked. This is helpful for filtering out completed after getting descendents from completed jobs.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.IsPopout">
            <summary>Set this to true when the job is open outside of FormJobManager. Disables some functionality.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit._isChanged">
            <summary>Private member for IsChanged Property. Private setter, public getter.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit._treeNode">
            <summary>Passed in to LoadJob from job manager, used to display job family.</summary>
        </member>
        <member name="E:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.SaveClick">
            <summary>Occurs whenever this control saves changes to DB, after the control has redrawn itself. 
             Usually connected to either a form close or refresh.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.GetJob">
            <summary>Not a property so that this is compatible with the VS designer.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.LoadJob(OpenDentBusiness.Job,System.Windows.Forms.TreeNode)">
            <summary>Should only be called once when new job should be loaded into control. If called again, changes will be lost.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.LoadMergeJob(OpenDentBusiness.Job)">
            <summary>When editing a job, and the job has been changed, this loads changes into the current control.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.FilePopupHelper(System.Object,System.EventArgs)">
            <summary>Just prior to displaying the context menu, add wiki links if neccesary.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.CheckPermissions">
            <summary>Based on job status, category, and user role, this will enable or disable various controls.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.ValidateJob(OpenDentBusiness.Job)">
            <summary>This should not implement any permissions, this should only check that the fields of the job are valid.</summary>
             <param name="_jobCur"></param>
             <returns></returns>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.PickUserByJobPermission(System.String,OpenDentBusiness.JobPerm,System.Int64@,System.Int64,System.Boolean,System.Boolean)">
            <summary>If returns false if selection is cancelled. DefaultUserNum is usually the currently set usernum for a given role.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.SaveJob(OpenDentBusiness.Job)">
            <summary>Job must have all in memory fields filled. Eg. Job.ListJobLinks, Job.ListJobNotes, etc. Also makes some of the JobLog entries.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.textEditor_SaveClick(System.Object,System.EventArgs)">
            <summary>SaveClick for both the Descritpion and Documentation</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.MakeLogEntry(OpenDentBusiness.Job,OpenDentBusiness.Job)">
            <summary>Adds error checking to the input parameters for JobLogs.MakeLogEntry also inserts joblog into the UI and _jobCur.ListJobLog if returned.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.DoNothing">
            <summary>Does nothing, just used to make those annoying compile warnings go away.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.textEditorMain_OnTextEdited">
            <summary>This is fired whenever a change is made to the textboxes: Concept, Writeup, Documentation.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.GetNewCommlog">
            <summary>This is a helper method to get a new commlog object for the commlog tool bar buttons.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlMarketingEdit.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlTeamReport.RunReport">
            <summary>Returns true if the report ran. Shows message and returns false on failure.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlTeamReport.ExportReportPrompt">
            <summary>Throws exceptions, surround with try/catch.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlTeamReport.WriteGridMainToFile(System.String)">
            <summary>Throws exceptions. Allowed to bubble up to event handlers.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlTeamReport.QuoteCsvField(System.String)">
            <summary>Rules 5,6, and 7 on this page (https://super-csv.github.io/super-csv/csv_specification.html)
            explain the use of double quotes around fields that contain certain characters.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlTeamReport.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlTeamReport.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlTeamReport.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.IsPopout">
            <summary>Set this to true when the job is open outside of FormJobManager. Disables some functionality.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlJobEdit._isChanged">
            <summary>Private member for IsChanged Property. Private setter, public getter.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlJobEdit._treeNode">
            <summary>Passed in to LoadJob from job manager, used to display job family.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlJobEdit._isMarkTestedPushed">
            <summary>Used to save one call to the DB when the Mark Tested button is pushed and the job is marked Not Tested</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.grayNode">
            <summary>Only used in treeJobs_DragOver to reduce flickering.</summary>
        </member>
        <member name="E:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.SaveClick">
            <summary>Occurs whenever this control saves changes to DB, after the control has redrawn itself. 
             Usually connected to either a form close or refresh.</summary>
        </member>
        <member name="P:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.JobNumCur">
            <summary>The current job num. 0 if none selected.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.FilePopupHelper(System.Object,System.EventArgs)">
            <summary>Just prior to displaying the context menu, add wiki links if neccesary.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.MenuItemEnabledHandler(OpenDental.UI.GridOD,System.String)">
            <summary>Handles enabling the menu item based on if an item is selected and load state.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.RemoveJobLink(OpenDentBusiness.JobLinkType,System.Int64)">
            <summary>A helper function that removes a job link for the given key and type.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.FillGridWithJobNotes(OpenDental.UI.GridOD,System.Collections.Generic.List{OpenDentBusiness.JobNote})">
            <summary>Helper method that fills the grid passed in with the corresponding job notes.
            This is here because right now every grid that displays JobNotes shows them the same way.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.GetJob">
            <summary>Not a property so that this is compatible with the VS designer.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.LoadJob(OpenDentBusiness.Job,System.Windows.Forms.TreeNode)">
            <summary>Should only be called once when new job should be loaded into control. If called again, changes will be lost.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.CheckPermissions">
            <summary>Based on job status, category, and user role, this will enable or disable various controls.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.butActions_Click(System.Object,System.EventArgs)">
            <summary>This is a nasty method. Be careful with making changes to it.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.checkIsActive_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Functions as a toggle for setting jobs active.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.NeedsRequirementReapproval">
            <summary>Evaluates the list of requirements and detects any description changes.
            If changes are detected then this method gives the option to send the job to reapproval.
            If ValidateJob was called before SaveJob then this must be called directly prior to SaveJob.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.ShowProjectMessage">
            <summary>Deprecated: Show an input box to allow the user to choose a project for the job. Returns JobPatternReviewProject.None if the user hits cancel.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.PickUserByJobPermission(System.String,OpenDentBusiness.JobPerm,System.Int64@,System.Int64,System.Boolean,System.Boolean)">
            <summary>If returns false if selection is cancelled. DefaultUserNum is usually the currently set usernum for a given role.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.LoadMergeJob(OpenDentBusiness.Job)">
            <summary>When editing a job, and the job has been changed, this loads changes into the current control.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.SaveJob(OpenDentBusiness.Job)">
            <summary>Job must have all in memory fields filled. Eg. Job.ListJobLinks, Job.ListJobNotes, etc. Also makes some of the JobLog entries.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.AddJobNote(OpenDentBusiness.JobNoteTypes)">
            <summary>Displays the Job Note Edit to the user.  Manipulates _jobCur.ListJobNotes accordingly.
            Returns true if the note was added; Otherwise, false.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.textEditor_SaveClick(System.Object,System.EventArgs)">
            <summary>SaveClick for textboxes: Concept, Writeup, and Documentation</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.textEditor_OnTextEdited">
            <summary>This is fired whenever a change is made to the textboxes: Concept, Writeup, Documentation.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.EditJobNote(OpenDentBusiness.JobNote)">
            <summary>Edits the job note at the selected index provided.  Updates _jobCur.ListJobNotes accordingly.
            Returns true if the note was changed; Otherwise, false.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.MakeLogEntry(OpenDentBusiness.Job,OpenDentBusiness.Job,System.Boolean)">
            <summary>Adds error checking to the input parameters for JobLogs.MakeLogEntry also inserts joblog into the UI and _jobCur.ListJobLog if returned.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlJobEdit.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.IsPopout">
            <summary>Set this to true when the job is open outside of FormJobManager. Disables some functionality.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit._isChanged">
            <summary>Private member for IsChanged Property. Private setter, public getter.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit._treeNode">
            <summary>Passed in to LoadJob from job manager, used to display job family.</summary>
        </member>
        <member name="E:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.SaveClick">
            <summary>Occurs whenever this control saves changes to DB, after the control has redrawn itself. 
             Usually connected to either a form close or refresh.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.GetJob">
            <summary>Not a property so that this is compatible with the VS designer.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.LoadJob(OpenDentBusiness.Job,System.Windows.Forms.TreeNode)">
            <summary>Should only be called once when new job should be loaded into control. If called again, changes will be lost.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.LoadMergeJob(OpenDentBusiness.Job)">
            <summary>When editing a job, and the job has been changed, this loads changes into the current control.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.FilePopupHelper(System.Object,System.EventArgs)">
            <summary>Just prior to displaying the context menu, add wiki links if neccesary.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.CheckPermissions">
            <summary>Based on job status, category, and user role, this will enable or disable various controls.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.ValidateJob(OpenDentBusiness.Job)">
            <summary>This should not implement any permissions, this should only check that the fields of the job are valid.</summary>
             <param name="_jobCur"></param>
             <returns></returns>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.PickUserByJobPermission(System.String,OpenDentBusiness.JobPerm,System.Int64@,System.Int64,System.Boolean,System.Boolean)">
            <summary>If returns false if selection is cancelled. DefaultUserNum is usually the currently set usernum for a given role.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.SaveJob(OpenDentBusiness.Job)">
            <summary>Job must have all in memory fields filled. Eg. Job.ListJobLinks, Job.ListJobNotes, etc. Also makes some of the JobLog entries.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.textEditor_SaveClick(System.Object,System.EventArgs)">
            <summary>SaveClick for both the Descritpion and Documentation</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.MakeLogEntry(OpenDentBusiness.Job,OpenDentBusiness.Job)">
            <summary>Adds error checking to the input parameters for JobLogs.MakeLogEntry also inserts joblog into the UI and _jobCur.ListJobLog if returned.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.DoNothing">
            <summary>Does nothing, just used to make those annoying compile warnings go away.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.textEditorMain_OnTextEdited">
            <summary>This is fired whenever a change is made to the textboxes: Concept, Writeup, Documentation.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.GetNewCommlog">
            <summary>This is a helper method to get a new commlog object for the commlog tool bar buttons.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.InternalTools.Job_Manager.UserControlQueryEdit.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EscalationView._indexItemStart">
            <summary>When the mouse wheel scrolls we adjust the starting index for the strings we draw from _items.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EscalationView._isUpdating">
            <summary>Flag used to indicate when we are passing in new items to draw, when true we reset the scroll value.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EscalationView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.EscalationView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.EscalationView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EscalationItem.EmpName">
            <summary>Or office down</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EscalationItem.IsProximity">
            <summary>True if the employee is at their desk</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EscalationItem.ShowExtension">
            <summary>True if the row should show the employee extension instead of the proximity figure</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EscalationItem.Extension">
            <summary></summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EscalationItem.IsWebChat">
            <summary>True if the employee is on a web chat</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EscalationItem.IsGTAChat">
            <summary>True if the employee is on a GTA chat</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EscalationItem.IsRemoteSupport">
            <summary>True if the employee is in a Remote Support session</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapNumber.FitText(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat,System.Drawing.Graphics)">
            <summary>Replaces Graphics.DrawString. If the text is wider than will fit, then this reduces its size.  It does not consider height.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapNumber.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapNumber.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapNumber.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.FormMap.MapDescription">
            <summary>Used when launching this form and we want to start with a specific map.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.FormMap._cancellationTokenSource">
            <summary>Allows us to cancel an old webcam stream when we want to start a new one.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.FormMap._chatRedCount">
            <summary>Tracks when chat count box needs to be set red.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.FormMap._chatRedTimeMin">
            <summary>Tracks when chat time box needs to be set red.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.FormMap._listChatUsers">
            <summary>can be null. Will be set and re-set whenever SetPhoneList is called/refreshed.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.FormMap._listPeerInfosRemoteSupportSessions">
            <summary>can be null. Will be set and re-set whenever SetPhoneList is called/refreshed.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.FormMap._listWebChatSessions">
            <summary>can be null. Will be set and re-set whenever SetPhoneList is called/refreshed.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.FormMap._mapAreaContainer">
            <summary>This is the one that's showing.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.FormMap._menuItemSettings">
            <summary>Used for the main menu and updates when the user is or is not in full screen mode.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.FormMap._siteThisComputer">
            <summary>The site that is associated with the first three octets of the computer that has launched this map.</summary>
        </member>
        <member name="E:OpenDental.InternalTools.Phones.FormMap.ExtraMapClicked">
            <summary>When user to open a second map.</summary>
        </member>
        <member name="E:OpenDental.InternalTools.Phones.FormMap.GoToPatient">
            <summary>The eventHandler contains the patNum.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.SetChatCount">
            <summary></summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.SetPhoneList(System.Collections.Generic.List{OpenDentBusiness.Phone},System.Collections.Generic.List{OpenDentBusiness.PhoneEmpSubGroup},System.Collections.Generic.List{OpenDentBusiness.ChatUser},System.Collections.Generic.List{OpenDentBusiness.WebChatSession},System.Collections.Generic.List{OpenDentBusiness.PeerInfo})">
            <summary>Gets called every second or two from a thread.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.SetOfficesDownList(System.Collections.Generic.List{OpenDentBusiness.Task})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.SetTriageMain(System.Int32,System.Int32,System.TimeSpan,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.SetTriageRed(System.Int32,System.TimeSpan)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.DoAddToEscalationView(OpenDentBusiness.PhoneEmpDefault,System.Collections.Generic.List{OpenDentBusiness.Phone})">
            <summary>Returns true if the employee for the PhoneEmpDefault should be added to the selected escalation view.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.FillCombo">
            <summary>Preserves _mapAreaContainer. Does not fill mapPanel.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.FillMapPanel">
            <summary>Sets up the map panel with the cubicles and labels before filling with real-time data.  Also sets initial zoom to fit. Call this on load or anytime the cubicle layout has changed.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.FillMaps">
            <summary>Only on load</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.FillTriagePreferences">
            <summary>Gets the preferences from the database that determine when the map alert colors change.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.ProcessSignalODs(System.Collections.Generic.List{OpenDentBusiness.Signalod})">
            <summary>If the phone map has been changed, update all phone maps.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.SortForEscalationView(System.Collections.Generic.List{OpenDentBusiness.PhoneEmpDefault},System.Collections.Generic.List{OpenDentBusiness.Phone})">
            <summary>Sorts the list of PhoneEmpDefaults in the appropriate way for the selected escalation view.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.FormMap.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.FormMap.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.InternalTools.Phones.MapPanel">
            <summary>This is the panel where all the cubicles are drawn.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel.ListMapAreaMores">
            <summary>Always same length as ListMapAreas. 1:1 relationship.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._bitmapChat">
            <summary>18x18. Same image used for webchat and chat.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._bitmapHouse">
            <summary>16x16</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._bitmapPhone">
            <summary>21x17</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._bitmapProxFig">
            <summary>15x17</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._bitmapProxAway">
            <summary>21x17, small red circle, mostly wasted extra pixels.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._bitmapRemote">
            <summary>18x18</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._dateTimeMouseDown">
            <summary>This prevents accidental drags when clicking.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._isFlashOn">
            <summary>As _timerFlash ticks, it toggles this back and forth. If false, normal colors paint. If true, the opposite colors paint.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._pointMouseDown">
            <summary>Coordinates of the mouse when it was initially clicked, in control coords. Can't use Map coords because of circular logic.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._pointMouseNow">
            <summary>Current coordinates of the mouse in control coords. Can't use Map coords because of circular logic.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._pointFTranslation">
            <summary>In map coords, when user drags.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._timeSpanDelta">
            <summary>This is the difference between server time and local computer time.  Used to ensure that times displayed are accurate to the second.  This value is usally just a few seconds, but possibly a few minutes.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._zoomFit">
            <summary>The zoom level that lets the room fit perfectly in the canvas. This number is typically in the thousands because each cubicle is only "6" wide.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel._zoomValue">
            <summary>Example: 1759. This must be a float for better accuracy. This number is typically in the thousands because each cubicle is only "6" wide.</summary>
        </member>
        <member name="E:OpenDental.InternalTools.Phones.MapPanel.GoToPatient">
            <summary>The eventHandler contains the patNum.</summary>
        </member>
        <member name="E:OpenDental.InternalTools.Phones.MapPanel.IsChanged">
            <summary>In Edit Mode, this notifies parent that any changes were made so that it can send signal to other computers for refresh.</summary>
        </member>
        <member name="E:OpenDental.InternalTools.Phones.MapPanel.CubicleClicked">
            <summary>Certain detail gets passed up that we need to show in the detail panel.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.RefreshEditMode(OpenDentBusiness.MapAreaContainer)">
            <summary>Full refresh from db. Only used in edit mode.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.SetMapAreaContainer(OpenDentBusiness.MapAreaContainer)">
            <summary>This gets run once to place the MapAreas on the panel. Then, SetPhoneList is called to change colors, text, etc.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.SetPhoneList(System.Collections.Generic.List{OpenDentBusiness.Phone},System.Collections.Generic.List{OpenDentBusiness.ChatUser},System.Collections.Generic.List{OpenDentBusiness.WebChatSession},System.Collections.Generic.List{OpenDentBusiness.PeerInfo})">
            <summary>Refresh the phone panel every X seconds after it has already been setup.  Make sure to call SetListMapAreas before calling this the first time. Normal as opposed to EditMode.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.CreateStringFormat(System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>This is so that we can have a using statement in front of each StringFormat and it makes the code more readable.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.PointControlToMap(System.Drawing.Point)">
            <summary>Converts a point on the control, like a mouse click, into a point on the map.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.DrawImage(System.Drawing.Graphics,System.Drawing.Bitmap,System.Single,System.Single,System.Single)">
            <summary>Draws bitmap at the x,y coords specified and scaled to fit the specified height.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.FitText(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat,System.Drawing.Graphics)">
            <summary>Replaces Graphics.DrawString. If the text is wider than will fit, then this reduces its size.  It does not consider height.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.FitTextOld(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat,System.Drawing.Graphics)">
            <summary>Replaces Graphics.DrawString. Finds a suitable font size to fit the text to the bounding rectangle.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.HitTestCubicle(System.Drawing.Point)">
            <summary>Returns idx of cubicle clicked on, or -1 if no valid cubicle. Ignores labels. Pass in control coords.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.HitTest(System.Drawing.Point)">
            <summary>Returns idx of cubicle or label clicked on, or -1 if no valid MapArea.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.HitTestName(System.Int32,System.Drawing.Point)">
            <summary>Pass in the idx of the cubicle in question. Tests to see of the click was on the name area.  x and y are for the entire mapPanel.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.HitTestPhone(System.Int32,System.Drawing.Point)">
            <summary>Pass in the idx of the cubicle in question. Tests to see of the click was on the phone icon.  x and y are for the entire mapPanel.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapPanel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.MapPanel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.InternalTools.Phones.MapAreaMore">
            <summary>This class stores additional info about each MapArea, such as colors and timespans.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapAreaMore.ClockStatus">
            <summary>Also see Status.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapAreaMore.IsChat">
            <summary>Includes both chat and webchat.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapAreaMore.PhoneCur">
            <summary>Use this as rarely as possible.  Same info is usually found in a different field.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapAreaMore.RectangleFBounds">
            <summary>The bounds of this item. For example, about 6x6 for a cubicle.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.MapAreaMore.Status">
            <summary>A string version of ClockStatusEnum which is shortened specifically for display in a tight space.</summary>
        </member>
        <member name="T:OpenDental.InternalTools.Phones.CubicleClickedDetail">
            <summary>When a cubicle is clicked this object gets passed up in an event.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.PersistentTcpClient.CheckIsPWValid">
            <summary>Throws exception if cannot connect.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.PersistentTcpClient.RequestBitmap(System.String)">
            <summary>Can return null</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.PersistentTcpClient.SendReceive(System.String,System.Byte[])">
            <summary>Can return null if anything goes wrong.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.PersistentTcpClient.SendReceiveActual(System.String,System.Byte[])">
            <summary>Can return null if anything goes wrong.</summary>
        </member>
        <member name="T:OpenDental.InternalTools.Phones.UserControlMapDetails">
            <summary>This is the box at the left of the map that shows details for one employee. Still used in the new map</summary>
        </member>
        <member name="P:OpenDental.InternalTools.Phones.UserControlMapDetails.EmployeeNumCur">
            <summary>Allows for checking the employee currently in the details page when updating elapsed time.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.UserControlMapDetails.MapImageDisplayStatus">
            <summary>This tells us what kind of image is present (webcam vs stock). If it's a stock image, then we won't try repeatedly to get that same image because it's larger and slower. But this field does not prevent frequent attempts to get webcam image.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.UserControlMapDetails.EmployeeNumImage">
            <summary>The employeeNum of the image showing. The image refresh lags a bit behind the other details, so we need to track it separately.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.UserControlMapDetails.SetEmployee(OpenDental.InternalTools.Phones.CubicleClickedDetail)">
            <summary>This is for the new FormMap that replaced old FormMapHQ.</summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.UserControlMapDetails.SetBitmap(System.Drawing.Bitmap,OpenDental.InternalTools.Phones.EnumMapImageDisplayStatus,System.Int64)">
            <summary>Works for null</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.UserControlMapDetails.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.UserControlMapDetails.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.InternalTools.Phones.UserControlMapDetails.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EnumMapImageDisplayStatus.Empty">
            <summary>No image. Null.</summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EnumMapImageDisplayStatus.Stock">
            <summary></summary>
        </member>
        <member name="F:OpenDental.InternalTools.Phones.EnumMapImageDisplayStatus.WebCam">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UserControlJobManagerEditor.JobNumCur">
            <summary>Returns the jobnum loaded into the current active editor. Can return 0.</summary>
        </member>
        <member name="P:OpenDental.UserControlJobManagerEditor.JobCur">
            <summary>Returns the job loaded into the current active editor. Can return null.</summary>
        </member>
        <member name="P:OpenDental.UserControlJobManagerEditor.IsChanged">
            <summary>Checks the active editor for any job changes. Returns false if no editor is active</summary>
        </member>
        <member name="P:OpenDental.UserControlJobManagerEditor.IsPopout">
            <summary>If the userControlJobManager is open in a popout state, this disables some functionality.</summary>
        </member>
        <member name="M:OpenDental.UserControlJobManagerEditor.LoadJob(OpenDentBusiness.Job,System.Boolean,OpenDentBusiness.LoadJobAction)">
            <summary>Loads whatever job control is necessary in order to display the job within the manager.
            Also refreshes the cache with the job passed in and updates all corresponding controls and grids.
            This method will not load the passed in job if the current job cannot be saved correctly.</summary>
        </member>
        <member name="F:OpenDental.UserControlJobManagerEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlJobManagerEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlJobManagerEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlSprintManager._listJobSprintLinks">
            <summary>Managed list of JobSprintLinks. Gets filled on LoadSprint and then added and removed from thereafter.</summary>
        </member>
        <member name="E:OpenDental.UserControlSprintManager.SaveClick">
            <summary>Occurs whenever this control saves changes to DB, after the control has redrawn itself. 
             Usually connected to either a form close or refresh.</summary>
        </member>
        <member name="M:OpenDental.UserControlSprintManager.RecalculateSprint(System.Boolean)">
            <summary>Calculates the info for sprints</summary>
        </member>
        <member name="F:OpenDental.UserControlSprintManager.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlSprintManager.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlSprintManager.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMapAreaContainerEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMapAreaContainerEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMapAreaContainerEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMapAreaContainerDetail.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMapAreaContainerDetail.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMapAreaContainerDetail.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMapAreaContainers._siteThisComputer">
            <summary>The site that is associated with the first three octets of the computer that has launched this map.</summary>
        </member>
        <member name="F:OpenDental.FormMapAreaContainers.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMapAreaContainers.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMapAreaContainers.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormMapHQPrefs.SavePrefs">
            <summary>Returns true if a preference changed.  Otherwise; false.</summary>
        </member>
        <member name="F:OpenDental.FormMapHQPrefs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMapHQPrefs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMapHQPrefs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormPhoneEmpDefaultEdit">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="F:OpenDental.FormPhoneEmpDefaultEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneEmpDefaultEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneEmpDefaultEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPhoneEmpDefaultEdit.IsNew">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPhoneEmpDefaultEdit.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormPhoneEmpDefaults">
            <summary>
            Summary description for FormBasicTemplate.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneEmpDefaults.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneEmpDefaults.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPhoneEmpDefaults.PhoneEmpDefaultSelected">
            <summary>Only used when IsSelectionMode.</summary>
        </member>
        <member name="M:OpenDental.FormPhoneEmpDefaults.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormPhoneGraphAdminEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneGraphAdminEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPhoneGraphAdminEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.AutoNoteL.CreateNodeAndChildren(System.Int64,System.Collections.Generic.List{OpenDentBusiness.Def},System.Collections.Generic.List{OpenDentBusiness.AutoNote},System.Windows.Forms.TreeView)">
            <summary>Recursive. Adds current node and all children to the specified parent. Returns node to add.</summary>
        </member>
        <member name="M:OpenDental.AutoNoteL.Equals(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNode)">
            <summary>Returns true if both nodes are tagged with Defs and both Defs have the same DefNum OR both nodes are tagged with AutoNotes and both
            AutoNotes have the same AutoNoteNum.  If either node is null, returns false.</summary>
        </member>
        <member name="M:OpenDental.AutoNoteL.GetNodeAndChildren(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>Returns a flat list containing this TreeNode and all of its descendant TreeNodes.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.LaunchAdminPage(System.String,System.String)">
            <summary>Opens the CareCredit Admin page.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.LaunchAdminPage(System.Int64,System.Int64,System.Boolean,System.String)">
            <summary>Opens the CareCredit Admin page.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.LaunchCreditApplicationPage(OpenDentBusiness.Patient,System.Int64,System.Int64,System.Double,System.Double,System.String,System.String,System.String)">
            <summary>Opens the CareCredit Credit Application request page.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.LaunchLookupPage(OpenDentBusiness.Patient,System.Int64,System.Int64,System.String,System.String)">
            <summary>Opens the CareCredit Lookup request page.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.GetPurchasePageUrl(OpenDentBusiness.Patient,System.Int64,System.Int64,System.Double,System.Double,System.String,System.String,System.String,System.String,System.String,System.Int64)">
            <summary>Returns the Purchase request webpage url.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.GetQSPageUrl(OpenDentBusiness.Patient,System.Int64,System.Int64,System.Double,System.String,System.String,System.String)">
            <summary>Returns the QuickScreen request webpage url.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.LaunchQuickScreenIndividualPage(OpenDentBusiness.Patient,System.Int64,System.Int64,System.Double,System.String,System.String,System.String)">
            <summary>Opens the CareCredit quickscreen individual request page.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.RefundTransaction(OpenDentBusiness.CareCreditWebResponse)">
            <summary>Opens the CareCredit Refund request page.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.LaunchRefundPage(OpenDentBusiness.Patient,System.Int64,System.Int64,System.Double,System.String,System.String,System.String,System.String,System.String)">
            <summary>Opens the CareCredit Refund request page.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.LaunchReportsPage(System.Int64,System.Int64,System.String)">
            <summary>Opens the CareCredit Reports page.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.TryLaunchCareCreditPage(Bridges.CareCreditLandingPage,OpenDentBusiness.Patient,System.Int64,System.Int64,System.Boolean,System.String,System.Double,System.Double,System.String,System.String,System.String,System.Double,System.String,Bridges.EnumCareCreditPrefillServiceType,System.Int64,System.String,System.Boolean)">
            <summary>Tries to send prefill request with the specified landing page and launches the CareCredit portal. Set doShowPage to false if you don't want the page to be displayed. Displays error messages to user.</summary>
        </member>
        <member name="M:OpenDental.CareCreditL.TryGetNewProvOrRegisterProv(System.Int64,System.Int64)">
            <summary>Displays inputbox to the user to decide if they want to select a new provider or get directed to register a new provider.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.PayConnectL.VoidOrRefundPayConnectPortalTransaction(OpenDentBusiness.PayConnectResponseWeb,OpenDentBusiness.Payment,OpenDentBusiness.PayConnectService.transType,System.String,System.Decimal)" -->
        <member name="T:OpenDental.PayPlanL">
            <summary>Provides a central location for both PayPlan and PayPlanDynamic to use the same, or similar methods.</summary>
        </member>
        <member name="M:OpenDental.PayPlanL.ComparePayPlanRows(OpenDental.UI.GridRow,OpenDental.UI.GridRow)">
            <summary>Sorts by the first column, as a date column, in ascending order.</summary>
        </member>
        <member name="M:OpenDental.PayPlanL.MakeSecLogEntries(OpenDentBusiness.PayPlan,OpenDentBusiness.PayPlan,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Changes to the database are all made when the form is closed, so securitylog entries have been consolidated into this method.
            Centralized so both Dynamic and Static payment plans can use the same method.</summary>
        </member>
        <member name="M:OpenDental.PayPlanL.CreateRowsForDynamicPayPlanCharges(System.Collections.Generic.List{OpenDentBusiness.PayPlanCharge},System.Data.DataTable,System.Boolean)">
            <summary>Creates a list of GridRows where PayPlanCharges are merged into 1 row with the same date, and PaySplits with the same PayNum. Returns the list with 1 Row for 1 date set of charges, and 1 Row for 1 Set of paysplits grouped by PayNum. listPayPlanCharges needs to be sorted by ChargeDate in ascending order.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.PayPlanL.CreateGridRowsForProductionTab(OpenDentBusiness.DynamicPaymentPlanModuleData,System.Boolean)" -->
        <member name="M:OpenDental.AppointmentL.CreateRecallApt(OpenDentBusiness.Patient,System.Collections.Generic.List{OpenDentBusiness.InsPlan},System.Int64,System.Collections.Generic.List{OpenDentBusiness.InsSub},System.DateTime)">
            <summary>Used by UI when it needs a recall appointment placed on the pinboard ready to schedule.  This method creates the appointment and 
            attaches all appropriate procedures.  It's up to the calling class to then place the appointment on the pinboard.  If the appointment doesn't 
            get scheduled, it's important to delete it.  If a recallNum is not 0 or -1, then it will create an appt of that recalltype. Otherwise it will
            only use either a Perio or Prophy recall type.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.HasBrokenApptProcs">
            <summary>Returns true if PrefName.BrokenApptProcedure is greater than 0.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.BreakApptHelper(OpenDentBusiness.Appointment,OpenDentBusiness.Patient,OpenDentBusiness.ProcedureCode)">
            <summary>Sets given appt.AptStatus to broken.
            Provide procCode that should be charted, can be null but will not chart a broken procedure.
            Also considers various broken procedure based prefs.
            Makes its own securitylog entries.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.PromptTextAsapList(System.Int64)">
            <summary>If an appointment is broken, prompts the user if they would like to text the ASAP list to offer the newly opened time slot. Prompt only appears 
            if WebSchedAsapEnabled pref is true, AND there are appointments in the ASAP list, and AsapPromptEnabled pref is true. Returns false if any of these 
            conditions are false, or user chooses not to text ASAP list, otherwise true. 
            </summary>
        </member>
        <member name="M:OpenDental.AppointmentL.GetAsapRange(System.Int64,System.DateTime,System.Int64,System.Collections.Generic.List{OpenDentBusiness.Schedule})">
            <summary>Throw exceptions. Calculates the start and end time that is used by websched to offer an open timeslot to patients on the ASAP List.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.CopyAptToPinboardHelper(OpenDentBusiness.Appointment)">
            <summary>Helper method to send given appt to pinboard.
            Refreshes Appointment module.
            Also does some appointment and security validation.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.SetApptUnschedHelper(OpenDentBusiness.Appointment,OpenDentBusiness.Patient,System.Boolean)">
            <summary>Helper method to send given appt to the unscheduled list.
            Creates SecurityLogs and considers HL7.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.MakeNewAppointment(OpenDentBusiness.Patient,System.Boolean,System.Nullable{System.DateTime},System.Nullable{System.Int64})">
            <summary>Creats a new appointment for the given patient.  A valid patient must be passed in.
            Set useApptDrawingSettings to true if the user double clicked on the appointment schedule in order to make a new appointment.
            It will utilize the global static properties to help set required fields for "Scheduled" appointments.
            Otherwise, simply sets the corresponding PatNum and then the status to "Unscheduled".</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.GetPatientMergePrompt(System.Int64)">
            <summary>Checks to see if patient was previously merged. If so, prompts asking if you'd like to switch and returns the switched patient, otherwise returns null.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.CreatePlannedAppt(OpenDentBusiness.Patient,System.Int32,System.Collections.Generic.List{System.Int64})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.AppointmentL.IsSpecialtyMismatchAllowed(System.Int64,System.Int64)">
            <summary>Checks for specialty mismatch between pat and op. Then prompts user according to behavior defined by 
            PrefName.ApptSchedEnforceSpecialty.  Returns true if the Appointment is allowed to be scheduled, false otherwise.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.OKtoSendToPinboard(OpenDentBusiness.ApptOther,System.Collections.Generic.List{OpenDentBusiness.ApptOther},System.Windows.Forms.Control)">
            <summary>Tests the appointment to see if it is acceptable to send it to the pinboard.  Also asks user appropriate questions to verify that's
            what they want to do.  Returns false if it will not be going to pinboard after all.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.ShowKioskManagerIfNeeded(OpenDentBusiness.Appointment,System.Int64)">
            <summary>If changing to 'Arrived' trigger, check if using eClipboard and setup to popup Kiosk Manager, or attempt to process the patient's
            arrival as if they had texted 'A' to indicate 'Arrived'.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.SendByodLink(OpenDentBusiness.Appointment)">
            <summary>Attempts to send a BYOD/Check-In link for the given appointment.  Prompts user appropriately on success(Text Message winodw) or 
            failure.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.DoPreventChangesToCompletedAppt(OpenDentBusiness.Appointment,OpenDental.PreventChangesApptAction,System.Collections.Generic.List{OpenDentBusiness.Procedure})">
            <summary>Returns true if the PrefName.ApptPreventChangesToCompleted is true, the appointment has completed procedures attached, and the appointment 
            has a completed status. Otherwise it will return false.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.DoPreventChangesToCompletedAppt(OpenDentBusiness.Appointment,OpenDental.PreventChangesApptAction,System.String@,System.Collections.Generic.List{OpenDentBusiness.Procedure})">
            <summary>Returns true if the PrefName.ApptPreventChangesToCompleted is true, the appointment has completed procedures attached, and the appointment 
            has a completed status. Otherwise it will return false.</summary>
        </member>
        <member name="M:OpenDental.AppointmentL.DoPreventChangesToCompletedAppt(OpenDentBusiness.Appointment,OpenDental.PreventChangesApptAction,System.String@,System.Collections.Generic.List{OpenDentBusiness.Procedure},System.Boolean)">
            <summary>Returns true if the PrefName.ApptPreventChangesToCompleted is true, the appointment has completed procedures attached, and the appointment 
            has a completed status. Otherwise it will return false.</summary>
        </member>
        <member name="F:OpenDental.PlannedApptStatus.Failure">
            <summary>1 - Used when failed validation.</summary>
        </member>
        <member name="F:OpenDental.PlannedApptStatus.Success">
            <summary>2 - Used when planned appt was created.</summary>
        </member>
        <member name="F:OpenDental.PlannedApptStatus.FillGridNeeded">
            <summary>3 - Used when planned appt was not created but we might need to fill a grid.</summary>
        </member>
        <member name="T:OpenDental.PreventChangesApptAction">
            <summary>Used with the PrefName.ApptPreventChangesToCompleted to determine if the action taken on an appointment is allowed. These
            are the only actions we care about.</summary>
        </member>
        <member name="F:OpenDental.PreventChangesApptAction.Break">
            <summary>0 - Used when a completed appointment is broken.</summary>
        </member>
        <member name="F:OpenDental.PreventChangesApptAction.Delete">
            <summary>1 - Used when a completed appointment is deleted.</summary>
        </member>
        <member name="F:OpenDental.PreventChangesApptAction.Status">
            <summary>2 - Used when a completed apopintment status is changed.</summary>
        </member>
        <member name="F:OpenDental.PreventChangesApptAction.Unsched">
            <summary>3 - Used when a completed apopintment is sent to the unscheduled list.</summary>
        </member>
        <member name="F:OpenDental.PreventChangesApptAction.Procedures">
            <summary>4 - Used when attempting to detach a completed proc from a completed appt.</summary>
        </member>
        <member name="M:OpenDental.PrintRemoteRequestL.ProcessCompPrintSignal(System.Collections.Generic.List{OpenDentBusiness.Signalod})">
            <summary>Processes print signals that target this computer. Can handle empty / null lists.</summary>
        </member>
        <member name="M:OpenDental.PrintRemoteRequestL.ProcessRemotePrintRequest(OpenDentBusiness.PrintRemoteRequest)">
            <summary>Processes individual print requests.</summary>
        </member>
        <member name="M:OpenDental.PrintRemoteRequestL.PayPlanToSheet(OpenDentBusiness.PayPlan,OpenDentBusiness.DynamicPaymentPlanModuleData)">
            <summary>Creates a new sheet from a given Pay plan.</summary>
        </member>
        <member name="M:OpenDental.PrintRemoteRequestL.TreatPlanToSheet(OpenDentBusiness.TreatPlan,System.Int64,System.Int64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Setting defaults based on the TxPlan module.</summary>
        </member>
        <member name="T:OpenDental.ControlAccount">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlAccount.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ControlAccount.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlAccount.IsFinNoteChanged">
            <summary>Public so this can be checked from FormOpenDental and the note can be saved.  Necessary because in some cases the leave event doesn't
            fire, like when a user switches to a non-modal form, like big phones, and switches patients from that form.</summary>
        </member>
        <member name="F:OpenDental.ControlAccount.IsUrgFinNoteChanged">
            <summary>Public so this can be checked from FormOpenDental and the note can be saved.  Necessary because in some cases the leave event doesn't
            fire, like when a user switches to a non-modal form, like big phones, and switches patients from that form.</summary>
        </member>
        <member name="F:OpenDental.ControlAccount._dataSetMain">
            <summary>This holds some of the data needed for display.  It is retrieved in one call to the database.</summary>
        </member>
        <member name="F:OpenDental.ControlAccount._listOrthoCases">
            <summary>List of all orthocases for the selected patient.</summary>
        </member>
        <member name="F:OpenDental.ControlAccount.labelUnearnedBreakdown">
            <summary>Shows a breakdown of payment split totals by each unearned type.</summary>
        </member>
        <member name="F:OpenDental.ControlAccount._loadData">
            <summary>This holds nearly all of the data needed for display.  It is retrieved in one call to the database.</summary>
        </member>
        <member name="F:OpenDental.ControlAccount._lockDataSetMain">
            <summary>Partially implemented lock object for an attempted bug fix.</summary>
        </member>
        <member name="F:OpenDental.ControlAccount._patient">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlAccount._patNumLast">
            <summary>Gets updated to PatCur.PatNum that the last security log was made with so that we don't make too many security logs for this patient.  When _patNumLast no longer matches PatCur.PatNum (e.g. switched to a different patient within a module), a security log will be entered.  Gets reset (cleared and the set back to PatCur.PatNum) any time a module button is clicked which will cause another security log to be entered.</summary>
        </member>
        <member name="F:OpenDental.ControlAccount._showGridPayPlan">
            <summary>Used to track status of split panel visibility to avoid flicker from changing status too often.</summary>
        </member>
        <member name="F:OpenDental.ControlAccount._showGridRepeating">
            <summary>Used to track status of split panel visibility to avoid flicker from changing status too often.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAccount.IsFamilySelected">
            <summary>True if 'Entire Family' is selected in the Select Patient grid.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.checkShowAutoComm_Click(System.Object,System.EventArgs)">
            <summary>Uses the UserODPref to store ShowAutomatedCommlog separately from the chart module.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.contextMenuAcctGrid_Popup(System.Object,System.EventArgs)">
            <summary>Hides the 'Add Adjustment' and 'Refund' context menus if anything other than a procedure (for adjustment) or one single payment (for refund) is selected.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.contextMenuQuickProcs_Popup(System.Object,System.EventArgs)">
            <summary>This gets run just prior to the contextMenuQuickCharge menu displaying to the user.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.FormSheetFillEdit_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>Event handler for closing FormSheetFillEdit when it is non-modal.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.InitializeOnStartup">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAccount.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.ModuleSelected(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAccount.ModuleSelected(System.Int64,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAccount.ModuleSelected(System.Int64,System.Int64)">
            <summary>Used when jumping to this module and directly to a claim.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.ModuleUnselected">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAccount.canUpdateFinNote">
            <summary>Only for use in FormOpenDental.cs form deactivate event handler. Used to prevent a bug that would clear out the FamUrgFinNote when closing the program sometimes.
            There is a case where a user has a note on load, intentionally clears that note and OD is shutdown via shutdown signal or other process termination before they leave the textbox. This will result in the note that they deleted not being updated and still being present when OD is opened again as if the changes made were not committed.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.canUpdateUrgFinNote">
            <summary>Only for use in FormOpenDental.cs form deactivate event handler. Used to prevent a bug that would clear out the FamUrgFinNote when closing the program sometimes.
            There is a case where a user has a note on load, intentionally clears that note and OD is shutdown via shutdown signal or other process termination before they leave the textbox. This will result in the note that they deleted not being updated and still being present when OD is opened again as if the changes made were not committed.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.RefreshModuleData(System.Int64,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAccount.SetDiscountPlanOrInsurancePlanDash">
            <summary>Sets the visibility of the DPlan Rem or Ins Rem labels</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.UpdateToolbarButtons">
            <summary>Enables toolbar buttons if a patient is selected, otherwise disables them.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.FillComm">
            <summary>Fills the commlog grid on this form.  It does not refresh the data from the database.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.FillRepeatCharges">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAccount.FillTpUnearned">
            <summary>Show the splits that are flagged as being hidden. </summary>
        </member>
        <member name="M:OpenDental.ControlAccount.AddProcAndValidate(System.String,OpenDentBusiness.Provider)">
            <summary>Validated the procedure code using FormProcEdit and prompts user for input if required.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.LayoutPanelsAndRefreshMainGrids(System.Boolean)">
            <summary>For one patient in HQ db with thousands of big email rows, it was taking 9 seconds to refresh. This reduces it to 1 second.  A better fix would be for the grid to be internally faster for this scenario.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.LayoutPanels">
            <summary>This used to be a layout event, but that was making it get called far too frequently.  Now, this must explicitly and intelligently be called.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.DoShowPayPlan(System.Boolean,System.Boolean,System.Double)">
            <summary>Returns true if the payment plan should be displayed.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.GetCreateClaimItemsFromUI">
            <summary>Returns a list of CreateClaimItems comprised from the selected items within gridAccount.
            If no rows are currently selected then the list returned will be comprised of all items within the "account" table in the DataSet.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.GetTableFromDataSet(System.String)">
            <summary>Returns a deep copy of the corresponding table from the main data set.
            Utilizes a lock object that is partially implemented in an attempt to fix an error when invoking DataTable.Clone()</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.PrintStatement(OpenDentBusiness.Statement)">
            <summary>Saves the statement.  Attaches a pdf to it by creating a doc object.  Prints it or emails it.  </summary>
        </member>
        <member name="M:OpenDental.ControlAccount.UpdatePatientBillingDay(System.Int64)">
            <summary>Call this before inserting new repeat charge to update patient.BillingCycleDay if no other repeat charges exist.
            Changes the patient's BillingCycleDay to today if no other active repeat charges are on the patient's account</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.AddAdjustmentToSelectedProcsHelper(System.Boolean)">
            <summary>If the user selects multiple procedures (validated) then we pass the selected procedures to FormMultiAdj. Otherwise if the user
            selects one procedure (not validated) we maintain the previous functionality of opening FormAdjust.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.GetClearingHouseForClaim">
            <summary>Return the clinic specific ClearningHouse based on the claim the user clicked on. Can return null.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.IsWebPaymentsEnabled">
            <summary>Returns true if XCharge or PayConnect payments are allowed to be made for the currently selected clinic.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.PushPaymentToEclipboard(OpenDentBusiness.MobileAppDevice)">
            <summary>If the "Make Payment" action item in eClip isn't present, this will add it.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.OpenUnlockCodeForPayment">
            <summary>Opens a FormMobileCode window.</summary>
        </member>
        <member name="M:OpenDental.ControlAccount.ValidateRightClickDXC(OpenDentBusiness.Claim)">
            <summary>Centralize validation for the DXC right click options. Validation logic taken from the FormClaimEdit.cs OpenAttachmentForm method.</summary>
        </member>
        <member name="T:OpenDental.ControlAppt">
            <summary>The Appointments Module.</summary>
        </member>
        <member name="F:OpenDental.ControlAppt._opNumClickedBlockout">
            <summary>Used for blockouts.  OpNum.</summary>
        </member>
        <member name="F:OpenDental.ControlAppt._dateTimeClickedBlockout">
            <summary>Used for blockouts.  Already handles week view.  Time is not rounded.</summary>
        </member>
        <member name="F:OpenDental.ControlAppt._dateTimeWaitingRmRefreshed">
            <summary>The last dateTime that the waiting room was refreshed.  Local computer time.</summary>
        </member>
        <member name="F:OpenDental.ControlAppt._isPrintCardFamily">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlAppt._hasInitializedOnStartup">
            <summary>This prevents extra refreshes during the convoluted startup sequence.  Remains false until the end of InitializeOnStartup().</summary>
        </member>
        <member name="F:OpenDental.ControlAppt._hasSetInitialStartTime">
            <summary>So that SetInitialStartTime only runs once.</summary>
        </member>
        <member name="F:OpenDental.ControlAppt._scheduleBlockoutClipboard">
            <summary>If the user has done a blockout/copy, then this will contain the blockout that is on the "clipboard".</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.FindBlockoutToolStripItem(System.String)">
            <summary>Throws an ODException if we can't find a certain ToolStripItem with custom exception message. Added for attempted bug fix job 43418.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.SetMenuItemProperty(System.Windows.Forms.ContextMenuStrip,System.String,System.Action{System.Windows.Forms.ToolStripItem})">
            <summary>Finds the MenuItem on the contextMenu and performs the action on it.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.butToday_Click(System.Object,System.EventArgs)">
            <summary>Clicked today.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.butBack_Click(System.Object,System.EventArgs)">
            <summary>Clicked back one day.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.butFwd_Click(System.Object,System.EventArgs)">
            <summary>Clicked forward one day.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.Calendar2_DateSelected(System.Object,System.EventArgs)">
            <summary>Clicked a date on the calendar.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.comboView_SelectionChangeCommitted(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAppt.butUnsched_Click">
            <summary>Sends current appointment to unscheduled list.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.gridReminders_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Logic mimics UserControlTasks.gridMain_CellDoubleClick()</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.gridReminders_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>The logic for this function was copied from UserControlTasks.gridMain_MouseDown() and modified slightly for this scenaro.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.menuItemReminderDone_Click(System.Object,System.EventArgs)">
            <summary>Logic mimics UserControlTasks.DoneClicked(). Code copied from version 19.2 ContrAppt.cs.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.menuItemReminderGoto_Click(System.Object,System.EventArgs)">
            <summary>Logic mimics UserControlTasks.GoTo_Clicked(). Code copied from version 19.2 ContrAppt.cs.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.DeleteWebSchedAsapBlockout_Click(System.Object,System.EventArgs)">
            <summary>Deletes selected web schedule ASAP blockout.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.InitializeOnStartup">
            <summary>Called from FormOpenDental each time the module is selected, but it doesn't do anything after the first time.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.LayoutToolBar">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAppt.ModuleSelected(System.DateTime)">
            <summary>This is a good way to set contrApptPanel.DateSelected while also refreshing the module.  If you are not changing the date or patient, then instead, simply use RefreshPeriod().</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.ModuleSelected(System.Int64,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64})">
            <summary>Refreshes the module for the passed in patient.  A patNum of 0 is acceptable.  Any ApptNums within listPinApptNums will get forcefully added to the main DataSet for the appointment module.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.ModuleSelectedGoToAppt(System.Int64,System.DateTime)">
            <summary>Jumping here from another module and selecting an appointment. Refreshes the module for the patient associated with the appointment.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.ModuleSelectedWithPinboard(System.Int64,System.Collections.Generic.List{System.Int64},System.DateTime,System.Boolean)">
            <summary>Jumping here from another module and placing appointments on the pinboard.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.ModuleUnselected">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAppt.RefreshPeriod(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64},System.Boolean,System.Boolean,System.Collections.Generic.List{System.Int64})">
            <summary>>Refreshes everything except the patient info. isRefreshBubble will refresh the appointment bubble.  If another workstation made a change, then refreshes datatables.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.RefreshPeriodSchedules">
            <summary>Wrapper for RefreshPeriod, refreshes the schedules, but not the appointments</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.DisplayOtherDlg(System.Boolean,System.DateTime,System.Int64)">
            <summary>Displays the Other Appointments for the current patient, then refreshes screen as needed.  initialClick specifies whether the user 
            doubleclicked on a blank time to get to this dialog.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.DisplayOtherDlg(System.Boolean)">
            <summary>Displays the Other Appointments for the current patient, then refreshes screen as needed.  initialClick specifies whether the user doubleclicked on a blank time to get to this dialog.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.FunctionKeyPress(System.Windows.Forms.Keys)">
            <summary>The key press from the main form is passed down to this module.  This is guaranteed to be between the keys of F1 and F12.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.MouseUpForced">
            <summary>Used by parent form when a dialog needs to be displayed, but mouse might be down.  This forces a mouse up, and cleans up any mess so that dlg can show.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.RefreshReminders(System.Collections.Generic.List{OpenDentBusiness.Task})">
            <summary>This is public so that FormOpenDental can pass refreshed tasks here in order to avoid an extra query.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.SetReminderGridRow(OpenDental.UI.GridRow,OpenDentBusiness.Task)">
            <summary>This logic mimics filling a row within UserControlTasks.FillGrid().
            However, the logic is simpler here because we are only dealing with reminders.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.GetForCurView(OpenDentBusiness.ApptView,System.Boolean,System.Collections.Generic.List{OpenDentBusiness.Schedule})">
            <summary>This corresponds to the old ApptViewItemL.GetForCurView.  Its job is to set the ApptViewCur and then send VisOps and VisProvs data to the drawing.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.RefreshAppointmentsIfNeeded(System.DateTime,System.DateTime,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64},System.Boolean)">
            <summary>If needed, refreshes TableAppointments, TableApptFields, and TablePatFields tables.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.RefreshModuleDataPatient(System.Int64)">
            <summary>Fills PatCur from the database. If a patient change occurs, any selected appointment will be cleared.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.RefreshModuleDataPeriod(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64},System.Boolean,System.Boolean)">
            <summary>Gets op nums and prov nums for current view if not passed in.  Will refresh the appointments and schedules if the respective forceRefreshes are set.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.RefreshSchedulesIfNeeded(System.DateTime,System.DateTime,System.Collections.Generic.List{System.Int64},System.Boolean)">
            <summary>If needed, refreshes TableSchedule, TableEmpSched, and TableProvSched tables.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.RefreshWaitingRoomTable">
            <summary>Always refreshes the _dtWaitingRoom table.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.FillEmpSched(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAppt.FillLab(System.Collections.Generic.List{OpenDentBusiness.LabCase})">
            <summary>Fills the lab summary for the day.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.FillProduction(System.DateTime,System.DateTime)">
            <summary>Fills the production summary for the day. ContrApptSheet2.Controls should be current with ContrApptSingle(s) for the select Op and date.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.FillProvSched(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAppt.FillViews">
            <summary>Fills comboView with the current list of views. Triggers ModuleSelected().  Also called from FormOpenDental.RefreshLocalData().</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.FillWaitingRoom">
            <summary>Once per second, this grid refills itself in order to show the time ticking by.  This does not require a trip to the database.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.RefreshModuleScreenButtonsRight">
            <summary>Sets buttons at right to enabled/disabled. Sets value of listConfirmed. Was previously called RefreshModuleScreenPatient.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.RefreshModuleScreenPeriod">
            <summary>Redraws screen based on data already gathered.  RefreshModuleDataPeriod will have already retrieved the data from the db.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.RefreshPinboardImages">
            <summary>This refreshes the images on the pinboard, in case the view changed.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.TickRefresh">
            <summary>Happens once per minute.  It used to just move the red timebar down without querying the database.  If pref.ApptModuleRefreshesEveryMinute is on (it is by default), then this instead queries the database for appt signals so that the waiting room list shows accurately.  The update to the waiting room grid is on a different timer.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.UpdateToolbarButtons">
            <summary>Enables toolbar buttons if a patient is selected, otherwise disables them.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.ShowSearch">
            <summary>Positions the search box, fills it with initial data except date, and makes it visible.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.ApptIsNull(OpenDentBusiness.Appointment)">
            <summary>Handles the display and refresh when the appointment we are trying to operate on is null.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.CheckStatus">
            <summary>Copied from FormApptsOther. Does not limit appointment creation, only warns user. This check should be run before creating a new appointment. </summary>
        </member>
        <member name="M:OpenDental.ControlAppt.ComboViewChanged">
            <summary>Determines the selected Appt View based on the selected index in comboView.  When doSetOnNoChange=true, always sets the new ApptView
            based on selection, otherwise, no change therefore do not set the view.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.CopyApptStructure(OpenDentBusiness.Appointment)">
            <summary>Copies several fields from the supplied Appointment to a new Appointment object, inserts it into the database, and sends the new 
            appointment to the Pinboard. Only used for HQ currently.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.EClipboardQR_Click(System.Object,System.EventArgs)">
            <summary>Opens a QR code to scan on a mobile device to checkin a patient.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.InsertDataForUnlockCode(System.String)">
            <summary>Inserts MobileDataByte for checkin.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.DisplayFormAsapForWebSched(OpenDentBusiness.Appointment)">
            <summary>Brings up FormASAP ready to send for an open time slot.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.DoApptBreakRequired(OpenDentBusiness.Appointment,OpenDentBusiness.Patient)">
            <summary>Helper function for users who have BrokenApptRequiredOnMove enabled. Pref forces the user to pick whether the appt was missed or
            cancelled before moving, deleting, copying to pinboard or sending to the unsched list.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.GetApptViewCur(System.Int64)">
            <summary>Gets the most recently selected ApptView, or runs queries to determine which ApptView is the appropriate view for the current user.
            Can return null.</summary>
            <param name="apptViewNumOverride">If contrApptPanel.ApptViewCur is null, and the appropriate ApptView.ApptViewNum has already been determined,
            pass in apptViewNumOverride to avoid running queries.</param>
        </member>
        <member name="M:OpenDental.ControlAppt.GetApptViewForUser">
            <summary>Returns an ApptView for the currently logged in user and clinic combination. Can return null.  Will return the first available appointment view if this is the first time that this computer has connected to this database.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.GetApptViewNumForUser">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAppt.HasValidStartTime(OpenDentBusiness.Appointment)">
            <summary>Checks if the appointment's start time overlaps another appt in the Op which the apt resides.  Tests all appts for the day, even if not visible.
            Calling RefreshPeriod() is not necessary before calling this method. It goes to the db only as much as is necessary.
            Returns true if no overlap found. Returns false if given apt start time conflicts with another apt in the Op.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.CanScheduleAppointmentTypeOnBlockoutType(OpenDentBusiness.Appointment)">
            <summary>Checks if the appointment's start time would overlap a blockout that it cannot be scheduled over.
            Returns true if no overlap is found. Returns false if given appointment's start time would conflict with a blockout in the operatory.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.IsHqNoneView">
            <summary>Returns true if the none appointment view is selected, clinics is turned on, and the Headquarters clinic is selected.  Also disables pretty much every control available in the appointment module if it is going to return true, otherwise re-enables them.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.MoveAppointments(System.Collections.Generic.List{OpenDentBusiness.Appointment},System.Collections.Generic.List{OpenDentBusiness.Appointment},OpenDentBusiness.Operatory)">
            <summary>Used for the UpdateProvs tool to reassign all future appointments for one op to another prov.
            Returns true if appointments were updated successfully.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.MoveAppointment(OpenDentBusiness.Appointment,OpenDentBusiness.Appointment,System.Collections.Generic.List{OpenDentBusiness.Schedule},System.Boolean)">
            <summary>Mostly for moving a single appointment.  Similar to the logic which runs in pinBoard_MouseUp(), but pinBoard_MouseUp() has additional things that are done.  This is also used for the UpdateProvs tool to reassign all future appointments for one op to another prov.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.IsOperatoryHygiene(System.Boolean,OpenDentBusiness.Operatory,System.Int64,System.Int64)">
            <summary>Returns whether or not the op and assigned providers should be treated as IsHygiene. Returns the value of isHygieneCur if the IsHygiene status of the operatory cannot be determined.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.PrintApptCard">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlAppt.ProcessOtherDlg(OpenDentBusiness.OtherResult,System.Int64,System.String,System.Int64[],System.Collections.Generic.List{System.Int64})">
            <summary>Processes the OtherResult from a call to FormApptsOther.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.GetApptViewNumGoTo(System.Collections.Generic.List{System.Int64},System.Int64)">
            <summary>Helper method to select an appointment view that contains the operatory a selected appointment was assigned to when coming from FormApptsOther.but_GoTo(...)</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.SendTextMessages(System.Collections.Generic.List{System.Int64})">
            <summary>Brings up the window to send text messagse to the patients.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.SendToPinBoardAptNums(System.Collections.Generic.List{System.Int64})">
            <summary>Used to send one or more appontments to the pinboard.  The other way to do it is SendToPinboardDataRow.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.SendToPinboardDataRow(System.Data.DataRow)">
            <summary>Used when dragging an appt to the pinboard.  Another way to do it would be SendToPinBoardAptNums.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.SetInitialStartTime">
            <summary>Called from ModuleSelected.  Just runs once for the purpose of setting start time.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.SetView(System.Int64,System.Boolean)">
            <summary>Sets the index of comboView for the specified ApptViewNum.  Then, does a ModuleSelected().  If saveToDb, then it will remember the ApptViewNum and currently selected ClinicNum for this workstation.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.SetWeeklyView(System.Boolean,System.Boolean)">
            <summary>Switches between weekly view and daily view.   Calls either RefreshPeriod or ModuleSelected.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.TryAdjustAppointmentPattern(OpenDentBusiness.Appointment,System.Collections.Generic.List{OpenDentBusiness.Operatory})">
            <summary>Shortens appt.Pattern if overlap is found in neighboring op within appt.Op. Pattern will be adjusted to a minimum of 1 until no overlap occurs. Calling RefreshPeriod() is not necessary before calling this method. It goes to the db only as much as is necessary. Returns true if pattern was adjusted. Returns false if pattern was not adjusted.</summary>
        </member>
        <member name="M:OpenDental.ControlAppt.ShowAppointmentBlockoutMessage(OpenDentBusiness.Appointment)">
            <summary>Returns true if a message was displayed to the user telling them that the appointment could not be scheduled, otherwise false.</summary>
        </member>
        <member name="F:OpenDental.ControlAppt.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ControlAppt.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.ControlAppt.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.ControlChart">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlChart.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ControlChart.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.ControlChart.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.ControlChart.tabControlProc">
            <summary>This control is associated to a dynamic sheetDef layouts SheetFieldDef.
            Consider updating FormSheetDefEdit to reflect any visual changes.</summary>
        </member>
        <member name="F:OpenDental.ControlChart.IsTreatmentNoteChanged">
            <summary>public for plugins.</summary>
        </member>
        <member name="F:OpenDental.ControlChart.Pd">
            <summary>This is a reference to the _pd in FormOpenDental.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._apteryxLocker">
            <summary>Locker for Apteryx Thumbnail downloads</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listImageInfos">
            <summary>This is a list that is 1:1 with what's showing in current tab.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listHiddenTeeth">
            <summary>a list of the hidden teeth as strings. Includes "1"-"32", and "A"-"Z"</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listDefNumsVisImageCats">
            <summary>A list of the DefNums that is 1:1 with the image tabs that are showing.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listProceduresTPs">
            <summary>This is a filtered list containing only TP procedures.  It's also already sorted by priority and tooth number.</summary>
        </member>
        <member name="F:OpenDental.ControlChart.toolBarButtonErx">
            <summary>A specific reference to the "eRx" button.  This special reference helps us refresh the notification text on the button after the user changes.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._chartViewDisplay">
            <summary>Can be null if user has not set up any views.  Defaults to first in list when starting up.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._columnHeaderDefaultSize">
            <summary>The default 96 dpi width of the columnHeader stored within the listViewButtons control prior to applying any zoom adjustments.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._dateTimeLastSearch">
            <summary>The time that we started our last prog note search.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._maxPageRowsDefaultGridProg">
            <summary>Store the default max value since we adjust this when sorting the grid after clicking on a column header.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._isFillingProgNotes">
            <summary>This keeps track of if the progress notes are being filled.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._isModuleSelected">
            <summary>For various reasons, this module can become unselected while clicking around, and there are certain actions we shouldn't take if this happens. See IsPatientNull for further comments.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._isSearchPending">
            <summary>TextSearch has changed, but we are waiting for a short time before performing the search.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listApteryxThumbnails">
            <summary>List of images that have been downloaded from Apteryx.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listProceduresCharted">
            <summary>List of procedures added via quick add or procedure button.  Cleared for each user click before adding.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listProcedures">
            <summary>List of all procedures (except deleted status) for the current patient.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listDataRowsPlannedAppts">
            <summary>List containing only rows showing in gridPlanned, can be the same as _tablePlannedAll</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listDateTimesProcedures">
            <summary>Used to determine what date the Tooth Chart should display.  Each unique date will have a tick on the time bar.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listDataRowsProcsSkipped">
            <summary>A subset of DataSetMain.  The procedures with valid dates that were skipped when drawing the graphical toothchart</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listDataRowsProcsOrig">
            <summary>A copy of ProcList used to revert list of DataRows back to normal ChartModule after switching to IsTpCharting view.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listDataRowsProcsForGraphical">
            <summary>A subset of DataSetMain.  The procedures that need to be drawn in the graphical tooth chart.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listDataRowsSearchResults">
            <summary>The rows in the prog notes table that matched the last time we searched.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listFormErxs">
            <summary>List of every open FormErx per PatNum.  This is to ensure we only open 1 FormErx per PatNum.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listAptNumsSelected">
            <summary>Used to cache the selected AptNums of the items in the main grid, to reselect them after a refresh.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listSubstitutionLinks">
            <summary>This gets lazy loaded from db the first time a user clicks to add a procedure.  That way, it can be reused a few times for each new procedure added without going back to db.  Needed in Procedures.ComputeEstimates and Fees.GetListFromObjects.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listToothInitialsCopy">
            <summary>Deep copy of ToothInitials that is used to fill the Tooth Chart when the track bar date changes. Currently only adds / removes missing teeth due to extractions.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listToothInitialsText">
            <summary>A subset of _listToothInitials containing just the text entries.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._listTreatPlans">
            <summary>List of all TPs for the current patient.  Does not include Saved status.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._patFolder">
            <summary>Full path to the patient folder, including \ on the end.  Could be null if a patient folder could not be created / found.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._patNumLast">
            <summary>Gets updated to PatCur.PatNum that the last security log was made with so that we don't make too many security logs for this patient.  When _patNumLast no longer matches PatCur.PatNum (e.g. switched to a different patient within a module), a security log will be entered.  Gets reset (cleared and the set back to PatCur.PatNum) any time a module button is clicked which will cause another security log to be entered.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._pointLastClicked">
            <summary>Used for MenuItemPopup() to tell which row the user clicked on.  Currently only for gridPtInfo</summary>
        </member>
        <member name="F:OpenDental.ControlChart._searchTextPrevious">
            <summary>The previous text we used when searching prog notes. Used in optimizing the search results</summary>
        </member>
        <member name="F:OpenDental.ControlChart._idxImageTabSelected">
            <summary>Keeps track of which tab is selected. It's the index of the selected tab.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._sheetLayoutController">
            <summary>The class that controls all child control placement and anchoring based off of selected sheetDef layout.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._controlToothChart">
            <summary>This is the new Sparks3D toothChart.</summary>
        </member>
        <member name="F:OpenDental.ControlChart._toothChartRelay">
            <summary>Relays commands to either the old SparksToothChart.ToothChartWrapper or the new Sparks3d.ToothChart.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.#ctor">
            <summary></summary>
        </member>
        <member name="E:OpenDental.ControlChart.EventImageClick">
            <summary>Used when an image thumbnail is clicked at the bottom of the Chart. This event bubbles up to the form, which then calls ControlImagesJ.LaunchFloater().</summary>
        </member>
        <member name="M:OpenDental.ControlChart.GetListTabProcPageTitles">
            <summary>List of tab titles for the TabProc control. Used to get accurate preview in sheet layout design view. Returns a list of one item called "Tab" if something goes wrong.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.GetIsTPChartingAvailable">
            <summary>True if the chart view allows TP Charting or "Is TP View" is checked.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.checkShowCommAuto_Click(System.Object,System.EventArgs)">
            <summary>Uses the UserODPref to store ShowAutomatedCommlog separately from the chart module.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.ErxBrowserClosed(CodeBase.ODEventArgs)">
            <summary>CRITICAL: If we ever decide to launch eRx in an eternal browser window again, then we will need another way to sync the medications from eRx.  If we use an external browser window, then we have no way to know when the user is done with the exernal browser, and therefore we would not know when to sync.  Currently this event function knows when the browser closes, so we know when to sync.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.FormExamSheets_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>Event handler for closing FormExamSheets when it is non-modal.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.FormSheetFillEdit_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>Event handler for closing FormSheetFillEdit when it is non-modal.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanadianSelectedRowHelper(OpenDentBusiness.ProcTP)">
            <summary>Selects any associated lab procedures for the given selectedProcTp in gridTpProcs.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.listPriorities_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>Updates priority of all selected procedures to the selected priority.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.menuItemErxRefresh_Click(System.Object,System.EventArgs)">
            <summary>Manuall refresh prescriptions from eRx.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.MenuItemPopupUnmaskDOB(System.Object,System.EventArgs)">
            <summary>Just prior to displaying the context menu, enable or disables the UnmaskSSN option</summary>
        </member>
        <member name="M:OpenDental.ControlChart.menuProgRight_Popup(System.Object,System.EventArgs)">
            <summary>The menu will display all items that are relevant to at least one selected row. If there is at least one selected row that is not relevant, the menu item will be disabled but visible.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.panelQuickButtons_ItemClickBut(System.Object,OpenDental.UI.ODButtonPanelEventArgs)">
            <summary>Handles single clicks that occur on button items. Not double clicks, not labels, and not empty space.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.butClear_Click(System.Object,System.EventArgs)">
            <summary>This is the listener for the Delete button.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.butPin_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlChart.FillProgNotesInternal(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Do not call this method. Call FillProgNotes instead.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.InitializeLocalData">
            <summary>Called every time prefs are changed from any workstation.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.InitializeOnStartup">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlChart.LayoutToolBar">
            <summary>Causes the toolbars to be laid out again.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.ModuleSelected(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlChart.ModuleSelected(System.Int64,System.Boolean)">
            <summary>Only use this overload when isClinicRefresh is set to true.  This is only used when calling ModuleSelected from FromOpenDental. When isClinicRefresh is true the tab control tabProc is redrawn and only needs to be done when the clinic is changed or the module is selected for the first time.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.ModuleSelected(System.Int64,System.Boolean,System.Boolean)">
            <summary>Only use this overload when isFullRefresh is set to false.  This is ONLY in a few places and only for eCW at this point.  Speeds things up by refreshing less data.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.ModuleSelectedErx(System.Int64)">
            <summary>This function does not follow our usual pattern. This function is just like ModuleSelected() but also syncs any eRx data which needs to be checked frequently.  Only called from FormOpenDental when the Chart module button is clicked or a new patient is selected while inside the Chart.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.ModuleUnselected(System.Boolean)">
            <summary></summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.ControlChart.CanadianLabFeeHelper(System.Int64)" -->
        <member name="M:OpenDental.ControlChart.CanAttachLabFee(System.Boolean,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64})">
            <summary>Returns true if the 'Attach Lab Fee' menu item is applicable. Adds selected regular procedures to procNumsReg. Adds selected lab procedures to procNumsLab.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanChangeProcsStatus(OpenDentBusiness.ProcStat,System.Data.DataRow,System.Boolean,System.Boolean)">
            <summary>Checks if the procedure can be changed to newProcStatus.  If doCheckDb, it will get fresh data from the database when checking, otherwise, it will use data from LoadData.  If isSilent, a message box will popup if the status cannot be changed</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanCompleteAppointment(System.Boolean,System.Boolean)">
            <summary>Returns true if the row is an appointment and can be set complete.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanCompleteTask(System.Boolean,System.Boolean)">
            <summary>Returns true if the selected task row can be set complete.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanDeleteRow(System.Data.DataRow,System.Boolean,OpenDentBusiness.OrthoProcLink,System.Boolean)">
            <summary>Returns true if the row can be deleted.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanDetachLabFee(System.Data.DataRow,System.Boolean)">
            <summary>Returns true if the 'Detach Lab Fee' menu item is applicable.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanDisplayAppointment">
            <summary>Returns true if at least one appointment row is selected.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanDisplayRoutingSlip">
            <summary>Returns true if the 'Print Routing Slip' menu item should be displayed.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanDisplayTask">
            <summary>Returns true if at least one task is selected.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanEditRow(System.Data.DataRow,System.Boolean,System.Boolean,System.Collections.Generic.List{OpenDentBusiness.Procedure})">
            <summary>Returns true if the 'Edit All' menu item is applicable to this row. For the procedures that can be edited, adds them to listProcsToEdit.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanGroupMultiVisit(System.Data.DataRow,System.Boolean,System.Boolean)">
            <summary>Returns true if the 'Group for Multi Visit' menu item is applicable.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanGroupRow(System.Data.DataRow,System.Boolean,System.Boolean,System.Collections.Generic.List{OpenDentBusiness.Procedure},System.Boolean)">
            <summary>Returns true if the row can be put into a group note. Adds procedure to listProcsToGroup if it can be.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanPrintDay(System.Data.DataRow,System.Int32)">
            <summary>Returns true if the 'Print Day for Hospital' menu item is applicable. This method returns true if there is at least one completed procedure with the same date as the row.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanPrintRoutingSlip(System.Boolean)">
            <summary>Returns true if the 'Print Routing Slip' menu item should be enabled.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CanUngroupMultiVisit(System.Data.DataRow,System.Boolean,System.Boolean)">
            <summary>Returns true if the 'Ungroup for Multi Visit' menu item is applicable.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.DoesGridProgRowPassFilter(System.Data.DataRow,System.Collections.Generic.List{OpenDentBusiness.ProcGroupItem},System.Collections.Generic.List{System.Int64})">
            <summary>Returns true if the row passed in should be displayed.  Otherwise; false.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.FillCustomerViewsGrid">
            <summary>FillChartViewsGrid should be called first to synch the grids thus having the chart view cache already refreshed.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.FillDateRange">
            <summary>This method is used to set the Date Range filter start and stop dates based on either a custom date range or DatesShowing property of chart view.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.FillDxProcImage(System.Boolean)">
            <summary>Gets run with each ModuleSelected.  Fills Dx, Prognosis, Priorities, ProcButtons, Date, and Image categories</summary>
        </member>
        <member name="M:OpenDental.ControlChart.FillImages">
            <summary>Gets run on ModuleSelected and each time a different images tab is selected. It first creates any missing thumbnails, then displays them. So it will be faster after the first time.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.FillToothChart(System.Boolean,System.DateTime)">
            <summary>This is, of course, called when module refreshed.  But it's also called when user sets missing teeth or tooth movements.  In that case, the Progress notes are not refreshed, so it's a little faster.  This also fills in the movement amounts.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.FillTpProcs">
            <summary>Calls FillTpProcData and FillTpProcDisplay as well as showing checkTreatPlans and filling the priority list.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.FillGridTpProcs">
            <summary>Could be filled with procs from more than one TP.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.GetChartModuleComponents">
            <summary>Returns the appropriate ChartModuleComponentsToLoad.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.GridProgRowConstruction(System.Data.DataRow,System.Collections.Generic.List{OpenDentBusiness.DisplayField})">
            <summary>Returns an ODGridRow object which dictates how the row passed in should be displayed.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.HasHideRxButtonsEcw">
            <summary>Returns true if eCW is enabled and they turned on the Hide Chart Rx Buttons setting within the program link.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.IsPatientNull">
            <summary>This returns true if the patient is null or the module is not selected. Previously, we only tested for patient null, but that's not good enough anymore because we won't be setting patient to null when unselecting module. We still do set the patient to null when certain errors happen.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.logComplCreate(OpenDentBusiness.Procedure)">
            <summary>Creates log entries for completed procedures</summary>
        </member>
        <member name="M:OpenDental.ControlChart.MenuItemSetSelectedProcsStatus(OpenDentBusiness.ProcStat)">
            <summary>Sets the selected rows to the ProcStatus passed in.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.NewCropRefreshPrescriptions">
            <summary>Returns true if new information was pulled back from NewCrop.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.ProcStatDesired(OpenDentBusiness.ProcStat,System.Boolean)">
            <summary> Checks ProcStat passed to see if one of the check boxes on the form contains a check for the ps passed. For example if ps is TP and the checkShowTP.Checked is true it will return true.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.RefreshModuleData(System.Int64,System.Boolean)">
            <summary>isFullRefresh is only set to false for eCW.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.SetDateRange">
            <summary>This does not currently handle custom views.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.SetErxButtonNotification(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Currently only used for DoseSpot.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.ShouldDisplayProc(System.Data.DataRow)">
            <summary>The supplied procedure row must include these columns: isLocked,ProcDate,ProcStatus,ProcCode,Surf,ToothNum, and ToothRange, all in raw database format.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.ShouldRowShowGraphical(System.Data.DataRow,System.DateTime)">
            <summary>Returns true if rowCur represents a valid procedure that should be shown on the tooth chart based on the current track bar date. Returns false if rowCur does not have a valid DateTP, DateEntryC, and ProcDate set. Will also return false if rowCur should not be drawn on the tooth chart (based on the track bar's currently selected date / status of rowCur). If the row needs to be skipped, it gets added to _listProcsSkipped so make sure to manage it correctly before calling this method.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.ShowMenuItemHelper(System.Windows.Forms.MenuItem,System.Func{OpenDental.ControlChart.DataRowWithIdx,System.Boolean})">
            <summary>Displays the menu item as enabled if all the selected rows return true for isRowRelevant. Displays the menu item as disabled if at least one but not all return true. Hides the menu item if no rows return true.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.ToggleCheckTreatPlans">
            <summary>Mimics old ChartLayoutHelper logic. Called in various places when we want to ensure that checkTreatPlans is shown when it needs to.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.Tool_Commlog_Click">
            <summary>Only used for eCW tight.  Everyone else has the commlog button up in the main toolbar.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.UpdateErxAccess(System.String,System.String,System.Int64,System.String,System.String,OpenDentBusiness.ErxOption)">
            <summary>Fails silently.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.UsingEcwTight">
            <summary>This reduces the number of places where Programs.UsingEcwTight() is called.  This helps with organization.  All calls from ContrChart must pass through here.  They also must have been checked to not involve the Orion bridge or layout logic.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.UsingEcwTightOrFull">
            <summary>This reduces the number of places where Programs.UsingEcwTightOrFull() is called.  This helps with organization.  All calls from ContrChart must pass through here.  They also must have been checked to not involve the Orion bridge or layout logic.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.LayoutSheet_GetControlDict">
            <summary>Returns a dictionary such that the key is a sheetFieldDef.FieldName and the value is a corresponding control from this instance of ContrChart. Dictionary values can be null if control is not matched or it is matched to an HQ only control and not at HQ.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.LayoutSheet_GetMode">
            <summary>This mimics FormSheetDefEdit.InitLayoutModes() logic.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.LayoutControls">
            <summary>Does a fresh layout of the controls, based on the Sheet, the ChartView, and TP mode.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.AddProcedure(OpenDentBusiness.Procedure,System.Collections.Generic.List{OpenDentBusiness.Fee})">
            <summary>Sets many fields for a new procedure, then displays it for editing before inserting it into the db.  No need to worry about ProcOld because it's an insert, not an update.  AddProcedure and AddQuick both call AddProcHelper, where most of the logic for setting the fields for a new procedure is located.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.AddProcHelper(OpenDentBusiness.Procedure,System.Collections.Generic.List{OpenDentBusiness.Fee})">
            <summary>Called by AddProcedure and AddQuick.  Both methods contained versions of this code and a bug was introduced in version 15.3 because the order of the regions changed in the two methods and no longer matched.  This helper method prevents bugs caused by trying to keep duplicate code blocks synced.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.IsToothSelectionValidForTxArea(OpenDentBusiness.Procedure)">
            <summary>Determines whether or not the procedure is pre-inserted as deleted by checking if treatment areas selections are valid.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.AddQuadProcs(OpenDentBusiness.Procedure,System.Collections.Generic.List{OpenDentBusiness.Fee})">
            <summary>Add a procedure for all selected quadrants.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.AddQuadProcsWithToothRange(OpenDentBusiness.Procedure,System.Collections.Generic.List{OpenDentBusiness.Fee})">
            <summary>Add a procedure for all selected quadrants and maintains the selected tooth range for each quadrant.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.AddArchProcsWithToothRange(OpenDentBusiness.Procedure,System.Collections.Generic.List{OpenDentBusiness.Fee})">
            <summary>Add a procedure for all selected arches and maintains the selected tooth range for each arch.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.AddQuick(OpenDentBusiness.Procedure,System.Collections.Generic.List{OpenDentBusiness.Fee})">
            <summary>No user dialog is shown.  This only works for some kinds of procedures.  Set the codeNum first. AddProcedure and AddQuick both call AddProcHelper, where most of the logic for setting the fields for a new procedure is located. No validation is done before adding the procedure so check all permissions and such prior to calling this method.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.ProcButtonClicked(OpenDentBusiness.ProcButton,OpenDentBusiness.ProcButtonQuick)">
            <summary>If quickbutton, then pass in procButtonQuick and set procButton to null.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.FillMovementsAndHidden">
            <summary>Fills all of the toothinitial controls in the various tabs, including movements, hidden, and text drawing.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.moveItemOrderHelper(System.Data.DataRow,System.Int32)">
            <summary>Sets item orders appropriately. Does not reorder list, and does not repaint/refill grid.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.saveChangesToDBHelper">
            <summary>Updates database based on the values in _tablePlannedAll.Rows.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.CheckForSearchMatch(System.String,System.Data.DataRow,System.Collections.Generic.List{System.String}@,System.Boolean,System.Boolean)">
            <summary>Searches the given row at the given column for any matching search terms in searchInput. If a match is found, the search term is removed from searchInput.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.SearchProgNotes">
            <summary>Searchs the progress notes for the entered search text.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.SearchProgNotes(System.Collections.Generic.List{System.String},System.DateTime,System.Collections.Generic.List{System.Data.DataRow},System.String)">
            <summary>Searches the current view of the progress notes for any search terms passed in.</summary>
        </member>
        <member name="M:OpenDental.ControlChart.FillOrthoTabs">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlChart.FillGridOrtho">
            <summary>Like the corresponding method in FormOrthoChart, this one does not get the data.</summary>
        </member>
        <member name="T:OpenDental.ControlChart.DataRowWithIdx">
            <summary>Class that holds a DataRow along with the index of the table it is a part of.</summary>
        </member>
        <member name="T:OpenDental.ControlChart.ImageInfo">
            <summary>Each item can be either a Doc or a Mount</summary>
        </member>
        <member name="T:OpenDental.ControlFamily">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlFamily.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlFamily._dictCloneSpecialty">
            <summary>Filled with all clones for the currently selected patient and their corresponding specialty.
            Specialties are only important if clinics are enabled.  If clinics are disabled then the corresponding Def will be null.</summary>
        </member>
        <member name="F:OpenDental.ControlFamily._listRecalls">
            <summary>All recalls for this entire family.</summary>
        </member>
        <member name="F:OpenDental.ControlFamily._loadData">
            <summary>All the data necessary to load the module.</summary>
        </member>
        <member name="F:OpenDental.ControlFamily._patNumLast">
            <summary>Gets updated to PatCur.PatNum that the last security log was made with so that we don't make too many security logs for this patient.  When _patNumLast no longer matches PatCur.PatNum (e.g. switched to a different patient within a module), a security log will be entered.  Gets reset (cleared and the set back to PatCur.PatNum) any time a module button is clicked which will cause another security log to be entered.</summary>
        </member>
        <member name="F:OpenDental.ControlFamily._pointLastClicked">
            <summary>Used for MenuItemPopup() to tell which row the user clicked on.  Currently only for gridPat</summary>
        </member>
        <member name="M:OpenDental.ControlFamily.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlFamily.MenuItemPopupUnmaskDOB(System.Object,System.EventArgs)">
            <summary>Just prior to displaying the context menu, enable or disables the UnmaskDOB option</summary>
        </member>
        <member name="M:OpenDental.ControlFamily.MenuItemPopupUnmaskSSN(System.Object,System.EventArgs)">
            <summary>Just prior to displaying the context menu, enable or disables the UnmaskSSN option</summary>
        </member>
        <member name="M:OpenDental.ControlFamily.InitializeOnStartup">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlFamily.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="M:OpenDental.ControlFamily.ModuleSelected(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlFamily.ModuleUnselected">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlFamily.AddSuperGuarPriInsToFam(System.Int64)">
            <summary>Adds the super family guarantor's primary insurance plan to each family member in Fam.  Each family member will be their own
            subscriber with SubscriberID set to the patient's MedicaidID if one has been entered for the patient.  If a family member does not have a 
            MedicaidID entered, FormInsPlan will open and prompt the user to enter a SubscriberID.</summary>
        </member>
        <member name="M:OpenDental.ControlFamily.IsValidForCloneAction">
            <summary>Returns a boolean based on if the current state of the Family module is ready for acting on behalf of the clone feature.
            If something is not ready for clone action to be taken a message will show to the user and false will be returned.</summary>
        </member>
        <member name="M:OpenDental.ControlFamily.ToolButAddClone_Click">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlFamily.ToolButBreakClone_Click">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlFamily.ToolButSynchClone_Click">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlFamily.IsGuarantorTSI">
            <summary>Shows warning if the patient's guarantor has been sent to TSI. Returns true if the patient has been sent to TSI and the user wants to cancel the move. Otherwise, returns false.</summary>
        </member>
        <member name="M:OpenDental.ControlFamily.UpdateToolbarButtons">
            <summary>Enables toolbar buttons if a patient is selected, otherwise disables them.</summary>
        </member>
        <member name="M:OpenDental.ControlFamily.GetWidthSuperClonesPanel(System.Boolean,System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ControlImagesOld">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.ControlImagesOld.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._apteryxLocker">
            <summary>Locker for _listImageDownload</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._bitmapArrayRaw">
            <summary>In-memory copies of the images being viewed/edited. No changes are made to these images in memory, they are just kept resident to avoid having to reload the images from disk each time the screen needs to be redrawn.  If no mount, this will just be one image.  A mount will contain a series of images.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._bitmapShowing">
            <summary>The image currently on the screen.  If a mount, this will be an image representing the entire mount.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._boolArrayIdxsFlaggedForUpdate">
            <summary>Indicates which documents to update in the image worker thread. This variable must be locked before accessing it and it must also be the same length as DocsInMount at all times.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._claimPaymentNum">
            <summary>If this is not zero, then this indicates a different mode special for claimpayment.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._countWebBrowserLoads">
            <summary>Tracker to keep track of how many pages are loaded on our webBrowser object.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._documentArrayInMount">
            <summary>List of documents within the currently selected mount (if any).</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._documentForSettings">
            <summary>Edited by the main thread to reflect selection changes. Read by worker thread.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._documentShowing">
            <summary>Keeps track of the document settings for the currently selected document or mount.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._ehrAmendment">
            <summary>If this is not null, then this indicates a different mode special for amendments.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._eventWaitHandle">
            <summary>Used as a thread-safe communication device between the main and worker threads.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._isFillingTreeWithPref">
            <summary>Used to flag when filling tree and also ImagesModuleTreeIsCollapsed=2. This lets us ignore the expand and collapse commands temporarily.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._idxDocToCopy">
            <summary>The idxSelectedInMount when it is copied.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._idxSelectedInMount">
            <summary>The index of the currently selected item within a mount.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._enumNodeTypeForSettings">
            <summary>Edited by the main thread to reflect selection changes. Read by worker thread.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._imageSettingFlags">
            <summary>Set by the main thread and read by the image worker thread. Specifies which image processing tasks are to be performed by the worker thread.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._intArrayWidthsImagesCur">
            <summary>Used to prevent concurrent access to the current images by multiple threads.  Each item in array corresponds to an image in a mount.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._intArrayHeightsImagesCur">
            <summary>Used to prevent concurrent access to the current images by multiple threads.  Each item in array corresponds to an image in a mount.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._isCropMode">
            <summary>Starts out as false. It's only used when repainting the toolbar, not to test mode.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._isFillingXVWebFromThread">
            <summary>Keep track of if image module is being refreshed so we know when to query the images again and refill the list.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._isDragging">
            <summary>Set to true when the image in the picture box is currently being translated.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._listApteryxImagesDownload">
            <summary>Copy of the image information that was recieved. Needed so we can refresh the image module and not have to query again.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._listMountItems">
            <summary>If a mount is currently selected, this is the list of the mount items on it.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._mountShowing">
            <summary>Keeps track of the currently selected mount object (only when a mount is selected).</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._nodeIdTagDown">
            <summary>Used to perform mouse selections in the treeDocuments list.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._nodeIdTagOld">
            <summary>Used to keep track of the old document selection by document number (the only guaranteed unique idenifier). This is to help the code be compatible with both Windows and MONO.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._patient">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._patFolder">
            <summary>Set with each module refresh, and that's where it's set if it doesn't yet exist.  For now, we are not using ImageStore.GetPatientFolder(), because we haven't tested whether it properly updates the patient object.  We don't want to risk using an outdated patient folder path.  And we don't want to waste time refreshing PatCur after every ImageStore.GetPatientFolder().</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._patNumLastSecurityLog">
            <summary>Prevents too many security logs for this patient.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._pointMouseDown">
            <summary>When dragging on Picturebox, this is the starting point in PictureBox coordinates.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._pointFTranslationOld">
            <summary>Used as a basis for calculating image translations.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._pointFTranslation">
            <summary>The true offset of the document image or mount image.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._sigBoxTopaz">
            <summary>Used to display Topaz signatures on Windows. Is added dynamically to avoid native code references crashing MONO.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._suniDeviceControl">
            <summary>Used for performing an xRay image capture on an imaging device.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._threadImageRequest">
            <summary>Used to download images from Apterxy</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._threadImageUpdate">
            <summary>Thread to handle updating the graphical image to the screen when the current document is an image.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._userNumPrev">
            <summary>Tracks the last user to load ContrImages</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._odWebView2">
            <summary>Displays PDFs.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._odWebView2FilePath">
            <summary>The location of the file that <see cref="F:OpenDental.ControlImagesOld._odWebView2" /> has navigated to.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._zoomImage">
            <summary>The current zoom of the currently loaded image/mount. 1 implies normal size, less than 1 implies the image is shrunk, greater than 1 imples the image/mount is blown-up.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._zoomLevel">
            <summary>The zoom level is 0 after the current image/mount is loaded.  User changes the zoom in integer increments.  ZoomOverall is then (initial image/mount zoom)*(2^ZoomLevel).</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._zoomOverall">
            <summary>Represents the current factor for level of zoom from the initial zoom of the currently loaded image/mount. This is calculated directly as 2^ZoomLevel every time a zoom occurs. Recalculated from ZoomLevel each time, so that ZoomOverall always hits the exact same values for the exact same zoom levels (no loss of data).</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._cloudIframe">
            <summary>Displays PDFs on ODCloud.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld._isExportable">
            <summary>True of current item selected in tree can be exported.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ControlImagesOld.CaptureCallback">
            <summary>Used to safe-guard against multi-threading issues when an image capture is completed.</summary>
        </member>
        <member name="T:OpenDental.ControlImagesOld.InvalidateSettingsCallback">
            <summary>Used to protect against multi-threading issues when refreshing a mount during an image capture.</summary>
        </member>
        <member name="T:OpenDental.ControlImagesOld.RenderImageCallback">
            <summary>Used for Invoke() calls in RenderCurrentImage() to safely handle multi-thread access to the picture box.</summary>
        </member>
        <member name="E:OpenDental.ControlImagesOld.CloseClick">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.TreeDocuments_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.TreeDocuments_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.CaptureComplete(System.Object,System.EventArgs)">
            <summary>Called on successful capture of image.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.CaptureFinalize(System.Object,System.EventArgs)">
            <summary>Called when the entire sequence of image captures is complete (possibly because of failure, or a full mount among other things).</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.CaptureReady(System.Object,System.EventArgs)">
            <summary>Called when the image capture device is ready for exposure.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.pictureBoxMain_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.pictureBoxMain_SizeChanged(System.Object,System.EventArgs)">
            <summary>Keeps the back buffer for the picture box to be the same in dimensions as the picture box itself.</summary>
        </member>
        <member name="T:OpenDental.ControlImagesOld.EnumNodeType">
            <summary>None,Category,Doc,Mount,Eob,EhrAmend,ApteryxImage</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld.EnumNodeType.None">
            <summary>This is the initial empty id.  Used instead of a null ImageNodeId</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld.EnumNodeType.Category">
            <summary>PriKey is DefNum</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld.EnumNodeType.Doc">
            <summary>PriKey is DocNum</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld.EnumNodeType.Mount">
            <summary>PriKey is MountNum</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld.EnumNodeType.Eob">
            <summary>PriKey is EobAttachNum</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld.EnumNodeType.EhrAmend">
            <summary>PriKey is EhrAmendmentNum</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld.EnumNodeType.ApteryxImage">
            <summary>DEPRECATED. PriKey is 0. The ImgDownload field will have store any information needed.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.DocCropRect(OpenDentBusiness.Document,System.Int32,System.Int32)">
            <summary>doc may be null if eob.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.FillTree(System.Boolean)">
            <summary>Refreshes list from db, then fills the treeview.  Set keepSelection to true in order to keep the current selection active.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.GetScreenMatrix(OpenDentBusiness.Document,System.Int32,System.Int32,System.Single,System.Drawing.PointF)">
            <summary>The screen matrix of the image is relative to the upper left of the image, but our calculations are from the center of the image (since the calculations are easier everywhere else if taken from the center). This function converts our calculation matrix into an equivalent screen matrix for display. Assumes document rotations are in 90 degree multiples.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.InitializeOnStartup">
            <summary>Also does LayoutToolBar.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.LayoutAmendmentToolBar">
            <summary>Toolbar Layout for Amendments</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ModuleSelected(System.Int64)">
            <summary>One of two overloads.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ModuleSelected(System.Int64,System.Int64)">
            <summary>This overload is needed when jumping to a specific image from FormPatientForms.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ModuleSelectedAmendment(OpenDentBusiness.EhrAmendment)">
            <summary>This overload is for amendment images.  Loads the one image for this amendment.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ModuleSelectedClaimPayment(System.Int64)">
            <summary>This overload is for batch claim payment (EOB) images.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ModuleUnselected">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.SelectTreeNode(System.Windows.Forms.TreeNode,System.String)">
            <summary>Selection doesn't only happen by the tree and mouse clicks, but can also happen by automatic processes, such as image import, image paste, etc... localPathCloud will be set only if using Cloud storage and an image was imported.  We want to use the local version instead of re-downloading what was just uploaded.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ToolBarCapture_Click">
            <summary>Handles a change in selection of the xRay capture button.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ToolBarClose_Click">
            <summary>Handles a change in selection of the xRay capture button.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ToolBarDelete_Click">
            <summary>If the node does not correspond to a valid document or mount, nothing happens. Otherwise the document/mount record and its corresponding file(s) are deleted.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ToolBarScan_Click(System.String)">
            <summary>Valid values for scanType are "doc","xray",and "photo"</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ToolBarZoom100_Click">
            <summary>This button is disabled for mounts, in which case this code is never called.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ToolBarZoomIn_Click">
            <summary>This button is disabled for mounts, in which case this code is never called.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ToolBarZoomOut_Click">
            <summary>This button is disabled for mounts, in which case this code is never called.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ApplyDocumentSettingsToImage(OpenDentBusiness.Document,System.Drawing.Bitmap,OpenDentBusiness.ImageSettingFlags)">
            <summary>Applies the document specified cropping, flip, rotation, and windowing (brightness/contrast) to the bitmap and returns the resulting bitmap. Zoom and translation must be handled by the calling code. The returned image is always a new image that can be modified without affecting the original image.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.LayoutAll">
            <summary>Resizes all controls in the image module to fit inside the current window, including controls which have varying visibility.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.SetPanelNoteVisibility(OpenDentBusiness.Document)">
            <summary>Sets the panelnote visibility based on the given document's signature data and the current operating system.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.RefreshModuleData(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.EnableToolBarsPatient(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.EnableToolBarButtons(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Defined this way to force future programming to consider which tools are enabled and disabled for every possible tool in the menu.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.LoadPdf(System.String,System.String,System.String,System.String)">
            <summary>Displays the PDF in a web browser. Downloads the PDF file from the cloud if necessary.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.DeleteTempPdf(System.Int64)">
            <summary>When storing PDFs directly in DB/Cloud, we download a temp file to display. This could cause local temp storage bloat if not cleaned 
            up when tree selection changes. Need to delete the temp file associated to NodeIdentifierOld, which persists even across module changes, so 
            while changing module will not cause the temp file to delete, returning to the image module or closing OpenDental cleans it up.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.GetCurrentFolderName(System.Windows.Forms.TreeNode)">
            <summary>Gets the category folder name for the given document node.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.GetCurrentCategory">
            <summary>Gets the document category of the current selection. The current selection can be a folder itself, or a document within a folder.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.GetTreeNode(OpenDental.ControlImagesOld.NodeIdTag)">
            <summary>Returns the current tree node with the given node id.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.GetTreeNode(OpenDental.ControlImagesOld.NodeIdTag,System.Windows.Forms.TreeNodeCollection)">
            <summary>Searches the current object tree for a row which has the given unique document number. This will work for a tree with any number of nested folders, as long as tags are defined only for items which correspond to data rows.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.MakeIdDoc(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.MakeIdMount(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.MakeIdDef(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.MakeIdEob(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.MakeIdAmd(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.FillSignature">
            <summary>DO NOT CALL UNLESS THE CURRENTLY SELECTED NODE IS A DOCUMENT NODE. Fills the panelnote control with the current document signature when the panelnote is visible and when a valid document is currently selected.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.InvalidateSettings(OpenDentBusiness.ImageSettingFlags,System.Boolean)">
            <summary>Invalidates some or all of the image settings.  This will cause those settings to be recalculated, either immediately, or when the current ApplySettings thread is finished.  If supplied settings is ApplySettings.NONE, then that part will be skipped.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.InvalidateSettings(OpenDentBusiness.ImageSettingFlags,System.Boolean,System.Boolean[])">
            <summary>Invalidates some or all of the image settings.  This will cause those settings to be recalculated, either immediately, or when the current ApplySettings thread is finished.  If supplied settings is ApplySettings.NONE, then that part will be skipped.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.RenderCurrentImage(OpenDentBusiness.Document,System.Int32,System.Int32,System.Single,System.Drawing.PointF)">
            <summary>Handles rendering to the PictureBox of the image in its current state. The image calculations are not performed here, only rendering of the image is performed here, so that we can guarantee a fast display.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.EraseCurrentImages">
            <summary>Kills ImageApplicationThread.  Disposes of both currentImages and ImageRenderingNow.  Does not actually trigger a refresh of the Picturebox, though.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.DeleteSelection(System.Boolean,System.Boolean,OpenDentBusiness.Document)">
            <summary>Deletes the current selection from the database and refreshes the tree view. Set securityCheck false when creating a new document that might get cancelled. If available, pass in the document to be deleted. It is sometimes necessary to use this if the document is no longer selected, e.g. the image folder it belongs to is now hidden.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.GetIdxAtMountLocation(System.Drawing.Point)">
            <summary>Returns the index in the DocsInMount array of the given location (relative to the upper left-hand corner of the pictureBoxMain control) or -1 if the location is outside all documents in the current mount. A mount must be currently selected to call this function.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.Worker">
            <summary>Applies crop and colors. Then, paints _bitmapRenderingNow onto pictureBoxMain.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.KillThreadImageUpdate">
            <summary>Kills the image processing thread if it is currently running.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ResetZoomTrans(System.Int32,System.Int32,OpenDentBusiness.Document,System.Drawing.Rectangle,System.Single@,System.Int32@,System.Single@,System.Drawing.PointF@)">
            <summary>Sets global variables: Zoom and translation to initial starting values where the image fits perfectly within the box.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.CalcImageDims(System.Int32,System.Int32,OpenDentBusiness.Document)">
            <summary>Calculates the image dimensions after factoring flip and rotation of the given document.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.ControlPointToRawImagePoint(System.Drawing.PointF,OpenDentBusiness.Document,System.Int32,System.Int32,System.Single,System.Drawing.PointF)">
            <summary>Converts a point in the picturebox into a point in the original raw image in its unrotated/unflipped/unscaled/untranslated state.</summary>
        </member>
        <member name="M:OpenDental.ControlImagesOld.GetDocumentFlippedRotatedMatrix(OpenDentBusiness.Document)">
            <summary>Returns a matrix for the given document which represents flipping over the Y-axis before rotating. Of course, if doc.IsFlipped is false, then no flipping is performed, and if doc.DegreesRotated is a multiple of 360 then no rotation is performed.  doc may be null if eob.</summary>
        </member>
        <member name="T:OpenDental.ControlImagesOld.NodeIdTag">
            <summary>This is the struct that gets assigned to each tree node Tag.  Because this is a struct, equivalency is based on values, not references.</summary>
        </member>
        <member name="F:OpenDental.ControlImagesOld.NodeIdTag.PriKey">
            <summary>The table to which the primary key refers will differ based on the node type.</summary>
        </member>
        <member name="T:OpenDental.ControlImages">
            <summary>The Imaging Module.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._colorFore">
            <summary>Color for drawing lines and text. This allows color selection to stay consistent for one session as the user switches images. Used for images and mounts. Each mount also internally stores its own colors, which cause this to change when loading a mount.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._colorTextBack">
            <summary>Color for background of text. Only for images, not mounts (not sure why now. Maybe because that's pulled from the mount, whereas images don't have a field to pull from). Transparent (no background) can be selected and is supported.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._cropPanAdj">
            <summary>One of these 3 states is active at any time.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._drawMode">
            <summary>If the draw toolbar is showing, then one of these 5 modes will be active.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._listFormImageFloats">
            <summary>A list of the forms that are currently floating. Can be empty.  When a form is closed, it is removed from the list at FormImageFloat_FormClosed.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._isAcquiring">
            <summary>Gets set to true when acquiring so that the unmounted bar will show.  Once you click on an image in the tree, this is set back to false.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._isTreeDockerCollapsed">
            <summary>Collapse is toggled with the triangle on the sizer.  Always starts out not collapsed.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._isTreeDockerCollapsing">
            <summary>Collapsing while the mouse is down triggers another mouse move, so this prevents taking action on that phantom mouse move.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._patFolder">
            <summary>Set with each RefreshModuleData, and that's where it's set if it doesn't yet exist.  For now, we are not using _patCur.ImageFolder, because we haven't tested whether it properly updates the patient object.  We don't want to risk using an outdated patient folder path.  And we don't want to waste time refreshing PatCur after every ImageStore.GetPatientFolder().</summary>
        </member>
        <member name="F:OpenDental.ControlImages._patNumLastSecurityLog">
            <summary>Prevents too many security logs for this patient.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._pointMouseDown">
            <summary>For moving the splitter</summary>
        </member>
        <member name="F:OpenDental.ControlImages._showDrawingsOD">
            <summary>Maintains same state for the entire session, even as user changes to different images. Does not control showing drawings for Pearl or any other external source.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._showDrawingsPearlToothParts">
            <summary>Maintains same state for the entire session, even as user changes to different images.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._showDrawingsPearlPolyAnnotations">
            <summary>Maintains same state for the entire session, even as user changes to different images.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._showDrawingsPearlBoxAnnotations">
            <summary>Maintains same state for the entire session, even as user changes to different images.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._showDrawingsPearlMeasurements">
            <summary>Maintains same state for the entire session, even as user changes to different images.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._sigBoxTopaz">
            <summary>Used to display Topaz signatures on Windows.</summary>
        </member>
        <member name="F:OpenDental.ControlImages._widthTree96">
            <summary>User can control width of tree.  This is stored as the 96dpi equivalent as float for conversion accuracy.  When tree is minimized, this doesn't change, allowing restoration to previous width.  It does not remember width between sessions.  Minimum 0, max 500.</summary>
        </member>
        <member name="E:OpenDental.ControlImages.EventKeyDown">
            <summary>For Ctrl-P for select patient. Won't fire if handled instead by Adobe for print.</summary>
        </member>
        <member name="T:OpenDental.ControlImages.TB">
            <summary>ToolBarButton enumeration instead of strings. For all three toolBars combined. These are used much less than in the past and many of these are no longer used at all.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.FillImageSelector(System.Boolean)">
            <summary>Refreshes list from db, then fills the treeview.  Set keepSelection to true in order to keep the current selection active.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.InitializeOnStartup">
            <summary>Also does LayoutToolBars. Doesn't do much, be we want to have one for each module.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.ControlImages_KeyDown(System.Windows.Forms.Keys)">
            <summary>Key down from FormOpenDental is passed in to allow some keys to work here.  As long as this module is open, all key down events are sent here.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.LayoutToolBars">
            <summary>Layout the Main and Paint toolbars.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.LayoutToolBarDraw">
            <summary>Layout the Draw toolbar only.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.ModuleSelected(System.Int64,System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImages.ModuleUnselected">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImages.CloseFloaters">
            <summary>Called when changing patients by any means.  Closes the undocked floating image windows.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.LaunchFloater(OpenDental.ControlImageDisplay,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Launches a new floater. Does not reuse any existing floater or dock. Pass in an existing controlImageDisplay that already has an image in it. This is used when popping a dock to a floater. </summary>
        </member>
        <member name="M:OpenDental.ControlImages.LaunchFloaterFromChart(System.Int64,System.Int64,System.Int64)">
            <summary>Launches a new floater. Does not reuse any existing floater or dock. This is used from Chart module when double clicking on a thumbnail.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.SelectTreeNode1(OpenDental.UI.NodeTypeAndKey,System.String,System.Boolean)">
            <summary>Fired when user clicks on tree and also for automated selection that's not by mouse, such as image import, image paste, etc.  Can pass in NULL to clear the image.  localPathImported will be set only if using Cloud storage and an image was imported.  We want to use the local version instead of re-downloading what was just uploaded.  nodeObjTag does not need to be ref to same object, but must match type and priKey.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.SetDocumentOrMount(OpenDental.UI.NodeTypeAndKey,OpenDental.ControlImageDisplay,OpenDental.FormImageFloat)">
            <summary>This loads from db</summary>
        </member>
        <member name="M:OpenDental.ControlImages.SetTitle(OpenDental.ControlImageDisplay,OpenDental.FormImageFloat)">
            <summary>This sets the title text of the docked or floater titlebar. This gets done after SetDocumentOrMount. It also must be done after SelectTreeNode or the NodeTypeAndKey won't be set yet.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.menuTree_Click(System.Object,System.EventArgs)">
            <summary>This is the one for WinForms.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.menuTree_Click2(System.Object,System.EventArgs)">
            <summary>This is the one for WPF</summary>
        </member>
        <member name="M:OpenDental.ControlImages.windowingSlider_Scroll(System.Object,System.EventArgs)">
            <summary>Occurs when the slider moves.  UI is typically updated here.  Also see ScrollComplete.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.windowingSlider_ScrollComplete(System.Object,System.EventArgs)">
            <summary>Occurs when user releases slider after moving.  Database is typically updated here.  Also see Scroll event.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.ToolBarScan_Click(OpenDentBusiness.ImageType)">
            <summary>Valid values for scanType are "doc","xray",and "photo"</summary>
        </member>
        <member name="M:OpenDental.ControlImages.ToolbarScanMultiWeb">
            <summary>Handles the scan multi click for ODCloud using similar logic to ToolbarScanMulti_Click()</summary>
        </member>
        <member name="M:OpenDental.ControlImages.ToolbarScanWeb(OpenDentBusiness.ImageType)">
            <summary>Handles the scan click for ODCloud using similar logic to ToolbarScan_Click()</summary>
        </member>
        <member name="M:OpenDental.ControlImages.CreateControlImageDisplay">
            <summary>This creates a ControlImageDisplay and attaches the many events. It does not attach it to a parent floater or dock. It does not fill it with any image.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.DeleteDocument(System.Boolean,System.Boolean,OpenDentBusiness.Document)">
            <summary>Deletes the specified document from the database and refreshes the tree view. Set securityCheck false when creating a new document that might get cancelled.  Document is passed in because it might not be in the tree if the image folder it belongs to is now hidden.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.EnableToolBarsPatient(System.Boolean)">
            <summary>Enables or disables all the buttons in both toolbars to handle situation where no patient is selected.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.DisableAllToolBarButtons">
            <summary>Not technically all.  There are some buttons that we never disable such as import, scan, acquire, etc.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.EnableToolBarButtons(OpenDental.ToolBarButtonState)">
            <summary>Defined this way to force future programming to consider which tools are enabled and disabled for every possible tool in the menu.  To prevent bugs, you must always use named arguments.  Called when user clicks on Crop/Pan/Mount buttons, clicks Tree, or clicks around on a mount.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.FillSignature">
            <summary>Fills the panelnote control with the current document signature when the panelnote is visible and when a valid document is currently selected.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.GetAvailSlots(System.Int32)">
            <summary>Returns a list of available slots, starting with the one selected.  It will loop back around at the end to fill remaining slots.  Will return null if not enough slots.  But if you supply countNeed -1, then it will give you a list of all available.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.GetBitmapShowing(System.Int32)">
            <summary>Specify 0 when a single document is selected, or specify the idx within a mount.  Pulls from _arrayBitmapsShowing of the selected floater. Can return null.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.GetCurrentCategory">
            <summary>Gets the DefNum category of the current selection. The current selection can be a folder itself, or a document within a folder. If nothing selected, then it returns the DefNum of first in the list.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.GetDocumentShowing(System.Int32)">
            <summary>Specify 0 when a single document is selected, or specify the idx within a mount.  Pulls from _arrayDocumentsShowing of the selected floater. Can return null.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.GetControlImageDisplaySelected">
            <summary>Returns null if no ControlImageDisplay is currently selected.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.GetIdxSelectedInMount">
            <summary>This is generally within IsMountItemSelected.  Gets _idxSelectedInMount from selected floater.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.GetMountShowing">
            <summary>Pulls _mountShowing from the selected floater. Can return null.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.GetOrMakeControlImageDisplay">
            <summary>Gets an existing ControlImageDisplay or makes a new one. Always returns a valid ControlImageDisplay.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.InvalidateSettingsColor">
            <summary>Invalidates the color image setting and recalculates.  This is not on a separate thread.  Instead, it's just designed to run no more than about every 300ms, which completely avoids any lockup.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.IsDocumentShowing">
            <summary>Returns true if a valid document is showing.  This is very different from testing the property _documentShowing, which would return true for mounts.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.IsMountShowing">
            <summary>Returns true if a valid mount is showing.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.IsMountItemSelected">
            <summary>Returns true if a valid mountitem is selected and there's a valid bitmap in that location.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.LayoutControls">
            <summary>Resizes all controls in the image module to fit inside the current window, including controls which have varying visibility.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.PreselectFirstItem">
            <summary>If a mount is showing, and if no item is selected, then this will select the first open item. If one is already selected, but it's occupied, this does not check that.  There is also no guarantee that one will be selected after this because all positions could be full.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.RefreshModuleData(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImages.SetCropPanAdj(OpenDental.EnumCropPanAdj)">
            <summary>Sets cursor, sets pushed, sets toolBarMount visible/invisible, and hides panelDraw if not Pan. This is called when user clicks on one of these buttons or an event from a floater can trigger it.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.SetDocumentShowing(System.Int32,OpenDentBusiness.Document)">
            <summary>Specify 0 when a single document is selected, or specify the idx within a mount.  Sets the element in _arrayDocumentsShowing of the selected floater.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.SetDrawMode(OpenDental.EnumDrawMode)">
            <summary>Sets cursor, sets which button is pushed, and sets color control. This is called when user clicks on one of these buttons or an event from a floater can trigger it. When using this, always consider that you may also need to call SetCropPanAdj(EnumCropPanAdj.Pan) which also hides panelDraw.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.SetIdxSelectedInMount(System.Int32)">
            <summary>This is generally within IsMountItemSelected.  Sets _idxSelectedInMount within selected floater.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.SetPanelNoteVisibility">
            <summary>Sets the panelnote visibility based on the docked image, and whether it has any note or signature data.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.SetUnmountedBarVisibility">
            <summary>Sets panelUnmounted visibility based on the docked mount, whether it has any unmounted items, and whether we are in the middle of an acquire.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.AcquireMulti">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImages.PlaceAcquiredBitmapInUI(System.Drawing.Bitmap)">
            <summary>Returns true if successful. Returns false if it failed or if no more images should be acquired.</summary>
        </member>
        <member name="M:OpenDental.ControlImages.EnableMenuItemTreePrintHelper(OpenDental.ControlImageDisplay)">
            <summary>Enables or disables menuItemTreePrint depending if the showing document is a PDF or not</summary>
        </member>
        <member name="M:OpenDental.ControlImages.UpdateToolbarButtons">
            <summary>Enables toolbar buttons if a patient is selected, otherwise disables them.</summary>
        </member>
        <member name="F:OpenDental.ControlImages.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ControlImages.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.ControlImages.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.EnumCropPanAdj">
            <summary>3 States.</summary>
        </member>
        <member name="F:OpenDental.EnumCropPanAdj.Crop">
            <summary>Looks like arrow. Only for docs, not mounts.</summary>
        </member>
        <member name="F:OpenDental.EnumCropPanAdj.Pan">
            <summary>Looks like a hand.</summary>
        </member>
        <member name="F:OpenDental.EnumCropPanAdj.Adj">
            <summary>Cursor is 4 arrows.</summary>
        </member>
        <member name="T:OpenDental.EnumDrawMode">
            <summary></summary>
        </member>
        <member name="F:OpenDental.EnumDrawMode.None">
            <summary>This is used in FormImageFloat to indicate that the draw toolbar is not present.  By setting to none, we can accurately test the others without also checking toolbar visibility. Unlike ToothChart, there is no Pointer because we don't generally select objects in images.</summary>
        </member>
        <member name="F:OpenDental.EnumDrawMode.Text">
            <summary>We allow dragging. User can double click on a text object to edit/delete and single click on an empty spot to add.</summary>
        </member>
        <member name="F:OpenDental.EnumDrawMode.Line">
            <summary>No dialog or selection of lines. Eraser and change color affect lines. Click to start a line, second click to end a line.  Or, click and drag, with mouse up finishing the line. To extend a line, click on the last point, then second click to end. No other way to extend a line or add points.</summary>
        </member>
        <member name="F:OpenDental.EnumDrawMode.LineEditPoints">
            <summary>This is a sub-mode of Line. This allows dragging points instead of creating a new line. It also allows adding new points in the middle of a line. The shift key changes the hover cursor to indicate "delete" when over a point.</summary>
        </member>
        <member name="F:OpenDental.EnumDrawMode.Pen">
            <summary>Freehand.</summary>
        </member>
        <member name="F:OpenDental.EnumDrawMode.Eraser">
            <summary></summary>
        </member>
        <member name="F:OpenDental.EnumDrawMode.ChangeColor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.EnumDrawMode.LineMeasure">
            <summary>A sub-mode of Line.</summary>
        </member>
        <member name="F:OpenDental.EnumDrawMode.LineSetScale">
            <summary>A sub-mode of Line.</summary>
        </member>
        <member name="F:OpenDental.EnumDrawMode.Polygon">
            <summary>Always filled. Works just like pen.</summary>
        </member>
        <member name="F:OpenDental.EnumLoadBitmapType.OnlyIdx">
            <summary>Load into _arrayBitmapsShowing[idx] for each item in mount when SelectTreeNode.</summary>
        </member>
        <member name="F:OpenDental.EnumLoadBitmapType.IdxAndRaw">
            <summary>Load into _arrayBitmapsShowing[idx] and _bitmapRaw when mount image is resized. When using single images rather than mounts, this is the only enum option used, including for SelectTreeNode and cropping.</summary>
        </member>
        <member name="F:OpenDental.EnumLoadBitmapType.OnlyRaw">
            <summary>Load image into _bitmapRaw every time user selects new mount item, but not from disk if no bright/contr yet.</summary>
        </member>
        <member name="T:OpenDental.ControlManage">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlManage.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlManage._sigElementDefArrayExtras">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlManage._listTimeClockStatusesShown">
            <summary>Always 1:1 with values in listStatus.Items</summary>
        </member>
        <member name="F:OpenDental.ControlManage._listSigMessages">
            <summary>Collection of SigMessages</summary>
        </member>
        <member name="F:OpenDental.ControlManage._timeSpanDelta">
            <summary>Server time minus local computer time, usually +/- 1 or 2 minutes</summary>
        </member>
        <member name="M:OpenDental.ControlManage.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlManage.InitializeOnStartup">
            <summary>Only gets run on startup.</summary>
        </member>
        <member name="M:OpenDental.ControlManage.JumpToTriageTaskWindow">
            <summary>Only used internally to launch the task window with the Triage task list.</summary>
        </member>
        <member name="M:OpenDental.ControlManage.LaunchTaskWindow(System.Boolean,OpenDental.UserControlTasksTab)">
            <summary>Used to launch the task window preloaded with a certain task list open.  isTriage is only used at OD HQ.</summary>
        </member>
        <member name="M:OpenDental.ControlManage.ModuleSelected(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlManage.ModuleUnselected">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlManage.LogMsgs(System.Collections.Generic.List{OpenDentBusiness.SigMessage})">
            <summary>This processes timed messages coming in from the main form.  Buttons are handled in the main form, and then sent here for further display.  The list gets filtered before display.</summary>
        </member>
        <member name="M:OpenDental.ControlManage.ConvertClockStatus(System.String)">
            <summary>Returns a translated TimeClockStatus enum description from the given status.  Also considers PrefName.ClockEventAllowBreak to switch 'Lunch' to 'Break' for the UI.</summary>
        </member>
        <member name="M:OpenDental.ControlManage.RefreshModuleScreen">
            <summary>Here so it's parallel with other modules.</summary>
        </member>
        <member name="M:OpenDental.ControlManage.SelectEmpI(System.Int32,System.Boolean)">
            <summary>-1 is also valid.</summary>
        </member>
        <member name="M:OpenDental.ControlManage.ShowBilling(System.Collections.Generic.List{System.Int64},System.Boolean,System.Boolean,System.Boolean)">
            <summary>Shows FormBilling and displays warning message if needed.  Pass 0 to show all clinics.  Make sure to check for unsent bills before calling this method.  IsAllSelected is based upon
            the comboClinic selection from formBillingOptions</summary>
        </member>
        <member name="M:OpenDental.ControlManage.ShowBillingOptions(System.Int64)">
            <summary>Shows FormBillingOptions and FormBilling if needed.  Pass 0 to show all clinics.  Make sure to check for unsent bills before calling this method.</summary>
        </member>
        <member name="M:OpenDental.ControlManage.FillMessageDefs">
            <summary>Gets run with each module selected.  Should be very fast.</summary>
        </member>
        <member name="M:OpenDental.ControlManage.FillMessages">
            <summary>This does not refresh any data, just fills the grid.</summary>
        </member>
        <member name="M:OpenDental.ControlManage.RefreshFullMessages">
            <summary>Gets all new data from the database for the text messages.  Not sure yet if this will also reset the lights along the left.</summary>
        </member>
        <member name="M:OpenDental.ControlManage.ShowSendingLabel">
            <summary>Shows the sending label for 1 second.</summary>
        </member>
        <member name="T:OpenDental.ControlTreat">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlTreat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ControlTreat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.ControlTreat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.ControlTreat._listToothInitials">
            <summary>Only used for printing graphical chart.</summary>
        </member>
        <member name="F:OpenDental.ControlTreat._listClaimProcs">
            <summary>List of ClaimProcs with status of Estimate or CapEstimate for the patient.</summary>
        </member>
        <member name="F:OpenDental.ControlTreat._listProcedures">
            <summary>This is a list of all procedures for the patient.</summary>
        </member>
        <member name="F:OpenDental.ControlTreat._listProceduresTP">
            <summary>This is a filtered list containing only TP procedures.  It's also already sorted by priority and tooth number.</summary>
        </member>
        <member name="F:OpenDental.ControlTreat._listProcTPs">
            <summary>A list of all ProcTP objects for this patient.</summary>
        </member>
        <member name="F:OpenDental.ControlTreat._listProcTPsSelect">
            <summary>A list of all ProcTP objects for the selected tp.</summary>
        </member>
        <member name="F:OpenDental.ControlTreat._toothChartWrapper">
            <summary>Only used for printing graphical chart prior to v17.  Null unless prepping for printing.</summary>
        </member>
        <member name="F:OpenDental.ControlTreat._toothChartRelay">
            <summary>Only used for printing graphical chart prior to v17.  Relays commands to either the old SparksToothChart.ToothChartWrapper or the new Sparks3d.ToothChart.</summary>
        </member>
        <member name="F:OpenDental.ControlTreat._patNumLast">
            <summary>Gets updated to PatientCur.PatNum that the last security log was made with so that we don't make too many security logs for this patient.  When _patNumLast no longer matches PatCur.PatNum (e.g. switched to a different patient within a module), a security log will be entered.  Gets reset (cleared and the set back to PatCur.PatNum) any time a module button is clicked which will cause another security log to be entered.</summary>
        </member>
        <member name="F:OpenDental.ControlTreat._treatPlanSelected">
            <summary>Tracks the most recently selected TreatPlan in gridPlans.</summary>
        </member>
        <member name="F:OpenDental.ControlTreat._loadActiveTPData">
            <summary>Set to true when TP Note changes.  Public so this can be checked from FormOpenDental and the note can be saved.  Necessary because in
            some cases the leave event doesn't fire, like when a non-modal form is selected, like big phones, and the selected patient is changed from that form.</summary>
            <summary>The data needed to load the active treatment plan. Also used for inactive treatment plans.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlTreat.InitializeOnStartup">
            <summary>Only called on startup, but after local data loaded from db.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.InitializeLocalData">
            <summary>Called every time local data is changed from any workstation.  Refreshes priority lists and lays out the toolbar.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.ModuleSelected(System.Int64,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlTreat.ModuleUnselected">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlTreat.FillMainData">
            <summary>Fills RowsMain list for gridMain display.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.HasSalesTax(System.Collections.Generic.List{OpenDentBusiness.DisplayField})">
            <summary>Helper method used to determine if sales tax is displayed.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.CanadianSelectedRowHelper(OpenDentBusiness.ProcTP)">
            <summary>Selects any associated lab procedures for the given selectedProcTp in gridMain.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.TrySendTreatPlan">
            <summary>Attempts to update the eClipbaord device with the currently selected TP in gridPlans.
            If a device is set to the same patient as PatCur then we will automatically create the notification for that device.
            Otherwise we prompt for an unlock code if doPromptForDevice is not enabled.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.PushSelectedTpToEclipboard(OpenDentBusiness.MobileAppDevice)">
            <summary>Sends the currently selected TreatmentPlan in gridPlans to a given target mobile device.
            If no selection is currently made then this simply returns.
            Shows a MsgBox when done or if error occurs.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.OpenUnlockCodeForTP">
            <summary>Opens a FormMobileCode window with the currently selected TP.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.SendTreatPlanParam(OpenDentBusiness.TreatPlan)">
            <summary>Inserts a new TreatPlanParam into the database if PrefName.TreatPlanSaveSignedToPdf is true.
            This will be used when they save from eClipboard and it needs to create a signed treatment plan PDF based on these check boxes.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.GetTreatPlanPDF(OpenDentBusiness.TreatPlan@,System.Boolean@)">
            <summary>Returns a PDF for the currently selected TreatmentPlan and sets out TreatmentPlan to selected TreatmentPlan.
            If nothing is selected in gridPlans then returns null and out TreatPlan is set to null.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.SetPriority(OpenDentBusiness.Def,OpenDentBusiness.TreatPlan,System.Collections.Generic.List{OpenDentBusiness.ProcTP})">
            <summary>Sets the priorities for the selected ProcTP.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.GetCurrentTPHelper">
            <summary>Returns in-memory TreatPlan representing the current treatplan. For displaying current treat-plan before saving it.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.TreatPlanToSheet(OpenDentBusiness.TreatPlan)">
            <summary>Simply creates a new sheet from a given treatment plan and adds parameters to the sheet based on which checkboxes are checked.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.ComputeProcListFiltered">
            <summary>Just used for printing the 3D chart.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.GetProcStatusIdx(OpenDentBusiness.ProcStat)">
            <summary>Returns index for sorting based on this order: Cn,TP,R,EO,EC,C,D</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.IsSavedTPHeadingUnique(System.String)">
            <summary>Returns true if given treatPlanHeading is not currently in use by a saved TreatPlan in _listTreatPlans.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.SaveTPAsDocument(System.Boolean,OpenDentBusiness.Sheet)">
            <summary>Saves TP as PDF in each image category defined as TP category. 
             If TreatPlanSaveSignedToPdf enabled, will default to first non-hidden category if no TP categories are explicitly defined.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.DoPrintUsingSheets">
            <summary>Returns true if the user has not checked 'Print using classic'.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.CheckClearinghouseDefaults">
            <summary>Similar method in Account</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.UpdateTPNoteIfNeeded">
            <summary>Saves TP note to the database if changes were made</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.UpdateToolbarButtons">
            <summary>Enables toolbar buttons if a patient is selected, otherwise disables them.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.contextMenuPreAuthGrid_Popup(System.Object,System.EventArgs)">
            <summary>Determines if the right click DXC options are grayed out. If the preauth selected does not have a clearinghouse, is not allowed to send attachments, or the clearinghouse is not ClaimConnect, then the options will be grayed out.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.GetClearingHouseForClaim">
            <summary>Return the clinic specific ClearningHouse based on the preauth the user clicked on. Can return null.</summary>
        </member>
        <member name="M:OpenDental.ControlTreat.ValidateRightClickDXC(OpenDentBusiness.Claim)">
            <summary>Centralize validation for the DXC right click options. Validation logic taken from the FormClaimEdit.cs OpenAttachmentForm method.</summary>
        </member>
        <member name="T:OpenDental.FormOpenDental">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormOpenDental.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemAccount">
            <summary>Changes based on if OD HQ.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemCreateAtoZ">
            <summary>Not available if in Unix.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemDefaultCCProcs">
            <summary>Only available in OD HQ.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemEditTestModeOverrides">
            <summary> Only available in OD HQ when Introspection.IsTestingMode is true. </summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemFinanceCharges">
            <summary>Only available if Billing/Finance Charges are enabled on the Show Features window.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemJobManager">
            <summary>Only available in OD HQ.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemLateCharges">
            <summary>Only available if Late Charges are enabled on the Show Features window.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemLocalHelpWindows">
            <summary>Not available if in Unix.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemProcLockTool">
            <summary>Procedure Lock Tool Pref.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemReactivation">
            <summary>Only show enterprise setup if it is enabled.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemReplication">
            <summary>Not available if isWeb.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemResellers">
            <summary>Only available in OD HQ.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemServiceManager">
            <summary>Not available if isWeb.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemPrinter">
            <summary>Not available if isWeb.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemTranslation">
            <summary>Available if OD is not set to English Translation.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._menuItemWebChatTools">
            <summary>Only available in OD HQ.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutMenuFile(OpenDental.UI.MenuItemOD)">
            <summary>File Main</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutMenuSetup(OpenDental.UI.MenuItemOD)">
            <summary>Setup Main</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutSubMenuAppts(OpenDental.UI.MenuItemOD)">
            <summary>Setup: Appointments</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutSubMenuFamIns(OpenDental.UI.MenuItemOD)">
            <summary>Setup: Family/Insurance</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutSubMenuAccount(OpenDental.UI.MenuItemOD)">
            <summary>Setup: Account</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutSubMenuChart(OpenDental.UI.MenuItemOD)">
            <summary>Setup: Chart</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutSubMenuImaging(OpenDental.UI.MenuItemOD)">
            <summary>Setup: Imaging</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutSubMenuManage(OpenDental.UI.MenuItemOD)">
            <summary>Setup: Manage</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutSubMenuAdvSetup(OpenDental.UI.MenuItemOD)">
            <summary>Setup: Advanced Setup</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutSubMenuObsolete(OpenDental.UI.MenuItemOD)">
            <summary>Setup: Obsolete</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutMenuLists(OpenDental.UI.MenuItemOD)">
            <summary>Lists Main</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutMenuReports(OpenDental.UI.MenuItemOD)">
            <summary>Reports Main</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutMenuTools(OpenDental.UI.MenuItemOD)">
            <summary>Tools Main</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutSubMenuAdvertising(OpenDental.UI.MenuItemOD)">
            <summary>Tools: Advertising</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutSubMenuWebChatTools(OpenDental.UI.MenuItemOD)">
            <summary>Tools: WebChatTools</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutSubMenuMiscTools(OpenDental.UI.MenuItemOD)">
            <summary>Tools: Misc Tools</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutMenuHelp(OpenDental.UI.MenuItemOD)">
            <summary>Help Main</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._listOdThreadsRunOnce">
            <summary>Add your thread instance to this list if you only want this thread to only be started once.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._listThreadExitWaitHandles">
            <summary>Used internally to await for all threads to exit before attempting to restart.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental.timerSignals">
            <summary>Signal processing timer. Gets started in FormOpenDental.FormOpenDentalShown(), 
            and should not be shut off unless signal polling frequency gets set to 0, or already was 0.
            When enabled, high priority signals will always get processed. Low priority signals will get backlogged until _hasSignalProcessingPaused is false.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.SetTimersAndThreads(System.Boolean)">
            <summary>Starts or stops all local timers and threads that should be started and stopped.
            Only starts signal timer if interval preference is set to non-zero value.
            The Windows Forms timer is designed for use in a single-threaded environment which requires this method called from the main UI thread 
            or marshal / invoke the call onto another thread.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.SetTimers(System.Boolean)">
            <summary>Starts or stops the local timers owned by FormOpenDental.
            Only starts signal timer if interval preference is set to non-zero value.
            The Windows Forms timer is designed for use in a single-threaded environment which requires this method called from the main UI thread 
            or marshal / invoke the call onto another thread.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.SetThreads(System.Boolean)">
            <summary>Either starts all possible threads owned by FormOpenDental or stops a select few threads which are safe to stop.
            Some threads are not designed to be stopped once they've started.  E.g. heartbeat, data connection lost, etc.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.IsThreadAlreadyRunning(OpenDental.FormOpenDental.FormODThreadNames)">
            <summary>Checks to see if there is a thread running with the passed in group name. Will return true if there is or if a thread that is only set to run once has already ran. 
            Will return false if no thread is running.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.CheckAlerts(System.Boolean)">
            <summary>May begin a thread that checks for alerts and update the main alerts tool bar menu.
            Pass false to doRunOnThread if you want to run alerts on the main thread.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginClaimReportThread">
            <summary>If the local computer is the computer where claim reports are retrieved then this thread runs in the background and will retrieve
            and import reports for the default clearinghouse or for clearinghouses where both the Payors field is not empty plus the Eformat matches the
            region the user is in.  If an error is returned from the importation, this thread will silently fail.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginEhrCodeListThread">
            <summary>This begins a thread that loads the EHR.dll in the background.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginEServiceMonitorThread">
            <summary>Starts the eService monitoring thread that will run once a minute.  Only runs if the user currently logged in has the eServices permission.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.EServiceMonitorWorker(CodeBase.ODThread)">
            <summary>Worker method for eServiceMonitorThread.  Call BeginEServiceMonitorThread() to start monitoring eService signals instead of calling 
            this method directly. This thread's only job is to check to see if the eConnector's current status is critical and if it is critical, 
            create a High severity alert.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.ProcessHqMetricsPhones">
            <summary>HQ only. Called from HqMetricsThread(). Deals with HQ phone panel. This method runs in a thread so any access to form controls must be invoked. Gets hit every 1.6 seconds from each workstation.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginLogOffThread">
            <summary>Begins the thread that checks for a forced log off.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LogOffWorker">
            <summary>Thread set to run every 15 seconds. This interval must be longer than the interval of the timer in FormLogoffWarning (10s), or it will go into a loop.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginODCloudMachineNameThread">
            <summary>For ODBuild.IsThinfinity and PrefC.IsAppStream only.  Begins a thread that will run once per minute attempting to set the ODEnvironment.MachineName by making a
            call to the ODCloudClient. If ODCloudClient is not running or throws an exception, the machine name will be set to "UNKNOWN".  The next time this thread runs, if the
            machine name is "UNKNOWN" we will attempt to get the machine name from the ODCloudClient again.  If the machine name is successfully retrieved from the ODCloudClient
            (i.e. ODEnvironment.MachineName!="UNKNOWN") we will not attempt to get the name from the cloud client again while this session is active.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginODCloudDcvExtensionThread">
            <summary>For PrefC.IsAppStream only. Begins a thread that will run to initiate dcv named piped link.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginODServiceMonitorThread">
            <summary>Begins a thread that monitor's the Open Dental Service heartbeat and alerts the user if the service is not running.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginODServiceStarterThread">
            <summary>Spawns a thread that attempts to start all Open Dental services.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginODDashboardStarterThread">
            <summary>Spawns a thread that attempts to start the Patient Dashboard.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginPlaySoundsThread(System.Collections.Generic.List{OpenDentBusiness.SigMessage})">
            <summary>Begins a thread that will play sounds based on the given signals.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginPodiumThread">
            <summary>If the local computer is the computer where Podium invitations are sent, then this thread runs in the background and checks for 
            appointments that started 10-40 minutes ago (depending on in the patient is a new patient) at 10 minute intervals.  No preferences.
            In the future, some sort of identification should be made to tell if this thread is running on any computer.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginRegKeyThread">
            <summary>Begins a thread that checks if the thread key is for testing. Also makes a call to check and update customer version history if 
            recently updated. This thread is ran only once.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginShutdownThread">
            <summary>Begins a thread that shutsdown Open Dental.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginTasksThread(System.Collections.Generic.List{OpenDentBusiness.Signalod},System.Collections.Generic.List{System.Int64})">
            <summary>Begins a thread that handles all tasks from signals. Only call within signal processing.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginTimeSyncThread">
            <summary>This begins the time sync thread. If OpenDental is running on the same machine as the mysql server, then a thread is runs in the 
            background to update the local machine's time using NTPv4 from the NIST time server set in the NistTimeServerUrl pref.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.TimeSyncWorker(CodeBase.ODThread)">
            <summary>Worker thread for the time sync thread. Every 6 hours gets the time from an NTPv4 server and sets the local time to that.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginUpdateFormTextThread">
            <summary>Begins a thread that updates the title text if necessary in the case of an update. Always rounds down so as not to give users 
            the impression that there is more time than there really is until the update.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.VoicemailWorker(CodeBase.ODThread)">
            <summary>Called on the voicemail thread for HQ only.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.SetVoicemailMetrics(System.Boolean,System.Int32,System.TimeSpan)">
            <summary>Called from worker thread for HQ voicemails. Sets all UI changes for the voicemail counter.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginWebSyncThread">
            <summary>Begins the thread that checks for mobile sync. This will sync parts of a users database to HQ if certain preferences are set.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginRegistrationKeyIsDisabledThread">
            <summary>Begins a thread that monitor's the RegistrationKeyIsDisabled pref. If pref exists and value is true then shows an annoying popup.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginLicenseAgreementSignatureThread">
            <summary>Begins a thread that sends the customer's License Agreement signature to HQ. This thread is ran only once.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.BeginApiEventsThread">
            <summary>This thread generates Api Events, based on ApiSubscriptions. These events are in response to database changes, so the database must be polled at a certain interval. Each subscription can be at a different interval.</summary>
        </member>
        <member name="T:OpenDental.FormOpenDental.FormODThreadNames">
            <summary>A list of the names and group names for all threads spawned from FormOpenDental.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental.FormODThreadNames.EnableAdditionalFeatures">
            <summary>DEPRECATED. This thread now runs from Open Dental Service solution</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental.IsRegKeyForTesting">
            <summary>Represents if the regkey is a developer regkey.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental.ExitCode">
            <summary>This is used to determine how Open Dental closed.  If this is set to anything but 0 then some kind of error occurred and Open Dental was forced to close.  Currently only used when updating Open Dental silently.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental.CommandLineArgs_">
            <summary>Class for holding command line args passed in when program starts.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental.IsSecondInstance">
            <summary>True if there is already a different instance of OD running.  This prevents attempting to start the listener.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._formOpenDentalSingleton">
            <summary>This is the singleton instance of the FormOpenDental. This allows us to have S_ methods that are public static and can be called from anywhere in the program to update FormOpenDental.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._dictionaryBlockedAutomations">
            <summary>Todo: look into this dict of dicts.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._popupPressureReliefLimit">
            <summary>Task Popups use this upper limit of open FormTaskEdit instances to determine if a task should popup.  More than 115 open FormTaskEdit has been observed to crash the program.  See task #1481164.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._patNumCur">
            <summary>In most cases, CurPatNum should be used instead of _CurPatNum.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._httpListenerApi">
            <summary>This accepts incoming http REST requests to our local API.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._moduleTypeLast">
            <summary>When user logs out, this keeps track of where they were for when they log back in.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._arraySigButDefs">
            <summary>A list of button definitions for this computer.  These button defs display in the lightSignalGrid1 control.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._listPopupEvents">
            <summary>This list will only contain events for this computer where the users clicked to disable a popup for a specified period of time.  So it won't typically have many items in it.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._isFormLogOnLastActive">
            <summary>When auto log off is in use, we don't want to log off user if they are in the FormLogOn window.  Mostly a problem when using web service because CurUser is not null.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._dictionaryChartPrefsCache">
            <summary>A secondary cache only used to determine if preferences related to the redrawing of the Chart module have been changed.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._dictionaryTaskListPrefsCache">
            <summary>A secondary cache only used to determine if preferences related to the redrawing of the non-modal task list have been changed.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._dateTimeHqEServiceMetricsLastRefreshed">
            <summary>HQ only. Keep track of last time EServiceMetrics were filled. Server is only updating every 30 seconds so no need to go any faster than that.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._toolBarButtonText">
            <summary>A specific reference to the "Text" button.  This special reference helps us preserve the notification text on the button after setup is modified.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._toolBarButtonTask">
            <summary>A specific reference to the "Task" button. This special reference helps us refresh the notification text on the button after the user changes.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._strCmdLineShow">
            <summary>Command line can pass in show=... "Popup", "Popups", "ApptsForPatient", or "SearchPatient".  Stored here as lowercase.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._listTasksReminders">
            <summary>Tracks the reminder tasks for the currently logged in user.  Is null until the first signal refresh.  Includes new and viewed tasks.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._dictionaryAllTaskLists">
            <summary>Gets initialized or refreshed when searching for archived task lists to exclude from reminders</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._listTasksRemindersOverLimit">
            <summary>Tracks reminder tasks that were not allowed to popup because we had too many FormTaskEdit windows open already.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._listTaskNumsNormal">
            <summary>Tracks the normal (non-reminder) tasks for the currently logged in user.  Is null until the first signal refresh.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._userNumTasks">
            <summary>Tracks the UserNum of the user for which the _listReminderTaskNums and _listOtherTaskNums belong to so we can compensate for different users logging off/on.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._dateReminderRefresh">
            <summary>The date the appointment module reminders tab was last refreshed.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._dateHqOfficeDownLastRefreshed">
            <summary>HQ only. Keep track of the last time the office down was checked. Too taxing on the server to perform every 1.6 seconds with the rest of the HQ thread metrics. Will be refreshed on ProcessSigsIntervalInSecs interval.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._listAlertReads">
            <summary>List of AlerReads for the current User.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._listAlertItems">
            <summary>List of AlertItems for the current user and clinic.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._exceptionSignalsTick">
            <summary>We will send a maximum of 1 exception to HQ that occurs when processing signals.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._onlyProcessHighPrioritySignals">
            <summary>This will be set to true if regular signal processing has been paused due to inactivity, or if a user is logged out.  When signal processing resumes, the current Application.ProductVersion will be compared to the db value of PrefName.ProgramVersion and if these two versions don't match, the user will get a message box informing them that OD will have to shutdown and the user will have to relaunch to correct the version mismatch.  We will also check the UpdateInProgressOnComputerName and CorruptedDatabase prefs.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._pointFPanelSplitter96dpi">
            <summary>This is the location of the splitter at 96dpi. That way, it can be reliably and consistently redrawn, regardless of the current dpi.  Either X or Y will be ignored.  For example, if it's docked to the bottom, then only Y will be used.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._dateTimeSignalShutdownLastChecked">
            <summary>This is used for checking for shutdown signals while inactive, see SignalsTickWhileInactive()</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._formRpDPPOvercharged">
            <summary>Only instance of Dynamic Pay Plan Overcharge window.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._pd">
            <summary>There is one instance of this object. References are passed to each module. This object is never initialized other than this one spot. This abbreviation is approved because this will be very heavily used and needs to not take up space.</summary>
        </member>
        <member name="F:OpenDental.FormOpenDental._dateTimeLastSignalTickInactiveHq">
            <summary>E40138 - Used to give a timespan for HQ users so they can perform time clock actions without being interrupted by task popups.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.#ctor(System.String[])">
            <summary></summary>
        </member>
        <member name="P:OpenDental.FormOpenDental.PatNumCur">
            <summary>PatNum for currently loaded patient.</summary>
        </member>
        <member name="P:OpenDental.FormOpenDental.DicBlockedAutomations">
            <summary>Dictionary of AutomationNums mapped to a dictionary of patNums and dateTimes. The dateTime is the time that the given automation for a specific patient should be blocked until. Dictionary removes any entries whos blocked until dateTime is greater than DateTime.Now before returning.  Currently only used when triggered Automation.AutoAction == AutomationAction.PopUp</summary>
        </member>
        <member name="P:OpenDental.FormOpenDental.IsTreatPlanSortByTooth">
            <summary>Loads this value from PrefName.TreatPlanSortByTooth on startup.  The user can change this value without changing the pref from the treatplan module.</summary>
        </member>
        <member name="P:OpenDental.FormOpenDental.S_Contr_TabProcPageTitles">
            <summary>List of tab titles for the TabProc control. Used to get accurate preview in sheet layout design view. Returns a list of one item called "Tab" if something goes wrong.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.ActiveInstanceUnderLimit">
            <summary>Helper method that checks if the number of Active Instances (OD Cloud) exceed the allowed amount. Exits the application on false.
            Calling method should return in that circumstance.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.FormOpenDental_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>Sends function key presses to the appointment module and chart module</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.OpenMapsFromCommandLine(System.Collections.Generic.List{System.String})">
            <summary>Opens maps with descriptions matching the passed in parameters.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.OpenMap(System.String)">
            <summary>Opens a call center map which matches the passed in description.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.ProcessCommandLine">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.ImagesModuleUsesOld2020">
            <summary>Returns true if the old Images module control should be used, false otherwise. Use this method instead of the ImagesModuleUsesOld2020 preference.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.PrefsStartup(System.Boolean,OpenDentBusiness.ChooseDatabaseInfo)">
            <summary>Returns false if it can't complete a conversion, find datapath, or validate registration key. A silent update will have no UI elements appear. model stores all the info used within the choose database window. Stores all information entered within the window.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.RefreshLocalData(OpenDentBusiness.InvalidType[])">
            <summary>Refreshes certain rarely used data from database.  Must supply the types of data to refresh as flags.  Also performs a few other tasks that must be done when local data is changed.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.RefreshLocalData(System.Boolean,OpenDentBusiness.InvalidType[])">
            <summary>Refreshes certain rarely used data from database.  Must supply the types of data to refresh as flags.  Also performs a few other tasks that must be done when local data is changed.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.RefreshLocalDataPostCleanup(OpenDentBusiness.InvalidType[])">
            <summary>Performs a few tasks that must be done when local data is changed.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.NeedsRedraw(System.String)">
            <summary>Compares preferences related to sections of the program that require redraws and returns true if a redraw is necessary, false otherwise.  If anything goes wrong with checking the status of any preference this method will return true.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.CheckCustomReports">
            <summary>Sets up the custom reports list in the main menu when certain requirements are met, or disables the custom reports menu item when those same conditions are not met. This function is called during initialization, and on the event that the A to Z folder usage has changed.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.StartLoadSimulation">
            <summary>Starts a thread that repeatedly gets a random patient and selects each module. Goes until the program is closed.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.UpdateToolbarButtons">
            <summary>Enables toolbar buttons if a patient is selected, otherwise disables them.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LayoutControls">
            <summary>This used to be called much more frequently when it was an actual layout event.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.ResizeDashboard">
            <summary>Sets the splitter distance and Patient Dashboard height.  Width is not really up to the user.  They can drag the splitter, but it will quickly revert.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.TaskDockSavePos">
            <summary>Every time user changes dock position, it will save automatically.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.FillPatientButton(OpenDentBusiness.Patient)">
            <Summary>Serves four functions.  1. Sends the new patient to the dropdown menu for select patient.  2. Changes which toolbar buttons are enabled.  3. Sets main form text.  4. Displays any popup.</Summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.Contr_PatientSelected(OpenDentBusiness.PatientSelectedEventArgs)">
            <summary>Happens when any of the modules changes the current patient or when this main form changes the patient.  The calling module should refresh itself.  The current patNum is stored here in the parent form so that when switching modules, the parent form knows which patient to call up for that module.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.GetNewCommlog">
            <summary>This is a helper method to get a new commlog object for the commlog tool bar buttons.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.FormSheetFillEdit_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>Event handler for closing FormSheetFillEdit when it is non-modal.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.toolButTxtMsg_Click(System.Int64,System.String)">
            <summary>Called from the text message button and the right click context menu for an appointment. Returns true if the message was sent successfully.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.SetSmsNotificationText(OpenDentBusiness.Signalod,System.Boolean,System.Int32)">
            <summary>Sets the SMS "Text" button's Notification Text based on structured data parsed from signalSmsCount.MsgValue.  This Signalod will have been inserted into the db by the eConnector.  If signalSmsCount is not passed in, attempts to find the most recent Signalod of type SmsTextMsgReceivedUnreadCount, using it to update the notification text, or if not found, either creates and inserts the Signalod (this occurs on startup if the Signalod table does not have an entry for this signal type) or uses the currently displayed value of the Sms notification 
            Text and the 'increment' value to update the locally displayed notification count (occurs when this method is called between signal intervals
            and the eConnector has not updated the SmsTextmsgReceivedUnreadCount signal in the last signal interval).
            </summary>
            <param name="signalodSmsCount">Signalod, inserted by the eConnector, containing a list of clinicnums and the count of unread SmsFromMobiles for 
            each clinic.</param>
            <param name="doUseSignalInterval">Defaults to true.  Indicates, in the event that signalSmsCount is null, if the query to find the most 
            recent SmsTextMsgReceivedUnreadCount type Signalod should be run for the interval since signals were last processed, or if the entire table
            should be considered.</param>
            <param name="increment">Defaults to 0.  Increments the value displayed in the Sms notification "Text" button for unread SmsFromMobiles, but
            only if a Signalod of type SmsTextMsgReceivedUnreadCount was not found.  This can occur if signalSmsCount is null, doUseSignalInteral is true
            and the signal was not found in the the last signal interval (meaning the eConnector has not updated the SmsNotification count recently).
            </param>
        </member>
        <member name="M:OpenDental.FormOpenDental.menuClinic_Click(System.Object,System.EventArgs)">
            <summary>This is will set Clinics.ClinicNum and refresh the current module.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.RefreshCurrentClinic(OpenDentBusiness.Clinic)">
            <summary>This is used to set Clinics.ClinicNum and refreshes the current module.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.DataValid_BecameInvalid(OpenDental.ValidEventArgs)">
            <summary>This is called when any local data becomes outdated.  It's purpose is to tell the other computers to update certain local data.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.FillSignalButtons(System.Collections.Generic.List{OpenDentBusiness.SigMessage})">
            <summary>Manipulates the current lightSignalGrid1 control based on the SigMessages passed in. Pass in a null list in order to simply refresh the lightSignalGrid1 control in its current state (no database call).</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.FillSignalButtons">
            <summary>Refreshes the entire lightSignalGrid1 control to the current state according to the database. This is typically used when the program is first starting up or when a signal is processed for a change to the SigButDef cache.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.PaintOnIcon(System.Int32,System.Drawing.Color)">
            <summary>Pass in the cellNum as 1-based.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.IsWorkStationActive">
            <summary>Helper method to check if we need to start or stop preprocessing signals</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.timerSignals_Tick(System.Object,System.EventArgs)">
            <summary>Usually set at 4 to 6 second intervals.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.SignalsTick(System.Boolean)">
            <summary>Processes signals.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.GetAndProcessSignals(System.Action{System.Boolean},System.Action{System.Collections.Generic.List{OpenDental.FormODBase},System.Collections.Generic.List{OpenDentBusiness.Signalod}},System.Action,System.Boolean)">
            <summary>Spawns a new thread to retrieve new signals from the DB. If isAllInvalidTypes is true, update all caches and broadcast signals to all subscribed forms.
            Otherwise if isAllInvalidTypes is false, only process important signals</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.IsDbConnectionSafe(System.String@)">
            <summary>Called when _hasSignalProcessingPaused is true and we are about to start processing signals again.  We may have missed a shutdown workstations signal, so this method will check the version, the update in progress pref, and the corrupt db pref.  Returns false if the OD
            instance should be restarted.  The errorMsg out variable will be set to the error message for the first failed check.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.SignalsTickExceptionHandler(System.Exception)">
            <summary>Catches an exception from signal processing and sends the first one to HQ.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.AddAlertsToMenu">
            <summary>Adds the alert items to the alert menu item.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.ProcessSignalODs(System.Collections.Generic.List{OpenDentBusiness.Signalod})">
            <summary>This only contains UI signal processing. See Signalods.SignalsTick() for cache updates.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.S_HandleRefreshedTasks(System.Collections.Generic.List{OpenDentBusiness.Signalod},System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{OpenDentBusiness.Task},System.Collections.Generic.List{OpenDentBusiness.TaskNote},System.Collections.Generic.List{OpenDentBusiness.UserOdPref})">
            <summary>Will invoke a refresh of tasks on the only instance of FormOpenDental. listRefreshedTaskNotes and listBlockedTaskLists are only used 
            for Popup tasks, only used if listRefreshedTasks includes at least one popup task.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.HandleRefreshedTasks(System.Collections.Generic.List{OpenDentBusiness.Signalod},System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{OpenDentBusiness.Task},System.Collections.Generic.List{OpenDentBusiness.TaskNote},System.Collections.Generic.List{OpenDentBusiness.UserOdPref})">
            <summary>Refreshes tasks and pops up as necessary. Invoked from thread callback in OnProcessSignals(). listRefreshedTaskNotes and 
            listBlockedTaskLists are only used for Popup tasks, only used if listRefreshedTasks includes at least one popup task.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.UpdateTaskMetaData(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{OpenDentBusiness.Task})">
            <summary>Updates the class-wide meta data used for updating the task notification UI elements.
            Returns true if a reminder task has changed.  Otherwise; false.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.TaskPopupHelper(OpenDentBusiness.Task,System.Collections.Generic.List{OpenDentBusiness.UserOdPref},System.Collections.Generic.List{OpenDentBusiness.TaskNote})">
            <summary>Takes one task and determines if it should popup for the current user.  Displays task popup if needed.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.GotoModule_ModuleSelected(OpenDentBusiness.EnumModuleType,System.Nullable{System.DateTime},System.Collections.Generic.List{System.Int64},System.Int64,System.Int64,System.Int64,System.Int64,System.Boolean)">
            <summary>Delegate method for GotoModule. Only required parameter is moduleType. Pass in other optional parameters like patNum:patnum</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.GetSelectedModuleName">
            <summary>Returns the translated name of the currently selected module for logging bug submissions.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.SetModuleSelected">
            <summary>Sets the currently selected module based on the selectedIndex of the outlook bar. If selectedIndex is -1, which might happen if user does not have permission to any module, then this does nothing.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.SetModuleSelected(System.Boolean)">
            <summary>Sets the currently selected module based on the selectedIndex of the outlook bar. If selectedIndex is -1, which might happen if user does not have permission to any module, then this does nothing. The menuBarClicked variable should be set to true when a module button is clicked, and should be false when called for refresh purposes.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.RefreshCurrentModule(System.Boolean,System.Boolean,System.Boolean,System.Int64)">
            <Summary>This also passes CurPatNum down to the currently selected module (except the Manage module).  If calling from ContrAppt and RefreshModuleDataPatient was called before calling this method, set isApptRefreshDataPat=false so the get pat query isn't run twice.</Summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.TryWithConnStr">
            <summary>Decrypt the connection string and try to connect to the database directly. Only called if using a connection string and ChooseDatabase is not to be shown. Must call GetOraConfig first.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.DataConnection_ConnectionLost(DataConnectionBase.DataConnectionEventArgs)">
            <summary>This method stops all (local) timers and displays a connection lost window that will let users attempt to reconnect.
            At any time during the lifespan of the application connection to the database can be lost for unknown reasons.
            When anything spawned by FormOpenDental (main thread) tries to connect to the database and fails, this event will get fired.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.CrashedTable_Detected(DataConnectionBase.CrashedTableEventArgs)">
            <summary></summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormOpenDental.MiddleTierConnection_ConnectionLost(OpenDentBusiness.MiddleTierConnectionEventArgs)" -->
        <member name="M:OpenDental.FormOpenDental.DataConnection_CredentialsFailedAfterLogin(CodeBase.ODEventArgs)">
            <summary>This method stops all (local) timers and displays a bad credentials window that will let users attempt to login again.  This is to
            handle the situation where a user is logged into multiple computers via middle tier and changes their password on 1 connection.  The other
            connection(s) would attempt to access the database using the old password (for signal refreshes etc) and lock the user's account for too many
            failed attempts.  FormLoginFailed will not allow a different user to login, only the current user or exit the program.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.DataReaderNull_Detected(DataConnectionBase.DataReaderNullEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.HttpListenerApiCallback(System.IAsyncResult)">
            <summary>This happens on another thread and does not block.  Since it's not on the main thread, it also doesn't slow down the UI when it's processing messages.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.AreYouSurePrompt(System.Int64,System.String)">
            <summary>First checks if users have a message prompt turned off for logging off/closing the program. If they don't, then a message is passed in that corresponds with intent (ie logging off vs closing the program). userNum: Used to check if user has "Close/Log off" message preference turned off under File->User Settings.  message: Used for passing in message that lets User know what is being done</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LaunchPrerencesWithMenuItem(System.Int32)">
            <summary>Checks setup permission, launches the PRefences window with the specified treeNode and then makes an audit entry.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.GoToJob(System.Int64)">
            <summary>Can be called from anywhere in OD layer to load job. 
            It is in FormOpenDental because this is where the static reference to theJob Manager is.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.DashboardMenuClick(System.Object,System.EventArgs)">
            <summary>Opens a UserControlDashboardWidget, closing the previously selected UserControlDashboardWidget if one is already open.  If the user clicked on the menu item corresponding to the currently open Patient Dashboard, this means "Close".</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.TryLaunchPatientDashboard(OpenDentBusiness.SheetDef)">
            <summary>Opens a UserControlDashboardWidget.  The user's permissions should be validated prior to calling this method.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.InitDashboards(System.Int64,OpenDentBusiness.UserOdPref)">
            <summary>Determines if there is a user preference for which Dashboard to open on startup, and launches it if the user has permissions to launch the dashboard.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.GetUserDashboard(OpenDentBusiness.UserOdPref)">
            <summary>Gets the current user's Patient Dashboard SheetDef.  Returns null if the SheetDef linked via userPrefDashboard does not exist.
            If the Patient Dashboard SheetDef linked via userPrefDashboard no longer exists, userPrefDashboard is deleted.</summary>
        </member>
        <member name="P:OpenDental.FormOpenDental.IsDashboardVisible">
            <summary>Determines if the Dashboard is currently visible.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.alertFormClosingHelper(System.Object,System.Windows.Forms.FormClosedEventArgs)">
            <summary>This is used to force the alert logic to run on the server in OpenDentalService.
            OpenDentalService Alerts logic will re run on signal update interval time.
            This could be enhanced eventually only invalidate when something from the form changed.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.AlertReadsHelper(System.Collections.Generic.List{System.Int64})">
            <summary>Refreshes AlertReads for current user and creates a new one if one does not exist for given alertItem.</summary>
        </member>
        <member name="T:OpenDental.FormOpenDental.ProcessOfficeDownArgs">
            <summary>HQ Only. ProcessOfficeDowns must be invoked from a worker thread. These are the arguments necessary.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.ProcessHqMetricsResults(System.Collections.Generic.List{OpenDentBusiness.PhoneEmpDefault},System.Collections.Generic.List{OpenDentBusiness.Phone},System.Collections.Generic.List{OpenDentBusiness.PhoneEmpSubGroup},System.Collections.Generic.List{OpenDentBusiness.ChatUser},OpenDentBusiness.Phone,System.Boolean,System.Collections.Generic.List{OpenDentBusiness.WebChatSession},System.Collections.Generic.List{OpenDentBusiness.PeerInfo})">
            <summary>HQ Only.  Every 1.6 seconds. Digest results of ProcessHqMetrics and update form controls accordingly.  phoneList is the list of all phone rows just pulled from the database.  phone is the one that we should display here, and it can be null.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.ProcessOfficeDowns(System.Collections.Generic.List{OpenDentBusiness.Task})">
            <summary>HQ Only. Send the office downs to any Call Center Maps that are open.</summary>
        </member>
        <member name="T:OpenDental.FormOpenDental.FillTriageLabelsResultsArgs">
            <summary>HQ Only. OnFillTriageLabelsResults must be invoked from a worker thread. These are the arguments necessary.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.FillTriageLabelsResults(OpenDentBusiness.TriageMetric)">
            <summary>HQ Only. Digest results of Phones.GetTriageMetrics() in ProcessHqMetrics(). Fills the triage labels and update form controls accordingly.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.LogOnOpenDentalUser(System.String,System.String,System.String)">
            <summary>Logs on a user using the passed in credentials or Active Directory or the good old-fashioned log on window.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.IsCloudUserIpAllowed">
            <summary>
            If the user is permitted to login from this IP address, return true. Otherwise, inform the user and return false.
            If a Security Admin does not have permission, they are prompted to add their current IP address to the list of allowed addresses.
            </summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.ShowLogOn(System.Boolean)">
            <summary>Show the log on window.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.PromptForLicenseSignature">
            <summary>Opens the License Agreements for the user to sign. This prompting will only display when the user is a SecurityAdmin with a valid regkey. Closes Open Dental if they refuse to sign. </summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.CheckForPasswordReset">
            <summary>Checks to see if the currently logged-in user needs to reset their password.  If they do, then this method will force the user to reset the password otherwise the program will exit.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.GetOpenForms">
            <summary>Returns a list of forms that are currently open, excluding FormOpenDental, FormLogOn, and duplicates. This method is typically called in order to close any open forms except the aforementioned ones.  Therefore, the list returned is ordered with the intent that the calling method will close children first and then parents last.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.SaveWork(System.Boolean)">
            <summary>Enumerates open forms and saves work for those forms which have a save handler.  Some forms are closed as part of saving work.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.CloseOpenForms(System.Boolean,System.Int32,System.Boolean)">
            <summary>Do not call this function inside of an invoke, or else the form closing events will not return from ShowDialog() calls in time.
            Closes all open forms except FormOpenDental.  Set isForceClose to true if you want to close all forms asynchronously.  Set 
            forceCloseTimeoutMS when isForceClose is set to true to specify a timeout value for forms that take too long to close, e.g. a form hanging in 
            a FormClosing event on a MessageBox.  If the timeout value is reached, the program will exit.  E.g. FormWikiEdit will ask users on closing if 
            they are sure they want to discard unsaved work.  Returns false if there is an open form that requests attention, thus needs to stop the 
            closing of the forms.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.NullUserCheck(System.String)">
            <summary>Call this method in places where Security.CurUser should not be null in order to
            notify HQ with additional information when a null Security.CurUser is detected.  Does nothing if CurUser is not null.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.InitiateShutdown(System.Boolean)">
            <summary>Called when a shutdown signal is found.</summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.ProcessKillCommand">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormOpenDental.S_ProcessKillCommand">
            <summary></summary>
        </member>
        <member name="M:OpenDental.WebServiceRequest.CheckForErrors(System.Xml.XmlDocument)">
            <summary>Returns error message if the passed in xml document has an Error or KeyDisabled node.</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.FormReportComplex">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FormReportComplex.IsRetailStore">
            <summary>Used to export and print report from the retailstore DB since it does not have a Preference or a Computer table.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FormReportComplex._myReport">
            <summary>The report to display.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FormReportComplex._lastSectionPrinted">
            <summary>The name of the last section printed. It really only keeps track of whether the details section and the reportfooter have finished printing. This variable will be refined when groups are implemented.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FormReportComplex._pagesProcessed">
            <summary>Records the number of pages that are printed, including the pages that are "fake" printed as described in the summary comment of the pagePrinter() method.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FormReportComplex._totalNumberPagesPrinted">
            <summary>Records the number of pages that are actually printed</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FormReportComplex.GROUP_FOOTER_BUFFER">
            <summary>An arbitrary buffer amount for AreaSectionType.GroupFooter added to give a buffer between split tables.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.FormReportComplex._currentPage">
            <summary>The location of the current page being printed, used to increment through the pages.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.#ctor(OpenDental.ReportingComplex.ReportComplex)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.RefreshWindow">
            <summary>Used to refresh the print window when something changes.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.SetDefaultZoom">
            <summary>Sets the default zoom factor based on the reports orientation.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.pd2_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>raised for each page to be printed.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.pagePrinter(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>This method contains the logic to print a given page using the grfx Graphics object. It tracks the yPos to extend the data over pages
            as necessary using a standard paperSize and predefined currentMargins. It will only print if isPrintablePage is true, otherwise it will "fake"
            print the pages for which it is false to allow users to print over a range.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.pd2_EndPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>Either the report finished printing OR the user canceled out of the print job.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.PrintSection(System.Drawing.Graphics,OpenDental.ReportingComplex.Section,System.Int32,System.Int32,System.Boolean)">
            <summary>Prints one section other than details at the specified x and y position on the page.  The math to decide whether it will fit on the 
            current page is done ahead of time.  Will print a blank section if isPrintablePage is false.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.PrintQuerySection(System.Drawing.Graphics,OpenDental.ReportingComplex.Section,System.Int32,System.Int32,System.Boolean)">
            <summary>Prints some rows of the details section at the specified x and y position on the page.  The math to decide how many rows to print is 
            done ahead of time.  The number of rows printed so far is kept global so that it can be used in calculating the layout of this section.
            Prints a blank section if isPrintablePage=false.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.PrintQueryObjectSection(OpenDental.ReportingComplex.QueryObject,System.Drawing.Graphics,OpenDental.ReportingComplex.Section,System.Int32,System.Int32,System.Boolean)">
            <summary>Prints sections inside a QueryObject</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.FormReportComplex.GetDisplayString(System.String,System.String,OpenDental.ReportingComplex.ReportObject,System.Int32,OpenDental.ReportingComplex.QueryObject,System.Boolean)">
            <summary>This takes in a raw report object and returns the display text and previous display text. For dates, it will return a blank string if the year
            is less than 1880.</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.ParameterField">
            <summary>Holds information about a parameter used in the report.</summary>
            <remarks>A parameter is a string that can be used in a query that will be replaced by user-provided data before the query is sent.  For instance, "?date1" might be replaced with "(ProcDate = '2004-02-17' OR ProcDate = '2004-02-18')".  The output value can be multiple items connected with OR's as in the example, or it can be a single value.  The Snippet represents one of the multiple values.  In this example, it would be "ProcDate = '?'".  The ? in the Snippet will be replaced by the values provided by the user.</remarks>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterField.Name">
            <summary>This is the name as it will show in the query, but without the preceding question mark.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterField.OutputValue">
            <summary>The value, in text form, as it will be substituted into the main query and sent to the database.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterField.ValueType">
            <summary>The type of value that the parameter can accept.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterField.CurrentValues">
            <summary>The values of the parameter, typically just one. Each value can be a string, date, number, currency, Boolean, etc.  If the length of the ArrayList is 0, then the value is blank and will not be used in the query.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterField.DefaultValues">
            <summary>These values are stored between sessions in the database and will show in the dialog prefilled when it asks the user for values.  The length of the ArrayList can be 0 to specify that the initial value is blank.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterField.PromptingText">
            <summary>The text that prompts the user what to enter for this parameter.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterField.Snippet">
            <summary>The snippet of SQL that will be repeated once for each value supplied by the user, connected with OR's, and surrounded by parentheses.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterField.EnumerationType">
            <summary>If the ValueKind is EnumField, then this specifies which type of enum. It is the string name of the type.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterField.DefCategory">
            <summary>If ValueKind is DefParameter, then this specifies which DefCat.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterField.FKeyType">
            <summary>If ValueKind is ForeignKey, then this specifies which one.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ParameterField.#ctor">
            <summary>Default constructor. Used when retrieving data from db.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ParameterField.#ctor(System.String,OpenDental.ReportingComplex.FieldValueType,System.Object,System.String,System.String)">
            <summary>This is how parameters are generally added.  The currentValues and outputValue will be determined during the Report.SubmitQuery call.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ParameterField.#ctor(System.String,OpenDental.ReportingComplex.FieldValueType,System.Collections.ArrayList,System.String,System.String,OpenDentBusiness.EnumType)">
            <summary>Overload for ValueKind Enum.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ParameterField.#ctor(System.String,OpenDental.ReportingComplex.FieldValueType,System.Collections.ArrayList,System.String,System.String,OpenDentBusiness.DefCat)">
            <summary>Overload for ValueKind DefCat.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ParameterField.#ctor(System.String,OpenDental.ReportingComplex.FieldValueType,System.Collections.ArrayList,System.String,System.String,OpenDentBusiness.ReportFKType)">
            <summary>Overload for ValueKind ForeignKey.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ParameterField.ApplyParamValues">
            <summary>Applies a value to the specified parameter field of a report.  The currentValues is usually just a single value.  The only time there will be multiple values is for a def or an enum.  For example, if a user selects multiple items from a dropdown box for this parameter, then each item is connected by an OR.  The entire output value is surrounded by parentheses.</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.FieldValueType">
            <summary>Specifies the type of value that the field will accept.  Used in ParameterDef.ValueType and ReportObject.ValueType properties.  Also used in the ContrMultInput control to determine what kind of input to display.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldValueType.Date">
            <summary>Field takes a date value.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldValueType.String">
            <summary>Field takes a string value.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldValueType.Boolean">
            <summary>Field takes a boolean value.  For a Parameter, if false, then the snippet will not even be included. Because of the way this is implemented, the snippet can specify a true or false value, and the user can select whether to include the snippet.  So the parameter can specify whether to include a false value among many other possibilities.  There should not be a ? in a boolean snippet.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldValueType.Integer">
            <summary>Field takes an integer value.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldValueType.Number">
            <summary>Field takes a number(double) value which can include a decimal.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldValueType.Enum">
            <summary>Field takes an enumeration value(s), usually in int form from a dropdown list.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldValueType.Def">
            <summary>Field takes definition.DefNum value from a def category. Presented to user as a dropdown list for that category.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldValueType.Age">
            <summary>Only used in ReportObject. When a table comes back from the database, if the expected value is an age, then this column type should be used.  Just retreive the birthdate and the program will convert it to an age.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldValueType.ForeignKey">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldValueType.YesNoUnknown">
            <summary>Only used in FormQuestionnaire.</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.ParameterFieldCollection">
            <summary>Strongly typed collection of type ParameterDef.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterFieldCollection.Item(System.Int32)">
            <summary>Returns the ParameterField with the given index.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ParameterFieldCollection.Item(System.String)">
            <summary>Returns the ParameterDefinition with the given name.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ParameterFieldCollection.Add(OpenDental.ReportingComplex.ParameterField)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ParameterFieldCollection.IndexOf(OpenDental.ReportingComplex.ParameterField)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ParameterFieldCollection.Insert(System.Int32,OpenDental.ReportingComplex.ParameterField)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.QueryObject">
            <summary>For every query added to a report there will be at least one QueryObject.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.QueryObject.#ctor">
            <summary>Default constructor.  Do not use.  Only used from DeepCopy()</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.QueryObject.#ctor(System.String,System.Data.DataTable,System.String,System.Drawing.Font,System.Boolean,System.Int32,System.String,OpenDental.ReportingComplex.SplitByKind,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.Int64,System.String})">
            <summary>Specify either a table or a query.  Specifying a column name and split type will cause the query to be broken into separate tables according to changes in that column.  Specifying a query group will allow GroupSummary objects to total up only queries in the specified group.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.QueryObject.ReportObjects">
            <summary>A collection of report objects that comprise a single query.  This will contain a title, column headers, data fields, etc.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.QueryObject.ColumnNameToSplitOn">
            <summary>When the content of the data field changes within the column that has this name a new table will be created.  E.g. splitting up one query into multiple tables by payment types.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.QueryObject.ReportTable">
            <summary>A table that represents the raw results of the query.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.QueryObject.ExportTable">
            <summary>A table that only contains columns from the ReportTable that will be displayed.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.QueryObject.AddColumn(System.String,System.Int32,OpenDental.ReportingComplex.FieldValueType,System.Drawing.Font,System.String)">
            <summary>Adds a datafield column with the specified type, width and font.  If the column is type Double, then the alignment is set right and a total field is added. Also, default formatstrings are set for dates and doubles.  Does not add lines or shading.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.QueryObject.AddGroupSummaryField(System.String,System.String,System.String,OpenDental.ReportingComplex.SummaryOperation,System.Collections.Generic.List{System.Int32},System.Drawing.Color,System.Drawing.Font,System.Int32,System.Int32,System.String)">
            <summary>Adds a summary object, of the specified color, for the specified group of queries, giving it a label with the given text and font.  The summary is placed under the specified column and summarizes the specified datafield.  Choosing a summaryOperation will change the displayed value calculation.  The summary will be offset of its position in pixels according to the given X/Y values.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.QueryObject.AddInitialHeader(System.String,System.Drawing.Font)">
            <summary>Do not use. Only used when splitting a table on a column.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.QueryObject.AddLine(System.String,OpenDental.ReportingComplex.AreaSectionType,OpenDental.ReportingComplex.LineOrientation,OpenDental.ReportingComplex.LinePosition,System.Drawing.Color,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>Adds a line to the specified section with the specified orientation and position.  The line will be offset of its position in pixels according to the given X/Y values.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.QueryObject.AddSummaryLabel(System.String,System.String,OpenDental.ReportingComplex.SummaryOrientation,System.Boolean,System.Drawing.Font)">
            <summary>Add a label with the given text and font to the summary value of a column, based on the orientation given.  True will cause the label to wrap within the bounds of the column.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.QueryObject.GetSectionHeight(OpenDental.ReportingComplex.AreaSectionType)">
            <summary>If the specified section exists, then this returns its height. Otherwise it returns 0.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.QueryObject.SubmitQuery">
            <summary>Submits the Query to the database and fills ReportTable with the results.  Returns false if the query fails.</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.ReportComplex">
            <summary>This class is loosely modeled after CrystalReports.ReportDocument, but with less inheritence and heirarchy.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.ReportComplex._grfx">
            <summary>This is simply used to measure strings for alignment purposes.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.ReportComplex.PrintMargins">
            <summary>Can be changed on a per report basis.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportComplex.Sections">
            <summary>Collection of Sections.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportComplex.ReportObjects">
            <summary>A collection of ReportObjects</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportComplex.ParameterFields">
            <summary>Collection of ParameterFields that are available for the query.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportComplex.ReportMargins">
            <summary>Margins will be null unless set by user.  When printing, if margins are null, the defaults will depend on the page orientation.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportComplex.IsLandscape">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportComplex.ReportName">
            <summary>The name to display in the menu.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportComplex.Description">
            <summary>Gives the user a description and some guidelines about what they can expect from this report.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportComplex.AuthorID">
            <summary>For instance OD12 or JoeDeveloper9.  If you are a developer releasing reports, then this should be your name or company followed by a unique number.  This will later make it easier to maintain your reports for your customers.  All reports that we release will be of the form OD##.  Reports that the user creates will have this field blank.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportComplex.LetterOrder">
            <summary>The 1-based order to show in the Letter menu, or 0 to not show in that menu.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportComplex.TotalRows">
            <summary>The total number of rows to print.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>This can add a title, subtitle, grid lines, and page nums to the report using defaults.  If the parameters are blank or false the object will not be added.  Set showProgress false to hide the progress window from showing up when generating the report.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddTitle(System.String,System.String)">
            <summary>Adds a ReportObject, Tahoma font, 17-point and bold, to the top-center of the Report Header Section.  Should only be done once, and done before any subTitles.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddTitle(System.String,System.String,System.Drawing.Font)">
            <summary>Adds a ReportObject with the given font, to the top-center of the Report Header Section.  Should only be done once, and done before any subTitles.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddSubTitle(System.String,System.String)">
            <summary>Adds a ReportObject, Tahoma font, 10-point and bold, at the bottom-center of the Report Header Section.
            Should only be done after AddTitle.  You can add as many subtitles as you want.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddSubTitle(System.String,System.String,System.Int32)">
            <summary>Adds a ReportObject, Tahoma font, 10-point and bold, at the bottom-center of the Report Header Section.
            Should only be done after AddTitle.  You can add as many subtitles as you want.  Padding is added to the height only of the subtitle.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddSubTitle(System.String,System.String,System.Drawing.Font)">
            <summary>Adds a ReportObject with the given font, at the bottom-center of the Report Header Section.
            Should only be done after AddTitle.  You can add as many subtitles as you want.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddSubTitle(System.String,System.String,System.Drawing.Font,System.Int32)">
            <summary>Adds a ReportObject with the given font, at the bottom-center of the Report Header Section.
            Should only be done after AddTitle.  You can add as many subtitles as you want.  Padding is added to the height only of the subtitle.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddFooterText(System.String,System.String,System.Drawing.Font,System.Int32,System.Drawing.ContentAlignment)">
            <summary>Adds a report object with the given font at the footer of the report, with the given alignment. </summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddPageFooterText(System.String,System.String,System.Drawing.Font,System.Int32,System.Drawing.ContentAlignment)">
            <summary>Adds a Page Footer object with the given font with the given alignment. </summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddLine(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Color,System.Single,OpenDental.ReportingComplex.LineOrientation,OpenDental.ReportingComplex.LinePosition,System.Int32,System.Int32,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddBox(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Color,System.Single,System.Int32,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddPageNum(System.Drawing.Font)">
            <summary>Put a pagenumber object on lower left of page footer section. Object is named PageNum.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddParameter(System.String,OpenDental.ReportingComplex.FieldValueType,System.Object,System.String,System.String)">
            <summary>Adds a parameterField which will be used in the query to represent user-entered data.</summary>
            <param name="myName">The unique formula name of the parameter.</param>
            <param name="myValueType">The data type that this parameter stores.</param>
            <param name="myDefaultValue">The default value of the parameter</param>
            <param name="myPromptingText">The text to prompt the user with.</param>
            <param name="mySnippet">The SQL snippet that this parameter represents.</param>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddParameter(System.String,OpenDental.ReportingComplex.FieldValueType,System.Collections.ArrayList,System.String,System.String,OpenDentBusiness.EnumType)">
            <summary>Overload for ValueKind enum.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddParameter(System.String,OpenDental.ReportingComplex.FieldValueType,System.Collections.ArrayList,System.String,System.String,OpenDentBusiness.DefCat)">
            <summary>Overload for ValueKind defCat.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.AddParameter(System.String,OpenDental.ReportingComplex.FieldValueType,System.Collections.ArrayList,System.String,System.String,OpenDentBusiness.ReportFKType)">
            <summary>Overload for ValueKind defCat.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.SubmitQueries(System.Boolean,System.Boolean)">
            <summary>Submits the queries to the database and makes query objects for each query with the results.  Returns false if one of the queries failed. Set hasPreferenceTable to false when using a DB that does not have the Preference table, such as the retailstore DB.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.GetSectionHeight(OpenDental.ReportingComplex.AreaSectionType)">
            <summary>If the specified section exists, then this returns its height. Otherwise it returns 0.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportComplex.CloseProgressBar">
            <summary>Closes the progress bar if it is open.</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.ReportObject">
            <summary>There is one ReportObject for each element of an ODReport that gets printed on the page.  There are many different kinds of reportObjects.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.ReportObject._font">
            <summary>We could implement IDisposable on this base class for this font.  It looks like too much work.  We would need to run thousands/millions of reports for the memory problem to be noticeable.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.SectionType">
            <summary>The section to which this object is attached.  For lines and boxes that span multiple sections, this is the section in which the upper part of the object resides.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.Location">
            <summary>Location within the section. Frequently, y=0</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.Size">
            <summary>Typically not set since this is set by a helper function when important properties for size change.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.Name">
            <summary>The unique name of the ReportObject.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.ObjectType">
            <summary>For instance, FieldObject, or TextObject.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.Font">
            <summary>Setting this will also set the size.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.ContentAlignment">
            <summary>Horizontal alignment of the text.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.ForeColor">
            <summary>Can be used for text color or for line color.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.StaticText">
            <summary>The text to display for a TextObject. Setting this will also set the size.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.StringFormat">
            <summary>For a FieldObject, a C# format string that specifies how to print dates, times, numbers, and currency based on the country or on a custom format.</summary>
            <remarks>There are a LOT of options for this string.  Look in C# help under Standard Numeric Format Strings, Custom Numeric Format Strings, Standard DateTime Format Strings, Custom DateTime Format Strings, and Enumeration Format Strings.  Once users are allowed to edit reports, we will assemble a help page with all of the common options. The best options are "n" for number, and "d" for date.</remarks>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.SuppressIfDuplicate">
            <summary>Suppresses this field if the field for the previous record was the same.  Only used with data fields.  E.g. So that a query ordered by a date column doesn't print the same date over and over.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.FloatLineThickness">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.LineOrientation">
            <summary>Used to determine whether the line is vertical or horizontal.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.LinePosition">
            <summary>Used to determine intial starting position of the line.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.IntLinePercent">
            <summary>Used to determine what percentage of the section the line will draw on.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.OffSetX">
            <summary>Used to offset lines, boxes, and text by a specific number of pixels.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.OffSetY">
            <summary>Used to offset lines, boxes, and text by a specific number of pixels.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.IsUnderlined">
            <summary>Used to underline text objects and titles.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.FieldDefKind">
            <summary>The kind of field, like FormulaField, SummaryField, or DataTableField.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.FieldValueType">
            <summary>The value type of field, like string or datetime.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.SpecialFieldType">
            <summary>For FieldKind=FieldDefKind.SpecialField, this is the type.  eg. pagenumber</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.SummaryOperation">
            <summary>For FieldKind=FieldDefKind.SummaryField, the summary operation type.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.SummarizedField">
            <summary>For FieldKind=FieldDefKind.SummaryField, the name of the dataField that is being summarized.  This might later be changed to refer to a ReportObject name instead (or maybe not).</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.DataField">
            <summary>For objectKind=ReportObjectKind.FieldObject, the name of the dataField column.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.SummaryOrientation">
            <summary>The location of the summary label around the summary field</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObject.SummaryGroups">
            <summary>The numeric value of the QueryGroup. Used when summarizing groups of queries.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.#ctor(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Point,System.Drawing.Size,System.String,System.Drawing.Font,System.Drawing.ContentAlignment)">
            <summary>Creates a TextObject with the specified name, section, location and size.  The staticText and font will determine what and how it displays, while the contentAlignment will determine the relative location in the text area.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.#ctor(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Point,System.Drawing.Size,System.String,System.Drawing.Font,System.Drawing.ContentAlignment,System.Int32,System.Int32)">
            <summary>Creates a TextObject with the specified name, section, location and size.  The staticText and font will determine what and how it displays, while the contentAlignment will determine the relative location in the text area.  The text will be offset of its position in pixels according to the given X/Y values.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.#ctor(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Color,System.Single)">
            <summary>Creates a BoxObject with the specified name, section, color and line thickness.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.#ctor(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Color,System.Single,System.Int32,System.Int32)">
            <summary>Creates a BoxObject with the specified name, section, color and line thickness.  The box will be offset of its position in pixels according to the given X/Y values.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.#ctor(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Color,System.Single,OpenDental.ReportingComplex.LineOrientation,OpenDental.ReportingComplex.LinePosition,System.Int32)">
            <summary>Creates a LineObject with the specified name, section, color, line thickness, line orientation, line position and percent.  Orientation determines whether the line is horizontal or vertical.  Position determines which side of the section the line draws on.  Percent determines how much of available space the line will take up.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.#ctor(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Color,System.Single,OpenDental.ReportingComplex.LineOrientation,OpenDental.ReportingComplex.LinePosition,System.Int32,System.Int32,System.Int32)">
            <summary>Creates a LineObject with the specified name, section, color, line thickness, line orientation, line position and percent.  Orientation determines whether the line is horizontal or vertical.  Position determines which side of the section the line draws on.  Percent determines how much of available space the line will take up.  The line will be offset of its position in pixels according to the given X/Y values.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.#ctor(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Point,System.Drawing.Size,System.String,OpenDental.ReportingComplex.FieldValueType,System.Drawing.Font,System.Drawing.ContentAlignment,System.String)">
            <summary>Mainly used from inside QueryObject.  Creates a DataTableFieldObject with the specified name, section, location, size, dataFieldName, fieldValueType, font, contentAlignment and stringFormat.  DataFieldName determines what the field will be filled with from the table.  FieldValueType determines how the field will be filled with data (i.e Number will be formatted as a number and have a summary added to the bottom of a column).  ContentAlignment determines where the text will be drawn in the box.  StringFormat is used to determined how a ToString() method call will format the field text.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.#ctor(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Point,System.Drawing.Size,OpenDental.ReportingComplex.SummaryOperation,System.String,System.Drawing.Font,System.Drawing.ContentAlignment,System.String)">
            <summary>Mainly used from inside QueryObject.  Creates a SummaryFieldObject with the specified name, section, location, size, summaryOperation, summarizedFieldName, font, contentAlignment and stringFormat.  SummaryOperation determines what calculation will be used when summarizing the column.  SummarizedFieldName determines the field that will be summarized at the bottom of the column.  ContentAlignment determines where the text will be drawn in the box.  StringFormat is used to determined how a ToString() method call will format the field text.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.#ctor(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Point,System.Drawing.Size,System.Drawing.Color,OpenDental.ReportingComplex.SummaryOperation,System.String,System.Drawing.Font,System.Drawing.ContentAlignment,System.String,System.Int32,System.Int32,System.String)">
            <summary>Mainly used from inside QueryObject.  Creates a GroupSummaryObject with the specified name, section, location, size, color, summaryOperation, summarizedFieldName, font, datafield, and offsets.  SummaryOperation determines what calculation will be used when summarizing the group of column.  SummarizedFieldName determines the field that will be summarized and must be the same in each of the queries.  Datafield determines which column the summary will draw under.  The summary will be offset of its position in pixels according to the given X/Y values.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.#ctor(System.String,OpenDental.ReportingComplex.AreaSectionType,System.Drawing.Point,System.Drawing.Size,OpenDental.ReportingComplex.FieldValueType,OpenDental.ReportingComplex.SpecialFieldType,System.Drawing.Font,System.Drawing.ContentAlignment,System.String)">
            <summary>Currently only used for page numbers.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.GetStringFormatAlignment(System.Drawing.ContentAlignment)">
            <summary>Converts contentAlignment into a combination of StringAlignments used to format strings.  This method is mostly called for drawing text on reportObjects.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.DeepCopyReportObject">
            <summary>Used to copy a report object when creating new QueryObjects.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.GetSummaryValue(System.Data.DataTable,System.Int32)">
            <summary>Once a dataTable has been set, this method can be run to get the summary value of this field.  It will still need to be formatted.  It loops through all records to get this value.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObject.CalculateNewSize(System.String,System.Drawing.Font)">
            <summary>Used to automatically calculate the new size when something important changes. Also recalculates location for report headers.</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.FieldDefKind">
            <summary>Specifies the field kind in the FieldKind property of the ReportObject class.  Used in Queries and Datatables.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldDefKind.DataTableField">
            <summary>Basic informational cell/field for a Datatable.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldDefKind.FormulaField">
            <summary>Currently not in use.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldDefKind.SpecialField">
            <summary>Used in conjunction with SpecialFieldType to determine special logic for certain objects.  Currently only used for PageNumbers</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.FieldDefKind.SummaryField">
            <summary>Used when creating summaries of a column.  Uses the current SummaryOperation to determine which calculation to make.</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.ReportObjectType">
            <summary>Used in the Kind field of each ReportObject to provide a quick way to tell what kind of reportObject.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.ReportObjectType.BoxObject">
            <summary>Object is a box and will draw a rectangle with the specified parameters.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.ReportObjectType.FieldObject">
            <summary>Object is a field object and will be used in drawing datatables.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.ReportObjectType.LineObject">
            <summary>Object is a line and will draw a straight line with the specified parameters.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.ReportObjectType.QueryObject">
            <summary>Object is a special subset of ReportObject.  Contains its own list of ReportObjects and always contains a query or datatable of information that will be drawn in the report.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.ReportObjectType.TextObject">
            <summary>Object is a text object.  Can be placed anywhere and is used in multiple sections.  Not to be confused with Datatable cell/field objects.</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.SpecialFieldType">
            <summary>Specifies the special field type in the SpecialType property of the ReportObject class.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SpecialFieldType.PageNofM">
            <summary>Field returns "Page [current page number] of [total page count]" formula. Not functional yet.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SpecialFieldType.PageNumber">
            <summary>Field returns the current page number.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SpecialFieldType.PrintDate">
            <summary>Field returns the current date.  Currently not in use.</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.SummaryOperation">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SummaryOperation.Count">
            <summary>Summary counts the number of values, from the field.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SummaryOperation.Sum">
            <summary>Summary returns the total of all the values for the field.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SummaryOperation.Average">
            <summary>Summary returns the average of a field</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.LineOrientation">
            <summary>Used to determine how a line draws in a section.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.LineOrientation.Horizontal">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.LineOrientation.Vertical">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.LinePosition">
            <summary>Used to determine where a line draws in a section.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.LinePosition.Center">
            <summary>Used in Horizontal and Vertical Orientation</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.LinePosition.East">
            <summary>Used in Vertical Orientation</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.LinePosition.North">
            <summary>Used in Horizontal Orientation</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.LinePosition.South">
            <summary>Used in Horizontal Orientation</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.LinePosition.West">
            <summary>Used in Vertical Orientation</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.SplitByKind">
            <summary>This determines what type of column the table will be splitting on. Default is none.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SplitByKind.None">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SplitByKind.Date">
            <summary>1</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SplitByKind.Enum">
            <summary>2</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SplitByKind.Definition">
            <summary>3</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SplitByKind.Value">
            <summary>4</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.SummaryOrientation">
            <summary>This determines which side of the summaryfield the label will be drawn on.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SummaryOrientation.None">
            <summary>0</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SummaryOrientation.North">
            <summary>1</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SummaryOrientation.South">
            <summary>2</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SummaryOrientation.East">
            <summary>3</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.SummaryOrientation.West">
            <summary>4</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.ReportObjectCollection">
            <summary>Contains the ReportObject objects for every report object in the report.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObjectCollection.Item(System.Int32)">
            <summary>Returns the ReportObject with the given index.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.ReportObjectCollection.Item(System.String)">
            <summary>Returns the ReportObject with the given name.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObjectCollection.Add(OpenDental.ReportingComplex.ReportObject)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObjectCollection.IndexOf(OpenDental.ReportingComplex.ReportObject)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.ReportObjectCollection.Insert(System.Int32,OpenDental.ReportingComplex.ReportObject)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.Section">
            <summary>Every ReportObject in an ODReport must be attached to a Section.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.Section._height">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.Section._width">
            <summary>Width is usually the entire page unless set differently here.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.Section._sectionType">
            <summary>Specifies which kind, like ReportHeader, or GroupFooter.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.Section.#ctor(OpenDental.ReportingComplex.AreaSectionType,System.Int32)">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.Section.Height">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.Section.Width">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.Section.SectionType">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.AreaSectionType">
            <summary>The type of section is used in the Section class.  Only ONE of each type is allowed except for the GroupHeader and GroupFooter which are optional and can have one pair for each group.  The order of the sections is locked and user cannot change.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.AreaSectionType.None">
            <summary>0- None</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.AreaSectionType.ReportHeader">
            <summary>1- Printed at the top of the report.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.AreaSectionType.PageHeader">
            <summary>2- Printed at the top of each page.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.AreaSectionType.GroupTitle">
            <summary>3- Title of a specific group</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.AreaSectionType.GroupHeader">
            <summary>4- Will print at the top of a specific group.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.AreaSectionType.Detail">
            <summary>5- This is the data of the report and represents one row of data.  This section gets printed once for each record in the datatable.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.AreaSectionType.GroupFooter">
            <summary>6- Contains a buffer and/or a total of a column</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.AreaSectionType.PageFooter">
            <summary>7- Prints at the bottom of each page, including after the reportFooter</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.AreaSectionType.ReportFooter">
            <summary>8- Prints at the bottom of the report, but before the page footer for the last page.</summary>
        </member>
        <member name="F:OpenDental.ReportingComplex.AreaSectionType.Query">
            <summary>9- Query Section, contains groups of queries.</summary>
        </member>
        <member name="T:OpenDental.ReportingComplex.SectionCollection">
            <summary>Strongly typed collection of Sections.</summary>
        </member>
        <member name="P:OpenDental.ReportingComplex.SectionCollection.Item(OpenDental.ReportingComplex.AreaSectionType)">
            <summary>Returns the Section with the given type.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.SectionCollection.Add(OpenDental.ReportingComplex.Section)">
            <summary>Adds the specified section to the collection, but not to the end.  Instead, it inserts it exactly where it belongs based on the type.  The order cannot be changed by the user. Returns the index at which the section has been added, or -1 if not allowed because it already exists.</summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.SectionCollection.IndexOf(OpenDental.ReportingComplex.Section)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.SectionCollection.IndexOf(OpenDental.ReportingComplex.AreaSectionType)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ReportingComplex.SectionCollection.Contains(OpenDental.ReportingComplex.AreaSectionType)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.FormReportCustom">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormReportCustom.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormReportCustom.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormReportCustom.#ctor">
            <summary></summary>
        </member>
        <member name="P:OpenDental.FormReportCustom.SourceFilePath">
            <summary>Either this or SourceRdlString should be set before opening the form.</summary>
        </member>
        <member name="P:OpenDental.FormReportCustom.SourceRdlString">
            <summary>Either this or SourceFilePath should be set before opening the form.</summary>
        </member>
        <member name="M:OpenDental.FormReportCustom.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="T:OpenDental.FormReportForRdl">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormReportForRdl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.FormReportForRdl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormReportForRdl.#ctor">
            <summary></summary>
        </member>
        <member name="P:OpenDental.FormReportForRdl.SourceFilePath">
            <summary>Either this or SourceRdlString should be set before opening the form.</summary>
        </member>
        <member name="P:OpenDental.FormReportForRdl.SourceRdlString">
            <summary>Either this or SourceFilePath should be set before opening the form.</summary>
        </member>
        <member name="M:OpenDental.FormReportForRdl.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="F:OpenDental.SheetPrintingJob._dataSet">
            <summary>Used when printing statements that use the Statements use Sheets feature.  Pdf printing does not use this variable.</summary>
        </member>
        <member name="F:OpenDental.SheetPrintingJob._idxPreClaimPaidPrinted">
            <summary>Used when printing ERAs to speed up the printing of the EraClaimsPaid grid.</summary>
        </member>
        <member name="F:OpenDental.SheetPrintingJob._listSheets">
            <summary>If not a batch, then there will just be one sheet in the list.</summary>
        </member>
        <member name="F:OpenDental.SheetPrintingJob._pagesPrinted">
            <summary>Pages printed on current sheet.</summary>
        </member>
        <member name="F:OpenDental.SheetPrintingJob._printMargin">
            <summary>Print margin of the default printer. only used in page break calulations, and only top and bottom are used.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.SheetPrintingJob._sheetsPrinted" -->
        <member name="F:OpenDental.SheetPrintingJob._yPosPrint">
            <summary>Used for determining page breaks. When moving to next page, use this Y value to determine the next field to print.</summary>
        </member>
        <member name="F:OpenDental.SheetPrintingJob.IsRemotePrintingJob">
            <summary>Set this to true to bypass UI checks when printing. Also causes some methods to throw exceptions instead of returning booleans.
            Only set to true when used from mobile apps.</summary>
        </member>
        <member name="F:OpenDental.SheetPrintingJob.PrinterNumOverride">
            <summary>Set this to the PK of a printer to override the higherarchy call to printers for print situations.</summary>
        </member>
        <member name="P:OpenDental.SheetPrintingJob.PagesPrinted">
            <summary>The treatment finder needs to be able to clear out the pages printed variable before it prints a batch.</summary>
        </member>
        <member name="M:OpenDental.SheetPrintingJob.Print(OpenDentBusiness.Sheet,System.Int32,System.Boolean,OpenDentBusiness.Statement,OpenDentBusiness.MedLab,System.Boolean,System.Boolean)">
            <summary>If printing a statement, use the polymorphism that takes a DataSet otherwise this method will make another call to the db.</summary>
        </member>
        <member name="M:OpenDental.SheetPrintingJob.Print(OpenDentBusiness.Sheet,System.Data.DataSet,System.Int32,System.Boolean,OpenDentBusiness.Statement,OpenDentBusiness.MedLab,System.Boolean,System.Boolean)">
            <Summary>DataSet should be prefilled with AccountModules.GetAccount() before calling this method if printing a statement.  Returns null if document failed to print.</Summary>
        </member>
        <member name="M:OpenDental.SheetPrintingJob.PrintBatch(System.Collections.Generic.List{OpenDentBusiness.Sheet})">
            <summary>Surround with try/catch.</summary>
        </member>
        <member name="M:OpenDental.SheetPrintingJob.PrintMultiRx(System.Collections.Generic.List{OpenDentBusiness.RxPat})">
            <summary>Performs validation on each Rx before printing.  If one of the given Rx does not pass validation, then the entire batch is aborted, because it is easy for user to fix errors.</summary>
        </member>
        <member name="M:OpenDental.SheetPrintingJob.PrintRx(OpenDentBusiness.Sheet,OpenDentBusiness.RxPat)">
            <summary>Performs validation on the given Rx before printing.  Returns false if validation failed.</summary>
        </member>
        <member name="M:OpenDental.SheetPrintingJob.DrawSheetFirstPage(System.Drawing.Graphics,OpenDentBusiness.Sheet)">
            <summary>Draws the first page of the passed in Sheet for the passed in Graphics.</summary>
        </member>
        <member name="M:OpenDental.SheetPrintingJob.TryPrint(OpenDentBusiness.Sheet,System.Data.DataSet,System.Int32,System.Boolean,OpenDentBusiness.Statement,OpenDentBusiness.MedLab,System.Boolean,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.SheetPrintingJob.GetSheetRxCount(OpenDentBusiness.SheetDef)">
            <summary>Returns a list of the integer values corresponding to the Rx multi defs (1 through 6) found on the MultiRx sheet.
            An rx is considered valid if it has ProvNameFL,PatNameFL,PatBirthdate, and Drug</summary>
        </member>
        <member name="M:OpenDental.SheetPrintingJob.pd_DrawFieldsHelper(OpenDentBusiness.Sheet,System.Drawing.Graphics,PdfSharp.Drawing.XGraphics,OpenDentBusiness.Sheet)">
            <summary>Surround with try/catch.
            Set parentSheet when working with a sheet withing a sheet (ERA).</summary>
        </member>
        <member name="M:OpenDental.SheetPrintingJob.pd_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>This gets called for every page to be printed when sending to a printer.  Will stop printing when e.HasMorePages==false.  See also CreatePdfPage.</summary>
        </member>
        <member name="M:OpenDental.SheetUtilL.FillComboGrowthBehavior(OpenDental.UI.ComboBox,OpenDentBusiness.GrowthBehaviorEnum,System.Boolean,System.Boolean)">
            <summary>Fills the given comboBox with valid GrowthBehaviorEnum options. Centralizes fill of growth behavior into comboboxes in several forms to ensure consistent behavior regarding the available options.</summary>
        </member>
        <member name="M:OpenDental.SheetUtilL.ShowSheet(OpenDentBusiness.Sheet,OpenDentBusiness.Patient,System.Windows.Forms.FormClosingEventHandler)">
            <summary>Displays a Sheet, first checking if the sheet is linked to an existing Document and if so, displaying the file.  Otherwise, opens the Sheet via FormSheetFillEdit.</summary>
        </member>
        <member name="M:OpenDental.SheetUtilL.SetApptProcParamsForSheet(OpenDentBusiness.Sheet,OpenDentBusiness.SheetDef,System.Int64)">
            <summary>Helper method for setting AptNum and ListProcNums parameters. Checks for StaticTextFields: apptDateMonthSpelled, apptProcs, AppointmentProcsNoFee, AppointmentProcsWithFee, apptProvNameFormal. Sets the appt param if the user selected at least an Appt from FormApptsOther.</summary>
        </member>
        <member name="T:OpenDental.UIManagement.Contr96Info">
            <summary>This keeps track of the original control working area bounds, font, anchors, docks, etc, all at 96dpi.</summary>
        </member>
        <member name="F:OpenDental.UIManagement.Contr96Info.Anchor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UIManagement.Contr96Info.Dock">
            <summary>This takes priority over anchor.</summary>
        </member>
        <member name="F:OpenDental.UIManagement.Contr96Info.Name">
            <summary>Helps with troubleshooting. Some controls do not have names, and other names are duplicates.  For example, vertical scrollbars on two different grids.</summary>
        </member>
        <member name="F:OpenDental.UIManagement.Contr96Info.RectangleF96Now">
            <summary>The current calculated bounds of this control at 96dpi pixels. Not yet implemented for the form itself, but we could.</summary>
        </member>
        <member name="F:OpenDental.UIManagement.Contr96Info.RectangleF96Orig">
            <summary>The bounds of this control at 96dpi pixels as it would have been before parent resized or scale applied.  Starts out as the actual numbers from the designer.  Doesn't get changed with any automatic sizing so that it preserves the original spacial relationships.  It does get changed when a programmer intentionally moves a control, but the number stored here is as it would be in the original unsized form.  In a parent-child comparison, this is only useful for the child. For the parent side, use client size.</summary>
        </member>
        <member name="F:OpenDental.UIManagement.Contr96Info.SizeClient96Orig">
            <summary>ClientSize at 96 dpi.  Children are laid out in relationship to this size. We can't store a calc ahead of time for SizeClient96Now because that wouldn't work for forms. We get that size on the fly.</summary>
        </member>
        <member name="M:OpenDental.UIManagement.Contr96Info.#ctor">
            <summary>This keeps track of control or form bounds and font, all at 96dpi.  This allows absolute positioning instead of relative positioning.</summary>
        </member>
        <member name="T:OpenDental.WpfConverter">
            <summary>This converts a form from WF to WPF.</summary>
        </member>
        <member name="F:OpenDental.WpfConverter.TabIndex">
            <summary>Default is int.MaxValue. If user sets this during a conversion, it will convert up to this value. If user leaves it blank, it will be int.MaxValue, indicating that no TabIndexes should be converted.</summary>
        </member>
        <member name="F:OpenDental.WpfConverter._pathFolderOD">
            <summary>Includes trailing slash</summary>
        </member>
        <member name="F:OpenDental.WpfConverter._typeName">
            <summary>Without the Form. Example AccountEdit</summary>
        </member>
        <member name="F:OpenDental.WpfConverter._issues">
            <summary>Various comments will be added to this string. The comments will then end up in the codebehind as things for the engineer to be aware of or clean up.</summary>
        </member>
        <member name="M:OpenDental.WpfConverter.ConvertControl(System.Windows.Forms.Control,System.Int32)">
            <summary>Recursive. Converts self and children.</summary>
        </member>
        <member name="M:OpenDental.WpfConverter.AddCommonEvents(System.Windows.Forms.Control)">
            <summary>So far, just click.</summary>
        </member>
        <member name="T:OpenDental.UI.ControlApptPanel">
            <summary>This class has replaced ApptDrawing, ApptSingleDrawing, ContrApptSheet, ContrApptSingle, and ApptOverlapOrdering.  Encapsulates both Data and Drawing for the main area of Appt module and the operatories header.  The Appt module gathers the data and stores it here.  This class does its drawing based mostly on the information passed in, although it does use the standard cache sometimes. It has defaults so that we will always be able to draw something reasonable, even if we're missing data. This class contains extra data that it doesn't actually need.  Appt module uses this data for other things besides drawing appointments.  This class intentionally supports a single thread only.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel.DateTimePrintStart">
            <summary>Only the hour component gets used.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel.DateTimePrintStop">
            <summary>Only the hour component gets used.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel.PrintingColsPerPage">
            <summary>During printing, the number of columns per page.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel.PrintingPageColumn">
            <summary>During printing, the horizontal page number that we are currently on.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel.PrintingPageRow">
            <summary>During printing, the vertical page number that we are currently on.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._isValidHeaders">
            <summary>This will trigger redrawing of the provbars header and Ops header.  Not as frequent as Main.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._isValidMain">
            <summary>This will trigger redrawing everything in the main area, including appointments. It also triggers redraw of a second bitmap for ProvBars.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.UI.ControlApptPanel._isValidTimebars" -->
        <member name="F:OpenDental.UI.ControlApptPanel._heightLine">
            <summary>Height of single line.  Completely dependent on PrefName.ApptFontSize	or PrefName.ApptPrintFontSize.  We round this number instead of using float font height because horizontal lines need to snap to pixel to avoid looking distractingly different.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._heightMain">
            <summary>Height of the main appt area, including the parts that are not visible due to scrolling.  Always calculated internally and does not depend on size of control. Does not include headers.  ProvBars and timeBars are also this high.  Changed during printing.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._heightMainVisible">
            <summary>Height of the main appt area portion that is visible.  Derived from other dimensions when resizing.  Also same as height of timebar and provbar.  Ignored during printing; just use _heightMain.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._heightProvOpHeaders">
            <summary>Height of prov header and ops header. Starts out at 16, but can be bumped up to 27 if any visible op requires double row title.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._isControlLoaded">
            <summary>Allows us to skip some redrawing until the control is actually loaded.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._isPrinting">
            <summary>This is set during each PrintPage event.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._listApptLayoutInfos">
            <summary>Keeps track of where the appointments are located.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._minPerRow">
            <summary>Typical values would be 10,15,5,or 7.5.  Derived from minPerIncr_10 / RowsPerIncr_2 =5. </summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._listDayOfWeeks">
            <summary>List of all DayOfWeek days that will be displayed when in Week view.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._provBar">
            <summary>Stores the shading info for the provider bars on the left of the appointments module.  First dim is number of visible providers.  Second dim is vertical cells for different times.  Ignores RowsPerIncr. For example 10 MinPerIncr and 2 RowsPerIncr will have 6 cells per hour here.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._radiusCorn">
            <summary>Radius of the corner of appts at 96dpi. Subtle.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._rowsPerHr">
            <summary>Rows per hour.  Derived from 60/MinPerIncr*RowsPerIncr</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._showProvBars">
            <summary>This is used to show the provbars for day view, but not show them for week view. It's handy, but not very rigorous.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._updatingLevel">
            <summary>Starts out zero.  BeginUpdate increments it up, and EndUpdate increments it down. RedrawAsNeeded is blocked unless zero.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._widthMain">
            <summary>Width of main appt area, not including timebars, provbars, headers, or any other peripheral objects.  Derived from other dimensions when resizing.  Depends on number of providers showing in provbars.  Includes area hidden by horizontal scrolling. Partly determined by control size.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._widthMainVisible">
            <summary>Width of the main appt area portion that is visible.  Derived from other dimensions when resizing.  Same as _widthMain when there is no horizontal scrolling.  Ignored during printing; just use _widthMain.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._widthNarrowedOnRight">
            <summary>Appointments are a little narrower on the right so that we can see blockouts underneath. Not used in week view.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._widthOpCol">
            <summary>Width of each operatory column.  Math is based solely on _widthMain and number of ops. Not used for week view.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._widthProv">
            <summary>Width of each provider bar at the left of the screen, not the provbar on individual appts.  Currently constant at 8f.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._widthTime">
            <summary>Width of timebars on the left and right of the main area.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._widthWeekAppt">
            <summary>Only used with weekview. The width of individual appointments within each day.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._widthWeekDay">
            <summary>The width of an entire day in week view.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._bitmapBubble">
            <summary>This bitmap for the info bubble includes text, patient pic, and outline.  There is only one.  It can be quickly placed on top of the background at various locations.  This is not combined with any background bitmap, but is instead painted separately in OnPaint.  It's not filled from RedrawAsNeeded() because its frequency is different, so it's not coupled.  It also has no _isValid flag.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._bitmapMain">
            <summary>The main area background with appointments.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._bitmapOpsHeader">
            <summary>The header that shows operatory colors and info. Only redrawn if _isValidHeaders is false.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._bitmapProvBars">
            <summary>Bitmap for ProvBars at the left, plus the Appt info squares on it.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._bitmapProvBarsHeader">
            <summary>The prov bars header that shows provider colors and info. Only redrawn if _isValidHeaders is false.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._bitmapTempApptSingle">
            <summary>The bitmap that shows on TempApptSingle.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._bitmapTimebarLeft">
            <summary>The bitmap for the left timebar. Only redrawn if _isValidProvTimebars is false.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._bitmapTimebarRight">
            <summary>The bitmap for the right timebar. Only redrawn if _isValidProvTimebars is false.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._penTimeDiv">
            <summary>On the left bar of each appt, the horizontal lines for time divisions</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._penTimeLine">
            <summary>Width gets set below, and color gets reset.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._font">
            <summary>This is the main font.  Used for appts, not timebars. Will change, based on user setting.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._fontMinutes">
            <summary>This font is used for minutes in the timebars. Will change, based on user setting.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._fontMinutesBold">
            <summary>This font is used for bold minutes in the timebars. Will change, based on user setting.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._fontOpsHeaders">
            <summary>This font is used in Ops headers, etc.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._fontCourier">
            <summary>This font is used for ProvBarText.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._sizeFont96">
            <summary>Default 8. Set from PrefName.ApptFontSize.  Font sizes are additionally scaled by zoom.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._boolApptMoved">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel.contrTempAppt">
            <summary>This is how we drag appts around in this control as well as over to pinboard.  In the beginning, it gets added to parent ContrAppt, where it stays and gets reused repeatedly.  We control it from here to hide the complexity and also to handle the drawing.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._dataRowTempAppt">
            <summary>As we are dragging an appointment, this is the data used to draw it.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._dayClicked">
            <summary>Day of the week clicked when in week view. 0-based index based on days currently showing. Set in mousedown, and used in double click.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._heightResizingOriginal">
            <summary>When resizing, we need to know the original height.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._isLeftMouseDown">
            <summary>Keeps track of status of left mouse button.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._isResizingAppt">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._pointApptOrigin">
            <summary>Appt origin.  If moving an appointment, this is the location where the appointment was at the beginning of the drag, in coordinates of the parent control.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._pointMouseOrigin">
            <summary>The point where the mouse was originally down.  In coordinates of this control.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._timeClicked">
            <summary>The exact time that user clicked on, not rounded in any way.  Gets set in mousedown, then used in double click as well as external.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._bubbleApptIdx">
            <summary>This has to be tracked globally because mouse might move directly from one appt to another without any break.  This is the only way to know if we are still over the same appt.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._dateTimeBubble">
            <summary>There's a delay for hover effect of 0.28 sec. This is the start time for comparison.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel.labelHeaderTip">
            <summary>There is a simulated 'tooltip' for the prov and op headers. This is the label on that tooltip.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._opNumHeaderTipLast">
            <summary>For the op header tip, this tracks whether we are on the same appt.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel.panelHeaderTip">
            <summary>This panel is a simulated 'tooltip' for the prov and op headers.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._pointBubbleTimer">
            <summary>The position of the pointer the last time the bubble was drawn or the timer was started.  Used to show after timer is up.  In coordinates of this control.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._rectangleBubble">
            <summary>This rectangle is in control coordinates and can paint over the top of any other bitmaps all the way up to the edge of this control.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._dictOpNumToColumnNum">
            <summary>Prevents looping through VisOps in order to find the 0-based column index for a given OpNum.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel._dictProvNumToColumnNum">
            <summary>Prevents looping through VisProvs in order to find the 0-based column index for a given ProvNum.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.OnApptDoubleClicked(OpenDentBusiness.Appointment)">
            <summary>Passes the request up to the parent form, which shows the edit window.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.OnApptMainAreaDoubleClicked(System.DateTime,System.Int64,System.Drawing.Point)">
            <summary>Passes the request up to the parent form, which handles the rest, such as adding patient and showing appt edit window.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.OnApptMainAreaRightClicked(System.DateTime,System.Int64,System.Drawing.Point)">
            <summary>Parent window will show context menu.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.OnApptMoved(OpenDentBusiness.Appointment,OpenDentBusiness.Appointment)">
            <summary>Passes the request up to the parent form, which does the db interaction and a refresh.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.OnApptMovedToPinboard(System.Data.DataRow)">
            <summary>Passes the datarow up to the parent form, which then passes it to the pinboard.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.OnApptNullFound">
            <summary>If we find an appointment that is null, then raise this event so that the parent form will show message and refresh.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.OnApptResized(OpenDentBusiness.Appointment)">
            <summary>Parent window will refresh.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.OnApptRightClicked(System.Drawing.Point)">
            <summary>Parent window will show context menu.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.OnDateChanged">
            <summary>Parent window will handle a refresh.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.OnSelectedApptChanged(System.Int64,System.Int64,System.Int64)">
            <summary>Occurs when user clicks to change selected appt.  Changing SelectedAptNum externally does not cause this event to fire. Any of the 3 parameters can be -1 to indicate none. Also fires when clicking on the appt that's already selected.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.ListApptViewItems">
            <summary>A list of the ApptViewItems for the current view.  Ignore ApptViewItemL.ForCurView.  Only use this one.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.ListApptViewItemRowElements">
            <summary>Subset of ListApptViewItems. Just items for rowElements, including apptfielddefs. If no view is selected, then the elements are filled with default info.  Ignore ApptViewItemL.ApptRows.  Only use this one.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.ListOpsVisible">
            <summary>Subset of all ops.  Can't include a hidden op in this list.  If user has set View.OnlyScheduledProvs, and not isWeekly, then the only VisOps will be for providers that have schedules for the day and ops with no provs assigned.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.ListProvsVisible">
            <summary>Was VisProvs.  Visible provider bars in appt module.  Subset of all provs.  Can't include a hidden prov in this list.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.ListSchedules">
            <summary>Was previously called SchedListPeriod.  It contains the background schedule for the entire period.  Includes all types.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.TableAppointments">
            <summary>The appointment table. Refreshed in RefreshAppointmentsIfNeeded.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.TableApptFields">
            <summary>The appointment fields table. Refreshed in RefreshAppointmentsIfNeeded.  Only includes entries for appointments that were present in TableAppointments.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.TableEmpSched">
            <summary>The employee schedule table. Refreshed in RefreshSchedulesIfNeeded.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.TablePatFields">
            <summary>The patient fields table. Refreshed in RefreshAppointmentsIfNeeded.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.TableProvSched">
            <summary>The provider schedule table. Refreshed in RefreshSchedulesIfNeeded.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.TableSchedule">
            <summary>The schedule table. Refreshed in RefreshSchedulesIfNeeded.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.ListDayOfWeeks">
            <summary>List of all DayOfWeek days that will be displayed when in Week view.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.TableWaitingRoom">
            <summary>The waiting room table. Refreshed in RefreshWaitingRoomTable.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.ApptViewCur">
            <summary>Frequently null to represent no view selected.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.DateEnd">
            <summary>Computed from DateSelected and IsWeeklyView. If weekly view, this is the second date.  If daily view, this is the same as dateSelected.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.DateSelected">
            <summary>The date currently selected in the appointment module.  If switching to week view, this date does not change.  That way, it is remembered when switching back to day view.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.DateStart">
            <summary>Computed from DateSelected and IsWeeklyView. If weekly view, this is the first date (old WeekStartDate).  If daily view, this is the same as dateSelected.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.IsWeeklyView">
            <summary>WeekStartDate and WeekEndDate were also in ContrAppt, but aren't needed.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.MinPerIncr">
            <summary>Pulled from Prefs AppointmentTimeIncrement.  Either 5, 10, or 15. An increment can be one or more rows.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.RowsPerIncr">
            <summary>Based on the view.  If no view, then it is set to 1. Different computers can be showing different views.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.SelectedAptNum">
            <summary>-1 means none.  Selected appt will have thick outline.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.SizeFont">
            <summary>Set externally from PrefName.ApptFontSize</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptPanel.WidthProvOnAppt">
            <summary>Width of the provider bar on the left side of each appt.  Gets set from PrefName.ApptProvbarWidth.  Zoom is applied immediately.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.TempApptSingle_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawPrintingHeaderFooter(System.Drawing.Graphics,System.Int32,System.Single,System.Single)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.GetIndexOp(System.Int64)">
            <summary>Returns the index of the opNum within VisOps.  Returns -1 if not in VisOps.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.GetIndexProv(System.Int64)">
            <summary>Returns the index of the provNum within VisProvs, or -1.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.GetPatternShowing(System.String)">
            <summary>This converts the dbPattern in 5 minute interval into the pattern that will be viewed based on RowsPerIncr and AppointmentTimeIncrement.  So it will always depend on the current view.Therefore, it should only be used for visual display purposes rather than within the FormAptEdit. If height of appointment allows a half increment, then this includes an row for that half increment.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.GetProduction(System.Collections.Generic.List{System.Data.DataRow},System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64},System.DateTime,System.DateTime)">
            <summary>Returns a the production amount for the appointments as a string. Also includes net production. Uses either the listOpNums or listProvNums to calculate the net production.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.MouseUpForced">
            <summary>Used by parent form when a dialog needs to be displayed, but mouse might be down.  This forces a mouse up, and cleans up any mess so that dlg can show.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.RedrawAsNeeded">
            <summary>Call this whenever control should be redrawn because new data has been fetched or red time line needs to move.  Set an Invalid Flag first.  The Bubble is handled completely separately from this.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.SetColors(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>Called on startup and if color prefs change.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.SetSize(System.String)">
            <summary>Used for Planned apt and pinboard instead of SetLocation so that the location won't be altered.  Send in the actual timepattern in 5 min increments, not the PatternShowing.  Sets size in pixels.  If sizing an actual control, follow this by rounding.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.PlaceAppointments(System.Data.DataTable,System.Collections.Generic.List{OpenDentBusiness.Operatory},System.Single,System.Boolean,System.Single,System.Int32,System.Single,System.Int32,System.Single,System.DateTime,System.DateTime,System.Collections.Generic.List{System.DayOfWeek})">
            <summary>Loops through all the appointments and decides where to place them.  Uses rectangles to define the positions.  If there is any overlap, then it makes appointments narrower so that they will fit side by side.  It does this by revising previous rectangles on the fly rather than any advance planning.  We do not store this layout in the db in any way.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.ProcessOverlaps(System.Collections.Generic.List{OpenDental.UI.ApptLayoutInfo},System.Collections.Generic.List{OpenDental.UI.ApptLayoutInfo},System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Single,System.Int32)">
            <summary>A recursive function for rare secondary and tertiary overlaps created by adding a single appointment that shifted other tall appts.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.RoundTimeDown(System.TimeSpan,System.Double)">
            <summary>Used when clicking. Rounds time down to the nearest valid increment.  Static for unit test.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.RoundTimeToNearestIncrement(System.TimeSpan,System.Double)">
            <summary>Used when dropping an appointment to a new location or resizing. Rounds time up or down to the nearest valid increment.  Static for unit test.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.BeginUpdate">
            <summary>Call this before making complex changes to properties.  Always pair with EndUpdate.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.EndUpdate">
            <summary>Call after BeginUpdate, always paired, and when done making complex changes.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.RoundToNearestDateAndOp(System.Int32,System.DateTime@,System.Int32@,System.Single)">
            <summary>Used when dropping an appointment to a new location.  Converts x-coordinate to date and opIdx.  Used in both daily and weekly views.  It is very different from XPosToOpIdx, which doesn't round the same way. Pass in X in coords of this entire control.  Date will always be reasonable, but opIdx might be -1 if unable to resolve.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.YPosToTime(System.Int32)">
            <summary>Pass in Y as coordinate of this entire control.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.IsValidCareCreditStatus(System.String)">
            <summary>Returns true if the status passed in is a valid CareCredit approval status that the appointment has an icon for.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DesaturateColor(System.Drawing.Color,System.Double)">
            <summary>Returns a Color that is the passed in saturation level.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DayOfWeekIdxToInt(System.Int32)">
            <summary>Returns the number of days from the start of the week (0-6). If the ApptWeekViewStartDay pref is set to Monday it returns 0-6 Mon-Sun. If the ApptWeekViewStartDay pref is set to Sunday it returns 0-6 Sun-Sat </summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.GetAllDayOfWeeks">
            <summary>Gets a list of all 7 DayOfWeek days that will be displayed when in Week view. List is ordered by PrefName.ApptWeekViewStartDay, either Sun-Sat or Mon-Sun.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.SetBitmapMain(System.Drawing.Graphics)">
            <summary>Triggered much less frequently than OnPaint.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.SetBitmapProvBarsHeaders(System.Drawing.Graphics)">
            <summary>Does nothing unless _bitmapProvBarsHeader or _bitmapOpsHeader needs a redraw.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.SetBitmapTempAppt">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.SetBitmapTimebarL(System.Drawing.Graphics)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.SetBitmapTimebarR(System.Drawing.Graphics)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawBackground(System.Drawing.Graphics)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawMainBackground(System.Drawing.Graphics)">
            <summary>Including the practice schedule, prov schedules in main area, and blockouts.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawStringWithSpacing(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Single)">
            <summary>There's no native way to change line spacing for DrawString, so this draws a block of text with any desired line spacing.  We don't currently bother to use this with appointment notes, so they can harmlessly look a little scrunched.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.FillWithDiagonalLines(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Pen,System.Single)">
            <summary>Fills a rectangle with diagonal lines.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.GetIndexOp(System.Int64,System.Collections.Generic.List{OpenDentBusiness.Operatory})">
            <summary>Returns the index of the opNum within VisOps.  Returns -1 if not in VisOps.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawGridLinesProv(System.Drawing.Graphics)">
            <summary>Draws gridlines in the prov bars area.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawProvBarsAppts(System.Drawing.Graphics)">
            <summary>This draws the squares for actual appointments onto the prov bars area.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawProvScheds(System.Drawing.Graphics)">
            <summary>This is just for schedules in the prov bars area.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawMinutes(System.Drawing.Graphics,System.Boolean)">
            <summary>Draws either left or right timebar minutes</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawTimebar(System.Drawing.Graphics,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawTimebarLines(System.Drawing.Graphics,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawAppts(System.Drawing.Graphics)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawOneAppt(System.Drawing.Graphics,System.Data.DataRow,System.String,System.Single,System.Single,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawElement(System.Drawing.Graphics,System.Int32,System.Drawing.PointF,OpenDentBusiness.ApptViewStackBehavior,OpenDentBusiness.ApptViewAlignment,System.Data.DataRow,System.Collections.Generic.List{OpenDentBusiness.ApptViewItem},System.Single,System.Single)">
            <summary>Returns the point where the next element should draw.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawElementGetIcon(System.Drawing.Size,System.Data.DataRow,System.String)">
            <summary>This is used to draw the ConfirmedColor icon or the CareCreditApprovalStatus icons</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DisposeObjects(System.Object[])">
            <summary>Disposes objects with typeof Brush, Pen, StringFormat, or Bitmap.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawOutlineSelected(System.Drawing.Graphics)">
            <summary>Only one appt can be selected.  This draws the single thick rectangle indicating that selection.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawRedTimeLine(System.Drawing.Graphics)">
            <summary>This was old way of drawing time line across all the bitmaps.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawRedTimeLineMain(System.Drawing.Graphics)">
            <summary>Draws within main appt area only</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawRedTimeLineProv(System.Drawing.Graphics)">
            <summary>Draws within left provbar area only</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.DrawRedTimeLineTimeBar(System.Drawing.Graphics)">
            <summary>Draws for either of the time bars</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.BubbleDraw(System.Drawing.Point,System.Int32)">
            <summary>Before calling this, do a hit test for appts.  Fills the bubble with data and then positions it.  In coordinates of this ControlApptsPanel (mouse).</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.Round(System.Single)">
            <summary>We do our computations in float, for accuracy.  But then, we sometimes need to convert to the nearest int. This mostly comes up when sizing and placing controls.  Drawing can continue to use floats.  This method makes the code look a little cleaner.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.XPosToOpIdx(System.Int32)">
            <summary>Pass in the xPos as coordinate of this entire control, not of the main bitmap.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.XPosToDay(System.Int32)">
            <summary>If not weekview, then it always returns 0.  If weekview, then it gives the dayofweek as int. Always based on current view, so 0 will be first day showing.  Pass in the xPos as coordinate of this entire control, not of the main bitmap.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.ComputeColWidth">
            <summary>Called once from RedrawAsNeeded.  Super fast.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.ComputeHeightProvOpHeader">
            <summary>Computes _heightProvOpHeaders.  </summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.ComputeHeight">
            <summary>Computes _heightMain and sets scrollbars</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.ProvBarShading(System.Data.DataRow)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.TranslateContrToMain(System.Drawing.Point)">
            <summary>Translates a given point from Control frame of reference to the Main bitmap frame of reference.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.TranslateContrToMain(System.Drawing.PointF)">
            <summary>Translates a given point from Control frame of reference to the Main bitmap frame of reference.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.TranslateMainToContr(System.Drawing.PointF)">
            <summary>Translates a given point from Main bitmap frame of reference to the Control frame of reference.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.TranslateXContrToMain(System.Single)">
            <summary>Translates a given X val from Control frame of reference to Main bitmap frame of reference.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.TranslateXMainToContr(System.Single)">
            <summary>Translates a given X val from Control frame of reference to Main bitmap frame of reference.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.TranslateYContrToMain(System.Single)">
            <summary>Translates a given Y val from Control frame of reference to  Main bitmap frame of reference.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.TranslateYMainToContr(System.Single)">
            <summary>Translates a given Y val from Main bitmap frame of reference to the Control frame of reference.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.HitTestAppt(System.Drawing.Point)">
            <summary>Returns the index of the appointment within TableAppointments at these coordinates, or -1 if none.  Pass in the point in coordinates of this control/mouse.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.HitTestApptBottom(System.Drawing.Point,System.Int32)">
            <summary>If the given point is in the bottom 8 (or 6 or 4) pixels of an appointment, then this returns true.  Always pass in appointment idx from previous HitTestAppt.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.GetOperatoryProduction(System.Int64)">
            <summary>Returns the production for the operatory appointments as a string.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.HeaderTipDraw(System.Drawing.Point)">
            <summary>Does a hit test to determine if over operatory or prov header.  If so, creates appropriate "tooltip" panel and positions it.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.HideDraggableTempApptSingle">
            <summary>Hides it, turns off _isMouseDown and boolApptMoved.</summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.ShowDraggableApptSingle(System.Int32)">
            <summary>Creates bitmap for contr.  Does not make the contr visible yet.  Also sets mouseIsDown=true.  Pass in the index of the appointment within TableAppointments.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ControlApptPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.ApptLayoutInfo">
            <summary>Some extra info about each appointment to help with layout, including idxInTableAppointments and RectangleBounds. The two overlap fields allow quick decisions and simple drawing calculations.</summary>
        </member>
        <member name="F:OpenDental.UI.ApptLayoutInfo.idxInTableAppointments">
            <summary>This is the index of the appointment within TableAppointments. We won't duplicate any of that info here, but we can quickly cross reference it.</summary>
        </member>
        <member name="F:OpenDental.UI.ApptLayoutInfo.DayOfWeek">
            <summary>0 can be Sunday or Monday.</summary>
        </member>
        <member name="F:OpenDental.UI.ApptLayoutInfo.IdxOp">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ApptLayoutInfo.OverlapSections">
            <summary>For example, if it's taking up 1/3 of the width of an operatory, this would be 3.</summary>
        </member>
        <member name="F:OpenDental.UI.ApptLayoutInfo.OverlapPosition">
            <summary>0-based. For example, if it's 1/3 wide, and in the middle, this would be 1 (the second spot).</summary>
        </member>
        <member name="F:OpenDental.UI.ApptLayoutInfo.RectangleBounds">
            <summary>This allows efficient hit testing, especially with appointments that are double booked. In main bitmap coordinates.</summary>
        </member>
        <member name="T:OpenDental.UI.ControlApptProvSlider">
            <summary>Optimized for Width 45. This is the vertical timebar slider at the left of Appt Edit.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptProvSlider.FormApptEdit_CheckTimeLocked">
            <summary>Reference to FormApptEdit's checkTimeLocked checkbox. This slider will check this checkbox when moved.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptProvSlider._indexMouseDownProv">
            <summary>When dragging in the prov area, this keeps track of which cell we are in so that we can take action when we change cells.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptProvSlider._isCursorFlashOn">
            <summary>Controlled by a timer to flash the cursor on and off when selectedIndex > -1</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptProvSlider._isDraggingSlider">
            <summary>True if mouse down on the slider and dragging.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptProvSlider._marginLR">
            <summary>The main rect area is slightly inset on the L and R.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptProvSlider._patternSecondary">
            <summary>This is the secondary pattern for a second provider on appointments. The length of this will most likely match Pattern, but it isn't guaranteed.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptProvSlider._pointMouseDown">
            <summary>The point at which the mouse was originally down during a drag.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptProvSlider._rectangleFSlider">
            <summary>The rectangle representing the slider. Gets set during paint.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptProvSlider._widthLeft">
            <summary>Width of the left prov area (and center prov area).</summary>
        </member>
        <member name="F:OpenDental.UI.ControlApptProvSlider._colorProv">
            <summary>Property</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptProvSlider.SelectedIndex">
            <summary>The cell that has a flashing cursor in it for typing. Or -1.</summary>
        </member>
        <member name="P:OpenDental.UI.ControlApptProvSlider.SelectedLength">
            <summary>The position of the slider bar in time increments. Derived from pattern. Setting this will directly alter Pattern itself.  It's not needed externally, although there are similar functions elsewhere.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.UI.ControlApptProvSlider.ProcessDialogChar(System.Char)" -->
        <member name="F:OpenDental.UI.ControlApptProvSlider.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ControlApptProvSlider.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ControlApptProvSlider.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.ToggleDayWeek">
            <summary>A toggle for Day/Week in the Appt module. Maybe add Month later.</summary>
        </member>
        <member name="F:OpenDental.UI.ToggleDayWeek._selectedIndex">
            <summary></summary>
        </member>
        <member name="E:OpenDental.UI.ToggleDayWeek.DayClick">
            <summary></summary>
        </member>
        <member name="E:OpenDental.UI.ToggleDayWeek.WeekClick">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ToggleDayWeek.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ToggleDayWeek.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ToggleDayWeek.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UI.PinBoard.contrTempPinAppt">
            <summary>This user control is how we drag appts over to the main appt area.  In the beginning, it gets added to parent, where it stays and gets reused repeatedly.  We control it from here to hide the complexity.</summary>
        </member>
        <member name="F:OpenDental.UI.PinBoard._pointApptOrigin">
            <summary>Initial position of the appointment being dragged, in coordinates of ContrAppt.</summary>
        </member>
        <member name="F:OpenDental.UI.PinBoard._pointMouseOrigin">
            <summary>Position of mouse down, in coordinates of this pinboard control.</summary>
        </member>
        <member name="M:OpenDental.UI.PinBoard.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.PinBoard.TempPinAppt_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.PinBoard.SelectedIndex">
            <Summary>Gets or sets the selected index, which will have dark outline.  Parent should unselect other normal appts, so that only a pinboard appt OR a normal appt is selected, not both.</Summary>
        </member>
        <member name="M:OpenDental.UI.PinBoard.AddAppointment(System.Drawing.Bitmap,System.Int64,System.Data.DataRow)">
            <Summary>If adding a family, this will be called repeatedly.</Summary>
        </member>
        <member name="M:OpenDental.UI.PinBoard.ClearAt(System.Int32)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.PinBoard.MouseUpForced">
            <summary>Used by parent form when a dialog needs to be displayed, but mouse might be down.  This forces a mouse up, and cleans up any mess so that dlg can show.</summary>
        </member>
        <member name="M:OpenDental.UI.PinBoard.HideDraggableTempApptSingle">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.PinBoard.SetBitmapTempPinAppt(System.Drawing.Bitmap)">
            <summary>During mouse down, this is used to send a different size bitmap for dragging around.</summary>
        </member>
        <member name="F:OpenDental.UI.PinBoard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.PinBoard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.PinBoardItem">
            <summary>The individual items/appointments on the pinboard.</summary>
        </member>
        <member name="F:OpenDental.UI.PinBoardItem.BitmapAppt">
            <summary>Sized to be 2 pixels narrower than the pinboard width.</summary>
        </member>
        <member name="F:OpenDental.UI.PinBoardItem.TableApptFields">
            <summary>The ApptFields for this one appointment.</summary>
        </member>
        <member name="F:OpenDental.UI.PinBoardItem.TablePatFields">
            <summary>The PatFields for this one patient.</summary>
        </member>
        <member name="T:OpenDental.UI.BufferedTreeView">
            <summary>Primarily used for the Job Manager to reduce flicker of the TreeView on refresh. </summary>
        </member>
        <member name="F:OpenDental.UI.BufferedTreeView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.BufferedTreeView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.BufferedTreeView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.Button">
            <summary>Custom button used extensively throughout OD. Typically shows an image and text.  Image is usually 22x22.  Height is usually 24.</summary>
        </member>
        <member name="F:OpenDental.UI.Button.LayoutManager">
            <summary>Just holds the scaling factor.</summary>
        </member>
        <member name="F:OpenDental.UI.Button._colorBorderHover">
            <summary>This brighter border color is used for hover and pressed.</summary>
        </member>
        <member name="F:OpenDental.UI.Button._colorMainTop">
            <summary>The top gradient color.</summary>
        </member>
        <member name="F:OpenDental.UI.Button._colorMainBottom">
            <summary>The bottom gradient color.</summary>
        </member>
        <member name="F:OpenDental.UI.Button._colorPressedTop">
            <summary>The top gradient color when pressed.</summary>
        </member>
        <member name="F:OpenDental.UI.Button._colorPressedBottom">
            <summary>The bottom gradient color when pressed.</summary>
        </member>
        <member name="F:OpenDental.UI.Button._colorTextGlow">
            <summary>The white glow that shows .5 pixels to the lower right behind the text.</summary>
        </member>
        <member name="F:OpenDental.UI.Button._colorTextDisabled">
            <summary>The gray text when this button is disabled.</summary>
        </member>
        <member name="F:OpenDental.UI.Button._brushMainNonStatic">
            <summary>This brush is only used when button is taller than 24.  Otherwise, it uses the static brush.  Disposed.</summary>
        </member>
        <member name="F:OpenDental.UI.Button.TextOld">
            <summary>When changing the text, this keeps track of the previous value. This lets us avoid overhead for initializing.</summary>
        </member>
        <member name="M:OpenDental.UI.Button.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UI.Button.ODButtonState">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.Button.ODButtonState.Normal">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.Button.ODButtonState.Hover">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.Button.ODButtonState.Pressed">
            <summary>Mouse down. Not a permanent toggle state.</summary>
        </member>
        <member name="P:OpenDental.UI.Button.AdjustImageLocation">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.Button.Icon">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Button.OnClick(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Button.OnMouseEnter(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Button.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Button.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Button.OnMouseLeave(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Button.OnEnabledChanged(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Button.OnTextChanged(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Button.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Button.DrawTextAndImage(System.Drawing.Graphics)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Button.DrawSimpleButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Drawing.Brush)">
            <summary>Used by ODButtonPanel.  Let Button.cs do this drawing because this is where the colors are stored.  No image. Text in middle center.  No hover effect.</summary>
        </member>
        <member name="F:OpenDental.UI.Button.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.Button.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.Button.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.CheckBox">
            <summary>Designed to replace the stock MS checkBox throughout OD.</summary>
        </member>
        <member name="E:OpenDental.UI.CheckBox.CheckedChanged">
            <summary>Try not to use this.  Use Click instead so that the event won't fire when the checkBox is changed programmatically.</summary>
        </member>
        <member name="E:OpenDental.UI.CheckBox.CheckStateChanged">
            <summary>For 3-state events.</summary>
        </member>
        <member name="P:OpenDental.UI.CheckBox.AutoCheck">
            <summary>Gets or set a value indicating whether the Checked or CheckState values and the CheckBox's appearance are automatically changed when the CheckBox is clicked.</summary>
        </member>
        <member name="P:OpenDental.UI.CheckBox.CheckAlign">
            <summary>Unlike MS, text alignment also automatically follows this property. Default is MiddleLeft. Only support MiddleLeft, MiddleRight, and TopLeft.</summary>
        </member>
        <member name="P:OpenDental.UI.CheckBox.Checked">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.CheckBox.CheckState">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.CheckBox.ThreeState">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.CheckBox.IsOnActualText(System.Drawing.Point)">
            <summary>Returns false if the location is on the box or empty space.</summary>
        </member>
        <member name="F:OpenDental.UI.CheckBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.CheckBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.CheckBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.ComboBoxClinicPicker">
            <summary>A Clinic comboBox that can scale up to thousands of Clinics.  Also handles multi select.  Fills itself with a filtered list of clinics that includes only clinics that the current user has permission to access.  Automatically handles Visibility, based on PrefC.HasClinicsEnabled.  Notice that you have no access to the selected indices, which are instead handled with ClinicNums.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker.CLINIC_NUM_ALL">
            <summary>Represents all clinics.  This is done with a dummy clinic added to the top of the list with a ClinicNum of -2.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker.CLINIC_NUM_UNASSIGNED">
            <summary>HQ/unassigned/default/none clinic with ClinicNum=0. Sometimes this dummy is filled with info from pref table instead of clinic table.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._brushBack">
            <summary>Disposed</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._brushDisabledBack">
            <summary>Disposed</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._brushDisabledText">
            <summary>Disposed</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._brushHover">
            <summary>Disposed</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._includeAll">
            <summary>Property backer.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._includeUnassigned">
            <summary>Property backer.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._indexSelected">
            <summary>Not exposed as public property. Must stay synched with _listIndicesSelected.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._forceShowUnassigned">
            <summary>Property backer.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._formComboPicker">
            <summary>This is the part that comes up as a "list" to pick from.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._hqDescription">
            <summary>Property backer.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._isMouseOver">
            <summary>True if the mouse is over the "combobox", to turn it a blue color.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker.LayoutManager">
            <summary>Just holds the scaling factor.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._listClinics">
            <summary>Not exposed as public property.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._listIndicesSelected">
            <summary>Not exposed as public property. Must stay synched with _indexSelected.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._penArrow">
            <summary>Disposed</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._penHoverOutline">
            <summary>Disposed</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._penOutline">
            <summary>Disposed</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._clinicSelectedNoPermission">
            <summary>If the SelectedClinicNum gets set to a clinic that's not in the list because the user has no permission, then this is where that info is stored.  If this is null, then it instead behaves normally.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._isMultiSelect">
            <summary>Property backer.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._showLabel">
            <summary>Property backer.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._userod">
            <summary>As this combo is initialized, the user defaults to CurUser. Can be changed.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker._widthLabelArea">
            <summary>37. If this gets changed, then all places where this combo is used must be slightly adjusted.  This is a design weakness of this control, so just don't change it.  Wide enough to handle both "Clinic" and "Clinics".</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.OnSelectionChangeCommitted(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.OnSelectedIndexChanged(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxClinicPicker.HqDescription">
            <summary>The display value for ClinicNum 0. Default is 'Unassigned', but might want 'Default', 'HQ', 'None', 'Practice', etc.  Do not specify 'All' here, because that is not accurate.  Only used when 'DoIncludeUnassigned'</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxClinicPicker.IncludeUnassigned">
            <summary>Set to true to include 'Unassigned' as a selection option. The word 'Unassigned' can be changed with the HqDescription property.  This is ClinicNum=0.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxClinicPicker.ShowLabel">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxClinicPicker.ClinicNumSelected">
            <summary>Getter returns -1 if no clinic is selected. The setter is special.  If you set it to a clinicNum that this user does not have permission for, then the combobox displays that and becomes read-only to prevent changing it. It will also remember such a clinicNum and return it back in subsequent get.  0 (Unassigned) can also be set from here if it's present. This is common if pulling zero from the database.  But if you need to manually set to 0 in other situations, you should use the property IsUnassignedSelected.  You are not allowed to manually set to -2 (All) or -1 (none) from here.  Instead, set IsAllSelected=true or IsNothingSelected=true.  On initial load, this control will automatically select the current clinic, which you can of course change by setting a different clinic.  For example, you must manually set All.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxClinicPicker.IsAllSelected">
            <summary>True if the special dummy 'All' option is selected (regardless of any other additional selections). All needs to have been added, first.  The intent of All can vary, and the processing logic would be in the calling form.  On start, setting All would be done manually, not automatically.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxClinicPicker.IsNothingSelected">
            <summary>True if SelectedIndex==-1.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxClinicPicker.IsTestModeNoDb">
            <summary>True if we are testing and db connection makes no sense.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxClinicPicker.IsUnassignedSelected">
            <summary>True if the 'unassigned'/default/hq/none/all clinic with ClinicNum=0 is selected.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxClinicPicker.ListClinicNumsSelected">
            <summary>Also can used when IsMultiSelect=false.  In the case where "All" is selected (regardless of any other additional selection), this will return a list of all clinicNums in the list.  This is not technically the same as All clinics in the database, because some clinics might be hidden from this user.  If unassigned(=0) is in the list when All is selected, then it will be included here.  If the calling form wishes to instead test All, and use other logic, it should test IsAllSelected. When setting, this isn't as rigorous as setting SelectedClinicNum.  This property will simply skip setting any clinics that aren't present because of no permission, but it will not disable the control to prevent changes. If !PrefC.HasClinicsEnabled, then this will return an empty list.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxClinicPicker.ListClinics">
            <summary>Sometimes, you need a list of clinics to pass to a clinic picker window. This returns a copy, not a reference to the internal list.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.GetSelectedAbbr">
            <summary>Returns empty string if no clinic is selected.  Can return "All" or the "Unassigned" override abbreviation.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.GetSelectedClinic">
            <summary>Returns null if no clinic selected.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.GetStringSelectedClinics">
            <summary>Gets a string of all selected clinic Abbr's, separated by commas.  If "All" is selected, then it simply returns "All Clinics", which might not be techinically true.  If ListSelectedClinicNums was used instead of testing IsAllSelected, then it could only include clinics that user has permission for.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.SetUser(OpenDentBusiness.Userod)">
            <summary>Lets you change which user is used to load the allowed clinics.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.UserHasPermission">
            <summary>If the calling code set this combo to a clinic that the user does not have permission to, then the user will already be blocked from changing the clinic by clicking on this combo.  But if you want them to also be blocked from doing other things, use this method to see if the combo is currently giving them permission to change clinics, and then take action accordingly.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.WndProc(System.Windows.Forms.Message@)">
            <summary>We have to intercept the mouse scroll event, because there are no actual controls on the screen so there is no way to actually scroll as there is no content</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.FillClinics">
            <summary>This runs on load and with certain property changes that would only change at initialization.  Performance hit should be very small. This also does an Invalidate so that the "combobox" will update.  This also automatically selects a reasonable initial clinic, usually the current clinic. </summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.GetDisplayText(System.Int32)">
            <summary>If multiple items are selected, we string them together with commas.  But if the string is wider than widthMax, we instead show "Multiple".</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.SetSearchedIndex(System.Int32,System.Char)">
            <summary>Used to search through a combo box to find a matching index and set it. Returns true if it found a match, otherwise false.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.SetSelectedClinicNum(System.Int64)">
            <summary>This is used separately from the SelectedClinicNum setter in order to internally set to -2 without an exception.  But this doesn't work for -1.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBoxClinicPicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ComboBoxClinicPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.FormComboPicker">
            <summary>For some internal combo boxes, this is the part that comes up as the "list" to pick from.  It's a Form in order to allow more powerful and longer lists that are larger than the containing form.  It can handle thousands of entries instead of just 100.  Jordan is the only one allowed to edit this file.</summary>
        </member>
        <member name="F:OpenDental.UI.FormComboPicker.LayoutManager">
            <summary>Just used to draw the drop down arrow. Passed in from parent because this is not a FormODBase.</summary>
        </member>
        <member name="F:OpenDental.UI.FormComboPicker.ListStrings">
            <summary>The strings to show in the listbox.</summary>
        </member>
        <member name="F:OpenDental.UI.FormComboPicker.ListAbbrevs">
            <summary>Required, but can be the same as ListStrings.  These strings are used in the summary at the top of the listbox.</summary>
        </member>
        <member name="F:OpenDental.UI.FormComboPicker.PointInitialUR">
            <summary>The initial point where the UR corner of this picker window should start, in Screen coordinate.  It might grow up from here if it runs out of room below. It might also rarely need to expand right.</summary>
        </member>
        <member name="F:OpenDental.UI.FormComboPicker.HeightCombo">
            <summary>This is the height of the dummy combobox at the top: 21 at 96dpi. Gets set externally to exactly match parent comboBox.</summary>
        </member>
        <member name="F:OpenDental.UI.FormComboPicker._heightLineItem">
            <summary>Based on Font. 13 at 96dpi.</summary>
        </member>
        <member name="F:OpenDental.UI.FormComboPicker._indexTopShowing">
            <summary>Usually 0.  If scrolled, then this would be the top item showing.</summary>
        </member>
        <member name="F:OpenDental.UI.FormComboPicker._isOriginalLocation">
            <summary>True if we're still at _pointInitialUR.  False, if we had to shift because we hit the bottom of the screen, etc.  Then, we don't want to draw the "combobox" at the top.</summary>
        </member>
        <member name="F:OpenDental.UI.FormComboPicker._listSelectedOrig">
            <summary>On mouse down, this copy is made.  Use as needed for logic.  No need to clear when done.</summary>
        </member>
        <member name="F:OpenDental.UI.FormComboPicker._mouseDownIndex">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.FormComboPicker.SelectedIndex">
            <summary>Only used when IsMultiSelect=false;</summary>
        </member>
        <member name="P:OpenDental.UI.FormComboPicker.SelectedIndices">
            <summary>Only used when IsMultiSelect=true;</summary>
        </member>
        <member name="M:OpenDental.UI.FormComboPicker.WndProc(System.Windows.Forms.Message@)">
            <summary>We have to intercept the mouse scroll event, because there are no actual controls on the screen so there is no way to actually scroll as there is no content</summary>
        </member>
        <member name="M:OpenDental.UI.FormComboPicker.CalcSelectedIndices">
            <summary>Called on mouse down and mouse move.  Recalculates the _listSelectedIndices, based on _listSelectedOrig, _mouseDownIndex, _hoverIndex, isShiftDown, isCtrlDown.  By looping through all items in entire list each time.</summary>
        </member>
        <member name="M:OpenDental.UI.FormComboPicker.GetDisplayText(System.Int32)">
            <summary>If multiple items are selected, we string them together with commas.  But if the string is wider than widthMax, we instead show "Multiple".</summary>
        </member>
        <member name="M:OpenDental.UI.FormComboPicker.SetSearchedIndex(System.Int32,System.Char,System.Boolean)">
            <summary>Used to search through a combo box to find a matching index and set it. Returns true if it found a match, otherwise false.</summary>
        </member>
        <member name="M:OpenDental.UI.FormComboPicker.SetVScrollValue">
            <summary>Sets the value of the scroll bar to a selected item that is outside of view</summary>
        </member>
        <member name="F:OpenDental.UI.FormComboPicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.FormComboPicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.FormComboPicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.ComboBox">
            <summary>A combobox used extensively in OD.  Usually use ComboBoxClinicPicker for Clinics.  This supports multi-select or single-select.  It stores objects, paired with their display strings.  It has special handling for Providers, Defs, and Enums.  It handles setting to a value that is not in the list.  It has a special "All" setting.  Providers and Defs have special handling for key=0, but other types have less support.  You can manually add a none/0 item to any combo.  See the bottom of this file for many examples of how to use.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox.LayoutManager">
            <summary>Just holds the scaling factor.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox._brushDisabledBack">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox._brushDisabledText">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox._brushHover">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox._penArrow">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox._penHoverOutline">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox._penOutline">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox._formComboPicker">
            <summary>This is the part that comes up as a "list" to pick from.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox._isMouseOver">
            <summary>True if the mouse is over the "combobox", to turn it a blue color.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.UI.ComboBox._overrideText" -->
        <member name="F:OpenDental.UI.ComboBox._selectedKey">
            <summary>If selected index is -1, this can be used to store and retrieve the primary key. _overrideText is what shows to the user.</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox._colorBack">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox._listSelectedIndices">
            <summary>This is the only internal storage for tracking selected indices.  All properties refer to this same list. This list never includes the All option.</summary>
        </member>
        <member name="E:OpenDental.UI.ComboBox.SelectionChangeCommitted">
            <summary>Occurs when user selects item(s) from the drop-down list and the drop-down closes. This is designed to fire whether or not changed. For example, FormPatientAddAll.ComboClinic1 needs to change the others even if it doesn't change.</summary>
        </member>
        <member name="E:OpenDental.UI.ComboBox.SelectedIndexChanged">
            <summary>Try not to use this. The preferred technique is to use SelectionChangeCommitted to react to each user click. In contrast, this event will fire even if the selection programmatically changes. Rarely, you might actually want that behavior.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBox.ColorBack">
            <summary>Gets/Sets the background color for the combobox</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBox.IncludeAll">
            <summary>Set to true to include 'All' as a selection option at the top. 'All' can sometimes be intended to indicate more items than are actually showing in list.  Test IsAllSelected separately if this is the case.  This works for both single and multi selection mode.  This extra row is never part of the Items or internal _listSelectedIndices.  But, if you get SelectedIndices, and the user has selected All, then indices for all the items in the list will be returned.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBox.Items">
            <summary>This is the list of Items to show. Never includes the All option.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBox.IsAllSelected">
            <summary>This is the only way to get or set the special dummy 'All' option (regardless of any other additional selections). All needs to have been added, first.  The intent of All can vary.  On start, setting All is done manually, not automatically.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBox.SelectedIndex">
            <summary>Gets or sets the selected index. Setter has same behavior for SelectionModeMulti or not. Get throws exception for SelectionModeMulti.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBox.SelectedIndices">
            <summary>Gets or sets the selected indices. Getter has same behavior for SelectionModeMulti or not.  If 'All' option is selected, then this returns indices of all items in list. Set throws exception if not SelectionModeMulti.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBox.SelectedItem">
            <summary>Do not normally use. Only for compatability with the standard Microsoft combobox</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.GetListSelected``1">
            <summary>Returns a list of the selected objects. List can be empty.  Items can be null. If special 'All' is set in multi-mode(regardless of other selections), this will include all objects in the combobox.  If 'All' is set in single mode, it will be ignored here and list could be empty.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.GetSelected``1">
            <summary>Gets the selected object.  Can be null for object or 0 for enum.  Throws exception for SelectionModeMulti.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.GetSelectedDefNum">
            <summary>Only for comboBoxes with a list of Defs. This is a specific use of GetSelectedKey. If selected index is -1, it will try to grab the key that was passed in earlier with SetSelectedDefNum.  If there is none, then it will return 0.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.GetSelectedKey``1(System.Func{``0,System.Int64})">
            <summary>Gets the key like PatNum from the selected index. ProvNum and DefNum have their own selectors.  funcSelectKey example x=>x.PatNum.  If selected index is -1, it will try to grab the key that was passed in earlier with SetSelectedKey.  If there is none, then it will return 0.  Completely ignores IsAllSelected, so if you are interested in that, test it first.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.GetSelectedProvNum">
            <summary>Only for comboBoxes with a list of Providers. This is a specific use of GetSelectedKey. If selected index is -1, it will try to grab the key that was passed in earlier with SetSelectedProvNum.  If there is none, then it will return 0.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.GetSelectedProvNums">
            <summary>Only for multi-select comboBoxes with a list of Providers. Usually for reports.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.GetStringSelectedItems(System.Boolean,System.Boolean)">
            <summary>Gets a string of all selected items, separated by commas.  If "All" is selected, then the default is to simply return "All".  Or set ifAllListOut to true to list them out. useAbbr will string together abbreviations instead of the full display strings for each item.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.SetAll(System.Boolean)">
            <summary>Sets all rows either selected or unselected. If 'All' is present, it gets ignored because it's handled separately from the normal items.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.SetSelected(System.Int32)">
            <summary>Sets one row to selected.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.SetSelected(System.Int32,System.Boolean)">
            <summary>Sets one row either selected or unselected.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.SetSelectedDefNum(System.Int64)">
            <summary>Only for comboBoxes with a list of Defs. If you set a DefNum that is hidden from the combo, this method will go try to find it and display the name, including (hidden) if that applies.  If you set defNum to 0, it will show "none" or could also show text for any dummy 0 def that you added manually to the combo.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.SetSelectedEnum``1(``0)">
            <summary>Really only needed if enum is not 0,1,2,... or if enums were manually added to the combo, ignoring their normal idx order.  Otherwise, you could also use SetSelected((int)enumVal);  If the enum val is not present in the comboBox, it will do nothing.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.SetSelectedKey``1(System.Int64,System.Func{``0,System.Int64},System.Func{System.Int64,System.String})">
            <summary>Uses key like PatNum to set the selected index. ProvNum and DefNum have their own Setters. funcSelectKey is a func that gets the key from objects in the list for comparison. If the item is not currently in the comboBox and can't be matched, then selectedIndex is set to -1, and the key is stored internally for reference. It will remember that key and return it back in any subsequent GetSelectedKey as long as selectedIndex is still -1. In that case, it also needs text to display, which is set using funcOverrideText. This all works even if the key is garbage, in which case, it will show the key number in the combobox.  If you are confident that your key is going to be in the comboBox, you can omit funcOverrideText, with the worst consequence that the display might be a number.</summary>
            <param name="funcSelectKey">Examples: x=>x.PatNum</param>
            <param name="funcOverrideText">Examples:  x=>Carriers.GetName(x), or x=>"none"</param>
        </member>
        <member name="M:OpenDental.UI.ComboBox.SetSelectedProvNum(System.Int64)">
            <summary>Only for comboBoxes with a list of Providers. This is a specific use of SetSelectedKey. If the ProvNum is not currently in the comboBox and can't be matched, then selectedIndex is set to -1, the key is stored internally for reference, and the prov. It will remember that key and return it back in any subsequent GetSelectedKey as long as selectedIndex is still -1.  Setting ProvNum to 0 works well if you already used Items.AddProvNone(). But even if you don't have a dummy 0 provider, it will still work well and show "none", leaving SelectedIndex -1.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>We have to intercept the mouse scroll event, because there are no actual controls on the screen
            so there is no way to actually scroll as there is no content</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.GetDisplayText(System.Int32)">
            <summary>Uses the full text if one item is selected.  If multiple items are selected, we string abbreviations together with commas.  But if that string is wider than widthMax, we instead show "Multiple".</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.SetSearchedIndex(System.Int32,System.Char)">
            <summary>Used to search through a combo box to find a matching index and set it. Returns true if it found a match, otherwise false.</summary>
        </member>
        <member name="T:OpenDental.UI.ComboBox.ComboBoxItemCollection">
            <summary>Nested class for the collection of items.  Each items must be a ComboBoxItem, not null.  Each field of a ComboBoxItem may be null.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.Add(System.String,System.Object,System.String)">
            <summary>Specify the text to show. Optionally, specify the object represented by that text. Also, optionally display an abbreviation for each item to display in the selected summary above.  There are easier ways to add anything common, so this is really just for difficult cases.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.AddDefNone(System.String)">
            <summary>Adds a dummy def called "None", with a DefNum of 0.  If you pass in a string to show instead of "None", you should run in through translation first.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.AddDefs(System.Collections.Generic.List{OpenDentBusiness.Def})">
            <summary>Adds a list of Defs to the items. Does not Clear first.  Defs will show as ItemName, and (hidden) if applicable.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.UI.ComboBox.ComboBoxItemCollection.AddEnums``1" -->
        <!-- Badly formed XML comment ignored for member "M:OpenDental.UI.ComboBox.ComboBoxItemCollection.AddListEnum``1(System.Collections.Generic.IEnumerable{``0})" -->
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.GetEnumTranslation``1(System.Enum)">
            <summary>Translates the result of GetEnumDescription(Enum value).</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.GetEnumDescription(System.Enum)">
            <summary>A copy of the extension method in ODPrimitiveExtensions, except without ShortDescriptionAttribute. </summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.AddList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Func{``0,System.String})">
            <summary>Adds a collection to the items. Does not Clear first.  funcItemToString specifies a string to be displayed for this item, example x=>x.LName or x=>x.ToString(). funcItemToAbbr is similar for the abbreviation used for summary at top of list and for GetStringSelectedItems.  See bottom of this file for example.  Providers and Defs have their own simpler methods for adding.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.AddNone``1">
            <summary>Adds a dummy object called "None", with a key of 0.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.AddProvNone(System.String)">
            <summary>Adds a dummy provider called "None", with a ProvNum of 0.  If you pass in a string to show instead of "None", you should run in through translation first.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.AddProvsAbbr(System.Collections.Generic.List{OpenDentBusiness.Provider})">
            <summary>Adds a list of Providers to the items. Does not Clear first.  Providers will show as Abbr with (hidden) if applicable.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.AddProvsFull(System.Collections.Generic.List{OpenDentBusiness.Provider})">
            <summary>Adds a list of Providers to the items. Does not Clear first.  Providers will show with Long Descriptions.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBox.ComboBoxItemCollection.Item(System.Int32)">
            <summary>Can't use this because it's unclear if you want the entire ComboBoxItem, the text, or the object.  Use a Get method instead.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.GetComboBoxItemAt(System.Int32)">
            <summary>This gives you the entire ComboBoxItem.  If you just want the Item object, use [i] or GetObjectAt(i). Can be null.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.GetObjectAt(System.Int32)">
            <summary>This gives you just your Object in the list, not the whole ComboBoxItem container.  You already know what type of object this is, so just cast the type as needed. Can be null</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.GetAll``1">
            <summary>Returns a list of all objects in the list of items, not just the selected ones.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.GetAbbrShowingAt(System.Int32)">
            <summary>Tries to use, in this order: Abbr, Text, Item.ToString(). If all are null, returns "null".</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.ComboBoxItemCollection.GetTextShowingAt(System.Int32)">
            <summary>Tries to use, in this order: Text, Item.ToString(). If both are null, returns "null".</summary>
        </member>
        <member name="F:OpenDental.UI.ComboBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ComboBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.ComboBoxItem">
            <summary>Storage for an item in a comboBox.    This class also allows you to create items such as ComboBoxItem or List&lt;ComboBoxItem&gt; from outside the comboBox and pass them in later.  If Text is null, Item.ToString() will be displayed.</summary>
        </member>
        <member name="M:OpenDental.UI.ComboBoxItem.#ctor(System.String,System.Object,System.String)">
            <summary>text shows in combobox, item is any full object of interest, and abbr is used for displaying summary of selected items at top.</summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxItem.Text">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxItem.Item">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ComboBoxItem.Abbr">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UI.ListBox">
            <summary>A listBox designed to replace the stock MS listBox throughout OD. This supports multi-select or single-select.  It stores objects, paired with their display strings.  It has special handling for Enums.  Unlike ComboBoxOD, there is no special support for Providers, Defs, or "All".  If you want "All", consider a ComboBoxOD, which also handles setting to a value that is not in the list.  You can manually add a none/0 item to any listBoxOD.</summary>
        </member>
        <member name="F:OpenDental.UI.ListBox._brushHover">
            <summary>A compromise between the absurd MS blue and boring gray.  This looks great for enabled and disabled.</summary>
        </member>
        <member name="F:OpenDental.UI.ListBox._heightLine">
            <summary>Based on Font. 13 at 96dpi.</summary>
        </member>
        <member name="F:OpenDental.UI.ListBox._indexTopShowing">
            <summary>Usually 0.  If scrolled, then this would be the top item showing.</summary>
        </member>
        <member name="F:OpenDental.UI.ListBox._listSelectedOrig">
            <summary>On mouse down, this copy is made.  Use as needed for logic.  No need to clear when done.</summary>
        </member>
        <member name="F:OpenDental.UI.ListBox._mouseDownIndex">
            <summary></summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.UI.ListBox._overrideText" -->
        <member name="F:OpenDental.UI.ListBox._selectedKey">
            <summary>If selected index is -1, this can be used to store and retrieve the primary key. _overrideText is what shows to the user.</summary>
        </member>
        <member name="F:OpenDental.UI.ListBox._listSelectedIndices">
            <summary>This is the only internal storage for tracking selected indices.  All properties refer to this same list.</summary>
        </member>
        <member name="E:OpenDental.UI.ListBox.SelectionChangeCommitted">
            <summary>Occurs when user selects item(s) from the list. Will fire only when selected indices actually change.  If it must fire on click, use MouseClick or similar.</summary>
        </member>
        <member name="E:OpenDental.UI.ListBox.SelectedIndexChanged">
            <summary>Try not to use this. The preferred technique is to use SelectionChangeCommitted to react to each user click. In contrast, this event will fire even if the selection programmatically changes. Rarely, you might actually want that behavior.</summary>
        </member>
        <member name="P:OpenDental.UI.ListBox.IntegralHeight">
            <summary>Deprecated. Does nothing.</summary>
        </member>
        <member name="P:OpenDental.UI.ListBox.Items">
            <summary>This is the list of Items to show.</summary>
        </member>
        <member name="P:OpenDental.UI.ListBox.SelectedIndex">
            <summary>Gets or sets the selected index. Setter has same behavior for SelectionMode.MultiExtended or not. Get throws exception for SelectionMode.MultiExtended.</summary>
        </member>
        <member name="P:OpenDental.UI.ListBox.SelectedItem">
            <summary>Gets or sets one selected object. Get throws exception for SelectionMode.MultiExtended.</summary>
        </member>
        <member name="P:OpenDental.UI.ListBox.SelectedIndices">
            <summary>Gets or sets the selected indices. Getter has same behavior for SelectionMode.MultiExtended or not.  Set throws exception if not SelectionMode.MultiExtended.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ClearSelected">
            <summary>Same as using SetAll(false), but this is here to mirror MS listBoxes.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.GetListSelected``1">
            <summary>Returns a list of the selected objects. List can be empty.  Items can be null.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.GetSelected``1">
            <summary>Gets the selected object.  Can be null for object or 0 for enum.  Throws exception for SelectionMode.MultiExtended.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.GetSelectedKey``1(System.Func{``0,System.Int64})">
            <summary>Gets the key like PatNum from the selected index. funcSelectKey example x=>x.PatNum.  If selected index is -1, it will try to grab the key that was passed in earlier with SetSelectedKey.  If there is none, then it will return 0.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.GetStringSelectedItems(System.Boolean)">
            <summary>Gets a string of all selected items, separated by commas.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.IndexFromPoint(System.Int32,System.Int32)">
            <summary>Gets the index at the specified point. Returns -1 if no index can be selected at that point.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.IndexFromPoint(System.Drawing.Point)">
            <summary>Gets the index at the specified point. Returns -1 if no index can be selected at that point.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.SetAll(System.Boolean)">
            <summary>Sets all rows either selected or unselected.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.SetSelected(System.Int32,System.Boolean)">
            <summary>Sets one row either selected or unselected.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.SetSelectedEnum``1(``0)">
            <summary>Really only needed if enum is not 0,1,2,... or if enums were manually added to the list, ignoring their normal idx order.  Otherwise, you could also use SetSelected((int)enumVal);  If the enum val is not present in the listBox, it will do nothing.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.SetSelectedKey``1(System.Int64,System.Func{``0,System.Int64},System.Func{System.Int64,System.String})">
            <summary>Uses key like PatNum to set the selected index. funcSelectKey is a func that gets the key from objects in the list for comparison. If the item is not currently in the listBox and can't be matched, then selectedIndex is set to -1, and the key is stored internally for reference. It will remember that key and return it back in any subsequent GetSelectedKey as long as selectedIndex is still -1. In that case, it also needs text to display, which is set using funcOverrideText. This all works even if the key is garbage, in which case, it will show the key number in the listbox.  If you are confident that your key is going to be in the listBox, you can omit funcOverrideText, with the worst consequence that the display might be a number.</summary>
            <param name="funcSelectKey">Examples: x=>x.PatNum</param>
            <param name="funcOverrideText">Examples:  x=>Carriers.GetName(x), or x=>"none"</param>
        </member>
        <member name="M:OpenDental.UI.ListBox.WndProc(System.Windows.Forms.Message@)">
            <summary>We have to intercept the mouse scroll event, because there are no actual controls on the screen so there is no way to actually scroll as there is no content</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.CalcSelectedIndices">
            <summary>Called on mouse down and mouse move.  Recalculates the _listSelectedIndices, based on _listSelectedOrig, _mouseDownIndex, _hoverIndex, ShiftIsDown, and ControlIsDown.  By looping through all items in entire list each time.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.SetSearchedIndex(System.Int32,System.Char)">
            <summary>Used to search through a list box to find a matching index and set it. Returns true if it found a match, otherwise false.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.SetVScrollValue">
            <summary>Updates the value of the scroll bar based off of selecting or deleting items.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.VScrollMoveDown">
            <summary>Moves the scrollbar down by increasing the vScroll value or moves to the bottom if near the bottom.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.VScrollMoveUp">
            <summary>Moves the scrollbar up by decreasing the vScroll value or moves to the top if near the top.</summary>
        </member>
        <member name="T:OpenDental.UI.ListBox.ListBoxItemCollection">
            <summary>Nested class for the collection of items.  Each items must be a ListBoxItem, not null.  Each field of a ListBoxItem may be null.</summary>
        </member>
        <member name="F:OpenDental.UI.ListBox.ListBoxItemCollection._listBoxODParent">
            <summary>The listBoxOD that this collection is attached to.</summary>
        </member>
        <member name="F:OpenDental.UI.ListBox.ListBoxItemCollection._listListBoxItems">
            <summary>The internal list of items, exposed through methods.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.Add(System.String,System.Object,System.String)">
            <summary>Specify the text to show. Optionally, specify the object represented by that text. Also, optionally display an abbreviation for each item to display in the selected summary above.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.AddEnums``1">
            <summary>Adds the values of an enum to the list of Items.  Does not Clear first.  Descriptions are pulled from DescriptionAttribute or .ToString, then run through translation.  If you want add only some enums, or in a different order, or display ShortDescriptionAttribute, you have to add the Enums individually with your own text.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.GetEnumDescription(System.Enum)">
            <summary>A copy of the extension method in ODPrimitiveExtensions, except without ShortDescriptionAttribute. </summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.AddList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Func{``0,System.String})">
            <summary>Adds a collection to the items. Does not Clear first.  funcItemToString specifies a string to be displayed for this item, example x=>x.LName or x=>x.ToString(). funcItemToAbbr is similar for the abbreviation used for summary at top of list and for GetStringSelectedItems.  See bottom of this file for example.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.AddNone``1">
            <summary>Adds a dummy object called "None", with a key of 0.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.AddRange(System.Object[])">
            <summary>This is just for the designer serialization to make it compatible with MS listBox. But if you want enums in the listbox instead of strings, you will need to add them in code instead of in the designer.  New listBoxes would use ItemStrings instead of AddRange. Clears first.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.AddStrings(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Adds a collection of strings to the items. Does not Clear first.</summary>
        </member>
        <member name="P:OpenDental.UI.ListBox.ListBoxItemCollection.Item(System.Int32)">
            <summary>Can't use this because it's unclear if you want the entire ListBoxItem, the text, or the object.  Use a Get method instead.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.GetListBoxItemAt(System.Int32)">
            <summary>This gives you the entire ListBoxItem.  If you just want the Item object, use [i] or GetObjectAt(i). Can be null.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.GetObjectAt(System.Int32)">
            <summary>This gives you just your Object in the list, not the whole ListBoxItem container.  You already know what type of object this is, so just cast the type as needed. Can be null</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.GetAll``1">
            <summary>Returns a list of all objects in the list of items, not just the selected ones.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.GetAbbrShowingAt(System.Int32)">
            <summary>Tries to use, in this order: Abbr, Text, Item.ToString(). If all are null, returns "null".</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.GetTextShowingAt(System.Int32)">
            <summary>Tries to use, in this order: Text, Item.ToString(). If both are null, returns "null".</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.RemoveAt(System.Int32)">
            <summary>Removes the item at the passed in index.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.ListBoxItemCollection.SetValue(System.Int32,System.Object,System.Boolean)">
            <summary>Rarely used. You can change the value of an existing item in the list.</summary>
        </member>
        <member name="F:OpenDental.UI.ListBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ListBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ListBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.ListBoxItem">
            <summary>Storage for an item in a ListBox.    This class also allows you to create items such as ListBoxItem or List&lt;ListBoxItem&gt; from outside the listBox and pass them in later.  If Text is null, Item.ToString() will be displayed.</summary>
        </member>
        <member name="M:OpenDental.UI.ListBoxItem.#ctor(System.String,System.Object,System.String)">
            <summary>Text shows in list, item is any full object of interest, and abbr is used for displaying summary of selected items at top.</summary>
        </member>
        <member name="P:OpenDental.UI.ListBoxItem.Text">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ListBoxItem.Item">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ListBoxItem.Abbr">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ODDatePicker._pointAdjustCalendarLoc">
            <summary>Adjustments to the calendar location.  Starting location is based on the CalendarLocation property.</summary>
        </member>
        <member name="P:OpenDental.UI.ODDatePicker.ReadOnly">
            <summary>toggles whether the field is read only or not</summary>
        </member>
        <member name="P:OpenDental.UI.ODDatePicker.CalendarLocation">
            <summary>Set location of calendar.</summary>
        </member>
        <member name="P:OpenDental.UI.ODDatePicker.AdjustCalendarLocation">
            <summary>Adjust the position of the calendar.  Starting location is based on the CalendarLocation property.</summary>
        </member>
        <member name="P:OpenDental.UI.ODDatePicker.HideCalendarOnLeave">
            <summary>If true, will hide the calendar when focus leaves the control, focus leaves calendar, or user selects a date from calendar. If false, the calendar will stay open until the button is clicked.
            </summary>
        </member>
        <member name="E:OpenDental.UI.ODDatePicker.CalendarClosed">
            <summary>Event is fired when the calendar is closed.</summary>
        </member>
        <member name="E:OpenDental.UI.ODDatePicker.CalendarOpened">
            <summary>Event is fired when the calendar is opened.</summary>
        </member>
        <member name="E:OpenDental.UI.ODDatePicker.CalendarSelectionChanged">
            <summary>Event is fired when either calendar has made a selection.</summary>
        </member>
        <member name="E:OpenDental.UI.ODDatePicker.DateTextChanged">
            <summary>Event is fired when the text in textDate changes.</summary>
        </member>
        <member name="E:OpenDental.UI.ODDatePicker.Leave">
            <summary>Hiding Control.Leave because the Leave event is fired whenever the user clicks on the calendar. This control will fire this Leave event when the user truly leaves this control.</summary>
        </member>
        <member name="M:OpenDental.UI.ODDatePicker.IsEmptyDateTime">
            <summary>An empty string does not register as an error in ValidDate.</summary>
        </member>
        <member name="M:OpenDental.UI.ODDatePicker.GetPointParentFromPoint(System.Drawing.Point,System.Windows.Forms.Control)">
            <summary>Recursively calculates relative x-y coordinates up to this control's parent form.</summary>
        </member>
        <member name="M:OpenDental.UI.ODDatePicker.SetCalendarDate(System.DateTime)">
            <summary>Used to set the calendar date when the calendar is open</summary>
        </member>
        <member name="F:OpenDental.UI.ODDatePicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ODDatePicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ODDatePicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:OpenDental.UI.ODDateRangePicker.CalendarClosed">
            <summary>Event is fired when either calendar is closed.</summary>
        </member>
        <member name="E:OpenDental.UI.ODDateRangePicker.CalendarSelectionChanged">
            <summary>Event is fired when either calendar has made a selection.</summary>
        </member>
        <member name="P:OpenDental.UI.ODDateRangePicker.EnableWeekButtons">
            <summary>Set true to enable butWeekPrevious and butWeekNext</summary>
        </member>
        <member name="P:OpenDental.UI.ODDateRangePicker.IsVertical">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODDateRangePicker.GetDateTimeTo(System.Boolean)">
            <summary>Gets the end of the date that is entered.</summary>
        </member>
        <member name="M:OpenDental.UI.ODDateRangePicker.HasEmptyDateTimeFrom">
            <summary>An empty string does not register as an error in ValidDate.</summary>
        </member>
        <member name="M:OpenDental.UI.ODDateRangePicker.HasEmptyDateTimeTo">
            <summary>An empty string does not register as an error in ValidDate.</summary>
        </member>
        <member name="M:OpenDental.UI.ODDateRangePicker.IsInDateRange(System.DateTime)">
            <summary>Returns true if the passed in date is within the currently selected dates.</summary>
        </member>
        <member name="M:OpenDental.UI.ODDateRangePicker.ChangeToVertical">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ODDateRangePicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ODDateRangePicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ODDateRangePicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.ODPrintPreviewControl">
            <summary>Almost identical to base PrintPreviewControl but when using THINFINITY this control will not show a print progress dialog.
            Code copied from MSDN and modified.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl._arrayPageInfo">
            <summary>null if needs refreshing</summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl._countDisplayedVerticalPages">
            <summary>Gets or sets the number of pages displayed vertically down the screen.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl._countDisplayHorizontalPages">
            <summary>Gets or sets the number of pages displayed horizontally across the screen.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl.autoZoom">
            <summary>Gets or sets a value If true (default), resizing the control or changing the number of pages shown will automatically adjust Zoom to make everything visible.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl.position">
            <summary>The virtual coordinate of the upper left visible pixel</summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl._virtualSize">
            <summary>How big the control would be if the screen was infinitely large.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl._permSafePrinting">
            <summary>Mimics .Nets interanl print preview logic.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl._border">
            <summary>Spacing per page, in mm</summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl._isLayoutOk">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl.imageSize">
            <summary>100ths of inch, not pixels</summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl.screendpi">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl.zoom">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl.pageInfoCalcPending">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ODPrintPreviewControl.isExceptionPrinting">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODPrintPreviewControl.ComputeLayout(System.Drawing.Graphics)">
            <summary>This function computes everything in terms of physical size (millimeters), not pixels</summary>
        </member>
        <member name="M:OpenDental.UI.ODPrintPreviewControl.ComputePreview">
            <summary>"Prints" the document to memory</summary>
        </member>
        <member name="T:OpenDental.UI.PanelOD">
            <summary>This panel differs from the stock MS Panel in two ways: It lets user set a border color and it's also double buffered.  This does support custom drawing, but it can't focus, so it won't accept keys.  For that, use ControlDoubleBuffered.  BorderStyle.None is default, so change that in addition to setting color.</summary>
        </member>
        <member name="P:OpenDental.UI.PanelOD.BorderColor">
            <summary>The color of the border.</summary>
        </member>
        <member name="F:OpenDental.UI.PanelOD.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.PanelOD.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.PanelOD.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UI.TestForWpf.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.TestForWpf.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.TestForWpf.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UI.CloudIframe.Initialize(System.IntPtr,System.String,System.Boolean)">
            <summary>Inserts the iFrame into the DOM and initializes it.</summary>
        </member>
        <member name="M:OpenDental.UI.CloudIframe.Navigate(System.IntPtr,System.String)">
            <summary>Navigates the iFrame to the url.</summary>
        </member>
        <member name="M:OpenDental.UI.CloudIframe.DisplayFile(System.IntPtr,System.String)">
            <summary>Displays a file in the iFrame.</summary>
        </member>
        <member name="M:OpenDental.UI.CloudIframe.ShowIframe(System.IntPtr)">
            <summary>Makes the iFrame visible.</summary>
        </member>
        <member name="M:OpenDental.UI.CloudIframe.HideIframe(System.IntPtr)">
            <summary>Hides the iFrame.</summary>
        </member>
        <member name="F:OpenDental.UI.CloudIframe.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.CloudIframe.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.CloudIframe.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.Direct2d">
            <summary>This is a full replacement for GDI+ Graphics.  Use it in Paint.  To get started, see the 3 From...() methods. There are also examples at the bottom of this file.  This is internally double buffered.  It's a work in progress.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.#ctor(System.Drawing.Bitmap)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.#ctor(System.Drawing.Graphics)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.Dispose">
            <summary>Releases wrapper resources, disposes of graphics, and releases references.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.FromControl(System.Windows.Forms.Control)">
            <summary>Supply the Control that you are painting on.  Surround drawing with BeginDraw/EndDraw.  Dispose when control disposed.  Direct2D paints on the entire control and does not allow GDI+ drawing commands to intermingle.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.FromBitmap(System.Drawing.Bitmap)">
            <summary>Supply the bitmap that you are painting on.  Surround drawing with BeginDraw/EndDraw and Dispose when done.  Haven't quite figured out how to do a transparent background, and it may not be possible. So, you must first call d.Clear or some other background to avoid ragged edges.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.FromGraphics(System.Drawing.Graphics)">
            <summary>This allows sending both GDI+ and Direct2D drawing commands to the same Graphics object.  Surround drawing with BeginDraw/EndDraw and dispose when done.  This looks pretty good, but it does leave a few stray lines of pixels when resizing.  GDI+ and Direct2D don't work flawlessly together.  And, since we have to build a new Direct2D each time, it might be slightly slow.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.DeviceResourcesNeedCreate">
            <summary>Only tests the render target, but that test determines whether all the other device resources (render target, gradients, and bitmaps) need to be recreated as well.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.CreateRenderTarget">
            <summary>Only gets called if DeviceResourcesNeedCreate is true.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.CreateGradientBrush(System.Int32,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single,System.Single,System.Single)">
            <summary>Only gets called if DeviceResourcesNeedCreate is true. brushNum is 0 index item in a list of brushes.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.CreateBitmap(System.Int32,System.Drawing.Bitmap)">
            <summary>Only call this if DeviceResourcesNeedCreate is true or bitmap changes.  bitmapNum is 0 index item in a list of bitmaps.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.SetTargetToBitmap(System.Int32)">
            <summary>After this, call BeginDraw, do all drawing, EndDraw, SetTargetToOriginal.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.SetTargetToOriginal">
            <summary>Use after SetTargetToBitmap after completely done drawing on the bitmap.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.EndDraw">
            <summary>Calls EndDraw and releases Hdc.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>Add an arc segment to a path.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.AddLine(System.Single,System.Single)">
            <summary>Add a line segment to a path.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.BeginFigure(System.Single,System.Single,System.Boolean)">
            <summary>If this figure will have a fill applied, use isFilled=true.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.BeginPath">
            <summary>Call BeginFigure after this.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.Clear(System.Nullable{System.Drawing.Color})">
            <summary>Default is white.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.EndFigure(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.EndPath(System.Boolean,System.Boolean,System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color},System.Single)">
            <summary>Make sure to call EndFigure first.  Frequently only a few of these parameters are needed.  Name the ones you need and ignore the rest. Default colors are black.  You can do fill and/or outline.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.FillRectangleGradient(System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>Specify gradientNum=0 until we need and support multiple gradients</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.RestoreDrawingState(System.Int32)">
            <summary>Use after SaveDrawingState.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.Rotate(System.Single)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.SaveDrawingState(System.Int32)">
            <summary>Caller must keep track of which level they want to call.  Also see RestoreDrawingState.</summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.Scale(System.Single)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.Direct2d.Translate(System.Single,System.Single)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UI.D2DWrapperHwnd">
            <summary>This class is just a container for the DllImport methods that call the C++ dll.  This group of methods is for drawing on HWNDs.</summary>
        </member>
        <member name="T:OpenDental.UI.Direct2dWrapper">
            <summary>This class is just a container for the DllImport methods that call the C++ dll.  This group of methods is for drawing on DCs.</summary>
        </member>
        <member name="T:OpenDental.UI.ControlDoubleBuffered">
            <summary>This exists because DoubleBuffered can only be set from inside a control. If we are building our own control class, we don't need this.  This is just for those cases when we are whipping up a light control that gets painted from the parent.  If you are not doing your own painting and you don't need focus, then use Panel or PanelOD instead.</summary>
        </member>
        <member name="F:OpenDental.UI.ControlDoubleBuffered.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ControlDoubleBuffered.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ControlDoubleBuffered.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.FormPrintPreview">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.FormPrintPreview.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:OpenDental.UI.FormPrintPreview.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UI.FormPrintPreview.#ctor(CodeBase.ODprintout)">
            <summary>Uses the following ODprintout fields: Situation, TotalPages, AuditPatNum, AuditDescription.</summary>
        </member>
        <member name="M:OpenDental.UI.FormPrintPreview.LayoutToolBar">
            <summary>Causes the toolbar to be laid out again.</summary>
        </member>
        <member name="M:OpenDental.UI.FormPrintPreview.SetPageNumText">
            <summary>Sets the toolbar's pagenum text based on the total pages. If 0 total pages, only shows the current pagenum.</summary>
        </member>
        <member name="T:OpenDental.UI.GroupBox">
            <summary>Use this instead of MS GroupBox.  Supports our custom drawing and scaling.  Has rounded corners and a darker border.</summary>
        </member>
        <member name="M:OpenDental.UI.GroupBox.ResetBackColor">
            <summary>Used by designer to enable resetting the property to its default value.</summary>
        </member>
        <member name="M:OpenDental.UI.GroupBox.ShouldSerializeBackColor">
            <summary>Indicates to designer whether the property value is different from the ambient value, in which case the designer should persist the value.</summary>
        </member>
        <member name="P:OpenDental.UI.GroupBox.DrawBorder">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.GroupBox.TabStop">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.GroupBox.Text">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.GroupBox.IsOnActualText(System.Drawing.Point)">
            <summary>Returns false if the location is on the box or empty space.</summary>
        </member>
        <member name="F:OpenDental.UI.GroupBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.GroupBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.GroupBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UI.IconSelector.GetBase64(OpenDental.UI.EnumIcons)">
            <summary>This is used prior to vector transition, for future testing, and for the rare icon that will remain a bitmap.  All icons have a bitmap here.  Usually returns 22x22 or 32x32 version.</summary>
        </member>
        <member name="T:OpenDental.UI.IconLibrary">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.IconLibrary.OnlyGDI">
            <summary>This can be set to true if a customer computer is crashing. It forces use of GDI+ and no Direct2D.  Only downside is that icons will be blurry.</summary>
        </member>
        <member name="M:OpenDental.UI.IconLibrary.Draw(System.Drawing.Graphics,OpenDental.UI.EnumIcons,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>This works, but there are some bugs: stray lines of pixels when resizing, and halos due to Interpolation of edge pixels.  Graphics and Direct2D don't actually share the same context very well, even when they take turns.</summary>
        </member>
        <member name="M:OpenDental.UI.IconLibrary.DrawDisabled(System.Drawing.Graphics,OpenDental.UI.EnumIcons,System.Drawing.Rectangle)">
            <summary>This draws with the greyed-out look for disabled buttons.</summary>
        </member>
        <member name="M:OpenDental.UI.IconLibrary.Width(OpenDental.UI.EnumIcons)">
            <summary>32 or 22</summary>
        </member>
        <member name="T:OpenDental.UI.SplitContainer">
            <summary>This is meant to replace all existing MS Splitters and SplitContainers. The best way to use it is to copy an existing blank SplitContainer from OpenDental/Forms/BasicTemplate.cs because it already has both splitter panels.</summary>
        </member>
        <member name="F:OpenDental.UI.SplitContainer._iComponentChangeService">
            <summary>for design time refreshing of Properties Window.</summary>
        </member>
        <member name="F:OpenDental.UI.SplitContainer._iSelectionService">
            <summary>for design time selection.</summary>
        </member>
        <member name="E:OpenDental.UI.SplitContainer.SplitterMoved">
            <summary>Occurs when the splitter is done being moved, whether it's moved programmatically or by the user.</summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.ColorBorder">
            <summary>The color of the border. Default is Silver.</summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.ColorSplitter">
            <summary>The color of the splitter. Default is Silver.</summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.IsSplitterFixed">
            <summary>Determines if the Splitter can move.</summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.Orientation">
            <summary>Determines if the splitter is vertical or horizontal.</summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.Panel1">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.Panel2">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.Panel1Collapsed">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.Panel2Collapsed">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.Panel1MinSize">
            <summary>Use current dpi actual pixels.</summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.Panel2MinSize">
            <summary>Use current dpi actual pixels.</summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.SplitterDistance">
            <summary>Use current dpi actual pixels.</summary>
        </member>
        <member name="P:OpenDental.UI.SplitContainer.SplitterWidth">
            <summary>Default is 4 pixels. This does get scaled with zoom, so it would be 5 pixels at about 125% zoom.</summary>
        </member>
        <member name="T:OpenDental.UI.SplitterPanel">
            <summary>Analogous to the MS SplitterPanel.</summary>
        </member>
        <member name="P:OpenDental.UI.SplitterPanel.Dock">
            <summary>Not meaningful for this control, so we ignore it.</summary>
        </member>
        <member name="P:OpenDental.UI.SplitterPanel.Location">
            <summary>Not meaningful for this control, so we ignore it.</summary>
        </member>
        <member name="T:OpenDental.UI.TabControl">
            <summary>This is meant to replace all existing MS tab controls. The best way to use it is to copy an existing blank UI.TabControl from OpenDental/Forms/BasicTemplate.cs because it already has two tabPages.</summary>
        </member>
        <member name="F:OpenDental.UI.TabControl.ListRectanglesTabs">
            <summary>These rectangles are of the unselected tabs.  The selected tab will be a little bigger.</summary>
        </member>
        <member name="F:OpenDental.UI.TabControl._heightTabs">
            <summary>This is the actual height, already scaled by the LayoutManager.</summary>
        </member>
        <member name="F:OpenDental.UI.TabControl._iSelectionService">
            <summary>This is for design time selection.</summary>
        </member>
        <member name="F:OpenDental.UI.TabControl._paddingTabPages">
            <summary>Always the same, regardless of dpi.</summary>
        </member>
        <member name="F:OpenDental.UI.TabControl._sizeTabsLeft96">
            <summary>Only used for TabAlignment.LeftHorizontal.</summary>
        </member>
        <member name="E:OpenDental.UI.TabControl.Selected">
            <summary>This is the best event to use. It only occurs after user clicks on a tab, and it will only fire when SelectedIndex actually changes.  If it must fire on all clicks, use Selecting.</summary>
        </member>
        <member name="E:OpenDental.UI.TabControl.SelectedIndexChanged">
            <summary>This is sometimes used to detect user input, but Selected is better. This fires for programmatic changes in addition to user clicks.</summary>
        </member>
        <member name="E:OpenDental.UI.TabControl.Selecting">
            <summary>A little different than the MS version.  This doesn't let you cancel and it also fires even if the tab is already selected. Always valid.  Gives you the int clicked on.  Even fires for tabs set to !Enabled.  Fires prior to SelectedIndex changing so that you can compare if they clicked on a new tab or not, but watch out! This means that SelectedIndex is not yet valid.</summary>
        </member>
        <member name="P:OpenDental.UI.TabControl.ClientSize">
            <summary>Unlike in a MS tabControl, this will give you the size of each tabPage (they are all the same). The alternative is to get the size of any one random tab, which also works.</summary>
        </member>
        <member name="P:OpenDental.UI.TabControl.PaddingTabPages">
            <summary>The padding around the TabPages, not the tab buttons. Default is 2. Setting to 0 will eliminate/cover the border.</summary>
        </member>
        <member name="P:OpenDental.UI.TabControl.SizeTabsLeft">
            <summary>When TabAlignment is LeftHorizontal, then this is the size of each tab.</summary>
        </member>
        <member name="P:OpenDental.UI.TabControl.TabAlignment">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.TabControl.TabsAreCollapsed">
            <summary>Set true to collapse the tabs area. The TabPages will then fill the entire TabControl.</summary>
        </member>
        <member name="M:OpenDental.UI.TabControl.GetPathTab(System.Drawing.Rectangle)">
            <summary>Converts a rectangle into one with rounded corners.</summary>
        </member>
        <member name="F:OpenDental.UI.EnumTabAlignment.LeftHorizontal">
            <summary>This is only used in one place: FormEmailInbox.cs.  So tab button sizes are hard coded, but we can change them to be customizable if needed later. This also does not support TabsAreCollapsed.</summary>
        </member>
        <member name="T:OpenDental.UI.TabPage">
            <summary>Analogous to the MS TabPage.</summary>
        </member>
        <member name="F:OpenDental.UI.TabPage.rectangleTab">
            <summary>The rectangle for the tab at the top, not the tab page.</summary>
        </member>
        <member name="M:OpenDental.UI.TabPage.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.TabPage.#ctor(System.String)">
            <summary>Specify text that will go on the tab.</summary>
        </member>
        <member name="P:OpenDental.UI.TabPage.AutoScroll">
            <summary>Warning. This is not supported.  Instead, put an autoscroll panel inside the tab page.</summary>
        </member>
        <member name="P:OpenDental.UI.TabPage.ColorTab">
            <summary>Default is Empty (0,0,0,0)</summary>
        </member>
        <member name="P:OpenDental.UI.TabPage.Dock">
            <summary>Not meaningful for this control, so we ignore it.</summary>
        </member>
        <member name="P:OpenDental.UI.TabPage.Location">
            <summary>Not meaningful for this control, so we ignore it.</summary>
        </member>
        <member name="T:OpenDental.UI.ToolTipOD">
            <summary>Kind of like the MS ToolTip, except it comes up instantly and moves with the mouse. Something similar was also done in ControlApptPanel.  In that case, a panel was sufficient, but since this needs to spill outside the control, it must be a window. See boilerplate at bottom of this file.</summary>
        </member>
        <member name="M:OpenDental.UI.ToolTipOD.SetControlAndAction(System.Windows.Forms.Control,System.Action{System.Windows.Forms.Control,System.Drawing.Point})">
            <summary>This tooltip will respond to the mouseMove event of the control it's assigned to. The action should handle the point from the mouseMove with a hit test, and should then call SetString to show or hide the tooltip. An extremely simple action would just always return a certain string without any hit test. This can be called repeatedly for different controls as long as the action is the same.</summary>
        </member>
        <member name="M:OpenDental.UI.ToolTipOD.SetString(System.Windows.Forms.Control,System.String,System.Drawing.Font)">
            <summary>This is intended to be called from within the Action that was previously set. The string will show immediately. If an empty string is passed in, then visiblity will be false.</summary>
        </member>
        <member name="F:OpenDental.UI.ToolTipOD.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ToolTipOD.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ToolTipOD.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UI.UnmountedBar._linearGradientBrush">
            <summary>Changes when dpi changes. Disposed</summary>
        </member>
        <member name="F:OpenDental.UI.UnmountedBar._heightHeader96">
            <summary>20 at 96 dpi</summary>
        </member>
        <member name="F:OpenDental.UI.UnmountedBar._colorTitleTop">
            <summary>Copied from GridOD</summary>
        </member>
        <member name="F:OpenDental.UI.UnmountedBar._colorTitleBottom">
            <summary>Copied from GridOD</summary>
        </member>
        <member name="F:OpenDental.UI.UnmountedBar._listUnmountedObjects">
            <summary>This list just holds secondary references to the various objects, including bitmaps.  This class is not responsible for disposing of bitmaps.</summary>
        </member>
        <member name="E:OpenDental.UI.UnmountedBar.EventClose">
            <summary>Occurs when the user clicks the Close button.</summary>
        </member>
        <member name="E:OpenDental.UI.UnmountedBar.EventRefreshParent">
            <summary>Occurs when the parent needs to be refreshed.</summary>
        </member>
        <member name="E:OpenDental.UI.UnmountedBar.EventRemount">
            <summary>Occurs when user clicks the Remount button.</summary>
        </member>
        <member name="E:OpenDental.UI.UnmountedBar.EventRetake">
            <summary>Occurs when user clicks the Retake button.</summary>
        </member>
        <member name="M:OpenDental.UI.UnmountedBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.UnmountedBar.OnMouseLeave(System.EventArgs)">
            <summary>Resets button appearance.  Repaints only if necessary.</summary>
        </member>
        <member name="M:OpenDental.UI.UnmountedBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Change the button to a pressed state.</summary>
        </member>
        <member name="M:OpenDental.UI.UnmountedBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Change button to hover state and repaint if needed.</summary>
        </member>
        <member name="F:OpenDental.UI.UnmountedBar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.UnmountedBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.UnmountedBar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.UnmountedObject">
            <summary>This is a container that stores a mountItem, document, and bitmap.  MountItem must always be valid, while the other values can be null.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._brushMainGradient">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._brushPushedGradient">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._fit">
            <summary>This is the zoom level that's calculated in SetValueInitialFit and then constantly used to derive other values like _maximum.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._isMouseDownOnSlider">
            <summary>Mouse down was on slider. Either a drag or a click.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._maximum">
            <summary>This changes constantly and is not under external control.  It starts out as twice _fit, but then increases more each time user hits "plus".</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._penDivider">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._penSliderOutline">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._penOutline">
            <summary>Used for button outlines and control outline. Stays 1 pixel with scaling.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._penTickLine">
            <summary>Used for tickline. Varies in thickness with scaling.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._penBlack">
            <summary>Used plus and minus. Varies in thickness with scaling.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._pointMouse">
            <summary>Current position of mouse on control.  -1,-1 indicates not over control.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._pointMouseDown">
            <summary>Point where mouse was initially down.  If dragging, it will get the original position.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._rectangleFit">
            <summary>The rectangle defining the Fit button</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._rectangleMinus">
            <summary>The rectangle defining the minus button</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._rectanglePlus">
            <summary>The rectangle defining the plus button</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._rectangleSlider">
            <summary>The rectangle defining the slider that contains the current zoom text.  Always falls within rectangleTickline.  Since user can only drag in whole pixel increments, we won't use a RectangleF.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._rectangleTickLine">
            <summary>The rectangle defining tick line itself.  We never draw a rectangle around it, but it's useful for lots of math. It spans the height of the entire control. It extends left and right to the extent of the tick line.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._rectangleTickLineMargin">
            <summary>The rectangle defining the tickline plus left and right padding. So the entire cell.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._rectangle100">
            <summary>The rectangle defining the 100 button</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._xOffsetMouseDownSlider">
            <summary>When mouse down to start dragging slider, we aren't necessarily in the center.  This keeps track of offset.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider._value">
            <summary>Property backer.  Internally, this must be a float for better accuracy.  We round it for viewing and for the public property</summary>
        </member>
        <member name="M:OpenDental.UI.ZoomSlider.#ctor">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ZoomSlider.Value">
            <summary>The numeric zoom value, greater than zero.  To set, use SetValueInitialFit or SetValueAndMax method.</summary>
        </member>
        <member name="E:OpenDental.UI.ZoomSlider.FitPressed">
            <summary></summary>
        </member>
        <member name="E:OpenDental.UI.ZoomSlider.Zoomed">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ZoomSlider.SetValueInitialFit(System.Drawing.Size,System.Drawing.Size,System.Single)">
            <summary>These parameters are required because initial center zoom is always to "fit". This is also the only way to set Enabled to true.  If degreesRotated is is 90 or 270, it will swap width and height when doing the calc.</summary>
        </member>
        <member name="M:OpenDental.UI.ZoomSlider.SetByWheel(System.Single)">
            <summary>The number passed in here is a zoom change, like -15.  It was calculated externally based on existing _value for proportionality.</summary>
        </member>
        <member name="M:OpenDental.UI.ZoomSlider.SetValueAndMax(System.Single)">
            <summary>Sets value.  If value is greater than Max, then Max will grow.</summary>
        </member>
        <member name="F:OpenDental.UI.ZoomSlider.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ZoomSlider.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ZoomSlider.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.MenuOD">
            <summary>Used in OD instead of MainMenu or MenuStrip.  Those will fail on high dpi monitors.  Never set item Visibility.  Use Available instead.</summary>
        </member>
        <member name="F:OpenDental.UI.MenuOD._menuStripOD">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.MenuOD._layoutManager">
            <summary>Just holds the scaling factor.</summary>
        </member>
        <member name="M:OpenDental.UI.MenuOD.BeginUpdate">
            <summary>Optional. When adding a large number of menu items, this can be used to slightly increase efficiency.  Use EndUpdate after adding all the menu items.</summary>
        </member>
        <member name="M:OpenDental.UI.MenuOD.GetMenuItemByName(System.String)">
            <summary>Returns null if not found.</summary>
        </member>
        <member name="M:OpenDental.UI.MenuOD.GetMenuItemRecursive(OpenDental.UI.MenuItemOD,System.String)">
            <summary>Recursive. Checks self and children.</summary>
        </member>
        <member name="T:OpenDental.UI.MenuStripOD">
            <summary>This is only used from inside MenuOD.</summary>
        </member>
        <member name="F:OpenDental.UI.MenuStripOD.LayoutManager">
            <summary>Just holds the scaling factor.</summary>
        </member>
        <member name="M:OpenDental.UI.MenuStripOD.GetMenuStripOD(System.Windows.Forms.ToolStripItem)">
            <summary>Recursive. Will return null if not attached to a menu yet.</summary>
        </member>
        <member name="M:OpenDental.UI.MenuStripOD.LayoutDropdown(System.Windows.Forms.ToolStripDropDownItem,System.Drawing.Graphics)">
            <summary>Recursive</summary>
        </member>
        <member name="M:OpenDental.UI.MenuItemOD.Add(System.Windows.Forms.ToolStripItem)">
            <summary>Add either a MenuItemOD or a MenuDropItemOD.</summary>
        </member>
        <member name="M:OpenDental.UI.MenuItemOD.Add(System.String,System.EventHandler)">
            <summary>Add a MenuItemOD.</summary>
        </member>
        <member name="T:OpenDental.UI.MenuRenderer">
            <summary>This custom renderer is based on Professional to give us a nice modern look.  Then, we could also tweak a lot of drawing here if we had time.</summary>
        </member>
        <member name="T:OpenDental.UI.MonthCalendarOD">
            <summary>A replacement for the MS MonthCalendar control.</summary>
        </member>
        <member name="F:OpenDental.UI.MonthCalendarOD.AllowClickingTopText">
            <summary>Set this to false to prevent user from clicking the top text to manually set date. Useful, for example, if this monthCalendar is a dropdown, so there's already a box for that.</summary>
        </member>
        <member name="F:OpenDental.UI.MonthCalendarOD._arrayDates">
            <summary>The dates that are showing in each cell.  This is a 7x6 array.</summary>
        </member>
        <member name="F:OpenDental.UI.MonthCalendarOD._dateSelected">
            <summary>Unfortunately, this has the same name as a MS event for selecting a date.  So this can't be used publicly unless I'm careful.</summary>
        </member>
        <member name="F:OpenDental.UI.MonthCalendarOD._heightFooter96">
            <summary>Needs to be scaled each time.</summary>
        </member>
        <member name="F:OpenDental.UI.MonthCalendarOD._heightHeader96">
            <summary>Needs to be scaled each time.</summary>
        </member>
        <member name="F:OpenDental.UI.MonthCalendarOD._dateMonthShowing">
            <summary>Because we can go to different months without changing the selected date. We always use the first day of the month. Can't be changed externally.</summary>
        </member>
        <member name="F:OpenDental.UI.MonthCalendarOD._pointHotHover">
            <summary>Identifies the current hot hover cell as the mouse moves around.  Row 0 is never used because that's the days of week. 0,0 indicates no hot.</summary>
        </member>
        <member name="F:OpenDental.UI.MonthCalendarOD._rectangleMonthLeft">
            <summary>26x33</summary>
        </member>
        <member name="F:OpenDental.UI.MonthCalendarOD._xPos">
            <summary>x Position of left of each cell.  Always 7 columns</summary>
        </member>
        <member name="F:OpenDental.UI.MonthCalendarOD._yPos">
            <summary>y Position of top of each cell.  Top row is days of week, then always 6 rows of numbers</summary>
        </member>
        <member name="E:OpenDental.UI.MonthCalendarOD.DateChanged">
            <summary>Occurs when user clicks to change date.  Does not fire in response to programmatic data changes.</summary>
        </member>
        <member name="M:OpenDental.UI.MonthCalendarOD.GetDateSelected">
            <summary>Use this in place of MonthCalendar.SelectionStart.</summary>
        </member>
        <member name="M:OpenDental.UI.MonthCalendarOD.SetDateSelected(System.DateTime)">
            <summary>Use this in place of MonthCalendar.SetDate().</summary>
        </member>
        <member name="F:OpenDental.UI.MonthCalendarOD.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.MonthCalendarOD.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.MonthCalendarOD.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UI.ODColorPicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ODColorPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ODColorPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:OpenDental.UI.ODCodeRangeFilter.StartRange">
            <summary>Gets the start value of the control.</summary>
        </member>
        <member name="P:OpenDental.UI.ODCodeRangeFilter.EndRange">
            <summary>Gets the end value of the control.</summary>
        </member>
        <member name="F:OpenDental.UI.ODCodeRangeFilter.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ODCodeRangeFilter.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ODCodeRangeFilter.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.ODButtonPanelEventHandler">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UI.ODButtonPanel">
            <summary>Allows for a button panel that is customizable and generated from data in the DB.</summary>
        </member>
        <member name="F:OpenDental.UI.ODButtonPanel._heightRow">
            <summary>Fixed 18 at 96dpi</summary>
        </member>
        <member name="F:OpenDental.UI.ODButtonPanel.SelectedItem">
            <summary>The last item that was clicked on. Can be null.</summary>
        </member>
        <member name="F:OpenDental.UI.ODButtonPanel.SelectedRow">
            <summary>The last row that was clicked on. -1 if no row selected.</summary>
        </member>
        <member name="F:OpenDental.UI.ODButtonPanel._font">
            <summary>Ignore the public font.  We want to control font internally.</summary>
        </member>
        <member name="E:OpenDental.UI.ODButtonPanel.ItemClickBut">
            <summary></summary>
        </member>
        <member name="E:OpenDental.UI.ODButtonPanel.RowDoubleClick">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.OnLoad(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.OnResize(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.ComputeWidthsAndLocations(System.Drawing.Graphics)">
            <summary>Computes the position of each column and the overall width.  Called from endUpdate and also from OnPaint.</summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.PointToItem(System.Drawing.Point)">
            <summary>Returns the panel item clicked on. Returns null if no item found.</summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Runs any time the control is invalidated.</summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.DrawBackG(System.Drawing.Graphics)">
            <summary>Draws a solid gray background.</summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.DrawOutline(System.Drawing.Graphics)">
            <summary>Draws outline around entire control.</summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.OnDoubleClick(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.BeginUpdate">
            <summary>Call this before adding any rows.  You would typically call Rows.Clear after this.</summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.EndUpdate">
            <summary>Must be called after adding rows.  This computes the columns, computes the rows, lays out the scrollbars, clears SelectedIndices, and invalidates.</summary>
        </member>
        <member name="F:OpenDental.UI.ODButtonPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.ODButtonPanelEventArgs">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODButtonPanelEventArgs.#ctor(OpenDental.UI.ODPanelItem,System.Int32,System.Windows.Forms.MouseButtons)">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ODButtonPanelEventArgs.Item">
            <summary>Can be null.</summary>
        </member>
        <member name="P:OpenDental.UI.ODButtonPanelEventArgs.Row">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ODButtonPanelEventArgs.Button">
            <summary>Gets which mouse button was pressed.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPanelItem.Text">
            <summary>Text to be displayed on the control.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPanelItem.ItemType">
            <summary>Currently label or button, determines how item will be drawn.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPanelItem.YPos">
            <summary>Zero based vertical row position.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPanelItem.ItemOrder">
            <summary>Zero based horizontal ordering of controls on the same row.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPanelItem.Tags">
            <summary>Used for attaching objects to this control. Potential uses: Images, procedures, delegate functions, etc. Will revisit later, maybe.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPanelItem.ItemWidth">
            <summary>Computed item width based on text, font, and graphics. Value is recalculated by ODButtonPanel when painting.</summary>
        </member>
        <member name="T:OpenDental.UI.ODPictureBox">
            <summary>Better and simpler than the MS picturebox.  Always resizes the image to fit in the box.  Never crops or stretches.</summary>
        </member>
        <member name="F:OpenDental.UI.ODPictureBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ODPictureBox.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODPictureBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ODPictureBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:OpenDental.UI.ODPictureBox.Image">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ODPictureBox.TextNullImage">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ODPictureBox.HasBorder">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODPictureBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODPictureBox.OnResize(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="E:OpenDental.UI.Camera.ImageCaptured">
            <summary>Event fired when an image from the camera is captured.</summary>
        </member>
        <member name="M:OpenDental.UI.Camera.ToString">
            <summary>Returns the camera name as the ToString implementation</summary>
        </member>
        <member name="M:OpenDental.UI.Camera.CaptureCallbackProc(System.Int32,System.Byte[])">
            <summary>Here is where the images come in as they are collected, as fast as they can and on a background thread.</summary>
        </member>
        <member name="T:OpenDental.UI.CameraEventArgs">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UI.CameraFrameSource">
            <summary>Contains a camera.  The event from the camera bubble up to here, which then causes the NewFrame event to fire.</summary>
        </member>
        <member name="M:OpenDental.UI.CameraFrameSource.#ctor(OpenDental.UI.Camera)">
            <summary>Constructor</summary>
        </member>
        <member name="T:OpenDental.UI.CameraMethods">
            <summary>Each camera has one of these.  This calls the native methods and passes results up to the Camera.  This also has an internal list of cameras.  Huh?  And its own Camera Huh????</summary>
        </member>
        <member name="M:OpenDental.UI.CameraMethods.#ctor">
            <summary>Constructor.  Also refreshes camera list</summary>
        </member>
        <member name="M:OpenDental.UI.CameraMethods.StartCamera(OpenDental.UI.Camera)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.Voice.FormMsgBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.Voice.FormMsgBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.Voice.FormMsgBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.Voice.VoiceCommand">
            <summary>Represents one command that a user can give.</summary>
        </member>
        <member name="F:OpenDental.UI.Voice.VoiceCommand.Commands">
            <summary>The list of input commands that will trigger this action.</summary>
        </member>
        <member name="F:OpenDental.UI.Voice.VoiceCommand.ActionToPerform">
            <summary>The action to be performed when this command is given.</summary>
        </member>
        <member name="F:OpenDental.UI.Voice.VoiceCommand.ListAreas">
            <summary>The areas of the program where this command can be used.</summary>
        </member>
        <member name="P:OpenDental.UI.Voice.VoiceCommand.Response">
            <summary>The verbal feedback that will be given when this command is executed.</summary>
        </member>
        <member name="F:OpenDental.UI.Voice.VoiceCommand.DoSayResponse">
            <summary>Whether or not the Response should be spoken when this command is executed.</summary>
        </member>
        <member name="F:OpenDental.UI.Voice.VoiceCommand._response">
            <summary>The verbal feedback that will be given when this command is executed.</summary>
        </member>
        <member name="T:OpenDental.UI.Voice.VoiceCommandAction">
            <summary>All the different actions that can be executed.</summary>
        </member>
        <member name="T:OpenDental.UI.Voice.VoiceCommandList">
            <summary>A list of all voice commands used in the program.</summary>
        </member>
        <member name="M:OpenDental.UI.Voice.VoiceCommandList.GetCommands(System.Collections.Generic.List{OpenDental.UI.Voice.VoiceCommandArea})">
            <summary>Gets all the commands used for the given areas of the program.</summary>
        </member>
        <member name="M:OpenDental.UI.Voice.VoiceCommandList.GoToToothCommandHelper(System.String,OpenDental.UI.Voice.VoiceCommandAction)">
            <summary>Returns a new Go To Tooth voice command for the toothnum and voice command action passed in.</summary>
        </member>
        <member name="M:OpenDental.UI.Voice.VoiceCommandList.GoToToothWithSurfaceXCommandHelper(System.String,System.String,OpenDental.UI.Voice.VoiceCommandAction)">
            <summary>Returns a new Go To Tooth voice command for the toothnum, position, and voice command action passed in.</summary>
        </member>
        <member name="M:OpenDental.UI.Voice.VoiceCommandList.GoToToothWithSurfaceCommandHelper(System.String,System.String,System.Boolean,OpenDental.UI.Voice.VoiceCommandAction)">
            <summary>Returns a new Go To Tooth voice command for the toothnum, surface, position, and voice command action passed in.</summary>
        </member>
        <member name="P:OpenDental.UI.Voice.VoiceController.IsListening">
            <summary>True if the controller is listening for audio input.</summary>
        </member>
        <member name="F:OpenDental.UI.Voice.VoiceController.ConfidenceThreshold">
            <summary>The mimimum level of confidence the recognizer must have to act upon audio input.</summary>
        </member>
        <member name="E:OpenDental.UI.Voice.VoiceController.SpeechRecognized">
            <summary>Event is fired when the speech is recognized.</summary>
        </member>
        <member name="F:OpenDental.UI.Voice.VoiceController._listCommands">
            <summary>The list of commands that this controller is listening for.</summary>
        </member>
        <member name="F:OpenDental.UI.Voice.VoiceController._isGivingFeedback">
            <summary>True if the controller will give verbal feedback.</summary>
        </member>
        <member name="M:OpenDental.UI.Voice.VoiceController.#ctor(OpenDental.UI.Voice.VoiceCommandArea,System.Boolean,System.Boolean)">
            <summary>Throws an exception of unable to find a suitable microphone.</summary>
        </member>
        <member name="M:OpenDental.UI.Voice.VoiceController.StartListening">
            <summary>This methods sets the controller to accept audio input.</summary>
        </member>
        <member name="M:OpenDental.UI.Voice.VoiceController.StopListening">
            <summary>This methods sets the controller to not accept audio input.</summary>
        </member>
        <member name="M:OpenDental.UI.Voice.VoiceMsgBox.Show(System.String)">
            <summary>Displays a message box with the text and reads the text aloud.</summary>
        </member>
        <member name="M:OpenDental.UI.Voice.VoiceMsgBox.Show(System.String,OpenDental.MsgBoxButtons)">
            <summary>Displays a message box with the text and reads the text aloud. The user can respond by clicking buttons or answering by voice.</summary>
        </member>
        <member name="F:OpenDental.UI.WarningIntegrity._didShowPopup">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.WarningIntegrity._scale">
            <summary>Usually 1, unless bigger than 18 wide.</summary>
        </member>
        <member name="F:OpenDental.UI.WarningIntegrity._color">
            <summary>Interior of triangle.</summary>
        </member>
        <member name="M:OpenDental.UI.WarningIntegrity.ToolTipSetString(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.WarningIntegrity.SetTriangleBehavior">
            <summary>Defines how the triangle will appear based on the EnumIntegrity behavior. Sets and starts a timer for behaviors with dynamic triangles.</summary>
        </member>
        <member name="M:OpenDental.UI.WarningIntegrity.TimerTriangle_Tick(System.Object,System.EventArgs)">
            <summary>Changes the alpha value (transparency) for triangles with dynamic behaviors. Only effects interior region; the border of the triangle can always be seen. This makes the tooltip always available to the user.</summary>
        </member>
        <member name="T:OpenDental.UI.WarningIntegrity.Tip">
            <summary>A tip holds the info to draw a curved line using 3 points.  Going clockwise, it draws from PointPrevious to PointCurveTip to PointNext</summary>
        </member>
        <member name="F:OpenDental.UI.WarningIntegrity.Tip.PointFPrevious0">
            <summary>0. This point is not drawn. It's to give the spline the right curve</summary>
        </member>
        <member name="F:OpenDental.UI.WarningIntegrity.Tip.PointFTipPrevious1">
            <summary>1</summary>
        </member>
        <member name="F:OpenDental.UI.WarningIntegrity.Tip.PointFTipCurve2">
            <summary>2</summary>
        </member>
        <member name="F:OpenDental.UI.WarningIntegrity.Tip.PointFTipNext3">
            <summary>3</summary>
        </member>
        <member name="F:OpenDental.UI.WarningIntegrity.Tip.PointFNext4">
            <summary>4. This point is not drawn. It's to give the spline the right curve</summary>
        </member>
        <member name="M:OpenDental.UI.WarningIntegrity.ShortenLine(OpenDental.UI.WarningIntegrity.Line,System.Single)">
            <summary>Shortens on both ends.</summary>
        </member>
        <member name="M:OpenDental.UI.WarningIntegrity.GetPointFBetween(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>With a proportion of 0.5 the point sits in the middle</summary>
        </member>
        <member name="F:OpenDental.UI.WarningIntegrity.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.WarningIntegrity.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.WarningIntegrity.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UI.BugSubmissionControl._subCur">
            <summary>Currently selected bugsubmission, either passed in from the calling form or from the group seleciton made in the Customer/Grouping grid.</summary>
        </member>
        <member name="F:OpenDental.UI.BugSubmissionControl._patCur">
            <summary>The patient associated to _subCur</summary>
        </member>
        <member name="F:OpenDental.UI.BugSubmissionControl._controlMode">
            <summary>Controls if the Customer/Grouping grid is used.</summary>
        </member>
        <member name="F:OpenDental.UI.BugSubmissionControl._groupSelection">
            <summary>Passed in when grouping logic needs to be considered.</summary>
        </member>
        <member name="F:OpenDental.UI.BugSubmissionControl._listSubs">
            <summary>List of bug submissions to be used in teh Customer/Grouping grid. Logic is dependent on _groupSelection value.</summary>
        </member>
        <member name="F:OpenDental.UI.BugSubmissionControl.TextDevNoteLeave">
            <summary>Fires when the user leaves the TextDevNote textbox.</summary>
        </member>
        <member name="F:OpenDental.UI.BugSubmissionControl._dictPatients">
            <summary>Dictionary of patients that will lazy load as users click on entries.  The key is the Registration Key.</summary>
        </member>
        <member name="F:OpenDental.UI.BugSubmissionControl.OnGridCustomerSubsCellClick">
            <summary>Fires when the user clicks the customer subs grid.</summary>
        </member>
        <member name="M:OpenDental.UI.BugSubmissionControl.RefreshData(System.Collections.Generic.Dictionary{System.String,OpenDentBusiness.Patient},System.Int32,System.Collections.Generic.List{OpenDentBusiness.BugSubmission})">
            <summary>Must be called before RefreshView(...) to set the internal data.</summary>
        </member>
        <member name="M:OpenDental.UI.BugSubmissionControl.RefreshView(OpenDentBusiness.BugSubmission,System.Boolean)">
            <summary>Used to refresh the view to show the given sub information. Make sure and call RefreshData(...) when data has refreshed.</summary>
            <param name="sub">The bugSubmission that will be used to fill the UI.</param>
            <param name="pat">The bugSubmissions assocated patient, used for linking task and UI.</param>
            <param name="groupSelection">When using the control to view many bugSubmissions this is the grouping selection.</param>
            <param name="listSubs">The list of bugSubmissions to be considered in teh Customer/Grouping grid based on the groupSelection value.</param>
        </member>
        <member name="M:OpenDental.UI.BugSubmissionControl.SetCustomerInfo(OpenDentBusiness.BugSubmission,System.Boolean)">
            <summary>When sub is set, fills customer group box with various information.
            When null, clears all fields.</summary>
        </member>
        <member name="F:OpenDental.UI.BugSubmissionControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.BugSubmissionControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.BugSubmissionControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UI.WindowingSlider._tick">
            <summary>The width, in pixels, of one increment within the allowed 0-255 range.</summary>
        </member>
        <member name="F:OpenDental.UI.WindowingSlider._pixLeftStart">
            <summary>The original pixel position of the button in question. The pointy part.</summary>
        </member>
        <member name="P:OpenDental.UI.WindowingSlider.MinVal">
            <summary>The value of the left slider.</summary>
        </member>
        <member name="P:OpenDental.UI.WindowingSlider.MaxVal">
            <summary>The value of the right slider, max 255.</summary>
        </member>
        <member name="M:OpenDental.UI.WindowingSlider.GetRectMiddle">
            <summary>Gets the outline path of the middle button that connects the two ends. But it's partly tucked under the end buttons.</summary>
        </member>
        <member name="M:OpenDental.UI.WindowingSlider.GetPathLeft">
            <summary>Gets the outline path of the left end button.</summary>
        </member>
        <member name="M:OpenDental.UI.WindowingSlider.GetPathRight">
            <summary>Gets the outline path of the right end button.</summary>
        </member>
        <member name="M:OpenDental.UI.WindowingSlider.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.WindowingSlider.OnMouseLeave(System.EventArgs)">
            <summary>Resets button appearance.  Repaints only if necessary.</summary>
        </member>
        <member name="M:OpenDental.UI.WindowingSlider.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Change the button to a pressed state.</summary>
        </member>
        <member name="M:OpenDental.UI.WindowingSlider.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Change button to hover state and repaint if needed.</summary>
        </member>
        <member name="M:OpenDental.UI.WindowingSlider.OnScroll">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.WindowingSlider.OnScrollComplete">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UI.WindowingSlider.EnumSliderButState">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.WindowingSlider.EnumSliderButState.Normal">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.WindowingSlider.EnumSliderButState.Hover">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.WindowingSlider.EnumSliderButState.Pressed">
            <summary>Mouse down. Not a permanent toggle state.</summary>
        </member>
        <member name="F:OpenDental.UI.WindowingSlider.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.WindowingSlider.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.WindowingSlider.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.ODLightSignalGridClickEventHandler">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.LightSignalGrid._scrollVal">
            <summary>number of pixels that the control has been scrolled by.</summary>
        </member>
        <member name="E:OpenDental.UI.LightSignalGrid.ButtonClick">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.SetButtons(OpenDentBusiness.SigButDef[])">
            <summary>This will clear the buttons, reset buttons to the specified list, reset the buttonstates, layout the rows, and invalidate for repaint.</summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.SetButtonActive(System.Int32,System.Drawing.Color,OpenDentBusiness.SigMessage)">
            <summary>Sets the specified buttonIndex to a color and attaches the signal responsible.  This is also used for the manual ack to increase responsiveness.  buttonIndex is 0-based.</summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.ProcessAck(System.Int64)">
            <summary>An ack coming from the database.  If it applies to any lights currently showing, then those lights will be turned off.  Returns the 0-based index of the light acked, or -1.</summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>This should only happen when mouse enters. Only causes a repaint if needed.</summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.HitTest(System.Int32,System.Int32)">
            <summary>Returns the 0-based button index that contains these coordinates, or -1 if no hit.</summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.OnMouseLeave(System.EventArgs)">
            <summary>Resets button appearance. This will also deactivate the button if it has been pressed but not released. A pressed button will still be hot, however, so that if the mouse enters again, it will behave properly.  Repaints only if necessary.</summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Change the button to a pressed state.</summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Change button to hover state and repaint if needed.</summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.OnButtonClicked(System.Int32,OpenDentBusiness.SigButDef,OpenDentBusiness.SigMessage)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.LightSignalGrid.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UI.LightSignalGrid.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UI.SignalButtonState">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.SignalButtonState.Text">
            <summary>This is also present in the def, but this makes it easier to access.</summary>
        </member>
        <member name="F:OpenDental.UI.SignalButtonState.ButDef">
            <summary>The def assigned to this index.</summary>
        </member>
        <member name="F:OpenDental.UI.SignalButtonState.CurrentColor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.SignalButtonState.State">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.SignalButtonState.ActiveSignal">
            <summary>If this button is lit up, then this will contain the signal that caused it.
            That way, when user clicks on the button to ack, the sigmessage object in the db can be ack'd properly.</summary>
        </member>
        <member name="T:OpenDental.UI.ODLightSignalGridClickEventArgs">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODLightSignalGridClickEventArgs.#ctor(System.Int32,OpenDentBusiness.SigButDef,OpenDentBusiness.SigMessage)">
            <summary></summary>
            <param name="myButton"></param>
        </member>
        <member name="P:OpenDental.UI.ODLightSignalGridClickEventArgs.ButtonIndex">
            <summary>Remember that this is the 0-based index, but the database uses 1-based.</summary>
        </member>
        <member name="P:OpenDental.UI.ODLightSignalGridClickEventArgs.ButtonDef">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ODLightSignalGridClickEventArgs.ActiveSignal">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UI.ToolBarOD">
            <summary>Open Dental Toolbar. Jordan is the only one allowed to edit this file.</summary>
        </member>
        <member name="F:OpenDental.UI.ToolBarOD.LayoutManager">
            <summary>Just holds the scaling factor.</summary>
        </member>
        <member name="F:OpenDental.UI.ToolBarOD._lineThickness">
            <summary>A hot button is either: 1.The button that the mouseDown happened on, regardless of the current position of the mouse, or 2.If the mouse is not down, the button in State.Hover. Keeping track of which one is hot allows faster painting during mouse events.</summary>
            <summary>Either 1 or 2, depending on the scale.  Float thicknesses don't look good.  Not all lines are affected, only the ones that need to be seen.</summary>
        </member>
        <member name="F:OpenDental.UI.ToolBarOD.textPageNav">
            <summary>This can be set from anywhere to affect all toolbars simultaneously.</summary>
        </member>
        <member name="F:OpenDental.UI.ToolBarOD._brushPushed">
            <summary>Darker</summary>
        </member>
        <member name="F:OpenDental.UI.ToolBarOD.timer">
            <summary>This is temporarily used to fix artifacts from Direct2D.</summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ToolBarOD.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.OnButtonClicked(OpenDental.UI.ODToolBarButton)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.OnPageNav(System.Int32)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.OnLoad(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Change the button to a pressed state.</summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.OnMouseLeave(System.EventArgs)">
            <summary>Resets button appearance. This will also deactivate the button if it has been pressed but not released. A pressed button will still be hot, however, so that if the mouse enters again, it will behave properly.  Repaints only if necessary.</summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>This should only happen when mouse enters. Only causes a repaint if needed.</summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Change button to hover state and repaint if needed.</summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Runs any time the control is invalidated.</summary>
        </member>
        <member name="P:OpenDental.UI.ToolBarOD.Buttons">
            <summary>Gets the collection of ODToolBarButton controls assigned to the toolbar control.</summary>
        </member>
        <member name="P:OpenDental.UI.ToolBarOD.ImageList">
            <summary>Gets or sets the collection of images available to the toolbar buttons.</summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.DrawButton(System.Drawing.Graphics,OpenDental.UI.ODToolBarButton)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ToolBarOD.HitTest(System.Int32,System.Int32)">
            <summary>Returns the button that contains these coordinates, or null if no hit.</summary>
        </member>
        <member name="T:OpenDental.UI.ODToolBarButtonClickEventHandler">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UI.ODToolBarButtonPageNavEventHandler">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UI.ODToolBarButtonClickEventArgs">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ODToolBarButtonClickEventArgs.Button">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UI.ODToolBarButtonPageNavEventArgs">
            <summary></summary>
        </member>
        <member name="P:OpenDental.UI.ODToolBarButtonPageNavEventArgs.NavValue">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UI.ODToolBarButton">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButton.Bounds">
            <summary>The bounds of this button.</summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButton.IsTogglePushed">
            <summary>Only used if style is ToggleButton.</summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButton.NotificationText">
            <summary>A one or two character notification string which will show just above the dropdown arrow when dropDownMenu is not null.  If null or empty, the dropdown arrow background will draw in the typical color and no text will show.  Otherwise the dropdown rectangle will use the notification color background.</summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButton.State">
            <summary>IsTogglePushed, Enabled, and isRed are handled separately</summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButton.Tag">
            <summary>Holds extra information about the button, so we can tell which button was clicked.  Tag will be set to a string for module specific buttons and will be a Program object for program link buttons.</summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButton.DateTimeLastClicked">
            <summary>DateTime of the last time this button was clicked. Used  to stop double clicking from firing 2 events.</summary>
        </member>
        <member name="M:OpenDental.UI.ODToolBarButton.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODToolBarButton.#ctor(System.String,System.Int32,System.String,System.Object)">
            <summary>Deprecated because we're moving away from ImageLists.  buttonTag will be a string for most buttons and will be a Program object for program link buttons.</summary>
        </member>
        <member name="M:OpenDental.UI.ODToolBarButton.#ctor(System.String,OpenDental.UI.EnumIcons,System.String,System.Object)">
            <summary>ButtonTag will be a string for most buttons and will be a Program object for program link buttons.</summary>
        </member>
        <member name="M:OpenDental.UI.ODToolBarButton.#ctor(System.String,System.EventHandler,OpenDental.UI.EnumIcons,System.String,System.Object)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODToolBarButton.#ctor(OpenDental.UI.ODToolBarButtonStyle)">
            <summary>Usually just used for Separators,</summary>
        </member>
        <member name="P:OpenDental.UI.ODToolBarButton.Bitmap">
            <summary>Rarely, we might want to set an image manually.</summary>
        </member>
        <member name="T:OpenDental.UI.ToolBarButtonState">
            <summary>IsTogglePushed, Enabled, and isRed are handled separately</summary>
        </member>
        <member name="F:OpenDental.UI.ToolBarButtonState.Normal">
            <summary>0.</summary>
        </member>
        <member name="F:OpenDental.UI.ToolBarButtonState.Hover">
            <summary>Mouse is hovering over the button and the mouse button is not pressed.</summary>
        </member>
        <member name="F:OpenDental.UI.ToolBarButtonState.Pressed">
            <summary>Mouse was pressed over this button and is still down, even if it has moved off this button or off the toolbar.</summary>
        </member>
        <member name="F:OpenDental.UI.ToolBarButtonState.DropPressed">
            <summary>In a dropdown button, only the dropdown portion is pressed. For hover, the entire button acts as one, but for pressing, the dropdown can be pressed separately.</summary>
        </member>
        <member name="T:OpenDental.UI.ODToolBarButtonStyle">
            <summary>Just like Forms.ToolBarButtonStyle, except includes some extras.</summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButtonStyle.DropDownButton">
            <summary>A button with a dropdown list on the right.</summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButtonStyle.NormalButton">
            <summary>A standard button</summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButtonStyle.Separator">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButtonStyle.ToggleButton">
            <summary>Toggles between pushed and not pushed when clicked on.</summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButtonStyle.Label">
            <summary>Not clickable. Just text where a button would normally be. Can also include an image.</summary>
        </member>
        <member name="F:OpenDental.UI.ODToolBarButtonStyle.PageNav">
            <summary>Editable textbox that fires page nav events. Includes a label after the textbox to show total pages.</summary>
        </member>
        <member name="T:OpenDental.UI.ODToolBarButtonCollection">
            <summary>A strongly typed collection of ODToolBarButtons</summary>
        </member>
        <member name="P:OpenDental.UI.ODToolBarButtonCollection.Item(System.Int32)">
            <summary>Returns the Button with the given index.</summary>
        </member>
        <member name="P:OpenDental.UI.ODToolBarButtonCollection.Item(System.String)">
            <summary>Returns the Button with the given string tag.</summary>
        </member>
        <member name="M:OpenDental.UI.ODToolBarButtonCollection.Add(OpenDental.UI.ODToolBarButton)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODToolBarButtonCollection.Remove(System.Int32)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODToolBarButtonCollection.IndexOf(OpenDental.UI.ODToolBarButton)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UI.ODToolBarButtonCollection.IndexOf(System.Object)">
            <summary>Returns the index of the button for the given tag. Returns -1 if a no button is found that matches the tag.</summary>
        </member>
        <member name="T:OpenDental.FormODBase">
            <summary>Most forms in OD inherit from this base form.  Handles custom border drawing, signal processing, and dpi awareness. See notes at top of this file.</summary>
        </member>
        <member name="F:OpenDental.FormODBase.AreBordersMS">
            <summary>Set to true to use traditional MS borders for all forms.</summary>
        </member>
        <member name="F:OpenDental.FormODBase.DoCalculateClientArea">
            <summary>This can be set to false to stop the client area for the window from re-calculating multiple times on windows that need to load a large amount of controls. Currently only used for FormClaimEdit which was calculating client area 20 times. Most other windows, even complex ones, only calculate 2-3 times.</summary>
        </member>
        <member name="F:OpenDental.FormODBase.IsDpiSystem">
            <summary>This gets set to true when the NoDpi.txt file is found. It only applies to UIManager, not LayoutManager.</summary>
        </member>
        <member name="F:OpenDental.FormODBase.IsUsingFormMaker">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormODBase.UsingUIManager">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormODBase._actionFilter">
            <summary>The given action to run after filter input is commited for _waitFilterMs.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._dateTimeLastModified">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormODBase._waitFilterMs">
            <summary>Default 1 second. The number of milliseconds to wait after the last user input on one of the specified filter controls to wait before calling _filterAction.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._fontTitle">
            <summary>If this is set in an inherited form, then the font of the title will be a different size.  This avoids touching form.Font because of ambient property complexities.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._hasClosed">
            <summary>Only true if FormClosed has been called by the system.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._hasShown">
            <summary>True when form has been shown by the system. Shown occurs last in the forms construction life cycle. The Shown event is only raised the first time a form is displayed.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._isImageFloatSelected">
            <summary>Property backer</summary>
        </member>
        <member name="F:OpenDental.FormODBase._listControlsFilter">
            <summary>List of controls in the form that are used to filter something in the form.</summary>
        </member>
        <member name="F:OpenDental.FormODBase.ListODFormsSubscribed">
            <summary>Each form adds itself to this list. When signals come in, they can then be passed off to each open form.  This will soon be changed. We will move this out of FormODBase and into a helper class. Forms that are interested in signals (there are only 17) will subscribe. This pulls us away from using inheritance and also allows it to work with the new WPF forms.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._threadFilter">
            <summary>The thread that is run to check if filter controls have had their changes commited.  If a single control is considered to have commited changes then the thread will only fire the _filterAction once and then will wait for more input.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._rectangleOnDesktopMouseDown">
            <summary>This is the size and location of the Form when mouse down, based in pixels. If multiple screens, it's coordinates of the entire combined desktop.</summary>
        </member>
        <member name="F:OpenDental.FormODBase.ElementHostUI">
            <summary>When using UIManager, this is the container for the canvas and all controls. It replaces PanelClient and the client area of the form.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._enumMouseDownRegion">
            <summary>If isMouseDown, then one of these is used to specify where.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._formSnap">
            <summary>Dispose handled automatically when this form closes.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._graphicsPathHelp">
            <summary>The circle around the ?. Disposed.</summary>
        </member>
        <member name="F:OpenDental.FormODBase.IsLayoutMS">
            <summary>Set to true to use the traditional MS layout engine instead of the OD LayoutManager for a single form. Used for internal tools that the customers will not see, like Job Manager. Downsides: no help button, no high dpi support, no scaling, no retention of "restore down" size.</summary>
        </member>
        <member name="F:OpenDental.FormODBase.LayoutManager">
            <summary>This handles the layout and fonts of all the controls on this form instead of using the default MS layout.  Required for high dpi support.  Layout is based on dock or anchor, just like always.  The client area of the window is now called PanelClient, which contains all the controls on the form.  Do not add or move any controls manually.  Use LayoutManager.Add() and .Move().</summary>
        </member>
        <member name="F:OpenDental.FormODBase.PanelClient">
            <summary>All controls are placed into this container panel.  This represents the "client area" of the form.  This is used for all combinations of IsLayoutMS and AreBordersMS. If UsingUIManager, then this is not used and remains null.</summary>
        </member>
        <member name="F:OpenDental.FormODBase.PanelBorders">
            <summary>This panel is the same size as the form.  This is where all painting and mouse events happen.  The only reason we need to do this instead of painting directly on the form is because of a MS bug. The bug treats large portions of the window as the LowerR drag handle when the window is moved over to a high dpi screen.  This is very easy to duplicate on any simple new project, and it misbehaves across all situations, the only reqirements being high dpi with a dialog. We also use this panel with UIManager, but we cover up the L,R, and B.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._pointMouseScreenPrevious">
            <summary>In screen coordinates.  Prevents drawing events unless mouse moves.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._pointMouseDownScreen">
            <summary>In screen coordinates.  For dragging.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._regionButHelp">
            <summary>The circle around the ?. Disposed.</summary>
        </member>
        <member name="F:OpenDental.FormODBase.timerHoverSnap">
            <summary>This tracks when we hover over the maximize button to trigger the snap window. Disposed.</summary>
        </member>
        <member name="F:OpenDental.FormODBase._windowStateOld">
            <summary>Keeps track of window state changes.  We use it to restore minimized forms to their previous state.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormODBase.OnCloseXClicked">
            <summary></summary>
        </member>
        <member name="P:OpenDental.FormODBase.EscClosesWindow">
            <summary>Default true.</summary>
        </member>
        <member name="P:OpenDental.FormODBase.HasHelpButton">
            <summary>Default true. Set to false to hide the help button.  Window 'HelpButton' property is ignored.</summary>
        </member>
        <member name="P:OpenDental.FormODBase.HasShown">
            <summary>True when form has been shown by the system. Used for filter controls and for closing open forms. Number of references is incorrect because called by reflection in FormOpenDental.</summary>
        </member>
        <member name="P:OpenDental.FormODBase.HasClosed">
            <summary>Only true if FormClosed has been called by the system.  No references, but used in IsDisposedOrClosed via reflection.</summary>
        </member>
        <member name="P:OpenDental.FormODBase.IsBorderLocked">
            <summary>Set to true for Kiosk to block user from dragging or clicking.</summary>
        </member>
        <member name="P:OpenDental.FormODBase.IsImageFloatSelected">
            <summary>True if this form is the "selected" image float.  Only one should be selected at a time.  Any image float that is not selected will have the title bar turn white to indicate so.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:OpenDental.FormODBase.Text" -->
        <member name="M:OpenDental.FormODBase.ODForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>Fires first for all FormClosing events of this form.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.DisableAllExcept(System.Windows.Forms.Control[])">
            <summary>Sets the entire form into "read only" mode by disabling all controls on the form. Pass in any controls that should stay enabled. This can be used to stop users from clicking items they do not have permission for.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.IsDisposedOrClosed(System.Windows.Forms.Form)">
            <summary>Returns true if the form passed in has been disposed or if it extends ODForm and HasClosed is true.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.Restore">
            <summary>If form is minimized, this restores it to either normal or maximized, depending on previous state.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.MaxInset">
            <summary>When maximized, this is the additional inset of panelClient on all 4 sides to compensate for the perimeter getting cut off. This doesn't get scaled.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.InitializeLayoutManager(System.Boolean,System.Boolean)">
            <summary>This method or InitializeUIManager must be present on every form that derives from ODForm.  It should be immediately after InitializeComponent.  LayoutManager is responsible for layout of all controls instead of using the default MS layout.  "isLayoutMS" can be set to true for this form.  Downside: no high dpi support.  Exclusively used for internal tools that the customers will not see.  is96dpi must be used only in conjunction with Dpi.SetUnaware(), and Jordan should be involved.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.SetBorderColor(OpenDentBusiness.DefCatMiscColors,System.Drawing.Color)">
            <summary>Takes one of the 3 border colors at a time.</summary>
        </member>
        <member name="T:OpenDental.FormODBase.EnumMouseDownRegion">
            <summary>If isMouseDown, then one of these is used to specify where.</summary>
        </member>
        <member name="F:OpenDental.FormODBase.EnumMouseDownRegion.Title">
            <summary>Dragging entire form</summary>
        </member>
        <member name="F:OpenDental.FormODBase.EnumMouseDownRegion.Top">
            <summary>Resizing top edge.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.ProcessSignalODs(System.Collections.Generic.List{OpenDentBusiness.Signalod})">
            <summary>Override this if your form cares about signal processing.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.GetHelpOverride">
            <summary>Used to send a different form name to ODHelp.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.SetFilterControlsAndAction(System.Action,System.Int32,System.Windows.Forms.Control[])">
            <summary>This introduces a delay between when a filter control is changed and when an action is taken. For example, when searching for a patient, each keystroke changes the filter criteria for the LName, and this makes sure that the grid won't be refreshed more than once per second. Call before form is Shown. Adds the given controls to the list of filter controls. We will loop through all the controls in the list to identify the first control that has had its filter change commited for _waitFilterMs.  Once a filter is commited, the filter action will be invoked and the thread will wait for the next filter change to start the thread again.  Controls which are not text-based will commit immediately and will not use a thread (ex checkboxes).  _waitFilterMs: The number of milliseconds to wait after the last user input on one of the specified filter controls to wait before calling _filterAction.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.SetFilterControlsAndAction(System.Action,System.Windows.Forms.Control[])">
            <summary>This introduces a delay between when a filter control is changed and when an action is taken. For example, when searching for a patient, each keystroke changes the filter criteria for the LName, and this makes sure that the grid won't be refreshed more than once per second. Call before form is Shown. Adds the given controls to the list of filter controls. We will loop through all the controls in the list to identify the first control that has had its filter change commited for _waitFilterMs.  Once a filter is commited, the filter action will be invoked and the thread will wait for the next filter change to start the thread again.  Controls which are not text-based will commit immediately and will not use a thread (ex checkboxes).</summary>
        </member>
        <member name="M:OpenDental.FormODBase.IsControlValid(System.Windows.Forms.Control)">
            <summary>A typical try-get, with an additional check to see if the form is disposed or control is disposed.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.Control_FilterCommitImmediate(System.Object,System.EventArgs)">
            <summary>Commits the filter action immediately.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.Control_FilterChange(System.Object,System.EventArgs)">
            <summary>Commits the filter action according to the delayed interval and input wakeup algorithm which uses _waitFilterMs.</summary>
        </member>
        <member name="M:OpenDental.FormODBase.ThreadCheckFilterChangeCommitted(CodeBase.ODThread)">
            <summary>The thread belonging to Control_FilterChange.</summary>
        </member>
        <member name="T:OpenDental.LayoutManagerForms">
            <summary>This handles the bounds and fonts of all the controls on a form.  See notes below.  Gets passed to our custom controls on a form.</summary>
        </member>
        <member name="F:OpenDental.LayoutManagerForms.FontInitial">
            <summary>"Microsoft Sans Serif",8.25f. Every single form and UserControl must have this set, or MS will use its own default font, which is different for each computer based on Windows version and dpi. This is already present in FormODBase so that inherited forms do not also need it, so UserControls is where you have to watch out for it.</summary>
        </member>
        <member name="F:OpenDental.LayoutManagerForms._heightTitleBar96">
            <summary>Height of title bar at 96 dpi. Includes any border lines, if we decide to draw them. Icon is usually 16.</summary>
        </member>
        <member name="F:OpenDental.LayoutManagerForms.IsLayoutMS">
            <summary>See FormODBase.IsLayoutMS.  This is a copy.</summary>
        </member>
        <member name="F:OpenDental.LayoutManagerForms.IsLayingOut">
            <summary>True if in the middle of laying out. Moving controls can sometimes trigger another layout event. Example, sizing a split container triggers its splitterMoved event.  This bool prevents another layout from starting in cases like that.  2022-12-26- This may be deprecated since we no longer use MS SplitContainers.</summary>
        </member>
        <member name="F:OpenDental.LayoutManagerForms._listControl96Infos">
            <summary>This is a list of the original 96dpi layout info, as it was in the designer.</summary>
        </member>
        <member name="F:OpenDental.LayoutManagerForms.MaxInset">
            <summary>When maximized, this is the additional inset of panelClient on all 4 sides to compensate for the perimeter getting cut off. This doesn't get scaled.</summary>
        </member>
        <member name="F:OpenDental.LayoutManagerForms._scaleMS">
            <summary>Example 1.5. This is the scale of the current screen for the form that owns this instance of LayoutManager.  It gets combined with ComputerPrefs.LocalComputer.Zoom to create ScaleMy.</summary>
        </member>
        <member name="F:OpenDental.LayoutManagerForms._widthBorder96">
            <summary>5. L,R,B border at 96dpi</summary>
        </member>
        <member name="F:OpenDental.LayoutManagerForms._zoomLocal">
            <summary>Pulled from ComputerPrefs.LocalComputer.Zoom/100. Example 1.2. Default is 1, and this is never 0.</summary>
        </member>
        <member name="F:OpenDental.LayoutManagerForms.ZoomTest">
            <summary>Example 140 to test 140% zoom</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.#ctor">
            <summary>This constructor just results in a default shell of a class.  ScaleMy is 1, and the scaling methods are available but always return 1.  None of the other functionality is used.</summary>
        </member>
        <member name="E:OpenDental.LayoutManagerForms.ZoomChanged">
            <summary>Whether because of device dpi change or user changing the zoom level.  Frequently, SizeChanged is good enough and this isn't needed.  But sometimes, size doesn't change when zoom changes.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.Add(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Int32)">
            <summary>Adds any Control to any parent Control.  Prior to adding a control here, set its properties.  Location and Size must first be adjusted to full scale (MS plus zoom) for current dpi.  For Location, it's usually simplest to use relative or measured numbers because they are already scaled. For absolute values that are at 96dpi, like maybe a specific Size for example, pass it through LayoutManager.Scale, .ScaleF, .ScaleSize, etc. prior to adding the Control.  Fonts are really tricky and hard to explain.  See the discussion at the top of this file and the one in ScaleMyFont().  Usually just set it to form.Font or to any other Font which is already scaled by the zoom amount.  Do not pass in fonts that are already scaled with the MS scaling.  Recursively adds info about the children to our internal tracking list.  Supports re-adding a control that was previously removed from the form programmatically as long as you didn't manually move or add any children.  When you are setting properties prior to using add, just do it like normal rather than using LayoutManager.Move.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.AddUnscaled(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>Extremely rare.  Used when adding a control to a form, and it contains controls of its own. This scales them all as it adds them.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.AddToList96(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>Adds this control to _listControl96Infos. Recursively adds its children.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.AddToList96Unscaled(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>Extremely rare. Recursive.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.CalculateBounds96(System.Drawing.Rectangle,System.Windows.Forms.Control,System.Windows.Forms.AnchorStyles)">
            <summary>Calculates backward to the original position it would have been at 96dpi and if parent had not resized.  Also incorporates math for any changes to control.Anchor.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.Move(System.Windows.Forms.Control,System.Drawing.Rectangle)">
            <summary>Moves a control location and size. Read the notes on Add() for details on how to scale bounds prior to passing them in here.  This takes effect immediately, and the LayoutManager is now informed about the change.  This also performs a recursive Layout on the children of this control so that they get sized based on the change of this parent.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.MoveHeight(System.Windows.Forms.Control,System.Int32)">
            <summary>Changes the height on a control. Read the notes on Add() for details on how to scale height prior to passing it in here.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.MoveLocation(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>Changes the location of a control.  Read the notes on Add() for details on how to scale location prior to passing it in here.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.MoveSize(System.Windows.Forms.Control,System.Drawing.Size)">
            <summary>Changes the size of a control.  Read the notes on Add() for details on how to scale size prior to passing it in here.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.MoveWidth(System.Windows.Forms.Control,System.Int32)">
            <summary>Changes the width of a control.  Read the notes on Add() for details on how to scale width prior to passing it in here.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.SetNoAnchorDock(System.Windows.Forms.Control)">
            <summary>Sets this control to have no anchor, docking, autosize, etc.  This prevents Windows from moving the controls and lets us take responsibility for that.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.SetPanelClient(OpenDental.FormODBase)">
            <summary>Adds PanelClient to this form, then moves all the controls into that panel.  Sets all the controls to no longer be docked or anchored so that the custom layout code on the form is responsible for that.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.Synch(System.Windows.Forms.Control)">
            <summary>Jordan needs to do these.  Rare.  Use this immediately after a control has been moved or sized by something not under our control and we need to synch that change over to the LayoutManager so that it's aware of the move.  Make a comment each time this is used so everyone knows what change we are trying to pick up. </summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.GetHeightTitleBar">
            <summary>This is scaled. 26 at 96dpi.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.ScaleMy">
            <summary>Example 1.8. This is the scale of this form and all its controls, compared to 96dpi as 100%.  It's a combination of _scaleMS and ComputerPrefs.LocalComputer.Zoom.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.ScaleMyFont">
            <summary>Example 1.2. This is the scale for Fonts, which is only ComputerPrefs.LocalComputer.Zoom/100.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.GetScaleMS">
            <summary>Example 1.5</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.GetZoomLocal">
            <summary>Example 1.2</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.SetScaleMS(System.Single)">
            <summary>Example 1.5. Gets combined with zoom to create ScaleMy.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.WidthBorder">
            <summary>5, scaled.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.Round(System.Single)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.Scale(System.Single)">
            <summary>Converts a float or int from 96dpi to current scale.  Rounds to nearest int.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.ScaleF(System.Single)">
            <summary>Converts a float or int from 96dpi to current scale.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.ScaleFontODZoom(System.Single)">
            <summary>Converts a float or int from 96dpi to current scale, but only (most of) the OD zoom, not the MS scale.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.ScaleFontODZoom(System.Drawing.Font)">
            <summary>Converts a font to current scale, but only (most of) the OD zoom, not the MS scale.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.ScaleMS(System.Single)">
            <summary>Scales a number only by the MS scale component.  This is used after we measure a font that was only scaled by the ODZoom component.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.ScalePoint(System.Drawing.Point)">
            <summary>Converts a point from 96dpi to current scale.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.ScaleSize(System.Drawing.Size)">
            <summary>Converts a size from 96dpi to current scale.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.Unscale(System.Single)">
            <summary>Converts a float or int from current screen dpi to 96dpi.  Not used very often because floats are usually better.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.UnscaleF(System.Single)">
            <summary>Converts a float or int from current screen dpi to 96dpi.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.UnscaleFontODZoom(System.Single)">
            <summary>Converts a float or int from zoom dpi to 96dpi.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.UnscaleMS(System.Single)">
            <summary>Example 10/1.5=6.7, which is smaller</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.LayoutFormBoundsAndFonts(OpenDental.FormODBase)">
            <summary>Sets bounds and font of all child controls.  Does not alter bounds of this form itself. This must get called whether IsLayoutMS or not because it also needs to handle FormODBase.AreBordersMS or not.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.LayoutControlBoundsAndFonts(System.Windows.Forms.Control)">
            <summary>Sets bounds and font of all child controls.  Does not alter bounds of this control itself.  The control passed in will already be at the correct size. Intentionally separate from MS layout, which should have no effect on the controls because we removed all their anchors.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.LayoutChildren(System.Windows.Forms.Control)">
            <summary>Recursive. Only changes children, not the control itself.  The control passed in will already be at the new size. </summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.LayoutHandleManualAlteration(OpenDental.Control96Info@,System.Windows.Forms.Control)">
            <summary>If a programmer added, moved, or resized a control, this will identify it and throw an exception.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.LayoutSkipChildren(OpenDental.Control96Info,System.Windows.Forms.Control)">
            <summary>Returns true to indicate that we skip layout of children.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.LayoutSkipSelf(OpenDental.Control96Info,System.Windows.Forms.Control)">
            <summary>Returns true indicate that we skip layout of this type of control.  The decision to layout its children is separate.  Because these types of controls are skipped, there is also no complaint when they get resized by something else.</summary>
        </member>
        <member name="M:OpenDental.LayoutManagerForms.PassLayoutManager(System.Windows.Forms.Control)">
            <summary>Passes this LayoutManager object to any of our custom controls so that they have access to the same scale numbers as the form.</summary>
        </member>
        <member name="T:OpenDental.Control96Info">
            <summary>This keeps track of control or form bounds and font, all at 96dpi.  This allows absolute positioning instead of relative positioning.</summary>
        </member>
        <member name="F:OpenDental.Control96Info.ControlRef">
            <summary>A reference to the control that this info refers to.</summary>
        </member>
        <member name="F:OpenDental.Control96Info.Name">
            <summary>Helps with troubleshooting. Some controls do not have names, and other names are duplicates.  For example, vertical scrollbars on two different grids.</summary>
        </member>
        <member name="F:OpenDental.Control96Info.RectangleF96Orig">
            <summary>The original bounds of this control at virtual 96dpi pixels.  Starts out as the actual numbers from the designer.  Doesn't get changed with any automatic sizing so that it preserves the original spacial relationships.  It does get changed when a programmer intentionally moves a control, but the number stored here is as it would be in the original unsized form.</summary>
        </member>
        <member name="F:OpenDental.Control96Info.BoundsLast">
            <summary>Nobody but the LayoutManager should be moving controls for any reason.  If they do, this lets the LayoutManager sense it.  These bounds are at current scale, not 96 dpi, so not float.</summary>
        </member>
        <member name="F:OpenDental.Control96Info.ClientSize96Orig">
            <summary>ClientSize at 96 dpi.</summary>
        </member>
        <member name="F:OpenDental.Control96Info.Dock">
            <summary>This takes priority over anchor.</summary>
        </member>
        <member name="M:OpenDental.Control96Info.#ctor(System.Windows.Forms.Control)">
            <summary>This keeps track of control or form bounds and font, all at 96dpi.  This allows absolute positioning instead of relative positioning.</summary>
        </member>
        <member name="F:OpenDental.ClinicPrefHelper._listClinicPrefs">
            <summary>This list includes all clinics as well the "default" pref with clinicnum=0.  It includes only those prefnames that are used on the form where this helper is present.  All items are mixed, and we filter.</summary>
        </member>
        <member name="F:OpenDental.ClinicPrefHelper._listPrefNames">
            <summary>List of prefs that this helper will manage.</summary>
        </member>
        <member name="M:OpenDental.ClinicPrefHelper.ValChangedByUser(OpenDentBusiness.PrefName,System.Int64,System.String)">
            <summary>For all types, so pass in string val.  This changes the value in the clinicpref that we have in memory.  It will be synched later.</summary>
        </member>
        <member name="M:OpenDental.ClinicPrefHelper.GetIntVal(OpenDentBusiness.PrefName,System.Int64)">
            <summary>If there is no val for this clinic, then it uses the default pref, which is also in the available list.</summary>
        </member>
        <member name="M:OpenDental.ClinicPrefHelper.GetBoolVal(OpenDentBusiness.PrefName,System.Int64)">
            <summary>If there is no val for this clinic, then it uses the default pref, which is also in the available list.</summary>
        </member>
        <member name="M:OpenDental.ClinicPrefHelper.GetStringVal(OpenDentBusiness.PrefName,System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ClinicPrefHelper.GetDefaultBoolVal(OpenDentBusiness.PrefName)">
            <summary>For ClinicNum==0</summary>
        </member>
        <member name="M:OpenDental.ClinicPrefHelper.GetDefaultStringVal(OpenDentBusiness.PrefName)">
            <summary>For ClinicNum==0</summary>
        </member>
        <member name="M:OpenDental.ClinicPrefHelper.SyncAllPrefs">
            <summary>Save all pref changes relating to prefs that were added in Init().</summary>>
        </member>
        <member name="M:OpenDental.ClinicPrefHelper.SyncPref(OpenDentBusiness.PrefName)">
            <summary>Save all pref changes relating to the given pref. PrefName must have been included in Init().
            It is suggested that you use SyncAllPrefs(), it is safer.</summary>>
        </member>
        <member name="M:OpenDental.ClinicPrefHelper.GetClinicsWithChanges">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ClinicPrefHelper.GetClinicsWithChanges(OpenDentBusiness.PrefName)">
            <summary>Essentially a "sync" method although it doesn't save to the db. Takes the list of new clinic preference values
            and compares it to the database. Returns a list of clinics that have had their preference values changed.</summary>
        </member>
        <member name="M:OpenDental.ClinicPrefHelper.ClinicHasClinicPref(OpenDentBusiness.PrefName,System.Int64)">
            <summary>SyncAll should be called before using this to clear out any non-existant (in the db) prefs from _listClinicPrefs.</summary>
        </member>
        <member name="T:OpenDental.FolderBrowserDialog">
            <summary>This class purposely obscures System.Windows.Forms.FolderBrowserDialog. We want to give it different behavior in web mode.</summary>
        </member>
        <member name="T:OpenDental.SheetLayoutController">
            <summary>A class that directly manipulates a UserControl which uses the dynamic sheetDef framework.</summary>
        </member>
        <member name="F:OpenDental.SheetLayoutController.LayoutManager">
            <summary>Gets set in constructor.</summary>
        </member>
        <member name="F:OpenDental.SheetLayoutController.ListSheetDefsLayout">
            <summary>List of all custom and internal SheetDefs for this dynamic control based on given _sheetType.  Will always contain the internal definition as last item in list.</summary>
        </member>
        <member name="F:OpenDental.SheetLayoutController._controlHosting">
            <summary>The control that contains other controls that are placed and sized based on their corresponding sheetFieldDefs.</summary>
        </member>
        <member name="F:OpenDental.SheetLayoutController._sheetDefDynamicLayoutCur">
            <summary>The sheetDef layout from ListLayoutSheetDefs which is currently being used to set the layout of this control.</summary>
        </member>
        <member name="F:OpenDental.SheetLayoutController._sheetType">
            <summary>The sheet type which is used to define the dynamic layout.</summary>
        </member>
        <member name="F:OpenDental.SheetLayoutController._listControlsStatic">
            <summary>Used when there are controls that are not part of they dynamic framework but still need to show.  Controls in list will affect the dynamic controls fill logic based on their position and visibility.</summary>
        </member>
        <member name="F:OpenDental.SheetLayoutController._userNumCur">
            <summary>The currently logged in UserOd.UserNum.</summary>
        </member>
        <member name="F:OpenDental.SheetLayoutController._hasUserLoggedOff">
            <summary>Only set true when user has been logged off, after a layout is finished this is always set back to false.</summary>
        </member>
        <member name="F:OpenDental.SheetLayoutController._clinicNumCur">
            <summary>The selected ClinicNum the last time the SheetLayout was initialized.</summary>
        </member>
        <member name="P:OpenDental.SheetLayoutController.SheetDefDynamicLayoutCur">
            <summary>Returns the currently loaded layout. May be null if ListLayoutSheetDefs is empty and the layout hasn't been initialized.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.#ctor(OpenDental.LayoutManagerForms,System.Windows.Forms.UserControl,System.Windows.Forms.Control[])">
            <summary>Set arrayStaticControls to any controls that are always visible or handle their own layout logic.  Controls that are dynamically resized will never impinge on these static controls.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.ReloadSheetLayout(OpenDentBusiness.SheetFieldLayoutMode,System.Collections.Generic.Dictionary{System.String,System.Windows.Forms.Control})">
            <summary>Reloads the control with any new sheet layouts available.  This should only be called if a dynamic sheetDef was added/modified/deleted, the SheetLayoutMode has changed, or a new user signed in.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.GetLayoutForUser">
            <summary>Attempts to find a UserOdPref indicating to the the most recently loaded layout for user, defaulting to the practice default if not found, then defaulting to the first SheetDef in listLayoutSheetDefs.  Returns null if listLayoutSheetDefs is null or empty.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.InitLayoutForSheetDef(OpenDentBusiness.SheetDef,OpenDentBusiness.SheetFieldLayoutMode,System.Collections.Generic.Dictionary{System.String,System.Windows.Forms.Control},System.Boolean,System.Boolean)">
            <summary>Uses the given sheetDef to set the location, size, and anchors for dynamic controls.  Usually only called from outside base DynamicLayoutControl when UI is switching to a different layout sheetDef.  Set isUserSelection true in order to save the current layout to the user's preference override.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.GetPertinentSheetFieldDefs(OpenDentBusiness.SheetFieldLayoutMode)">
            <summary>Returns list of SheetFieldDefs for the given sheetFieldLayoutMode. Orders the list exactly in the same order that it is drawn.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.UpdateChartLayoutUserPref">
            <summary>Updates or inserts (if necessary) the user's preference dictating which chart layout sheet def the user last viewed.
            Should only be called when a user selects a specific layout.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.RefreshGridHorizontalSpace(OpenDentBusiness.SheetFieldLayoutMode,System.Collections.Generic.Dictionary{System.String,System.Windows.Forms.Control})">
            <summary>Once all controls are set in their initial place this is called to adjust any controls which might be overlapping on the X axis
            due to a grid having GrowthBehaviorEnum.FillDownFitColumns.
            Since the width of the grid is determined by the sum of the column widths we might need to move some controls to the right.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.RefreshGridVerticalSpace(OpenDentBusiness.SheetFieldLayoutMode,System.Collections.Generic.Dictionary{System.String,System.Windows.Forms.Control},System.Collections.Generic.List{OpenDentBusiness.SheetFieldDef})">
            <summary>Once all controls are set in their initial place this is called to adjust any controls which might be overlapping on the Y axis
            due to a grid having GrowthBehaviorEnum.FillDownFitColumns or GrowthBehaviorEnum.FillDown.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.AdjustGridYPosition(OpenDentBusiness.SheetFieldDef,System.Windows.Forms.Control,System.Collections.Generic.List{System.Windows.Forms.Control},System.Int32)">
            <summary>Helper function that adjusts the Y position of a grid with growth behavior based on controls that are above it. Takes in an optional existing-adjustment parameter</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.TryGetControlForField(OpenDentBusiness.SheetFieldDef,System.Collections.Generic.Dictionary{System.String,System.Windows.Forms.Control},System.Windows.Forms.Control@)">
            <summary>Attempts to return a corresponding control for the given fieldDef from dictControls.
            Returns false if control is null.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.GetSheetFieldsHeightBelow(OpenDentBusiness.SheetFieldDef,System.Int32,System.Collections.Generic.List{OpenDentBusiness.SheetFieldDef},System.Collections.Generic.Dictionary{System.String,System.Windows.Forms.Control},System.Boolean@)">
            <summary>Returns the height beneath a given SheetFieldDef</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.GetStaticControlsHeightAbove(System.Int32)">
            <summary>The height above and below calculations assumes the staic controls are all entire at the top or bottom of the this dynamic control.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.GetStaticControlsHeightBelow(System.Int32)">
            <summary>The height above and below calculations assumes the staic controls are all entire at the top or bottom of the this dynamic control.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.IsControlAbove(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>Does not check for vertical overlap.</summary>
        </member>
        <member name="M:OpenDental.SheetLayoutController.IsControlBelow(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>Does not check for vertical overlap.</summary>
        </member>
        <member name="M:OpenDental.ApptViewItemL.GetOpsForApptView(OpenDentBusiness.ApptView,System.Boolean,System.Collections.Generic.List{OpenDentBusiness.Schedule})">
            <summary>Gets the 'visible' operatories for todays date with the currently selected appointment view.  This is strictly used when filtering the
            waiting room for clinics.  Pass in null for the dailySched if this is a weekly view.</summary>
        </member>
        <member name="M:OpenDental.ApptViewItemL.FillForApptView(System.Boolean,OpenDentBusiness.ApptView,System.Collections.Generic.List{OpenDentBusiness.Provider}@,System.Collections.Generic.List{OpenDentBusiness.Operatory}@,System.Collections.Generic.List{OpenDentBusiness.ApptViewItem}@,System.Collections.Generic.List{OpenDentBusiness.ApptViewItem}@,System.Int32@,System.Boolean)">
            <summary>Fills visProvs, visOps, forCurView, apptRows, and rowsPerIncr based on the appointment view passed in and whether it is for the week view or not.  This method uses 'out' variables so that the encompassing logic doesn't ALWAYS affect the global static variables used to draw the appointment views.  We don't want the following logic to affect the global static variables in the case where we are trying to get information needed to filter the waiting room.</summary>
        </member>
        <member name="M:OpenDental.ApptViewItemL.AddOpsForScheduledProvs(System.Boolean,System.Collections.Generic.List{OpenDentBusiness.Schedule},OpenDentBusiness.ApptView,System.Collections.Generic.List{OpenDentBusiness.Operatory}@)">
            <summary>When looking at a daily appointment module and the current appointment view is has 'OnlyScheduleProvs' turned on, this method will dynamically add additional operatories to visOps for providers that are scheduled to work.</summary>
        </member>
        <member name="M:OpenDental.ApptViewItemL.CompareOps(OpenDentBusiness.Operatory,OpenDentBusiness.Operatory)">
            <summary>Sorts list of operatories by ItemOrder.</summary>
        </member>
        <member name="M:OpenDental.ApptViewItemL.CompareProvs(OpenDentBusiness.Provider,OpenDentBusiness.Provider)">
            <summary>Sorts list of providers by ItemOrder.</summary>
        </member>
        <member name="M:OpenDental.AutomationL.Trigger(OpenDentBusiness.EnumAutomationTrigger,System.Collections.Generic.List{System.String},System.Int64,System.Int64)">
            <summary>ProcCodes will be null unless trigger is CompleteProcedure or ScheduledProcedure.
            This routine will generally fail silently.  Will return true if a trigger happened.</summary>
        </member>
        <member name="M:OpenDental.BugSubmissionL.AddBug(OpenDentBusiness.BugSubmission,OpenDentBusiness.Job)">
            <summary>Attempts to add a bug for the given sub and job.
            Job can be null, only used for pre appending "(Enhancement)" to bug description.
            Returns null if user canceled.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.CheckClearinghouseDefaults">
            <summary>Validates that default clearinghouses are set up correctly.
            Shows an error message to the user and returns false if they are not set up; Otherwise, returns true.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.LogClaimError(OpenDental.CreateClaimDataWrapper,System.String,System.Boolean,System.String)">
            <summary>Adds the message passed in to the ErrorMessage of the createClaimDataWrapper passed in.
            Shows the message passed in to the user if isVerbose is true. Be sure to translate message before calling this function.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.GetCreateClaimItems(System.Data.DataTable,System.Int32[])">
            <summary>Gets a list of CreateClaimItems from the current table and selected items.
            If no selections are made, the entire table is converted into CreateClaimItems and is returned.</summary>
            <param name="dataTable">This table must have three columns at minimum: ProcNum, ProcNumLab, and chargesDouble</param>
            <param name="arraySelectedIndices">Any selected rows in the corresponding table. An empty array is acceptable.</param>
            <returns>List of objects that can be used for creating claims instead of directly utilizing DataTable\ODGrid objects directly.</returns>
        </member>
        <member name="M:OpenDental.ClaimL.WarnUsersForDuplicateClaimProcs(OpenDental.CreateClaimDataWrapper,System.Boolean)">
            <summary> Block users from creating claims when a selected procedure is associated with duplicate claimprocs. A 
            'duplicate claimproc' does not mean that all of the information has been duplicated but instead means that there are two claimprocs for the same insurance plan.
            Specifically, a duplicate claimproc for primary insurance, or secondary insurance, or tertiary insurance, etc.
            Create a list of ProcNums that have duplicate claimprocs associated with them so that we can let the user know which procedures need manual intervention.
            </summary>
        </member>
        <member name="M:OpenDental.ClaimL.GetCreateClaimDataWrapper(OpenDentBusiness.Patient,OpenDentBusiness.Family,System.Collections.Generic.List{OpenDental.CreateClaimItem},System.Boolean,System.Boolean)">
            <summary>Returns a CreateClaimDataWrapper object that is specifically designed for the claim creation process from within the UI.
            It contains strongly typed variables which help indicate to the claim creation method how to correctly create the claim.
            It also contains variables that indicate to consuming methods what happened during the claim creation process.
            It is a requirement to have listCreateClaimItems filled with at least one item.
            Optionally set isSelectionRequired to true if the user must have already selected indices within the grid passed in.
            This method throws exceptions (specifically for developers), shows messages, and other UI related actions during claim creation.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.CreateClaimFromWrapper(System.Boolean,OpenDental.CreateClaimDataWrapper,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Returns the createClaimDataWrapper object that was passed in after manipulating it.
            This object will contain information about what happened during the claim creation process (e.g. error messages, refresh indicator, etc).
            E.g. CreateClaimDataWrapper.HasError will be true if any errors occurred. ErrorMessage might contain additional information about the error.
            This method assumes that createClaimDataWrapper was set up correctly (refer to GetCreateClaimDataWrapper() for how to set up this object).
            Set flag hasPrimaryClaim to true if the primary claim has already been created and should not be recreated.
            Set flag hasSecondaryClaim to true if the secondary claim has already been created and should not be recreated.
            Set flag hasTertiaryClaim to true if the tertiary claim has already been created and should not be recreated.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.AllocateUnearnedPayment(OpenDentBusiness.Patient,OpenDentBusiness.Family,System.Double,OpenDentBusiness.Claim)">
            <summary>Prompts the user to allocate unearned if necessary.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.InsCanadaValidateProcs(OpenDental.CreateClaimDataWrapper,System.Boolean)">
            <summary>Only allows up to 7 CreateClaimItems to be selected within createClaimDataWrapper when Canadian.
            Shows a message to the user stating this fact if enforced; Otherwise does nothing.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.CreateClaim(OpenDentBusiness.Claim,System.String,System.Boolean,OpenDental.CreateClaimDataWrapper,System.String)">
            <summary>All validation on the procedures is done here. Creates and saves the claim initially, attaching all selected procedures.
            But it does not refresh any data, does not do a final update of the new claim, and does not enter fee amounts.
            claimType=P,S,Tertiary,Med,or Other
            This method assumes that createClaimDataWrapper was set up correctly (refer to GetCreateClaimDataWrapper() for how to set up this object).
            Returns a 'new' claim object (ClaimNum=0) to indicate that the user does not want to create the claim or there are validation issues..</summary>
        </member>
        <member name="M:OpenDental.ClaimL.PromptForPrimaryOrSecondaryClaim(System.Collections.Generic.List{OpenDentBusiness.ClaimProc},System.Boolean)">
            <summary>
            After a medical or primary dental claim is received it will prompt the user on what to do about the corresponding primary or secondary claim.  If isPromptForSecondaryClaim is true,
            this is being used for the primary->secondary scenario.  If it is false, it is being used for the medical->primary scenario.
            </summary>
        </member>
        <member name="M:OpenDental.ClaimL.SendClaimSendQueueItems(System.Collections.Generic.List{OpenDentBusiness.ClaimSendQueueItem},System.Int64)">
            <summary>Validates and sends each of the ClaimSendQueueItems passed in. Returns a list of the ClaimSendQueueItem that were sent.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.SetClaimItemIsValid(OpenDentBusiness.ClaimSendQueueItem,OpenDentBusiness.Clearinghouse)">
            <summary>Sets the ClaimSendQueueItem.IsValid flag. Checks if the ClaimSendQueueItem passed in has any missing data.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.ClaimIsValid(OpenDentBusiness.Claim,System.Collections.Generic.List{OpenDentBusiness.ClaimProc})">
            <summary>Returns ClaimIsValidState.True if given claim is valid.
            Does NOT check for Canadian warnings.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.ClaimIsValid(System.String,System.String,System.Boolean,System.String,System.Collections.Generic.List{OpenDentBusiness.ClaimProc},System.Int64,System.Collections.Generic.List{OpenDentBusiness.InsPlan},System.String,System.String,OpenDentBusiness.ClaimCorrectionType)">
            <summary>Returns ClaimIsValidState.True if given claim is valid.
            Does NOT check for Canadian warnings.
            This should be called when there is a UI that the user can make changes to that might not be saved in the claim object.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.AreCreditsGreaterThanProcFee(System.Collections.Generic.List{OpenDentBusiness.ClaimProc})">
            <summary>Returns true if a procedure is over-credited in a way that violates one of the preferences that blocks insurance overpayment.
            This is in ClaimL because the methods called will show message boxes.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.AreAllCreditsGreaterThanProcFees(System.Collections.Generic.List{OpenDentBusiness.ClaimProc})">
            <summary>Returns true if the sum of all credits are not allowed to exceed adjusted procedure fees and one or more procedures are over-credited.
            Displays a message detailing how the procedures are over-credited, and what the remaining balances would be.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.AreWriteOffsGreaterThanProcFees(System.Collections.Generic.List{OpenDentBusiness.ClaimProc})">
            <summary>Returns true if write-offs are not allowed to exceed adjusted procedure fees, and one or more procedures are over-credited by write-offs.
            Displays a message detailing how the procedures are over-credited, and what the remaining balances would be.</summary>
        </member>
        <member name="M:OpenDental.ClaimL.IsInitialPrimaryInsGreaterThanProcFees(System.Collections.Generic.List{OpenDentBusiness.ClaimProc})">
            <summary>Returns true if the sum of the pay amount and write-off from the initial primary insurance payment are not allowed to exceed adjusted procedure fees,
            and one or more procedures are over-credited in this way. Displays a message detailing how the procedures are over-credited, and what the remaining balances would be.</summary>
        </member>
        <member name="T:OpenDental.CreateClaimDataWrapper">
            <summary>Helper class for passing around data required to create a claim. Also contains informational variables for consuming methods.
            This class helps so that we no longer have to pass around DataTables and ODGrids but instead can have a strongly typed object.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimDataWrapper.Patient_">
            <summary>The currently selected patient that is having a claim created.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimDataWrapper.Family_">
            <summary>The family of Pat.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimDataWrapper.CreateClaimData_">
            <summary>Pertinent insurance information for the corresponding patient and family.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimDataWrapper.ListCreateClaimItems">
            <summary>Technically this is just a list of account items in the sense that it is almost always comprised from account grids.
            These account items can represent anything selected in a grid that was showing to the user (typically an account grid from the Account module).
            Methods that utilize this class will know how to filter through these items in order to find the ones they care about.
            The main purpose of this list is to represent which grid items were selected (or not selected) and to what procedures they are associated to.
            This list allows us to stop passing around an ODGrid / DataTable combination which was causing concurrency bugs to get submitted.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimDataWrapper.CountClaimsCreated">
            <summary>A count of how many claims were created. This variable is handled by helper methods and should not be set manually.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimDataWrapper.ShouldRefresh">
            <summary>An indicator to the consuming method so that they know if they need to refresh their UI or not.
            Old comment: True if the Account module needs to be refreshed (old comment from ContrAccount.toolBarButIns_Click()).
            This variable is handled by helper methods and should not be set manually.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimDataWrapper.HasError">
            <summary>Set to true if any errors occurred when creating a claim; Otherwise, false.
            ErrorMessage should be the only other value trusted when this is set to true, no other information should be trusted.
            This variable is handled by helper methods and should not be set manually.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimDataWrapper.ErrorMessage">
            <summary>Additional information to help determine what errors happened while trying to create claims.
            Will typically be set to a detailed error to display to the user when HasError is true.
            However, it can still be empty even when an error occurred so HasError should be the indicator that an error occurred.
            This variable is handled by helper methods and should not be set manually.</summary>
        </member>
        <member name="T:OpenDental.CreateClaimItem">
            <summary>Represents a selected item (or all items) from a grid. Typically an item from the account grid in the Account module.
            Methods that utilize this class will know how to filter through these items in order to find the ones they care about.
            Therefore any value is acceptable for any of the variables within this class. E.g. an item with a ProcNum of 0 represents a non-procedure item.
            This object allows us to stop passing around an ODGrid / DataTable combination which was causing concurrency bugs to get submitted.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimItem.ProcNum">
            <summary>A value greater than 0 will indicate that this item represents a procedure.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimItem.ProcNumLab">
            <summary>A value greater than 0 will indicate that this item represents a lab. Currently only used by Canadians.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimItem.ChargesDouble">
            <summary>The charge associated to this item. Typically represents a procedure fee.</summary>
        </member>
        <member name="F:OpenDental.CreateClaimItem.IsSelected">
            <summary>Set to true if claim creation logic should consider this item for the claim that is being created; Otherwise, false.
            This variable is typically set by helper methods unless this item needs to be treated as if it were manually selected.
            Canadians have a hard limit of 7 items selected per claim so this value may change regardless of how it was instantiated.</summary>
        </member>
        <member name="T:OpenDental.ClearinghouseL">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ClearinghouseL.GetClearinghouseHq(System.Int64)">
            <summary>Returns the clearinghouse specified by the given num.  Will only return an HQ-level clearinghouse.
            Do not attempt to pass in a clinic-level clearinghouseNum.</summary>
        </member>
        <member name="M:OpenDental.ClearinghouseL.GetClearinghouseHq(System.Int64,System.Boolean)">
            <summary>Returns the clearinghouse specified by the given num.  Will only return an HQ-level clearinghouse.
            Do not attempt to pass in a clinic-level clearinghouseNum.  Can return null if no match found.</summary>
        </member>
        <member name="M:OpenDental.ClearinghouseL.GetDescript(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.DefL.FillGridDefs(OpenDental.UI.GridOD,OpenDentBusiness.DefCatOptions,System.Collections.Generic.List{OpenDentBusiness.Def})">
            <summary>Fills the passed in grid with the definitions in the passed in list.</summary>
        </member>
        <member name="M:OpenDental.DefL.TryHideDefSelectedInGrid(OpenDental.UI.GridOD,OpenDentBusiness.DefCatOptions)">
            <summary>Will attempt to hide the currently selected definition of the ODGrid that is passed in.</summary>
        </member>
        <member name="M:OpenDental.DefL.CanHideDef(OpenDentBusiness.Def,OpenDentBusiness.DefCatOptions)">
            <summary>Returns true if definition can be hidden or is already hidden. Displays error message and returns false if not.</summary>
        </member>
        <member name="M:OpenDental.DefL.Insert(OpenDentBusiness.Def)">
            <summary>Also handles a security log entry.</summary>
        </member>
        <member name="M:OpenDental.DefL.Update(OpenDentBusiness.Def)">
            <summary>Also handles a security log entry.</summary>
        </member>
        <member name="M:OpenDental.DefL.HideDef(OpenDentBusiness.Def)">
            <summary>Also handles a security log entry.</summary>
        </member>
        <member name="M:OpenDental.EmailAttachL.PickAttachments(OpenDentBusiness.Patient)">
            <summary>Allow the user to pick the files to be attached. The 'pat' argument can be null. If the user cancels at any step, the return value
            will be an empty list.</summary>
        </member>
        <member name="M:OpenDental.EtransL.PrintPreview835(OpenDentBusiness.X835,System.Int64)">
            <summary>Shows a print preview of the given x835.
            Provide the a valid claimNum to preview a single claim from the x835.</summary>
        </member>
        <member name="M:OpenDental.EtransL.ViewEra(System.Collections.Generic.List{System.Int64})">
            <summary>Either shows a single ERA if all claimNums share a single ERA.
            Otherwise shows FormEtrans835PickEra to get user selection and show an ERA.</summary>
        </member>
        <member name="M:OpenDental.EtransL.ViewEra(OpenDentBusiness.Claim)">
            <summary>Print previews a specific claim on an ERA.</summary>
        </member>
        <member name="M:OpenDental.EtransL.ViewEra(System.Collections.Generic.List{OpenDentBusiness.Etrans},System.Collections.Generic.List{OpenDentBusiness.Etrans835Attach},System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.EtransL.ViewFormForEra(OpenDentBusiness.Etrans,System.Windows.Forms.Form,System.Int64)">
            <summary>etrans must be the entire object due to butOK_Click(...) calling Etranss.Update(...).
            Anywhere we pull etrans from Etranss.RefreshHistory(...) will need to pull full object using an additional query.
            Eventually we should enhance Etranss.RefreshHistory(...) to return full objects.</summary>
        </member>
        <member name="M:OpenDental.EtransL.GetEraDataFiltered(System.Boolean,System.Collections.Generic.List{OpenDentBusiness.X835Status},System.Collections.Generic.List{System.Int64},System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.List{OpenDentBusiness.X835AutoProcessed},System.Boolean)">
            <summary>Returns an EraData which contains lists of Etrans, Etrans835s, and Etrans835Attaches limited by the passed in filters.</summary>
        </member>
        <member name="M:OpenDental.EtransL.FilterAutomatableERAs(System.Collections.Generic.List{OpenDentBusiness.Etrans},System.Collections.Generic.List{OpenDentBusiness.Etrans835},System.Collections.Generic.List{OpenDentBusiness.Etrans835Attach})">
            <summary>Removes Etrans and their associated Etrans835s from the lists passed in if they are not for automatable carriers.</summary>
        </member>
        <member name="M:OpenDental.EtransL.AddMissingEtrans835s(System.DateTime,System.DateTime)">
            <summary>Inserts Etrans835s for etrans that don't have them between(inclusive) the dateFrom and dateTo passed in.</summary>
        </member>
        <member name="M:OpenDental.EtransL.GoToAccountForHx835_Claim(OpenDentBusiness.Hx835_Claim)">
            <summary>Try to navigate to the account of the patient on an Hx835_Claim.</summary>
        </member>
        <member name="M:OpenDental.EtransL.TryDeleteEra(OpenDentBusiness.X835,System.Collections.Generic.List{OpenDentBusiness.Hx835_ShortClaim},System.Collections.Generic.List{OpenDentBusiness.Hx835_ShortClaimProc},System.Collections.Generic.List{OpenDentBusiness.Etrans835Attach})">
            <summary>Attempts to delete all etrans data for the given x835, returns true if successful otherwise false.
            Prompts user in either case.</summary>
        </member>
        <member name="M:OpenDental.EtransL.ImportEraClaimData(OpenDentBusiness.X835,OpenDentBusiness.Hx835_Claim,OpenDentBusiness.Claim,OpenDentBusiness.Patient,System.Collections.Generic.List{OpenDentBusiness.ClaimProc})">
            <summary>This function creates the payment claimprocs and displays the payment entry window.
            Warns the user if a supplemental payment is going to be made. Prompts user to choose an insurance payment plan to associate the payment to
            if multiple plans are available.</summary>
        </member>
        <member name="M:OpenDental.EtransL.FinalizeBatchPayment(OpenDentBusiness.X835)">
            <summary>Returns false if an error is encountered and payment is not finalized.
            Attempts to finalize the batch insurance payment for an ERA. The user will finish this process in FormClaimPayBatch.
            Warns the user if there are preauths that need to be detached, there are unreceived claims,
            there are claimprocs that are not recieved, or all claims are detached and no payment can be created.</summary>
        </member>
        <member name="M:OpenDental.EtransL.ImportInsurancePlansUsingPatientLimited(OpenDentBusiness.X834,System.Collections.Generic.List{OpenDentBusiness.PatientFor834Import},System.Boolean,System.Boolean,System.Boolean,System.Action{System.Int32,OpenDentBusiness.Patient})">
            <summary>For the given x834, imports all of the information about insurance plans.</summary>
            <param name="x834">The x834 object. This was generated by taking the .834 and parsing the text.</param>
            <param name="listPatientsFor834ImportsLimited">A list of all patients from the database.</param>
            <param name="doCreatePatient">Indicates if a new patient should be made automatically when no patients are found. Correlates to 
            PrefName.Ins834IsPatientCreate.</param>
            <param name="doDropExistingInsurance">Indicates that all patient plans that are not in the 834 will be dropped. Correlated to 
            PrefName.Ins834DropExistingPatPlans</param>
            <param name="stringBuilderErrorMessages">A stringbuilder that contains any errors.</param>
            <param name="actionShowStatus">An optional action to take that shows the status of the process to the user via the UI. The current row/index of
            the patient is the first parameter to the action. The second is the current patient.</param>
        </member>
        <member name="M:OpenDental.EtransL.DropPlan(OpenDentBusiness.PatPlan,OpenDentBusiness.InsPlan,OpenDentBusiness.InsSub,OpenDentBusiness.Carrier)">
            <summary>Drops the given patplan. Makes a security log.</summary>
        </member>
        <member name="M:OpenDental.EtransL.MoveFileToArchiveFolder(OpenDentBusiness.X834)">
            <summary>For the given x834, tries to move the file to the archive folder. Will return if this succeeded or not.</summary>
        </member>
        <member name="M:OpenDental.EtransL.InsertOrUpdateInsPlan(OpenDentBusiness.InsPlan,OpenDentBusiness.Hx834_Member,OpenDentBusiness.Carrier,OpenDentBusiness.Employer,System.Boolean,System.Boolean)">
            <summary>For the given information creates an insurance plan if insPlan is null. If one is passed in, it updates the plan. Returns the
            inserted/updated InsPlan object. localEmployer can be null.</summary>
        </member>
        <member name="M:OpenDental.EtransL.InsertOrUpdateInsSub(OpenDentBusiness.InsSub,OpenDentBusiness.InsPlan,OpenDentBusiness.Hx834_Member,OpenDentBusiness.Hx834_HealthCoverage,OpenDentBusiness.Carrier)">
            <summary>For the given information creates an insSub if insSub is null. If one is passed in, it updates the InsSub. Returns the
            inserted/updated InsSub object.</summary>
        </member>
        <member name="M:OpenDental.EtransL.InsertOrUpdatePatPlan(OpenDentBusiness.PatPlan,OpenDentBusiness.InsSub,OpenDentBusiness.InsPlan,OpenDentBusiness.Hx834_Member,OpenDentBusiness.Carrier,System.Collections.Generic.List{OpenDentBusiness.PatPlan})">
            <summary>For the given information creates an patPlan if patPlan is null. If one is passed in, it updates the patPlan. Returns the
            inserted/updated patPlan object.</summary>
        </member>
        <member name="T:OpenDental.FeeL">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FeeL.ImportFees(System.String,System.Int64,System.Int64,System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FeeL.CanEditFee(OpenDentBusiness.FeeSched,System.Int64,System.Int64)">
            <summary>Returns true if current user can edit the given feeSched, otherwise false.
            Shows a MessageBox if user is not allowed to edit.</summary>
        </member>
        <member name="M:OpenDental.FeeL.SaveAllowedFeesFromClaimPayment(System.Collections.Generic.List{OpenDentBusiness.ClaimProc},System.Collections.Generic.List{OpenDentBusiness.InsPlan})">
            <summary>The list of ClaimProcs passed in must all be for the same insurance plan.
            Updates fee schedules with the AllowedOverrides from the list of ClaimProcs.</summary>
        </member>
        <member name="T:OpenDental.Lan">
            <summary>Lan is short for language.  Used to translate text to another language.</summary>
        </member>
        <member name="M:OpenDental.Lan.g(System.String,System.String)">
            <summary>Converts a string to the current language.</summary>
        </member>
        <member name="M:OpenDental.Lan.g(System.Object,System.String)">
            <summary>Converts a string to the current language.</summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.Windows.Forms.Control,System.Windows.Forms.Menu[])">
            <summary>C is for control. Translates the text of all menu items to another language.</summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.String,System.Windows.Forms.Menu[])">
            <summary>C is for control. Translates the text of all menu items to another language.</summary>
        </member>
        <member name="M:OpenDental.Lan.TranslateMenuItems(System.String,System.Windows.Forms.MenuItem)">
            <summary>This is recursive</summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.Windows.Forms.Control,System.Windows.Forms.ContextMenuStrip[])">
            <summary>C is for control. Translates the text of all context menu strip items to another language.</summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.String,System.Windows.Forms.ContextMenuStrip[])">
            <summary>C is for control. Translates the text of all context menu strip items to another language.</summary>
        </member>
        <member name="M:OpenDental.Lan.TranslateToolStripMenuItems(System.String,System.Windows.Forms.ToolStripMenuItem)">
            <summary>This is recursive</summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.String,System.Windows.Forms.Control[])">
            <summary></summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.Windows.Forms.Control,System.Windows.Forms.Control[])">
            <summary></summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.Windows.Forms.Control,System.Windows.Forms.Control[],System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.String,System.Windows.Forms.Control[],System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.Lan.Cchildren(System.String,System.Windows.Forms.Control)">
            <summary>This is recursive, but a little simpler than Fchildren.</summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.Windows.Forms.Control,System.Windows.Forms.TabControl[])">
            <summary></summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.Windows.Forms.Control,OpenDental.UI.TabControl[])">
            <summary></summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.String,System.Windows.Forms.TabControl[])">
            <summary></summary>
        </member>
        <member name="M:OpenDental.Lan.C(System.String,OpenDental.UI.TabControl[])">
            <summary></summary>
        </member>
        <member name="M:OpenDental.Lan.F(System.Windows.Forms.Form)">
            <summary>F is for Form. Translates the following controls on the entire form: title Text, labels, buttons, groupboxes, checkboxes, radiobuttons, ODGrid.  Can include a list of controls to exclude. Also puts all the correct controls into the All category (OK,Cancel,Close,Delete,etc).</summary>
        </member>
        <member name="M:OpenDental.Lan.F(System.Windows.Forms.Form,System.Windows.Forms.Control[])">
            <summary>F is for Form. Translates the following controls on the entire form: title Text, labels, buttons, groupboxes, checkboxes, radiobuttons, ODGrid.  Can include a list of controls to exclude. Also puts all the correct controls into the All category (OK,Cancel,Close,Delete,etc).</summary>
        </member>
        <member name="M:OpenDental.Lan.Contains(System.Windows.Forms.Control[],System.Windows.Forms.Control)">
            <summary>Returns true if the contrToFind exists in the supplied contrArray. Used to check the exclusion list of F.</summary>
        </member>
        <member name="M:OpenDental.Lan.Fchildren(System.Windows.Forms.Form,System.Windows.Forms.Control,System.Windows.Forms.Control[])">
            <summary>Called from F and also recursively. Translates all children of the given control except those in the exclusions list.</summary>
        </member>
        <member name="M:OpenDental.Lan.ShiftChildControls(System.Windows.Forms.Control)">
            <summary>Shift specific controls to the right for certain cultures (not USA).</summary>
        </member>
        <member name="T:OpenDental.MarkupL">
            <summary>Used for wiki and HTML email editing.</summary>
        </member>
        <member name="M:OpenDental.MarkupL.ValidateMarkup(OpenDental.ODcodeBox,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Validates content, and keywords.  isForSaving can be false if just validating for refresh.</summary>
        </member>
        <member name="T:OpenDental.MedicationL">
            <summary></summary>
        </member>
        <member name="T:OpenDental.MedicationL.MedicationExport">
            <summary>A subset of Medication class's user-friendly members.</summary>
        </member>
        <member name="F:OpenDental.MedicationL.MedicationExport.MedName">
            <summary>Name of the medication.</summary>
        </member>
        <member name="F:OpenDental.MedicationL.MedicationExport.GenericName">
            <summary>Name of the generic. Not an actual member or DB column in Medication, but is the user-friendly form.</summary>
        </member>
        <member name="F:OpenDental.MedicationL.MedicationExport.Notes">
            <summary>Notes.</summary>
        </member>
        <member name="F:OpenDental.MedicationL.MedicationExport.RxCui">
            <summary>RxNorm Code identifier.</summary>
        </member>
        <member name="M:OpenDental.MedicationL.DownloadDefaultMedicationsFile">
            <summary>Throws Exception. Downloads default medications list from OpenDental.com; returns filename of temp file.</summary>
        </member>
        <member name="M:OpenDental.MedicationL.ImportMedications(System.Collections.Generic.List{OpenDentBusiness.Medication},System.Collections.Generic.List{OpenDentBusiness.Medication})">
            <summary>Inserts any new medications in listNewMeds, as well as updating any existing medications in listExistingMeds in conflict with 
            the corresponding new medication.</summary>
        </member>
        <member name="M:OpenDental.MedicationL.IsDuplicateMed(OpenDentBusiness.Medication,System.Collections.Generic.List{OpenDentBusiness.Medication})">
            <summary>Determines if med is a duplicate of another Medication in listMedsExisting.
            Given medGenNamePair is a medication that we are checking and the given generic name if set.
            A duplicate is defined as MedName is equal, GenericName is equal, RxCui is equal and either Notes is equal or not defined.
            A new medication with all properties being equal to an existing medication except with a blank Notes property is considered to be a 
            duplicate, as it is likely the existing Medication is simply a user edited version of the same Medication.</summary>
        </member>
        <member name="M:OpenDental.MedicationL.InsertNewMed(OpenDentBusiness.Medication,System.Collections.Generic.List{OpenDentBusiness.Medication})">
            <summary>Inserts. Assigns genericNum if it finds a name in the list that matches the imported genericName.</summary>
        </member>
        <member name="M:OpenDental.MedicationL.ExportMedications(System.String,System.Collections.Generic.List{OpenDentBusiness.Medication})">
            <summary>Throws Exception.  Exports all medications to the passed in filename. Throws Exceptions.</summary>
        </member>
        <member name="M:OpenDental.MedicationL.GetMedicationsFromFile(System.String,System.Boolean)">
            <summary>Throws exception.  Reads tab delimited medication information from given filename.
            Returns the list of new medications with all generic medications before brand medications.
            For V1 and V2, file required to be formatted such that each row contain: MedName\tGenericName\tNotes\tRxCui.
            Newer version exports as JSON file, so as long as it contains MedName, GenericName, Notes, and RxCui fields, it will be compatible.
            </summary>
        </member>
        <member name="M:OpenDental.MedicationL.SplitLines(System.String)">
            <summary>Returns a list of string arrays for the provided data.
            Lines are determined by new line characters and tabs between fields.</summary>
        </member>
        <member name="M:OpenDental.MedicationL.SplitLinesOld(System.String)">
            <summary>Backwards compatible approach for medications exported before the change that encapsulates the exported data.</summary>
        </member>
        <member name="M:OpenDental.MedicationL.SortMedGenericsFirst(System.Collections.Generic.List{OpenDentBusiness.Medication})">
            <summary>Custom sorting so that generic medications are above branded medications, then returns that list.</summary>
        </member>
        <member name="M:OpenDental.PatFieldL.AddPatFieldsToGrid(OpenDental.UI.GridOD,System.Collections.Generic.List{OpenDentBusiness.PatField},OpenDentBusiness.FieldLocations)">
            <summary>Adds the passed-in pat fields to the grid. Adds any fields that have been renamed at the end of the grid if the preference is enabled. The tag on the row will be the PatFieldDef or the PatField if the PatFieldDef has been renamed.</summary>
        </member>
        <member name="M:OpenDental.PatFieldL.OpenPatField(OpenDentBusiness.PatField,OpenDentBusiness.PatFieldDef,System.Int64,System.Boolean)">
            <summary>Opens the appropriate form to edit the patient field. The patField argument can be null or the patFieldDef argument can be null,
            but they cannot both be null.</summary>
        </member>
        <member name="T:OpenDental.PatientL">
            <summary></summary>
        </member>
        <member name="F:OpenDental.PatientL._listPatientsLastFive">
            <summary>Collection of Patient Names and Patnums for the last five patients. Displayed when clicking the dropdown button.</summary>
        </member>
        <member name="F:OpenDental.PatientL._patientSelected">
            <summary>Static variable to store the currently selected patient for updating the main title bar for the Update Time countdown.
            Stored so we don't have to make a database call every second.</summary>
        </member>
        <member name="F:OpenDental.PatientL._clinicNumSelected">
            <summary>Static variable to store the currently selected clinicNum for updating the main title bar for the Update Time countdown.
            Stored so we don't have to make a database call every second.</summary>
        </member>
        <member name="F:OpenDental.PatientL._lock">
            <summary>Used to lock while changes are made to _listLastFivePatients.</summary>
        </member>
        <member name="M:OpenDental.PatientL.GetPatientsLimFromMenu">
            <summary>Gets limited patient information for the patients that are in the patient select history drop down.</summary>
        </member>
        <member name="M:OpenDental.PatientL.RemoveFromMenu(System.Int64)">
            <summary>Removes a patient from the dropdown menu.  Only used when Delete Patient is called.</summary>
        </member>
        <member name="M:OpenDental.PatientL.RemoveAllFromMenu(System.Windows.Forms.ContextMenu)">
            <summary>Removes all patients from the dropdown menu and from the history.  Only used when a user logs off and a different user logs on.  Important for enterprise customers with clinic restrictions for users.</summary>
        </member>
        <member name="M:OpenDental.PatientL.AddFamilyToMenu(System.Windows.Forms.ContextMenu,System.EventHandler,System.Int64,OpenDentBusiness.Family)">
            <summary>The current patient will already be on the button.  This adds the family members when user clicks dropdown arrow. Can handle null values for pat and fam.  Need to supply the menu to fill as well as the EventHandler to set for each item (all the same).</summary>
        </member>
        <member name="M:OpenDental.PatientL.AddPatsToMenu(System.Windows.Forms.ContextMenu,System.EventHandler,OpenDentBusiness.Patient)">
            <summary>Does not handle null values. Use zero.  Does not handle adding family members.  Returns true if patient has changed.</summary>
        </member>
        <member name="M:OpenDental.PatientL.ButtonSelect(System.Windows.Forms.ContextMenu,System.Object,OpenDentBusiness.Family)">
            <summary>Determines which menu Item was selected from the Patient dropdown list and returns the patNum for that patient. This will not be activated when click on 'FAMILY' or on separator, because they do not have events attached.  Calling class then does a ModuleSelected.</summary>
        </member>
        <member name="M:OpenDental.PatientL.GetMainTitle(OpenDentBusiness.Patient,System.Int64)">
            <summary>Returns a string representation of the current state of the application designed for display in the main title.
            Accepts null for pat and 0 for clinicNum.</summary>
        </member>
        <member name="M:OpenDental.PatientL.GetMainTitleSamePat">
            <summary>Used to update the main title bar when neither the patient nor the clinic need to change. 
            Currently only used to refresh the title bar when the timer ticks for the update time countdown.</summary>
        </member>
        <member name="M:OpenDental.PatientL.InvalidateSelectedPatSpecialty">
            <summary>Sets the cached patient specialty to null so that the main title will refresh the specialty from the database if there is a valid
            patient selected.</summary>
        </member>
        <member name="M:OpenDental.PatientL.CheckPatientTextingAllowed(OpenDentBusiness.Patient,System.Object)">
            <summary>Checks if the patient is allowed to receive text messages. Also prompts user for whether or not they want to update the patient to allow texts to be received. This method is able to modify the
            passed in patient object's TxtMsgOk field.</summary>
        </member>
        <member name="M:OpenDental.PatientL.CanVerifyPatientAddressInteraction">
            <summary>Returns true when customer is in the USA, has address verification enabled, is not on trial, and is signed up for support. Otherwise returns false</summary>
        </member>
        <member name="M:OpenDental.PatientL.VerifyPatientAddressInteraction(OpenDentBusiness.Address,System.Object)">
            <summary>Launches an interaction where a patient address is validated and corrected by USPS. The user is then prompted to choose between the address they provided, the one corrected by USPS, or choosing to return null, and go back to edit. Takes in a sender for translation.</summary>
        </member>
        <member name="M:OpenDental.PatientL.VerifyPatientAddressInteractionHelper(OpenDentBusiness.Address,System.Object)">
            <summary>Makes call to WSHQ for address validation and processes the result of this call</summary>
        </member>
        <member name="M:OpenDental.PatRestrictionL.IsRestricted(System.Int64,OpenDentBusiness.PatRestrict,System.Boolean)">
            <summary>Checks for an existing patrestriction for the specified patient and PatRestrictType. If one exists returns true.
            boolean to suppress or show message. If suppress message is false, will display msgbox.</summary>
        </member>
        <member name="F:OpenDental.PrefL._listSpecialDirs">
            <summary>Directory names of special folders that need to have their files preserved.
            These names should be treated as if they are being appended to the end of a directory path.
            Any sub folders should be explicitly listed within this list because the copy method used is not recursive.
            E.g. "\\Parent", "\\Parent\\Child", and "\\Gramps\\Dad\\Bro" are all valid directory names.</summary>
        </member>
        <member name="M:OpenDental.PrefL.ConvertDB(System.Boolean,System.String,System.Windows.Forms.Form,System.Boolean)">
            <summary>This ONLY runs when first opening the program.  It returns true if either no conversion is necessary, or if conversion was successful.  False for other situations like corrupt db, trying to convert to older version, etc.  Silent mode is mostly used from internal tools.  It is currently used in the Main Program if the silent command line argument is set.</summary>
        </member>
        <member name="M:OpenDental.PrefL.ConvertDB(System.Windows.Forms.Form,System.Boolean)">
            <summary>This ONLY runs when first opening the program.  It returns true if either no conversion is necessary, or if conversion was successful.  False for other situations like corrupt db, trying to convert to older version, etc.</summary>
        </member>
        <member name="M:OpenDental.PrefL.CopyFromHereToUpdateFiles(System.Version,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Copies the installation directory files into the database.</summary>
            <param name="versionCurrent">The versioning information that will go into the Manifest.txt</param>
            <param name="isSilent">Set to true when upgrading silently.  No message boxes will show but errors will log and exit codes will be set.</param>
            <param name="hasAtoZ">Set to true when a copy of the update files needs to be made in the AtoZ share (for backwards compatibility).</param>
            <param name="hasConcatFiles">Set to true to also make one large concatenated row in the database (for backwards compatibility).
            This method will not return false if this particular option has problems executing.
            Making this singular row often times violates MySQL limitations which cause errors that cannot be easily avoided.
            Therefore, this method has the potential to log an error of the concat files failing yet the method can still return true.</param>
            <returns>Returns true if the update files were successfully copied into the database.</returns>
        </member>
        <member name="M:OpenDental.PrefL.CopyFilesToDatabase(System.Boolean,System.Boolean,System.Version,System.Boolean)">
            <summary>Core copying logic for copying the files from the installation directory into the database. Returns true if the files were copied sucessfully.</summary>
        </member>
        <member name="M:OpenDental.PrefL.CopyInstallFilesToPath(System.String,System.Version)">
            <summary>Creates the directory passed in and copies the files in the current installation directory to the specified folder path.
            Creates a Manifest.txt file with the version information passed in.
            Returns false if anything goes wrong.  Returns true if copy was successful or if the folder path passed in is null or blank.</summary>
        </member>
        <member name="M:OpenDental.PrefL.CopyFilesToFolder(System.IO.FileInfo[],System.String)">
            <summary>Copies all of the files that meet a hard coded filter into the destination folder.  Throws exceptions.</summary>
        </member>
        <member name="M:OpenDental.PrefL.DeleteFolder(System.String)">
            <summary>Recursively deletes all folders and files in the provided folder path.
            Waits up to 10 seconds for the delete command to finish.  Returns false if anything goes wrong.</summary>
        </member>
        <member name="M:OpenDental.PrefL.CheckProgramVersion(System.Windows.Forms.Form,System.Boolean,OpenDentBusiness.ChooseDatabaseInfo,OpenDental.CommandLineArgs)">
            <summary>Called from FormOpenDental.PrefsStartup. Compares the installed version to the version on the server being connected to.</summary>
            <param name="formCurrent">The form where the method is being called from.</param>
            <param name="isSilent">Whether this is a silent update. A silent update will have no UI elements appear.</param>
            <param name="chooseDatabaseInfo">May be null. The model for the choose database window. Stores all information entered within the window.</param>
        </member>
        <member name="M:OpenDental.PrefL.LaunchCorrespondingVersion(System.Version,System.Version,System.Boolean,OpenDentBusiness.ChooseDatabaseInfo,OpenDental.CommandLineArgs)">
            <summary>Launches the correct version of Open Dental based on the parameters passed in.
            Has the potential to launch an executable that lives within another versioned folder or it may launch the installed executable.
            This method will first check the version within the installation folder to see if it should launch the installed version.
            Otherwise, it creates a new DynamicMode "version" folder if one is not found and fills it with the corresponding binaries from the db.
            If a corresponding versioned folder was found with the correct binaries, it simply launches said dynamic mode executable.</summary>
            <param name="versionStored">A version object that represents the ProgramVersion preference in the database.</param>
            <param name="versionCurrent">A version object that represents the currently running version (Application.ProductVersion).</param>
            <param name="isInDynamicModeFolder">Indicates whether the current installation is within a dynamic mode folder that was then launched 
            and attempting to connect to an incorrect version.</param>
            <param name="chooseDatabaseInfo">The model from the choose database database. This will include all information neccessary to pass the database information
            to the correct version of Open Dental when it is launched.</param>
        </member>
        <member name="M:OpenDental.PrefL.GenerateArgumentsFromInfo(OpenDentBusiness.ChooseDatabaseInfo,OpenDental.CommandLineArgs)">
            <summary>Model can be null, if so then return blank. Otherwise generate command line arguments based on the arguments passed from FormOpenDental.FormOpenShown(). 
            This ensures when launching a version of OD using dynamic mode that the exact command line arguments are preserved and passed along to the next instance.</summary>
        </member>
        <member name="M:OpenDental.PrefL.TryCreateDirectory(System.String)">
            <summary>Returns true if the directory passed in was created or already exists.
            Otherwise; returns false after displaying an error message to the user.</summary>
        </member>
        <member name="M:OpenDental.PrefL.DownloadAndRunSetup(System.Version,System.Version)">
            <summary>If AtoZ.manifest was wrong, or if user is not using AtoZ, then just download again.  Will use dir selected by user.  If an appropriate download is not available, it will fail and inform user.</summary>
        </member>
        <member name="M:OpenDental.PrefL.ShouldDownloadUpdate(System.String,System.String,System.String@,System.String@)">
            <summary>Returns true if the download at the specified remoteUri with the given registration code should be downloaded and installed as an update, and false is returned otherwise. Also, information about the decision making process is stored in the updateInfoMajor and updateInfoMinor strings, but only holds significance to a human user.</summary>
        </member>
        <member name="M:OpenDental.PrefL.DownloadInstallPatchFromURI(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>destinationPath includes filename (Setup.exe).  destinationPath2 will create a second copy at the specified path/filename, or it will be skipped if null or empty.</summary>
        </member>
        <member name="M:OpenDental.PrefL.DownloadInstallPatchWorker(System.String,System.String,System.Int64)">
            <summary>This is the function that the worker thread uses to actually perform the download.
            Can also call this method in the ordinary way if the file to be transferred is short.</summary>
        </member>
        <member name="M:OpenDental.PrefL.CheckMySqlVersion">
            <summary>This ONLY runs when first opening the program.  Gets run early in the sequence. Returns false if the program should exit.</summary>
        </member>
        <member name="M:OpenDental.PrefL.CheckMySqlVersion(System.Boolean)">
            <summary>This ONLY runs when first opening the program.  Gets run early in the sequence. Returns false if the program should exit.</summary>
        </member>
        <member name="M:OpenDental.PrefL.MySqlVersion55Remind">
            <summary>This runs when first opening the program.  If MySql is not at 5.5 or higher, it reminds the user, but does not force them to upgrade.</summary>
        </member>
        <member name="M:OpenDental.PrefL.CheckProgramVersionClassic">
            <summary></summary>
        </member>
        <member name="M:OpenDental.PrefL.UpgradeOrInstallEConnector(System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>Returns true if the eConnector service is already installed or was successfully installed. 
            Returns false if there are EConnectors present on other machines, or on any error.
            Uninstalls all OpenDentalCustListener services that are present. Installs the eConnector service after successfully removing all CustListener services.
            Set isSilent to false to show meaningful error messages, otherwise fails silently.
            Set doOverrideBlankUpdateServerName to true if this computer should be set as the new update server if the WebServiceServerName preference is currently blank.
            Set isInvalidUpdateServerNameAllowed to true if it is okay for the eConnector to be installed on a computer that is NOT the WebServiceServerName preference.</summary>
        </member>
        <member name="M:OpenDental.PrefL.UninstallCustListenerServices">
            <summary>Returns true if a CustListener service was detected and successfully uninstalled. Otherwise; false.</summary>
        </member>
        <member name="M:OpenDental.PrefL.TryInstallEConnector(System.String@)">
            <summary>Returns true if the eConnector service is already installed or was successfully installed. Otherwise; false.
            A translated error message to display to the user will be set if there was a problem.</summary>
        </member>
        <member name="M:OpenDental.PrefL.TryInstallOpenDentalApiService(System.Boolean,System.String)">
            <summary>Returns true if the API service is already installed or was successfully installed. Otherwise; false.
            Set isSilent to false to show meaningful error messages, otherwise fails silently.</summary>
        </member>
        <member name="M:OpenDental.PrefL.TryInstallOpenDentalService(System.Boolean)">
            <summary>Tries to install the OpenDentalService if needed.  Returns false if failed.
            Set isSilent to false to show meaningful error messages, otherwise fails silently.</summary>
        </member>
        <member name="M:OpenDental.PrefL.CreateConfigForEConnector">
            <summary>Creates a default OpenDentalWebConfig.xml file for the eConnector if one is not already present.
            Uses the current connection settings in DataConnection.  This method does NOT work if called via middle tier.
            Users should not be installing the eConnector via the middle tier.</summary>
        </member>
        <member name="M:OpenDental.PrefL.CreateConfigForOpenDentalService">
            <summary>Creates a default OpenDentalServiceConfig.xml file for Open Dental Service if one is not already present.
            Uses the current connection settings in DataConnection.  This method does NOT work if called via middle tier.
            Users should not be installing Open Dental Service via the middle tier.</summary>
        </member>
        <member name="M:OpenDental.PrefL.CreateConfigForApi">
            <summary>Creates a default OpenDentalWebConfig.xml file for the API service if one is not already present.
            Uses the current connection settings in DataConnection.  This method does NOT work if called via middle tier.
            Users should not be installing the services via the middle tier.</summary>
        </member>
        <member name="M:OpenDental.PrefL.UpdateClientFromServerUpdateFiles(System.Version,System.Version,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Performs both upgrades and downgrades by recopying update files from DB to temp folder, then from temp folder to the path specified.
            Returns whether the whole process from downloading the files to copying them was successful.</summary>
            <param name="versionStored">A version object that represents the ProgramVersion preference in the database.</param>
            <param name="versionCurrent">A version object that represents the currently running version (Application.ProductVersion).</param>
            <param name="destDir">The directory that the server files will be copied to.</param>
            <param name="killServices">Indicates whether the file copier should kill all services before copying the update files.</param>
            <param name="useLocalUpdateFileCopier">If set, this will use the update file copier in the local installation directory rather than the 
            one downloaded from the server.</param>
            <param name="openCopiedFiles">Tells the file copier to open the copied files after completion.</param>
        </member>
        <member name="M:OpenDental.PrefL.DownloadUpdateFilesFromDatabase(System.String)">
            <summary>Downloads the update files from the database and places them in the given folder. Returns false if anything went wrong.</summary>
            <param name="tempFolderUpdate">The temporary folder used to store the update files before being copied.</param>
        </member>
        <member name="M:OpenDental.PrefL.OpenFileCopier(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Sets up the executable file and opens the UpdateFileCopier with the correct command line arguments passed in. Returns whether
            the file copier was successfully started.</summary>
            <param name="folderUpdate">Where the update files are stored.</param>
            <param name="destDir">Where the update files will be copied to.</param>
            <param name="killServices">Will tell the file copier whether to kill all Open Dental services or not.</param>
            <param name="useLocalUpdateFileCopier">Will use the update file copier in the local installation directory rather than the one downloaded from
            the server.</param>
            <param name="openCopiedFiles">Tells the file copier to open the copied files after completion.</param>
        </member>
        <member name="M:OpenDental.PrefL.IsRegKeyForTesting">
            <summary>Check for a developer only license</summary>
        </member>
        <member name="F:OpenDental.PrinterL.HasComputerTable">
            <summary>Used to print report from the retailstore DB since it does not have a Computer table. Default true.</summary>
        </member>
        <member name="F:OpenDental.PrinterL.PrintPreviewControlOverride">
            <summary>Only used from FormTPSign because that uses a PrintPreviewControl on a custom form. Defines what control to show the printdoc in after validation.
            After used one time, is cleared back to the default value of null.
            This option is disabled when set to null.</summary>
        </member>
        <member name="M:OpenDental.PrinterL.CreateODprintout(System.Drawing.Printing.PrintPageEventHandler,System.String,CodeBase.PrintSituation,System.Int64,System.Drawing.Printing.Margins,CodeBase.PrintoutOrigin,System.Drawing.Printing.PaperSize,System.Int32,CodeBase.PrintoutOrientation,System.Drawing.Printing.Duplex,System.Int16,System.Boolean)">
            <summary>Gets a PrintDocument that has some added functionality.  All printing in Open Dental should use this method (or an ODprintout object) for printing.</summary>
            <param name="printPageEventHandler">The handler that will get invoked when printing.  This defines how to draw each page.</param>
            <param name="printSituation">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="auditPatNum">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="auditDescription">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="margins">When set, this will override the default margins of "new Margins(25,25,40,40)".</param>
            <param name="printoutOrigin">Defaults to printer default.  Set to AtMargin if the graphics origin starts at the page margins; AtZero if the graphics origin is at the top-left corner of the printable page.</param>
            <param name="paperSize">When set, this will override the default paperSize of "new PaperSize("default",850,1100)".</param>
            <param name="totalPages">When creating an ODprintout for print previewing, this defines the total number of pages.  Required if multiple pages needed when using Classic printing in FormPrintPreview.</param>
            <param name="printoutOrientation">Defaults to printers default value.  Otherwise specify a value for either landscape or portrait.</param>
            <param name="duplex">Use default unless double-sided printing is required.</param>
            <param name="copies">Gets or sets the number of copies of the document to print.</param>
            <returns>A new ODprintout with the given args that serves as a conduit for centralized printing and previewing methods with nice error messages.</returns>
        </member>
        <member name="M:OpenDental.PrinterL.TryPrintOrDebugRpPreview(System.Drawing.Printing.PrintPageEventHandler,System.String,CodeBase.PrintoutOrientation,CodeBase.PrintSituation,System.Int64,System.Drawing.Printing.Margins,CodeBase.PrintoutOrigin,System.Boolean)">
            <summary>Attempts to print if in RELEASE mode or if in DEBUG mode will open ODprintout in FormRpPrintPreview.</summary>
            <param name="printPageEventHandler">The handler that will get invoked when printing.  This defines how to draw each page.</param>
            <param name="auditDescription">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="printSituation">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="auditPatNum">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="margins">When set, this will override the default margins of "new Margins(25,25,40,40)".</param>
            <param name="printoutOrigin">Defaults to printer default.  Set to AtMargin if the graphics origin starts at the page margins; AtZero if the graphics origin is at the top-left corner of the printable page.</param>
            <param name="printoutOrientation">Defaults to printers default value.  Otherwise specify a value for either landscape or portrait.</param>
            <returns>Returns true if succesfully printed, or if preview is shown and OK is clicked.</returns>
        </member>
        <member name="M:OpenDental.PrinterL.TryPrintOrDebugClassicPreview(System.Drawing.Printing.PrintPageEventHandler,System.String,System.Drawing.Printing.Margins,System.Int32,CodeBase.PrintSituation,CodeBase.PrintoutOrigin,CodeBase.PrintoutOrientation,System.Boolean,System.Int64,System.Drawing.Printing.PaperSize,System.Boolean,System.Int64)">
            <summary>Attempts to print if in RELEASE mode or if in DEBUG mode will open ODprintout in FormPrintPreview.</summary>
            <param name="printPageEventHandler">The handler that will get invoked when printing.  This defines how to draw each page.</param>
            <param name="auditDescription">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="printSituation">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="margins">When set, this will override the default margins of "new Margins(25,25,40,40)".</param>
            <param name="printoutOrigin">Defaults to printer default.  Set to AtMargin if the graphics origin starts at the page margins; AtZero if the graphics origin is at the top-left corner of the printable page.</param>
            <param name="printoutOrientation">Defaults to printers default value.  Otherwise specify a value for either landscape or portrait.</param>
            <returns>Returns true if succesfully printed, or if preview is shown and OK is clicked.</returns>
        </member>
        <member name="M:OpenDental.PrinterL.TryPrint(System.Drawing.Printing.PrintPageEventHandler,System.String,System.Int64,CodeBase.PrintSituation,System.Drawing.Printing.Margins,CodeBase.PrintoutOrigin,CodeBase.PrintoutOrientation,System.Drawing.Printing.Duplex)">
            <summary>Attempts to print a PrintDocument that has some added functionality.  All printing in Open Dental should use this method (or an ODprintout object) for printing.</summary>
            <param name="printPageEventHandler">The handler that will get invoked when printing.  This defines how to draw each page.</param>
            <param name="printSituation">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="auditPatNum">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="auditDescription">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="margins">When set, this will override the default margins of "new Margins(25,25,40,40)".</param>
            <param name="printoutOrigin">Defaults to printer default.  Set to AtMargin if the graphics origin starts at the page margins; AtZero if the graphics origin is at the top-left corner of the printable page.</param>
            <param name="printoutOrientation">Defaults to printers default value.  Otherwise specify a value for either landscape or portrait.</param>
            <param name="duplex">Use default unless double-sided printing is required.</param>
            <returns>Returns true if succesfully printed.</returns>
        </member>
        <member name="M:OpenDental.PrinterL.TryPrint(CodeBase.ODprintout,System.Boolean,System.Int64)">
            <summary>Whenever we are printing we should eventually go through this method.</summary>
        </member>
        <member name="M:OpenDental.PrinterL.TryPreview(System.Drawing.Printing.PrintPageEventHandler,System.String,CodeBase.PrintSituation,System.Drawing.Printing.Margins,CodeBase.PrintoutOrigin,System.Drawing.Printing.PaperSize,CodeBase.PrintoutOrientation,System.Int32,System.Boolean)">
            <summary>Attempts to preview (FormPrintPreview) a PrintDocument that has some added functionality.  All printing in Open Dental should use this method (or an ODprintout object) for printing.</summary>
            <param name="printPageEventHandler">The handler that will get invoked when printing.  This defines how to draw each page.</param>
            <param name="auditDescription">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="printSituation">ODprintout does not do anything with this field.  But when PrinterL.TrySetPrinter() is invoked we will provide the information if needed.</param>
            <param name="margins">When set, this will override the default margins of "new Margins(25,25,40,40)".</param>
            <param name="printoutOrigin">Defaults to printer default.  Set to AtMargin if the graphics origin starts at the page margins; AtZero if the graphics origin is at the top-left corner of the printable page.</param>
            <param name="paperSize">When set, this will override the default paperSize of "new PaperSize("default",850,1100)".</param>
            <param name="totalPages">When creating an ODprintout for print previewing, this defines the total number of pages.</param>
            <param name="printoutOrientation">Defaults to printers default value.  Otherwise specify a value for either landscape or portrait.</param>
            <returns>Returns true if preview is shown and OK is clicked.</returns>
        </member>
        <member name="M:OpenDental.PrinterL.TrySetPrinter(CodeBase.ODprintout,System.Boolean,System.Int64)">
            <summary>This method is designed to be called every single time we print.  It helps figure out which printer to use, handles displaying dialogs if necessary,
            and tests to see if the selected printer is valid, and if not then it gives user the option to print to an available printer.  
            Also creates an audit trail entry with the AuditDescription text that is set within printDocument.
            Debug mode will not display the print dialog but will instead prefer the default printer.</summary>
        </member>
        <member name="M:OpenDental.PrinterL.SetPrinter(System.Drawing.Printing.PrintDocument,CodeBase.PrintSituation,System.Int64,System.String)">
            <summary>DEPRECATED.</summary>
        </member>
        <member name="M:OpenDental.PrinterL.SetPrinter(System.Drawing.Printing.PrinterSettings,CodeBase.PrintSituation,System.Int64,System.String,System.Boolean,System.Int64)">
            <summary>Attempts to set the printer settings to circumvent showing UI. If no settings exist will result in windows default settings. 
            Can throw exceptions when isRemotePrint is true, this is done to display messages on the remote source.</summary>
        </member>
        <member name="M:OpenDental.PrinterL.GetErrorStringFromCode(CodeBase.PrintoutErrorCode)">
            <summary>Returns a translated error code description.</summary>
        </member>
        <member name="M:OpenDental.PrinterL.ShowError(CodeBase.ODprintout)">
            <summary>Shows a translated error message in a MessageBox for the given printDoc.</summary>
        </member>
        <member name="M:OpenDental.PrinterL.ShowError(System.String,System.Exception)">
            <summary>Helper method that shows a generic, translated printing error message or the msgOverride passed in.
            If using msgOverride, must be translated before passing in.
            Optionally pass an exception to include the exception.Message text at the end of the pop up.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.PrinterL.RpPreview(CodeBase.ODprintout)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenDental.PrinterL.PreviewClassic(CodeBase.ODprintout)" -->
        <member name="M:OpenDental.PrinterL.MakeMarginsFitWithinHardMargins(System.Drawing.Printing.PrintDocument)">
            <summary>Ensures that the margins set on the current printdoc are within the hard margin values.
            The hard margin represents the physical margin set by the printer.</summary>
        </member>
        <member name="M:OpenDental.PrinterL.HasValidSettings">
            <summary> Call whenever checking printDocument.DefaultPageSettings.PrintableArea.
            Also call before calling ODPrintout.Print()
            </summary>
        </member>
        <member name="M:OpenDental.ProcedureL.SetCompleteInAppt(OpenDentBusiness.Appointment,System.Collections.Generic.List{OpenDentBusiness.InsPlan},System.Collections.Generic.List{OpenDentBusiness.PatPlan},OpenDentBusiness.Patient,System.Collections.Generic.List{OpenDentBusiness.InsSub},System.Boolean)">
            <summary>Sets all procedures for apt complete.  Flags procedures as CPOE as needed (when prov logged in).  Makes a log
            entry for each completed proc.  Then fires the CompleteProcedure automation trigger.</summary>
        </member>
        <member name="M:OpenDental.ProcedureL.ProcsContainDuplicates(System.Collections.Generic.List{OpenDentBusiness.Procedure})">
            <summary>Returns empty string if no duplicates, otherwise returns duplicate procedure information.  In all places where this is called, we are guaranteed to have the eCW bridge turned on.  So this is an eCW peculiarity rather than an HL7 restriction.  Other HL7 interfaces will not be checking for duplicate procedures unless we intentionally add that as a feature later.</summary>
        </member>
        <member name="M:OpenDental.ProcedureL.DoRemoveCompletedProcs(OpenDentBusiness.Appointment,System.Collections.Generic.List{OpenDentBusiness.Procedure},System.Boolean)">
            <summary>Checks to see if the appointments provider has at least one mismatch provider on all the completed procedures attached to the appointment.
            If so, checks to see if the user has permission to edit a completed procedure. If the user does, then the user has the option to change the provider to match.</summary>
        </member>
        <member name="M:OpenDental.ProcedureL.IsProcCompleteAttachedToClaim(OpenDentBusiness.Procedure,System.Collections.Generic.List{OpenDentBusiness.ClaimProc},System.Boolean)">
            <summary>Checks if proc is Complete and has ClaimProcs attached to a Claim, and if so, prompts the user that this is invalid.</summary>
        </member>
        <member name="M:OpenDental.ProcedureL.ValidateProvider(System.Collections.Generic.List{OpenDentBusiness.ClaimProc},System.Int64,System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ProcedureL.CheckPermissionsAndGlobalLockDate(OpenDentBusiness.Procedure,OpenDentBusiness.Procedure,System.DateTime,System.Double,System.Boolean)">
            <summary>Only needs to be called when procOld.ProcStatus is C, EO or EC.</summary>
        </member>
        <member name="T:OpenDental.ProgramL">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ProgramL.LoadToolBar(OpenDental.UI.ToolBarOD,OpenDentBusiness.EnumToolBar)">
            <summary>Any changes here should also be made in WpfControls.ProgramL.LoadToolBar.</summary>
        </member>
        <member name="M:OpenDental.ProgramL.AddDropDown(OpenDental.UI.ODToolBarButton,OpenDentBusiness.Program)">
            <summary>Adds a drop down menu if this program requires it.</summary>
        </member>
        <member name="T:OpenDental.RefAttachL">
            <summary></summary>
        </member>
        <member name="M:OpenDental.RefAttachL.GetReferringDr(System.Collections.Generic.List{OpenDentBusiness.RefAttach})">
            <summary>Pass in all the refattaches for the patient.  This funtion finds the first referral from a Dr and returns that Dr's name.  Used in specialty practices.  Function is only used right now in the Dr. Ceph bridge.</summary>
        </member>
        <member name="M:OpenDental.RxAlertL.DisplayAlerts(System.Int64,System.Int64)">
            <summary>Returns false if user does not wish to continue after seeing alert.</summary>
        </member>
        <member name="M:OpenDental.SecurityL.ChangePassword(System.Boolean,System.Boolean)">
            <summary>Called to change the password for Security.CurUser.
            Returns true if password was changed successfully.
            Set isForcedLogOff to force the program to log the user off if they cancel out of the Change Password window.</summary>
        </member>
        <member name="M:OpenDental.WebFormL.VerifyRequiredFieldsPresent(OpenDentBusiness.SheetDef)">
            <summary>Returns true if the sheet has a FName, LName, and Birthdate field.</summary>
        </member>
        <member name="M:OpenDental.WebFormL.TryAddOrUpdateSheetDef(System.Windows.Forms.Form,OpenDentBusiness.SheetDef,System.Boolean,System.Collections.Generic.List{OpenDentBusiness.WebTypes.WebForms.WebForms_SheetDef})">
            <summary>Attempts to add or update the passed in sheet def. If the add or update fails because of a request being too large, then the content
            will be split and sent in pieces. This method returns whether the add or update was successful.</summary>
            <param name="currentForm">The form calling this method. Used to modify the cursor.</param>
            <param name="sheetDef">The SheetDef object being addeds or updated.</param>
            <param name="isNew">Indicates whether the object is new. If this is false, the object will be updated.</param>
            <param name="listWebFormSheetDefs">A list of webforms correlated to the passed in sheetDef. This should be set when updating a sheetdef.</param>
        </member>
        <member name="M:OpenDental.WebFormL.TryRetrievePatientTransfersCEMT">
            <summary>Returns false if the user wants to cancel out of the retrieval process. Returns true if the retrieval process completed.
            The listErrors parameter will be filled with any messages from the import portion of the retrieval process regardless if the entire process completed or not.</summary>
        </member>
        <member name="M:OpenDental.WebFormL.TryRetrieveWebForms(System.String,System.Collections.Generic.List{System.Int64},System.Int32)">
            <summary>Returns false if there was an error during validation or if the user wants to cancel out of the retrieval process. Returns true if the retrieval process completed.
            The listErrors parameter will be filled with any error messages from the import portion of the retrieval process regardless if the entire process completed or not.</summary>
        </member>
        <member name="M:OpenDental.WebFormL.TryRetrieveUnmatchedWebForms(System.Collections.Generic.List{System.Int64})">
            <summary>Gets the web forms that have already been automatically downloaded by the Open Dental Service.</summary>
        </member>
        <member name="M:OpenDental.WebFormL.DidImportSheet(OpenDentBusiness.WebTypes.WebForms.WebForms_Sheet,OpenDentBusiness.Sheet,System.Collections.Generic.List{OpenDentBusiness.WebTypes.WebForms.WebForms_Sheet},System.Collections.Generic.List{OpenDentBusiness.Sheet},System.String,System.Collections.Generic.List{System.Int64}@,OpenDental.WebFormL.PatientImportChoice@)">
            <summary>Returns true if the import was successful. Imports either a webform or a sheet that was transferred using the CEMT tool. 
            Tries to find a matching patient using LName,FName,and DOB. If no matching patient is found automatically, it will allow the user to either 
            create a new patient, select an existing patient,delete, or skip the sheet. Call using a try/catch.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.WebFormL.CreatePatient(System.String,System.String,System.DateTime,OpenDentBusiness.WebTypes.WebForms.WebForms_Sheet,OpenDentBusiness.Sheet,System.String)" -->
        <member name="M:OpenDental.WebFormL.DataExistsInDb(OpenDentBusiness.Sheet)">
            <summary>Compares values of the sheet with values that have been inserted into the db.  Returns false if the data was not saved properly.</summary>
        </member>
        <member name="M:OpenDental.WebFormL.CompareSheets(OpenDentBusiness.Sheet,OpenDentBusiness.Sheet)">
            <summary>This is not a generic sheet comparer.  It is actually a web form sheet field comparer.  Returns false if any sheet fields that the web form cares about are not equal.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.WebFormL.FillPatientFields(OpenDentBusiness.Patient,System.Reflection.FieldInfo,System.String,System.String,System.String,System.Boolean,System.Boolean)" -->
        <member name="T:OpenDental.WebFormL.PatientImportChoice">
            <summary> Helper class to determine which choice a user made for each patient when importing web forms.</summary>
        </member>
        <member name="F:OpenDental.WebFormL.PatientImportChoice._dictPatientChoices">
            <summary>Stores the action that the user chose for a specific patient when retrieving web forms. Key is a combination of lName, fName, and bDate.</summary>
        </member>
        <member name="M:OpenDental.WebFormL.PatientImportChoice.SetSkipActionForPatient(System.String,System.String,System.DateTime)">
            <summary> Store the choice that a user made for some particular patient data in a web form </summary>
        </member>
        <member name="M:OpenDental.WebFormL.PatientImportChoice.SetPatNumForPatient(System.String,System.String,System.DateTime,System.Int64)">
            <summary> Store the choice that a user made for some particular patient data in a web form </summary>
        </member>
        <member name="M:OpenDental.WebFormL.PatientImportChoice.GetChoiceForPatient(System.String,System.String,System.DateTime)">
            <summary>Retrieve which action the user previously took for this same patient data</summary>
        </member>
        <member name="T:OpenDental.WebFormL.PatientImportChoice.ChosenAction">
            <summary> Stores an action a user took when importing a web form for a particular patient.
            IsSkip==true means to skip that patient. If IsSkip==false, PatNum is the patient to associate with the current form. </summary>
        </member>
        <member name="F:OpenDental.FormRpCustomAging.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpCustomAging.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpCustomAging.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpUnearnedIncome.AddHiddenClinicNums(System.Collections.Generic.List{System.Int64}@)">
            <summary>If the "All" option is selected for a Clinics list, add hidden (but not restricted) clinics and those with unassigned clinics (0) to the report</summary>
        </member>
        <member name="M:OpenDental.FormRpUnearnedIncome.tabControlMain_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>tabControl event handler for selected tab.</summary>
        </member>
        <member name="F:OpenDental.FormRpUnearnedIncome.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpUnearnedIncome.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpUnearnedIncome.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpDiscountPlan.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpDiscountPlan.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpDiscountPlan.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormAvaTax.FillListStates">
            <summary>Fill both listboxes with the states that are taxed and non-taxed based on the current bridge settings.</summary>
        </member>
        <member name="M:OpenDental.FormAvaTax.FillSettings">
            <summary>Fill the rest of the UI with the current bridge settings.</summary>
        </member>
        <member name="M:OpenDental.FormAvaTax.butChooseTaxAdjType_Click(System.Object,System.EventArgs)">
            <summary>Pop a def picker to allow the user to select which def they wish to use for sales tax</summary>
        </member>
        <member name="M:OpenDental.FormAvaTax.butChooseRetAdjType_Click(System.Object,System.EventArgs)">
            <summary>Pop a def picker to allow the user to select which def they wish to use for sales tax returns</summary>
        </member>
        <member name="M:OpenDental.FormAvaTax.butChooseTaxExempt_Click(System.Object,System.EventArgs)">
            <summary>Pop a def picker to allow the user to select which def they wish to use for tax exempt customers</summary>
        </member>
        <member name="M:OpenDental.FormAvaTax.butRight_Click(System.Object,System.EventArgs)">
            <summary>Adds a state to the list of states we do tax.</summary>
        </member>
        <member name="M:OpenDental.FormAvaTax.butLeft_Click(System.Object,System.EventArgs)">
            <summary>Removes a state from the list of states we do tax</summary>
        </member>
        <member name="M:OpenDental.FormAvaTax.butSave_Click(System.Object,System.EventArgs)">
            <summary>Only save program properties on close</summary>
        </member>
        <member name="F:OpenDental.FormAvaTax.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAvaTax.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAvaTax.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAutoNoteResponsePicker.AutoNoteResponseText">
            <summary>This will have the Response text and the chosen AutoNote in the format "Response text : {AutoNoteName}".</summary>
        </member>
        <member name="M:OpenDental.FormAutoNoteResponsePicker.butOK_Click(System.Object,System.EventArgs)">
            <summary>Sets the AutoNoteResponseText with the selected AutoNote in the format "Auto Note Response Text : {AutoNoteName}".</summary>
        </member>
        <member name="F:OpenDental.FormAutoNoteResponsePicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoNoteResponsePicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAutoNoteResponsePicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPrepaymentEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPrepaymentEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormPrepaymentTool">
            <summary>Internal tool meant for HQ only.</summary>
        </member>
        <member name="F:OpenDental.FormPrepaymentTool._listProcedureCodesPrePaySupport">
            <summary>A constant list of procedure codes which are pulled from the AvaTax bridge property Prepay Proc Codes.</summary>
        </member>
        <member name="F:OpenDental.FormPrepaymentTool._listProcedureCharges">
            <summary>This will hold ProcCodes along with the fee associated to the code.</summary>
        </member>
        <member name="F:OpenDental.FormPrepaymentTool._listRepeatChargesForPat">
            <summary>Get all repeating charges for patient on load.</summary>
        </member>
        <member name="F:OpenDental.FormPrepaymentTool._prevPaymentRowCount">
            <summary>Number of rows which used to be in the payment grid.  Used when you add a row to make it easier to highlight new rows.</summary>
        </member>
        <member name="F:OpenDental.FormPrepaymentTool._listProceduresCompleted">
            <summary>List of procedures returned from FormProcSelect and sent to AvaTax API to prevent double billing.</summary>
        </member>
        <member name="F:OpenDental.FormPrepaymentTool._listProcedureChargesPreviouslyComp">
            <summary>List of procedurecharges returned from FormProcSelect and used to fill gridCompletedProcs.</summary>
        </member>
        <member name="F:OpenDental.FormPrepaymentTool._datePrepayThrough">
            <summary>Initialized to mindate, set in ZeroOutRepeatingCharge().  Used for building the billingnote on generated procedures.</summary>
        </member>
        <member name="T:OpenDental.FormPrepaymentTool.ProcedureCharge">
            <summary>This class lets us track a single procedurecode in the prepayment grid along with the any charge, discount or est tax values
            associated with that procedure.</summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.ProcedureCharge.Calc">
            <summary>Refreshes the data in the ProcedureCharge.</summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.FillGridPrepayment">
            <summary>Also performs discount test.</summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.GetTaxEstimates(System.Collections.Generic.List{OpenDental.FormPrepaymentTool.ProcedureCharge},System.Boolean)">
            <summary>Calls Avalara to get an estimated sales tax for each charge.</summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.CreateProcedureCharge(OpenDentBusiness.ProcedureCode,System.Int32,System.Boolean)">
            <summary>Looks in the patient's repeating charges for a rate to use.  If the patient does not have a repeat charge setup
            for the procedurecode that is being added then a procedurecharge will not be created.
            This is then used to create one or more procedurecharges.</summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.ZeroOutRepeatingCharge(OpenDentBusiness.ProcedureCode,System.Collections.Generic.List{OpenDentBusiness.AvaTax.TransQtyAmt})">
            <summary>Go through the transaction dictionary created in CreateProcedureLogs() to edit repeat charges as needed.  
            Returns the note for the newly generated repeat charge.</summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.AddSelectedProcs(System.Int32)">
            <summary>Adds all selected rows in the support grid to the prepayment grid.</summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.RemoveSelectedProcs">
            <summary>Removes any selected rows from the prepayments grid.</summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.DiscountTest">
            <summary>Looks at the procedures in the prepayment grid and determines if a discount should be applied.</summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.RemoveDiscount(System.String)">
            <summary>Remove discounts from procedurecharges.</summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.CreateDiscount(OpenDental.FormPrepaymentTool.ProcedureCharge,System.Int32)">
            <summary>Calculates the discount for a procedurecharge.  The count must be greater than 5.</summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.CreateProcedureLogs">
            <summary>Create completed ProcedureLogs from prepayment grid.</summary>
        </member>
        <member name="F:OpenDental.FormPrepaymentTool.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPrepaymentTool.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormBackport._pathOnRefresh">
            <summary>The path in the textPath when the data is refreshed.</summary>
        </member>
        <member name="F:OpenDental.FormBackport._ignoreListNameOnRefresh">
            <summary>The path in the textIgnoreList when the data is refreshed.</summary>
        </member>
        <member name="F:OpenDental.FormBackport._listFileChanges">
            <summary>This holds the current file changes.</summary>
        </member>
        <member name="F:OpenDental.FormBackport._arrayPreviousSelected">
            <summary>This holds the previously selected rows in the grid. This allows the user to select files and continue to double click to view 
            svn differences without losing the selection.</summary>
        </member>
        <member name="F:OpenDental.FormBackport._listBackportResults">
            <summary>This stores all the previously backported files and records the results of the backporting process.</summary>
        </member>
        <member name="F:OpenDental.FormBackport._currentProject">
            <summary>The current project on refresh. Provides support for SharedProjects.</summary>
        </member>
        <member name="F:OpenDental.FormBackport._progressBarAction">
            <summary>The action to end the progress bar. Kept to have only one instance on this form.</summary>
        </member>
        <member name="P:OpenDental.FormBackport._listAvailableVersions">
            <summary>Returns a list of all versions that are currently available to be backported to.</summary>
        </member>
        <member name="P:OpenDental.FormBackport._listSelectedVersions">
            <summary>Returns a list of versions that are currently selected to be backported to.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.FillGrid">
            <summary>Fills the grid.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.RefreshData">
            <summary>Refreshes the data and changes the UI accordingly. Called from FillGrid when dataRefresh is true.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.UpdateListVersions">
            <summary>Updates the list of available versions to backport to. Call this after the backport project has been set. Will
            update the listbox UI.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.GetStatusCell(System.String,OpenDentBusiness.Backports.ODFileChanges)">
            <summary>Returns an ODGridCell formatted to show the status of the backport.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.DoBackport">
            <summary>Occurs when the click event fires.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.AreValidFiles(System.Collections.Generic.List{OpenDentBusiness.Backports.ODFileChanges})">
            <summary>Checks to make sure the files are able to be open. Returns true if they are and false if they are unavailable.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.BeginBackport(System.Collections.Generic.List{OpenDentBusiness.Backports.ODFileChanges})">
            <summary>Begins the backporting process. All information in the FileChanges should be filled at this point.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.BackportFiles(System.String,System.Collections.Generic.List{OpenDentBusiness.Backports.ODFileChanges})">
            <summary>This backports the files that have not been backported yet.</summary>
            <param name="backportVersion">The version that is being backported.</param>
            <param name="listFileChanges">A list of the files that will be backported.</param>
        </member>
        <member name="M:OpenDental.FormBackport.CompileODXam">
            <summary>An exception to the typical compilation pattern. ODXam has one single solution that
            contains all of the versionsd folders.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.Compile(System.String)">
            <summary>Compiles the given project by opening it in Visual Studio and automatically beginning the build.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.TryGetVsPath(System.String@)">
            <summary>Attempts to get the path for visual studio. Returns true if able to locate.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.GenerateCompileCommand(System.String,System.String)">
            <summary>Creates the command that can be used in the windows command line to run the specific solution
            passed in. Validate that solutionPath exists before calling this method.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.Commit">
            <summary>Brings up the tortoise svn window for the currently selected path.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.GetCommitMessage(OpenDentBusiness.Job)">
            <summary>Returns the commit message for this job. Job should not be null.</summary>
        </member>
        <member name="M:OpenDental.FormBackport.comboPath_TextChanged(System.Object,System.EventArgs)">
            <summary>The point of this code is to have the items in the combo box always reflect the custom development path they type into the combo box.</summary>
        </member>
        <member name="F:OpenDental.FormBackport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBackport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBackport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptSearchAdvanced._appointment">
            <summary>The appointment passed in that we are trying to find a slot for.</summary>
        </member>
        <member name="F:OpenDental.FormApptSearchAdvanced._listProvNums">
            <summary>The list of providers possibly set on previous search window before entering advanced search.</summary>
        </member>
        <member name="F:OpenDental.FormApptSearchAdvanced._beforeTime">
            <summary>The before time that was possibly set before entering this window. </summary>
        </member>
        <member name="F:OpenDental.FormApptSearchAdvanced._afterTime">
            <summary>The after time that was possibly set before entering this window. </summary>
        </member>
        <member name="F:OpenDental.FormApptSearchAdvanced._dateAfter">
            <summary>The after date that was possibly set before entering this window. </summary>
        </member>
        <member name="M:OpenDental.FormApptSearchAdvanced.#ctor(System.Int64)">
            <summary>Pass in the currently selected apptNum along with all ApptNums that are associated to the current pinboard.</summary>
        </member>
        <member name="M:OpenDental.FormApptSearchAdvanced.FillProviders(System.Collections.Generic.List{OpenDentBusiness.Provider},System.Collections.Generic.List{System.Int64})">
            <summary>Fills comboBox with providers.  Optionally pass in a list of providers to set prov box with specific provs.</summary>
        </member>
        <member name="M:OpenDental.FormApptSearchAdvanced.FillClinics">
            <summary>Puts the form into clinic mode when using the clinics feature.  Otherwise; does nothing.</summary>
        </member>
        <member name="M:OpenDental.FormApptSearchAdvanced.FillApptViews">
            <summary>Only fill appt views when clinic is HQ. </summary>
        </member>
        <member name="M:OpenDental.FormApptSearchAdvanced.GetBeforeAfterTime(System.String,System.Boolean)">
            <summary>Helper method that returns a TimeSpan based on the time fields specified by the user.</summary>
        </member>
        <member name="F:OpenDental.FormApptSearchAdvanced.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptSearchAdvanced.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormApptSearchAdvanced.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWebChatSession._countMsgsViewed">
            <summary>The msg count as of the last time the user looked at it.</summary>
        </member>
        <member name="F:OpenDental.FormWebChatSession._countMsgsActual">
            <summary>whether or not viewed by user.</summary>
        </member>
        <member name="M:OpenDental.FormWebChatSession.#ctor(OpenDentBusiness.WebChatSession,System.Action)">
            <summary>This form is only displayed when accessed from the triage list at ODHQ.</summary>
        </member>
        <member name="M:OpenDental.FormWebChatSession.butAttachSuggestion_Click(System.Object,System.EventArgs)">
            <summary> Attaches a customer to the session if one has been suggested. </summary>
        </member>
        <member name="M:OpenDental.FormWebChatSession.FormWebChatSession_ResizeEnd(System.Object,System.EventArgs)">
            <summary> When resizing the form, redraw all messages if the width changed.
             A redraw is necessary to update the width and height of each message.
             If the width didn't change, no need to redraw. </summary>
        </member>
        <member name="F:OpenDental.FormWebChatSession.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebChatSession.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebChatSession.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRecurringChargesHistory._listRecurringCharges">
            <summary>The list of charges that have most recently been fetched from the database.</summary>
        </member>
        <member name="F:OpenDental.FormRecurringChargesHistory._listPatients">
            <summary>List of patients supplied by GetLimForPats</summary>
        </member>
        <member name="F:OpenDental.FormRecurringChargesHistory._dateRangePrevious">
            <summary>The date range that was selected the last time the charges were fetched from the database.</summary>
        </member>
        <member name="F:OpenDental.FormRecurringChargesHistory._listClinicNumsPrevious">
            <summary>The clinic nums that were selected the last time the charges were fetched from the database.</summary>
        </member>
        <member name="M:OpenDental.FormRecurringChargesHistory.RefreshRecurringCharges">
            <summary>Gets recurring charges from the database.</summary>
        </member>
        <member name="M:OpenDental.FormRecurringChargesHistory.FillGrid">
            <summary>Will refresh charges from the database if necessary.</summary>
        </member>
        <member name="F:OpenDental.FormRecurringChargesHistory.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecurringChargesHistory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRecurringChargesHistory.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormIncomeTransferManage.RefreshWindow">
            <summary>Refreshes all of the data from the database and updates the UI accordingly.</summary>
        </member>
        <member name="M:OpenDental.FormIncomeTransferManage.FillTransfers">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormIncomeTransferManage.FillGridCharges(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormIncomeTransferManage.IsTransferFifoNeeded">
            <summary>Performs a FIFO income transfer but doesn't save the results.  Instead, returns true if any PaySplits are suggested for transfer
            Otherwise returns false.  This method does not check permissions on purpose (so the user can get permission specific messages).</summary>
        </member>
        <member name="M:OpenDental.FormIncomeTransferManage.IsTransferRigorousNeeded">
            <summary>Performs a rigorous income transfer but doesn't save the results.  Instead, returns true if any PaySplits are suggested for transfer
            or if there is something wrong with the transfer in general so that the user can click the Transfer button and get the error message.
            Otherwise returns false.  This method does not check permissions on purpose (so the user can get permission specific messages).</summary>
        </member>
        <member name="M:OpenDental.FormIncomeTransferManage.butTransfer_Click(System.Object,System.EventArgs)">
            <summary>Creates paysplits for selected charges if there is enough payment left.</summary>
        </member>
        <member name="F:OpenDental.FormIncomeTransferManage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormIncomeTransferManage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormIncomeTransferManage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatientStatusTool._listPatientStatuses">
            <summary>Returns a list of all the patient statuses this form can handle.</summary>
        </member>
        <member name="P:OpenDental.FormPatientStatusTool._patientStatusFrom">
            <summary>Returns the patient status from the Criteria filters.</summary>
        </member>
        <member name="P:OpenDental.FormPatientStatusTool._patientStatusTo">
            <summary>Returns the patient status from the Change Patient Status To combobox.</summary>
        </member>
        <member name="F:OpenDental.FormPatientStatusTool.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatientStatusTool.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPatientStatusTool.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormUnschedListPatient.Appointment">
            <summary>Holds the selected appointment from the grid. Only one selection is allowed.</summary>
        </member>
        <member name="M:OpenDental.FormUnschedListPatient.SetSelectedAppt">
            <summary>Sets SelectedAppt to the appointment that is currently selected in the grid.  Shows an error message to the user if no appointment is selected.
            Otherwise; Sets the appointment and then sets DialogResult to OK.</summary>
        </member>
        <member name="F:OpenDental.FormUnschedListPatient.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormUnschedListPatient.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormUnschedListPatient.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailEdit._isInvalidPreview">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEmailEdit._isLoading">
            <summary>Used to handle the webBrowser navigation events in the case a user clicks the external link in the edit window. </summary>
        </member>
        <member name="F:OpenDental.FormEmailEdit.MarkupText">
            <summary>The message text that will be displayed in plain text on the left side.</summary>
        </member>
        <member name="P:OpenDental.FormEmailEdit.HtmlText">
            <summary>The full HTML text of the email.</summary>
        </member>
        <member name="P:OpenDental.FormEmailEdit.AreImagesDownloaded">
            <summary>When true, the img tags will contain paths to local temp files where the images are stored. If false, the images
            need to be downloaded from the cloud.</summary>
        </member>
        <member name="F:OpenDental.FormEmailEdit.IsRaw">
            <summary>True if the text includes the entire HTML document and is not using the master template.</summary>
        </member>
        <member name="F:OpenDental.FormEmailEdit.DoCheckForDisclaimer">
            <summary>If true, will not let the user click OK if the tag [EmailDisclaimer] is not present.</summary>
        </member>
        <member name="F:OpenDental.FormEmailEdit.IsRawAllowed">
            <summary>Defaults to true. If false, the user cannot save this as a raw email.</summary>
        </member>
        <member name="F:OpenDental.FormEmailEdit.AreReplacementsAllowed">
            <summary>When true, the replacement button will be visible and allow users to select field replacements.</summary>
        </member>
        <member name="F:OpenDental.FormEmailEdit.IsMassEmail">
            <summary>When true, the caller of FormEmailEdit() is the FormMassEmail() window.</summary>
        </member>
        <member name="F:OpenDental.FormEmailEdit._listFileNameUrls">
            <summary>A list of email image names and urls hosted at Email Hosting. Just for temporary caching so that we do not upload the same image
            twice while in this window.</summary>
        </member>
        <member name="F:OpenDental.FormEmailEdit.IsEmailSignature">
            <summary>When true, disables some buttons that are not allowed when EmailSignature.</summary>
        </member>
        <member name="M:OpenDental.FormEmailEdit.GetMassEmailImageLink(System.String)">
            <summary>Attempts to get the selected image name and upload the file to the EmailHosting api. May throw exception.</summary>
        </member>
        <member name="M:OpenDental.FormEmailEdit.TableOrDoubleClick(System.Int32)">
            <summary>This is called both when a user double clicks anywhere in the edit box, or when the click the Table button in the toolbar.  This ONLY 
            handles popping up an edit window for an existing table.  If the cursor was not in an existing table, then this returns false.  After that, 
            the behavior in the two areas differs.  Returns true if it popped up.</summary>
        </member>
        <member name="M:OpenDental.FormEmailEdit.SetWikiToolBarItems(System.Boolean)">
            <summary>Some toolbar items use wiki markup instead of HTML markup. Quickly set wiki markup buttons to enabled/disabled from boolean.</summary>
        </member>
        <member name="F:OpenDental.FormEmailEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEmailEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormClaimAttachmentItemEdit">
            <summary>This form takes the image the user wants to send through their clearinghouse and gathers the additional information (specified by the user)
            that is needed to create the attachment.</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachmentItemEdit._imageForClaim">
            <summary>This is another reference to an image in parent form.  Disposed by that form.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachmentItemEdit.#ctor(System.Drawing.Image,System.String,System.DateTime,System.Enum,System.Boolean,OpenDentBusiness.EclaimsCommBridge,System.String)">
            <summary>Used for opening and editing an existing image attachment row in FormClaimAttachment.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachmentItemEdit.#ctor(System.Drawing.Image,OpenDentBusiness.EclaimsCommBridge)">
            <summary>Takes an image the user has chosen to send with their claim.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachmentItemEdit.CreateImageAttachment">
            <summary>Called on ValidateAndCreateAttachment(). This method takes the user entered data and creates the ClaimConnect.ImageAttachment object
            used by FormClaimAttach. This object is eventually used in the ClaimConnect.CreateAttachment() API call to DentalXChange.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachmentItemEdit.butSave_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachmentItemEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachmentItemEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimAttachmentItemEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormClaimAttachment">
            <summary>As of 5/14/2024, this form will no longer send attachments to DentalXChange. We want users to use the right click attachment workflows instead of this form, so all the controls have been removed from the FormClaimEdit DXC tab. The DXC logic will remain in this form in case we ever need to revert.</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachment._listImageReferenceIds">
            <summary>Stores a list of the image Ids from DXC to be saved locally.</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachment._stopwatchKillSnipToolProcesses">
            <summary> Keeps track of how long we've been trying to kill all running Snip Tool processes </summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.#ctor(OpenDentBusiness.Claim,OpenDentBusiness.EclaimsCommBridge)">
            <summary>Initialize the form and refresh the claim we are adding attachments to.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.FillGrid">
            <summary>Purposely does not load in historical data. This form is only for creating new attachments.
            The grid is populated by AddImageToGrid().</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.CreateRow(System.DateTime,System.String,System.String)">
            <summary>Returns a GridRow with 3 cells; 1 for each of the arguments passed in.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.CheckImageCatDefs">
            <summary>Checks to see if the user has made a Claim Attachment image category definition. Returns the list of Defs found.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.ValidateClaimDXC">
            <summary>Returns true if claim is valid for DXC.  Includes a progress bar.  Changes textClaimStatus.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.ValidateAttachmentsNeededEDS">
            <summary>Returns true if claim requires attachments, false otherwise. Includes a progress bar. Required check for EDS since attachments can only be sent for claims that require them.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.CreateClaimAttachment(System.String,System.String)">
            <summary>Creates the ClaimAttach objects for each item in the grid and associates it to the given claim.
            The parameter path should be the full path to the image and fileName should simply be the file name by itself.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormClaimAttachment.timerKillSnipToolProcesses_Tick(System.Object,System.EventArgs)" -->
        <member name="M:OpenDental.FormClaimAttachment.KillProcesses(System.Collections.Generic.List{System.Diagnostics.Process})">
            <summary> Kill all passed-in processes, ignoring any failures, and return True if any were killed. </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormClaimAttachment.GetProcessesSnipTool" -->
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormClaimAttachment.DoesSnipAndSketchExist" -->
        <member name="M:OpenDental.FormClaimAttachment.DoesSnippingToolExist">
            <summary>Returns true if the Snipping Tool exe can be located.  False otherwise.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormClaimAttachment.StartSnipAndSketchOrSnippingTool" -->
        <member name="M:OpenDental.FormClaimAttachment.StartSnipping">
            <summary>Mimics FormImageSelectClaimAttachment.StartSnipping()</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.ShowImageAttachmentItemEdit(System.Drawing.Bitmap)">
            <summary>Caller should dispose of this bitmap.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.CreateImageAttachment(System.Drawing.Bitmap,System.Boolean)">
            <summary>Caller should dispose of this bitmap.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.ButPasteImage_Click(System.Object,System.EventArgs)">
            <summary>Allows users to paste an image from their clipboard. Throws exception if the content on the clipboard is not a supported image format.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.CreateAndSendAttachments">
            <summary>Sends every attachment in the grid to the clearinghouse. Sets the claims attachmentID to the response from clearinghouse. Will also prompt the user to re-validate the claim.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.BatchSendAttachments">
            <summary>Mimics CreateAndSendAttachments() but is split out for simplicity as this method will be rarely called. Sends every attachment in the grid one-by-one to DentalXChange. Sets the claims attachmentID to the response from Dentalxchange for the first attachment sent. Will also prompt the user to re-validate the claim.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.AddAttachments(System.Collections.Generic.List{OpenDentBusiness.Eclaims.ClaimConnect.ImageAttachment})">
            <summary>Sends the passed-in attachments to ClaimConnect.  Will set the attachment id to the claim if needed.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.ClearAttachmentID">
            <summary>Wipes out the existing attachmentID, makes a securitylog for the old ID, and clears the 'Misc' attached flag on the claim.
            This must be done when a non-DXC attachmentID has been detected so that claim validation will work as expected.</summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.buttonOK_Click(System.Object,System.EventArgs)">
            <summary>Saves all images in the grid to the patient on the claim's directory in the images module. Also creates
            a list of ClaimAttach objects to associate to the given claim.</summary>
        </member>
        <member name="F:OpenDental.FormClaimAttachment.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimAttachment.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDefEditWebSchedApptTypes._appointmentType">
            <summary>Every Web Sched reason is required to be associated to one (and only one) appointment type.
            This is where the length and procedures of the appointment are retrieved.</summary>
        </member>
        <member name="F:OpenDental.FormDefEditWebSchedApptTypes._listDefsRestrictToBlockoutTypes">
            <summary>The blockout types that this WSNPA reason is restricted to.  Can be empty.</summary>
        </member>
        <member name="F:OpenDental.FormDefEditWebSchedApptTypes.IsDeleted">
            <summary>Set within class only.</summary>
        </member>
        <member name="F:OpenDental.FormDefEditWebSchedApptTypes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDefEditWebSchedApptTypes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDefEditWebSchedApptTypes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDoseSpotAssignClinicId.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDoseSpotAssignClinicId.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDoseSpotAssignClinicId.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPaySimpleSetup._listUserClinicNums">
            <summary>Local cache of all of the ClinicNums the current user has permission to access at the time the form loads.  Filled at the same time
            as comboClinic and is used to set programproperty.ClinicNum when saving.</summary>
        </member>
        <member name="F:OpenDental.FormPaySimpleSetup._listProgramProperties">
            <summary>List of PaySimple program properties for all clinics.
            Includes properties with ClinicNum=0, the headquarters props or props not assigned to a clinic.</summary>
        </member>
        <member name="F:OpenDental.FormPaySimpleSetup._indexClinicRevert">
            <summary>Used to revert the slected index in the clinic drop down box if the user tries to change clinics
            and the payment type has not been set.</summary>
        </member>
        <member name="M:OpenDental.FormPaySimpleSetup.SynchWithHQ">
            <summary>For each clinic, if the Username and Key are the same as the HQ (ClinicNum=0) Username and Key, update the clinic with the
            values in the text boxes.  Only modifies other clinics if _indexClinicRevert=0, meaning user just modified the HQ clinic credentials.</summary>
        </member>
        <member name="M:OpenDental.FormPaySimpleSetup.WebhookHelper(System.String,System.String,System.Int64)">
            <summary>Returns an error message if something went wrong. Otherwise, returns an empty string.</summary>
        </member>
        <member name="F:OpenDental.FormPaySimpleSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPaySimpleSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPaySimpleSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormUserPrefAdditional.ListUserOdPrefsOut">
            <summary>This is a list of providerclinic rows that were given to this form, containing any modifications that were made while in FormProvAdditional.</summary>
        </member>
        <member name="F:OpenDental.FormUserPrefAdditional.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormUserPrefAdditional.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormUserPrefAdditional.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProvAdditional.ListProviderClinicsOut">
            <summary>This is a list of providerclinic rows that were given to this form, containing any modifications that were made while in FormProvAdditional.</summary>
        </member>
        <member name="M:OpenDental.FormProvAdditional.IsEmpty(OpenDentBusiness.ProviderClinic)">
            <summary>Returns true if provClinic is empty. ProvClinic is considered empty if the DEANum,StateLicense,StateRxID, StateWereLicensed,
            CareCreditMerchantId are empty.</summary>
        </member>
        <member name="M:OpenDental.FormProvAdditional.IsProvClinicModified(OpenDentBusiness.ProviderClinic)">
            <summary>Returns true if the provClinic was modified. Otherwise, returns false.</summary>
        </member>
        <member name="F:OpenDental.FormProvAdditional.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProvAdditional.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProvAdditional.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPaySimple.ApiResponseOut">
            <summary>Only to be used outside of the form.  
            Set on OK_Click to discourage using it in the form.
            Contains the important details of what happened with PaySimple</summary>
        </member>
        <member name="F:OpenDental.FormPaySimple.WasPaymentAttempted">
            <summary>Opening the PayConnect or PaySimple window from FormPayment, and then closing them, can set isCcDeclined to True.
            This is because FormPayment didn't know if a transaction was attempted or not, and was assuming it was.
            This can cause the payment amount to be reset to $0. So, this bool indicates if we have actually attempted a transaction.</summary>
        </member>
        <member name="F:OpenDental.FormPaySimple._hasSwipedCard">
            <summary>Some card readers have CR/Enter track separators, 
            which would cause our parsing logic to happen before the magstripe reader finished outputting the data.
            We add a timer delay to attempt to compensate for this functionality.</summary>
        </member>
        <member name="M:OpenDental.FormPaySimple.ProcessPayment(System.Int32,System.Int32)">
            <summary>Processes a PaySimple payment via the PaySimple API.</summary>
        </member>
        <member name="M:OpenDental.FormPaySimple.ProcessPaymentACH">
            <summary>Processes a PaySimple ACH payment via the PaySimple API.</summary>
        </member>
        <member name="F:OpenDental.FormPaySimple.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPaySimple.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPaySimple.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormBugSubmission._bugSubmission">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormBugSubmission._job">
            <summary>Used to determine if a new bug should show (Enhancement) in the description.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmission._bug">
            <summary>Null unless a bug is added  or alrady exists.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmission._patient">
            <summary>The current patient associated to the selected bug submission row. Null if no row selected or if multiple rows selected.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmission._listJobLinks">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormBugSubmission.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBugSubmission.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBugSubmission.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormChooseDatabase.ChooseDatabaseInfo_">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormChooseDatabase.IsValidConnection">
            <summary>Attempts to connect to the database (via Middle Tier if necessary).
            Returns true if connection settings are valid. Otherwise, false.</summary>
        </member>
        <member name="F:OpenDental.FormChooseDatabase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormChooseDatabase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormChooseDatabase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormLoginFailed.#ctor(System.String)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormLoginFailed.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLoginFailed.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormLoginFailed.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDoseSpotAssignUserId.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDoseSpotAssignUserId.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDoseSpotAssignUserId.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFamilyBalancer.PatNum">
            <summary>Setting this field before loading the window will cause all tools within to perform their functions against the family of this PatNum only.</summary>
        </member>
        <member name="F:OpenDental.FormFamilyBalancer._threadRigorousBalancer">
            <summary>The thread that executes a rigorous income transfer for every family in the database.</summary>
        </member>
        <member name="F:OpenDental.FormFamilyBalancer._threadFifoBalancer">
            <summary>The thread that executes a FIFO income transfer for every family in the database.</summary>
        </member>
        <member name="F:OpenDental.FormFamilyBalancer._threadRecreate">
            <summary>The thread that executes a FIFO income transfer for every family in the database.</summary>
        </member>
        <member name="F:OpenDental.FormFamilyBalancer._threadInsuranceOverpayment">
            <summary>The thread that creates "income transfers" for every overpaid claim in the database.</summary>
        </member>
        <member name="F:OpenDental.FormFamilyBalancer._stringBuilderLog">
            <summary>A detailed log of everything that has happened since this window has been opened. Useful if the user wants to make a log file out of what happened.</summary>
        </member>
        <member name="F:OpenDental.FormFamilyBalancer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFamilyBalancer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFamilyBalancer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptReminderRuleAggEdit._selectedLanguageLoading">
            <summary>Langauge of the tab that was selected in the parent form. Used for picking the tab index of this form. </summary>
        </member>
        <member name="F:OpenDental.FormApptReminderRuleAggEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptReminderRuleAggEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormApptReminderRuleAggEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormAdjMulti">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAdjMulti._listAdjustments">
            <summary>The list of new adjustments that the user is trying to add. Procedures associated to these procedures will always display regardless of filters.</summary>
        </member>
        <member name="F:OpenDental.FormAdjMulti._listProcAdjs">
            <summary>The helper objects that were used to comprise the main grid. Referenced when adding new adjustments with a percentage radio button checked.</summary>
        </member>
        <member name="F:OpenDental.FormAdjMulti._listProcNums">
            <summary>The list of ProcNums that was passed into the constructor. These procedures should always display in the grid regardless of filters.</summary>
        </member>
        <member name="F:OpenDental.FormAdjMulti._loadData">
            <summary>All of the account module data for the entire family which is filled once. Used to save calls to the database when changing filters. Do not manipulate this field.</summary>
        </member>
        <member name="M:OpenDental.FormAdjMulti.#ctor(OpenDentBusiness.Patient,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{OpenDentBusiness.Adjustment})">
            <summary>Optionally pass in a list of ProcNums to always display. Pass in a list of new adjustments that are not in the database which will always display. Any procedures associated to the adjustments passed in will always display as well.</summary>
        </member>
        <member name="M:OpenDental.FormAdjMulti.AddAdjustments">
            <summary>Adds a singular unassigned adjustment if no procedure is currently selected otherwise adds one adjustment per procedure selected. Every adjustment created utilizes the values set in the current UI. Returns false if the UI is in an invalid state, otherwise returns true.</summary>
        </member>
        <member name="M:OpenDental.FormAdjMulti.GetAdjFromUI(OpenDentBusiness.Adjustment,OpenDentBusiness.Procedure,System.Collections.Generic.List{OpenDentBusiness.Adjustment})">
            <summary>Returns an adjustment that reflects the settings within the UI. Set adjustment in order to use that object as the adjustment that will get manipulated. Leave adjustment null for a new adjustment to be created. Set procedureSelected to the procedure that is currently selected or to the procedure that is associated to the selected adjustment. Set listAdjustmentsRelated to a list of adjustments that should be considered for calculating 'Percentage of Remaining Balance' (when there are multiple adjustments associated to the same procedure).</summary>
        </member>
        <member name="M:OpenDental.FormAdjMulti.GetAdjAmtType">
            <summary>Returns the corresponding AdjAmtType based off of the current state of the UI controls.</summary>
        </member>
        <member name="M:OpenDental.FormAdjMulti.GetProcAdjs">
            <summary>Returns a list of helper objects that should be displayed to the user.</summary>
        </member>
        <member name="T:OpenDental.FormAdjMulti.ProcAdjs">
            <summary>Helper class that ties a procedure and its assigned adjustments together. AccountEntryProc will be null for unassigned adjustments.</summary>
        </member>
        <member name="M:OpenDental.FormAdjMulti.ProcAdjs.GetGridRows">
            <summary>Returns a list of grid row objects that represent this entire helper class. Grid rows that represent procedures will have the Procedure object set as the tag; Adjustment rows will have the corresponding Adjustment object as the tag.</summary>
        </member>
        <member name="F:OpenDental.FormAdjMulti.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAdjMulti.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAdjMulti.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenancePat._listMethodInfosDbm">
            <summary>This list holds MethodInfo for every patient DBM, used in conjunction with _listDatabaseMaintenances.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenancePat._listDatabaseMaintenances">
            <summary>List of all DatabaseMaintenance objects used in this form.  Needed to determine IsHidden and IsOld.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormDatabaseMaintenancePat._listMethodInfosNotHiddenOrOld" -->
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormDatabaseMaintenancePat._listMethodInfosHidden" -->
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormDatabaseMaintenancePat._listMethodInfosOld" -->
        <member name="F:OpenDental.FormDatabaseMaintenancePat._isReplicationPasswordEntered">
            <summary>True if the user has been prompted to enter a password, and successfully entered the password for replication DBMs. False otherwise.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenancePat._isUsingReplication">
            <summary>Set on load, true if we detect the office is using replication. Otherwise false.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenancePat._hasReplicationPermission">
            <summary>True if the MySQL user has the privileges necessary to determine if the database is using replication (REPLICATION CLIENT and SUPER). Otherwise, false.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenancePat.BREAKDOWN_COLUMN_NAME">
            <summary>Ensures the column name matches the name for looking up the column index when grids have different column lengths.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenancePat.RESULTS_COLUMN_NAME">
            <summary>Ensures the column name matches the name for looking up the column index when grids have different column lengths.</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenancePat.DbmMethodsForGridHelper(System.Boolean,System.Boolean)">
            <summary>Looks at _listDatabaseMaintenances to determine Old and Hidden status and then returns the corresponding MethodInfos from _listDbmMethodInfosDbm.</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenancePat.HasReplicationUnsafeMethods(OpenDental.UI.GridOD)">
            <summary>Returns true if any of the selected gridrows have a method tag that is marked as IsReplicationUnsafe and the office is running replication. Otherwise false.</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenancePat.UpdateResultTextForRow(System.Int32,System.String,OpenDental.UI.GridOD)">
            <summary>Updates the result column for the specified row in the grid with the text passed in.</summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenancePat.SaveLogToFile(System.String)">
            <summary>Tries to log the text passed in to a centralized DBM log.  Displays an error message to the user if anything goes wrong.
            Always sets the current Cursor state back to Cursors.Default once finished.</summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintenancePat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenancePat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintenancePat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormGlobalSecurity._domainObjectGuid">
            <summary>The ObjectGuid for the domain path entered.</summary>
        </member>
        <member name="M:OpenDental.FormGlobalSecurity.textDomainLoginPath_Leave(System.Object,System.EventArgs)">
            <summary>Validation for the domain login path provided. 
            Accepted formats are those listed here: https://msdn.microsoft.com/en-us/library/aa746384(v=vs.85).aspx, excluding plain "LDAP:"
            Does not check if there are users on the domain object, only that the domain object exists and can be searched.</summary>
        </member>
        <member name="F:OpenDental.FormGlobalSecurity.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormGlobalSecurity.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormGlobalSecurity.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSecurity.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSecurity.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSecurity.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions._listBugSubmissions">
            <summary>List of all bugSubmissons from the bugs DB.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions._formBugSubmissionMode">
            <summary>When FormBugSumissionMode.AddBug, form will close after adding a bug.
            When FormBugSumissionMode.ViewOnly, the "Add Bug" button is not visable.
            When FormBugSumissionMode.SelectionMode, the "Add Bug" is changed to "Ok".</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions._job">
            <summary>Used to determine if a new bug should show (Enhancement) in the description.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions.BugCur">
            <summary>Null unless a bug is added when _viewMode is FormBugSumissionMode.AddBug.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions.ListBugSubmissionsSelected">
            <summary>List of selected bugSubmissions when _viewMode is FormBugSumissionMode.SelectionMode.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions.ListBugSubmissionsViewed">
            <summary>List of bugSubmissions to view when _viewMode is FormBugSumissionMode.ViewMode.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions._dictionaryPatients">
            <summary>Dictionary of patients that will lazy load as users click on entries.  The key is the Registration Key.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions._patient">
            <summary>The current patient associated to the selected bug submission row. Null if no row selected or if multiple rows selected.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions._bugSubmission">
            <summary>BugSubmission from the currently selected submission in either gridSubs or gridCustomerSubs if any, otherwise null.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions._listJobLinks">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions._minGroupingCount">
            <summary>The number of minimum submission for a group to show when 'Min Count' is selected.</summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissions.#ctor(OpenDentBusiness.Job,OpenDental.FormBugSubmissionMode)">
            <summary>Set job if you would like to create a bug with (Enhancement) in the bug text.
            When isViewOnlyMode is true, you will not be able to create a bug.
            When isSelectedMode is true, the form will close after a double click selection or a group selection.</summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissions.gridSubs_RightClickHelper(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions.BugSubGridRow.ListBugSubmissions">
            <summary>Filled in the constructor. Guaranteed to have at least one bug submission present.</summary>
        </member>
        <member name="P:OpenDental.FormBugSubmissions.BugSubGridRow.BugSubmissionDisplay">
            <summary>Returns the first bug submission in the list of all bug submissions that this grid row represents.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBugSubmissions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBugSubmissions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormBugSubmissionMode">
            <summary>Enum controling the way the form displays and behaves.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissionMode.AddBug">
            <summary>This is the default way for the form to load. Used by job manager to add bugs</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissionMode.ViewOnly">
            <summary>Used when we wish to simply view the bug submissions, does not allow users to add bugs. Filter validation is skipped.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissionMode.SelectionMode">
            <summary>Used when attaching bug submissions to exiting bugs. Changed butAdd to show "OK" and return selected rows.</summary>
        </member>
        <member name="F:OpenDental.FormBugSubmissionMode.ValidationMode">
            <summary>Used when using the similiar bugs tool. Changed butAdd to show "OK" and returns all BugSubmissions in the grid on Ok click. Filter validation is skipped.</summary>
        </member>
        <member name="F:OpenDental.FormDoseSpotPropertyEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDoseSpotPropertyEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDoseSpotPropertyEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormErxSetup">
            <summary>This form is used to make changes for the eRx program link.
            With the integration of DoseSpot, the default program link form is no longer sufficient.</summary>
        </member>
        <member name="M:OpenDental.FormErxSetup.GetPropertyForClinic(System.Int64,System.String)">
            <summary>This method should only ever return one item but in the event that an error has occurred setting up the DoseSpot account we need to know if there are multiple sets of credentials in the db.</summary>
        </member>
        <member name="M:OpenDental.FormErxSetup.HideNewCrop">
            <summary>All references removed in I12045.</summary>
        </member>
        <member name="F:OpenDental.FormErxSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormErxSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormErxSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobTimeAdd.#ctor(OpenDentBusiness.JobReview)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormJobTimeAdd.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobTimeAdd.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobTimeAdd.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobTime.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobTime.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobTime.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobManagerOverview._listJobsFiltered">
            <summary>List of jobs filtered by UI elements. Used to keep contents of gridEngineerHours and gridJobs in synch. </summary>
        </member>
        <member name="M:OpenDental.FormJobManagerOverview.SetFilters">
            <summary>Populates UI with preset/selected filters. </summary>
        </member>
        <member name="M:OpenDental.FormJobManagerOverview.GetFilteredJobList">
            <summary>Query the DB for cancelled/complete jobs for specific UI filters, add them to the cached list, and then return a filtered cached list.
            This is because the cached list does not originally hold cancelled/completed jobs.</summary>
        </member>
        <member name="M:OpenDental.FormJobManagerOverview.ApplyFilters(System.Collections.Generic.List{OpenDentBusiness.Job})">
            <summary>Helper method to apply UI filters to our passed in list.</summary>
        </member>
        <member name="M:OpenDental.FormJobManagerOverview.comboTeams_SelectionChangeCommitted(System.Object,System.EventArgs)">
            <summary>Refill list of Engineers to those associated to the selected team.</summary>
        </member>
        <member name="F:OpenDental.FormJobManagerOverview.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobManagerOverview.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobManagerOverview.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReleaseCalculator.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReleaseCalculator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReleaseCalculator.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobAdd.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobAdd.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobAdd.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.ODjobTextEditorSaveEventHandler">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ODjobTextEditor._backColor">
            <summary>Used to set the button color back after hovering</summary>
        </member>
        <member name="F:OpenDental.ODjobTextEditor._highlightColor">
            <summary>Used when highlighting.</summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.HasSaveButton">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.HasEditorOptions">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.ReadOnlyConcept">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.ReadOnlyRequirementsGrid">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.ReadOnlyWriteup">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.ConceptTitle">
            <summary>Gets or sets the Concept textbox text.</summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.ConceptText">
            <summary>Gets or sets the Concept textbox text.</summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.ConceptRtf">
            <summary>Gets or sets the Concept textbox RTF format text.</summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.WriteupText">
            <summary>Gets or sets the Writeup textbox text.</summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.WriteupRtf">
            <summary>Gets or sets the Writeup RTF format text.</summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.MainFontConcept">
            <summary>Gets or sets the main textbox RTF format text.</summary>
        </member>
        <member name="P:OpenDental.ODjobTextEditor.MainFontWriteup">
            <summary>Gets or sets the main textbox RTF format text.</summary>
        </member>
        <member name="M:OpenDental.ODjobTextEditor.OnLoad(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ODjobTextEditor.butSave_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ODjobTextEditor.ResizeTextFields">
            <summary>Called on initial job load.</summary>
        </member>
        <member name="F:OpenDental.ODjobTextEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ODjobTextEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.ODjobTextEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPhoneComps._listPhoneCompsOrig">
            <summary>A local, deep copy of the phonecomp that is filled on load.  This list should never be manipulated.
            Used to sync to the database on closing.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneComps._listPhoneComps">
            <summary>A local, deep copy of the phonecomp that is filled on load and manipulated throughout the life cycle of this window.
            Used to sync to the database on closing.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneComps.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneComps.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPhoneComps.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPhoneConfEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneConfEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPhoneConfEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPhoneConfs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneConfs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPhoneConfs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDunningSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDunningSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDunningSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormArManager._formText">
            <summary>Stores the root title of the form on load. The name of the selected clinic will be appended to this string.</summary>
        </member>
        <member name="F:OpenDental.FormArManager._listSelectedPatNums">
            <summary>Used to reselect rows after sorting the grid by column.  Filled on grid MouseDown event and used in grid OnSortByColumn event to reselect.</summary>
        </member>
        <member name="F:OpenDental.FormArManager._listClinicBalBegans">
            <summary>Stores DateTime of earliest balance>0.005 for the pat's grouped by clinic.  Will grow as user selects clinics.</summary>
        </member>
        <member name="M:OpenDental.FormArManager.RunAgingEnterprise(System.Boolean)">
            <summary>If aging happened automatically, like on load, pass in isAutomatic=true. Runs enterprise aging. Returns false if there are any errors while running aging. Changes to this method will also need to be made to OpenDentalService.ProcessStatements.RunAgingEnterprise().</summary>
        </member>
        <member name="M:OpenDental.FormArManager.AgingRanAuditHelper(System.Boolean)">
            <summary>Creates "Aging Ran" audit trail entries.</summary>
        </member>
        <member name="M:OpenDental.FormArManager.SetTotalsLocAndVisible(OpenDentBusiness.DisplayFieldCategory,System.Int32)">
            <summary>Line the totals textboxes up with their corresponding grid column.  Since the columns resize dynamically and can be visible or hidden
            based on selected display fields, we need to move the location of the textboxes and set visibility.  This is called when the grid is filled as
            well as when the user horizontally scrolls.</summary>
        </member>
        <member name="M:OpenDental.FormArManager.FormArManager_Resize(System.Object,System.EventArgs)">
            <summary>Fills the grid, but only if not preceded by a ResizeBegin event, i.e. the form is being manually resized or moved around the screen.</summary>
        </member>
        <member name="M:OpenDental.FormArManager.FormArManager_ResizeBegin(System.Object,System.EventArgs)">
            <summary>Fires when manual resizing begins.  Sets _hasResizeBegan so the grid is only filled once manual resizing is finished.</summary>
        </member>
        <member name="M:OpenDental.FormArManager.FormArManager_ResizeEnd(System.Object,System.EventArgs)">
            <summary>Fires when manual resizing is complete, NOT when changing window state. i.e. this is not fired when the window is maximized, minimized
            or restored.  But this also fires when just moving the form around, so we will use both bools to determine if we have a ResizeBegin and actual 
            resize events and only then refill the grid.</summary>
        </member>
        <member name="M:OpenDental.FormArManager.ValidateSendUpdateData(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64}@)">
            <summary>Fills listClinicsSkipped with ClinicNums for those clinics that fail connection detail validation.</summary>
            <param name="listClinicNums">The list of ClinicNums whose connection details should be validated by connecting to the sftp server.</param>
        </member>
        <member name="M:OpenDental.FormArManager.GetSelectedPatAgings(OpenDental.UI.GridOD)">
            <summary>Gets the selected PatAgings for the given grid.</summary>
        </member>
        <member name="M:OpenDental.FormArManager.SetSelectedRows(System.Collections.Generic.List{System.Int64},OpenDental.UI.GridOD)">
            <summary>Selects the given pat nums for the given grid.</summary>
        </member>
        <member name="M:OpenDental.FormArManager.GetXPosAndWidths(OpenDental.UI.GridOD,System.Int32)">
            <summary>Returns a dictionary of key=column heading, value=tuple of Item1=xPos,Item2=width for the given column heading.  Used to position
            totals texboxes below the corresponding column and to resize/reposition as the form is resized.</summary>
        </member>
        <member name="F:OpenDental.FormArManager.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormArManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormArManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpDentalSealantMeasure.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpDentalSealantMeasure.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpDentalSealantMeasure.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpUnfinalizedInsPay.LoadData">
            <summary>Retrieves data and uses them to create new UnfinalizedInsPay objects.
            Heavy lifting done here once upon load.  This also gets called if the user clicks "Refresh Data".</summary>
        </member>
        <member name="M:OpenDental.FormRpUnfinalizedInsPay.FillGrid">
            <summary>Actually fill the grid with the data. Filtering based on the user-defined criteria gets done here.</summary>
        </member>
        <member name="M:OpenDental.FormRpUnfinalizedInsPay.createCheckToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>Creates a check for the claim selected. Copied logic from FormClaimEdit.cs</summary>
        </member>
        <member name="M:OpenDental.FormRpUnfinalizedInsPay.openClaimToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>Opens the current selected claim.</summary>
        </member>
        <member name="M:OpenDental.FormRpUnfinalizedInsPay.goToAccountToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>Go to the selected patient's account.</summary>
        </member>
        <member name="M:OpenDental.FormRpUnfinalizedInsPay.openEOBToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>Opens the selected insurance payment.</summary>
        </member>
        <member name="M:OpenDental.FormRpUnfinalizedInsPay.deleteEOBToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>Deletes the selected insurance payment selected.</summary>
        </member>
        <member name="F:OpenDental.FormRpUnfinalizedInsPay.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpUnfinalizedInsPay.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpUnfinalizedInsPay.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpTreatPlanPresentationStatistics.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpTreatPlanPresentationStatistics.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpTreatPlanPresentationStatistics.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpPresentedTreatmentProduction.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpPresentedTreatmentProduction.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpPresentedTreatmentProduction.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpActivePatients.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpActivePatients.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpActivePatients.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormRpBrokenAppointments">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRpBrokenAppointments.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormRpBrokenAppointments.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpBrokenAppointments.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpBrokenAppointments.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpInsPayPlansPastDue.LoadData">
            <summary>Retrieves data and uses them to create new PayPlanExtended objects.
            Heavy lifting (db calls and double loops) done here once upon load.  This also gets called if the user clicks "Refresh Data".</summary>
        </member>
        <member name="M:OpenDental.FormRpInsPayPlansPastDue.FillGrid">
            <summary>Actually fill the grid with the data. Filtering based on the user-defined criteria gets done here.</summary>
        </member>
        <member name="T:OpenDental.FormRpInsPayPlansPastDue.PayPlanExtended">
            <summary>Class that contains a singular payment plan and all relevant information to be displayed in the grid.
            Pass in the payplan, patient, list of payplancharges for that payplan, list of claimprocs attached to that payplan, and insplan when callingt he constructor.</summary>
        </member>
        <member name="F:OpenDental.FormRpInsPayPlansPastDue.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpInsPayPlansPastDue.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpInsPayPlansPastDue.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebSchedAppts.#ctor">
            <summary>Form showing new appointments made using web sched.</summary>
        </member>
        <member name="M:OpenDental.FormWebSchedAppts.FormWebSchedAppts_Load(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWebSchedAppts.FillGrid">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWebSchedAppts.GetAppointments">
            <summary>Get the list of websched appointments using the RpAppointments query.</summary>
        </member>
        <member name="M:OpenDental.FormWebSchedAppts.butRefresh_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWebSchedAppts.gridMain_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormWebSchedAppts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebSchedAppts.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebSchedAppts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAlertCategorySetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAlertCategorySetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAlertCategorySetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWebSchedASAPHistory.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebSchedASAPHistory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebSchedASAPHistory.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWebSchedASAPSend.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebSchedASAPSend.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebSchedASAPSend.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskListBlocks._listUserOdPrefsBlocks">
            <summary>A List of the task lists that the current user wants to block pop ups for.  Filled on load.</summary>
        </member>
        <member name="F:OpenDental.FormTaskListBlocks._listBlockedTaskPrefs">
            <summary>list to hold changed task list subscriptions.</summary>
        </member>
        <member name="F:OpenDental.FormTaskListBlocks._isCheckingParents">
            <summary>Set to true when settings the checkmarks of parents so we don't roll back down through children for each parent recursivly.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.#ctor">
            <summary>Loads up a list of task lists that the currently logged in user is subscribed to.
            Allows the user to selectivly block task lists that they are subscribed to.</summary>
        </member>
        <member name="T:OpenDental.FormTaskListBlocks.BlockedTaskPref">
            <summary> map tasklist number to userodpref</summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.InitializeTree">
            <summary>Fetches the subscriptions that the user is currently subscribed too ad adds them to the treeview.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.BuildTaskListTree(System.Collections.Generic.List{OpenDentBusiness.TaskList})">
            <summary>Creates a dictionary of all task lists then makes a tree based on user subscriptions.
            First we take the passed in listTaskListSubs and fill out all the parents missing from the list
            e.g: If a person is subscribed to [B] but not it's parent [A], we add [A] to the list so the
            	task list hierarchy is correctly displayed for the user.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.GetLeafSubsFromTask(OpenDentBusiness.TaskList,System.Collections.Generic.List{OpenDentBusiness.TaskList})">
            <summary>Recursively returns a list of all leaf nodes down stream from the given parent taskListNode.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.TreeBuilder(System.Collections.Generic.List{OpenDentBusiness.TaskList})">
            <summary>Builds a tree a nodes from a list of subscribed TaskLists.  Fleshes out the subscriptions list, then build the tree.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.GetAllTaskListsRecursive(System.Collections.Generic.Dictionary{System.Int64,OpenDentBusiness.TaskList},System.Int64)">
            <summary>Goes through the given dictionary and works to add all parents of given TaskLists.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.RecursiveSetAllChecked(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>Recursivly goes through the tree and sets all nodes to checked.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormTaskListBlocks.SetCheckBoxes(System.Windows.Forms.TreeNode)" -->
        <member name="M:OpenDental.FormTaskListBlocks.treeSubscriptions_NodeMouseClick(System.Object,System.Windows.Forms.TreeNodeMouseClickEventArgs)">
            <summary>Handles the user clicking on the node text to activate the checkbox</summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.treeSubscriptions_AfterCheck(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>Is activated when a node is checked or unchecked.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.nodesCheckUp(System.Windows.Forms.TreeNode)">
            <summary>Works it's way up from a given node, checking the parent if all it's children are checked.  
            	Be sure to set isCheckingParents to true so the treeSubscriptions_AfterCheck isn't triggered
             </summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.butSetAll_Click(System.Object,System.EventArgs)">
            <summary>Handler to set all nodes as checked.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.butSetNone_Click(System.Object,System.EventArgs)">
            <summary>Handler to set all nodes as unchecked</summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.SetBlockedPrefsRecursive(System.Windows.Forms.TreeNode)">
            <summary>Goes through tree and sets up changes to the TaskList block preferences list.</summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.butSave_Click(System.Object,System.EventArgs)">
            <summary>Gets the changed preferences for the tree, then updates the database with the changes.</summary>
        </member>
        <member name="F:OpenDental.FormTaskListBlocks.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTaskListBlocks.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormAsapSetup.BuildRowForTemplate(OpenDentBusiness.PrefName,System.String,System.String)">
            <summary>Creates a row for the passed in template type. Unchecks checkUseDefaults if a clinic-level template is in use.</summary>
        </member>
        <member name="F:OpenDental.FormAsapSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAsapSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAsapSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTrackNextSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTrackNextSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTrackNextSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormUnschedListSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormUnschedListSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormUnschedListSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._totalPages">
            <summary>Total pages in the printed document.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._pagesPrinted">
            <summary>Keeps track of the number of pages which have already been completely printed.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._doPrintPageNumbers">
            <summary>Set to true to print page number in upper right-hand corner of the screen.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._isDirty">
            <summary>Set to true when the document has not been renderd into the local container.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._isFrench">
            <summary>English by default (represented by false). Set to true later if using French.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._verticalLine">
            <summary>Used to represent a single line break (the maximum line hight for the standard font).</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._maxCharWidth">
            <summary>Represents the maximum width of any character in our standard font.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._center">
            <summary>Contains the x-value for the center of the in-doc.bounds print page values.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._x">
            <summary>the x position where the current printing is happening.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._text">
            <summary>A value is assigned to text sometimes so that it can be measured or set to French. Not always needed.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._bullet">
            <summary>Used to render numbered bullet lists.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._penBreakLine">
            <summary>Used to hold a single group of graphical primitives, so that they can be moved together in case they align with the bottom of a page.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._ccdReceived">
            <summary>The parsed elements/fields of the received etrans.MessageText string or embeded message.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._ccdSent">
            <summary>The parsed copy of the raw document sent (ex claim, COB, preauth).
            Can be null if DBM tool was run to cleanup old etrans records.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._formId">
            <summary>Attained from field G42. Tells which form to print.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._claimResponseDefNum">
            <summary>For saving the printed document to PDF.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._docDescript">
            <summary>For saving the printed document to PDF.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint._pdfDocument">
            <summary>For saving the printed document to PDF.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.#ctor(OpenDentBusiness.Etrans,System.String,System.Boolean)">
            <summary>Called externally to display and/or print the messageText as a form.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.#ctor(OpenDentBusiness.Etrans,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>Only called internally.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintCCD(OpenDentBusiness.Etrans,System.String,System.Boolean)">
            <summary>Simply calls the constructor. Useful when passing around as a delegate.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.pd_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>Called for each page to be printed.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintClaimForm(System.Boolean)">
            <summary>If canPrint is false, then simply displays to the screen.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.DefaultPrint(System.Drawing.Graphics)">
            <summary>For printing basic information about unknown/unsupported message formats (for debugging, etc.).</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintDentaide(System.Drawing.Graphics)">
            <summary>According to Version 4.2 of the guide released on May 7th 2021:
            On page 93 - "ACDQ confirmed that this section is no longer active. The section has been removed."
            On page 134 - "Removed all reference to Dentaide and Dentaide as per advice from ACDQ it is obsolete."
            This form is for claim acks, claim EOBs, predetermination acks, predetermination EOBs.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintClaimAck(System.Drawing.Graphics)">
            <summary>Contains different header and footer based on wether or not this is a patient copy.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintClaimAckBody(System.Drawing.Graphics,System.String)">
            <summary>Does the actual work for printing claims. When graphicObjects is null, returns the required graphicObjects after calculating them. In normal use, this function should be called twice for each time the form is rendered, once to calculate the graphical primitives, then once more to actually render to form for printing.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintProcedureListAck(System.Drawing.Graphics,System.String)">
            <summary>Prints the list of procedures performed for the patient on the document in question.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintEOBHeader(System.Drawing.Graphics)">
            <summary>Prints the EOB header. Left in its own function, since the header is expected to be printed on each respective page of output.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintCarrier(System.Drawing.Graphics)">
            <summary>Prints carrier name centered on current form row followed by a space.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintVertificationNo(System.Drawing.Graphics,System.Single,System.Single)">
            <summary>For EOBs only.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintTransactionReferenceNumber(System.Drawing.Graphics,System.Single,System.Single)">
            <summary>Corresponds to field G01.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormCCDPrint.PrintDentistAddress(System.Drawing.Graphics,System.Single,System.Single,System.Single)" -->
        <member name="M:OpenDental.FormCCDPrint.PrintTreatmentProviderID(System.Drawing.Graphics,System.Single,System.Single)">
            <summary>Corresponds to field B01.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintTreatmentProviderOfficeNumber(System.Drawing.Graphics,System.Single,System.Single)">
            <summary>Corresponds to field B02.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintOfficeSequenceNumber(System.Drawing.Graphics,System.Single,System.Single)">
            <summary>Corresponds to field A02.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintCardNo(System.Drawing.Graphics,System.Single,System.Single)">
            <summary>Print "sequence" number.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormCCDPrint.PrintSubscriberAddress(System.Drawing.Graphics,System.Single,System.Single,System.Boolean,System.Single)" -->
        <member name="M:OpenDental.FormCCDPrint.PrintInsuredAddress(System.Drawing.Graphics,System.Single,System.Single,System.Boolean,System.Int32)">
            <summary>If maxCharsPerLine>0, then the lines which are excess in length are truncated to the value specified.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.PrintRelationshipToSubscriber(System.Drawing.Graphics,System.Single,System.Single,System.Boolean)">
            <summary>Corresponds to field C03.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormCCDPrint.PrintAddress(System.Drawing.Graphics,System.Single,System.Single,System.String,System.String,System.String,System.Single,System.Single)" -->
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormCCDPrint.GetTruncatedString(System.Drawing.Graphics,System.Drawing.Font,System.String,System.Single)" -->
        <member name="M:OpenDental.FormCCDPrint.PrintErrorList(System.Drawing.Graphics)">
            <summary>Returns the number of errors displayed.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.AssignmentOfBenefits">
            <summary>Gets the assignment of benefits for the appropriate insplan,
            also considering clinic preference overrides for the clinic attached to the claim.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.RawPercentToDisplayPercent(System.String)">
            <summary>The rawPercent string should be of length 3 and should be numerical digits only.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.DateNumToDateTime(System.String)">
            <summary>Input string is expected to have the form 'YYYYMMDD'.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.DateNumToPrintDate(System.String)">
            <summary>Input string is expected to have the form 'YYYYMMDD'.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.RawMoneyStrToDisplayMoney(System.String)">
            <summary>The given number must be in the format of: [+-]?[0-9]*</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.GetPatientRelationshipString(System.String,System.Nullable{OpenDentBusiness.Relat})">
            <summary>Convert a patient relationship enum value into a human-readable, CDA required string.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.GetRelationshipDescriptFromCode(System.String)">
            <summary>Given a CDA relationship code (from fields C03 and E06), returns a description string.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.GetMaterialDescription(System.Int32)">
            <summary>Convet a code from fields F20 and F21 into a human-readable string.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.GetProcedureTypeCodeDescription(System.Char)">
            <summary>Convert one of the type codes from field F16 into a human-readable string.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.GetAllProcedureTypeDescriptions">
            <summary>If field F16 is defined for the current message, then the codes within it are transcribed into a paragraph of text.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.GetDbDataStr(System.String,System.String)">
            <summary>Returns string from most preferred raw data source to least preferred in this order: received raw, sent raw, default.
            Can return null if the data could not be found anywhere in the database.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.GetDbDataDateTime(System.String,System.Nullable{System.DateTime})">
            <summary>Can throw exception if the data could not be found anywhere in the database.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.GetDbDataInt(System.String,System.Nullable{System.Int32})">
            <summary>Can throw exception if the data could not be found anywhere in the database.</summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.GetDbDataBool(System.String,System.Nullable{System.Boolean})">
            <summary>If the field contains "N", then returns false.  Otherwise returns true (ex "Y").
            Can throw exception if the data could not be found anywhere in the database.</summary>
        </member>
        <member name="F:OpenDental.FormCCDPrint.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCCDPrint.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCCDPrint.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCloneAdd._patientMaster">
            <summary>Shallow copy of the "master" patient that was passed into the constructor that the clone will be created from.</summary>
        </member>
        <member name="F:OpenDental.FormCloneAdd._listSpecialtyClinics">
            <summary>A list of specialties and the clinics that are associated to that specialty.
            If no specialties are present then this list will have a single entry with an 'Unspecified' specialty with a list of all clinics available to the user.
            Only filled on load if clinics are enabled.</summary>
        </member>
        <member name="F:OpenDental.FormCloneAdd.PatNumClone">
            <summary>Will be set to the PatNum of the new clone that was created if the user actually created one.</summary>
        </member>
        <member name="M:OpenDental.FormCloneAdd.#ctor(OpenDentBusiness.Patient,OpenDentBusiness.Family,System.Collections.Generic.List{OpenDentBusiness.InsPlan},System.Collections.Generic.List{OpenDentBusiness.InsSub},System.Collections.Generic.List{OpenDentBusiness.Benefit})">
            <summary>Patient must be the original or master patient that will have a clone made from them.</summary>
        </member>
        <member name="M:OpenDental.FormCloneAdd.FillClinicComboBoxes">
            <summary>Fills both the Specialty and Clinic combo boxes according to the available clinics to the user and the unused specialties for the patient.
            Only fills the combo box of clinics with clinics that are associated to specialties that have not been used for this patient yet.
            E.g. Even if the user has access to Clinic X, if there is already a clone of this patient for Clinic X, it will no longer show.
            Throws exceptions that should be shown to the user which should then be followed by closing the window.</summary>
        </member>
        <member name="M:OpenDental.FormCloneAdd.FillComboSpecialtyNoClinics">
            <summary>Used in the case when clinics are disabled. Requires special logic that doesn't use clinics.</summary>
        </member>
        <member name="M:OpenDental.FormCloneAdd.comboSpecialty_SelectionChangeCommitted(System.Object,System.EventArgs)">
            <summary>The clinic combo box needs to get refilled every time the specialty changes.</summary>
        </member>
        <member name="M:OpenDental.FormCloneAdd.IsValid">
            <summary>Validates the form and will show a message to the user if something is invalid and then will return false, otherwise true.</summary>
        </member>
        <member name="T:OpenDental.FormCloneAdd.SpecialtyClinics">
            <summary>Class that contains a clinic specialty along with a list of clinics that are associated to the clinic specialty. A DefNumClinicSpecialty of value 0
            represents an unspecified clinic specialty which will include all clinics that don't have a single specialty associated to them.</summary>
        </member>
        <member name="F:OpenDental.FormCloneAdd.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCloneAdd.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCloneAdd.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDomainUserPick.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDomainUserPick.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDomainUserPick.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsEditLogs.#ctor(OpenDentBusiness.InsPlan,System.Collections.Generic.List{OpenDentBusiness.Benefit})">
            <summary>Opens the window with the passed-in parameters set as the default.</summary>
        </member>
        <member name="M:OpenDental.FormInsEditLogs.ConstructGridRows">
            <summary>Actually creates the GridRows and returns them in a list. Takes care of linking dropdown rows.</summary>
        </member>
        <member name="M:OpenDental.FormInsEditLogs.TranslateBeforeAndAfter">
            <summary>Makes the "Before" and "After" columns human-readable for certain logs.</summary>
        </member>
        <member name="F:OpenDental.FormInsEditLogs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsEditLogs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInsEditLogs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsPlanSubstitution._listSubstitutionLinks">
            <summary>Used to sync when saving changes.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlanSubstitution._listSubConditions">
            <summary>Used to fill the SubstitutionCondition DropDown.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlanSubstitution._oldText">
            <summary>Holds the string value of the substitution code string before making changes to the cell.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlanSubstitution._substitutionCondition">
            <summary>Holds the sub condition of a substitution link before trying to make any changes</summary>
        </member>
        <member name="F:OpenDental.FormInsPlanSubstitution._listInsPlanSubstitution">
            <summary>List of InsPlanSubs to keep track of tags while in this form.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlanSubstitution.FillInsPlanSubList(System.Collections.Generic.List{OpenDentBusiness.ProcedureCode},System.Collections.Generic.List{OpenDentBusiness.SubstitutionLink})">
            <summary>Takes logic that was previously used to fill the main grid and now fills a list of InsPlanSubstitutions so that we can better keep track of substitution codes created here</summary>
        </member>
        <member name="M:OpenDental.FormInsPlanSubstitution.ButAdd_Click(System.Object,System.EventArgs)">
            <summary>Opens FormProcCodes in SelectionMode. Creates a new SubstitutionLink for the selected Procedure.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlanSubstitution.gridMain_CellSelectionCommitted(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Changes the SubstOnlyIf after the user selects a new SubstitutionCondition.
            If the user modifies a procedure level substitution code, a new SubstitutionLink will be added for the inplan(override).</summary>
        </member>
        <member name="M:OpenDental.FormInsPlanSubstitution.gridMain_CellEnter(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Sets _oldText. Used in gridMain_CellLeave to check whether the text changed when leaving the cell.</summary>
        </member>
        <member name="M:OpenDental.FormInsPlanSubstitution.gridMain_CellLeave(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Changes the SubstitutionCode to what is entered in the cell. 
            If the user modifies a procedure level substitution code, a new SubstitutionLink will be added for the inplan(override).
            The new SubstitutionLink will be added to _listDbSubstLinks</summary>
        </member>
        <member name="M:OpenDental.FormInsPlanSubstitution.butSave_Click(System.Object,System.EventArgs)">
            <summary>Syncs _listDbSubstLinks and _listDbSubstLinksOld. Does not modify any of the procedure level SubstitutionCodes.</summary>
        </member>
        <member name="F:OpenDental.FormInsPlanSubstitution.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsPlanSubstitution.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInsPlanSubstitution.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptBreak.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptBreak.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormApptBreak.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.ApptBreakSelection.None">
            <summary>0 - Default.</summary>
        </member>
        <member name="F:OpenDental.ApptBreakSelection.Unsched">
            <summary>1</summary>
        </member>
        <member name="F:OpenDental.ApptBreakSelection.Pinboard">
            <summary>2</summary>
        </member>
        <member name="F:OpenDental.ApptBreakSelection.ApptBook">
            <summary>3</summary>
        </member>
        <member name="F:OpenDental.ApptBreakSelection.Delete">
            <summary>4</summary>
        </member>
        <member name="M:OpenDental.FormConfirmationSetup.FillTabManualConfirmation">
            <summary>Called on load to initially load confirmation with values from the database.  Calls FillGrid at the end.</summary>
        </member>
        <member name="F:OpenDental.FormConfirmationSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormConfirmationSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormConfirmationSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDiscountPlanMerge.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDiscountPlanMerge.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDiscountPlanMerge.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormPopupFade">
            <summary>Displays a message then begins to fade after 1 second.</summary>
        </member>
        <member name="F:OpenDental.FormPopupFade._timeSpent">
            <summary>The number of milliseconds this form has been open.</summary>
        </member>
        <member name="F:OpenDental.FormPopupFade._timeBeforeFade">
            <summary>The number of milliseconds before the form starts to fade.</summary>
        </member>
        <member name="F:OpenDental.FormPopupFade._byteAlpha">
            <summary>Code to make semi-transparent. 255 is fully visible; 0 is fully invisible.</summary>
        </member>
        <member name="F:OpenDental.FormPopupFade.LayeredWindowAttributes.LWA_COLORKEY">
            <summary>Use bAlpha to determine the opacity of the layered window.</summary>
        </member>
        <member name="F:OpenDental.FormPopupFade.LayeredWindowAttributes.LWA_ALPHA">
            <summary>Use crKey as the transparency color.</summary>
        </member>
        <member name="F:OpenDental.FormPopupFade.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPopupFade.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPopupFade.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSetupWizardProgress._indexSetupClasses">
            <summary>The current setup control that is being viewed.  Used in conjunction with _listSetupClasses.</summary>
        </member>
        <member name="M:OpenDental.FormSetupWizardProgress.ControlValidated">
            <summary>Any validation should be done here.</summary>
        </member>
        <member name="M:OpenDental.FormSetupWizardProgress.ControlDone">
            <summary>Any conditional relational setup should be done here. 
            Eg, clinic setup should be added if the user the user is setting up "All" and they checked "Clinics" when setting up Basic Features.</summary>
        </member>
        <member name="M:OpenDental.FormSetupWizardProgress.SetControlCurrent">
            <summary>Makes sure that the SetupControl that corresponds to _indexSetupClasses within _listSetupWizClasses is showing. Updates the Enabled property on butBack accordingly. Manipulate _indexSetupClasses before invoking this method.</summary>
        </member>
        <member name="F:OpenDental.FormSetupWizardProgress.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSetupWizardProgress.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSetupWizardProgress.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSetupWizard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSetupWizard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSetupWizard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptConflicts._listAppointments">
            <summary>Passed in list of Appts to show.</summary>
        </member>
        <member name="F:OpenDental.FormApptConflicts._listPatients">
            <summary>All unique PatNums via the list of appointments.</summary>
        </member>
        <member name="M:OpenDental.FormApptConflicts.SendPinboard_Click">
            <summary>Removes the selected appoinments from the class wide list of appointments, sends the appointments to the pinboard,
            and then refreshes the grid so that the user can see that they are "taking care" of the conflicts.</summary>
        </member>
        <member name="F:OpenDental.FormApptConflicts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptConflicts.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormApptConflicts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimCustomTrackingUpdate._listClaims">
            <summary>List of claims selected from outstanding claim report</summary>
        </member>
        <member name="F:OpenDental.FormClaimCustomTrackingUpdate.ListClaimTrackingsNew">
            <summary>When creating a new claimTracking this list contains 1 for every claim in _listClaims. Otherwise null</summary>
        </member>
        <member name="M:OpenDental.FormClaimCustomTrackingUpdate.#ctor(System.Collections.Generic.List{OpenDentBusiness.Claim})">
            <summary>Used when creating a brand new claimcustomtracking.</summary>
        </member>
        <member name="M:OpenDental.FormClaimCustomTrackingUpdate.#ctor(OpenDentBusiness.Claim,System.String)">
            <summary>Used when creating a brand new claimcustomtracking.</summary>
        </member>
        <member name="M:OpenDental.FormClaimCustomTrackingUpdate.#ctor(OpenDentBusiness.Claim,OpenDentBusiness.ClaimTracking)">
            <summary>Used for editing a ClaimTracking object from FormClaimEdit.</summary>
        </member>
        <member name="M:OpenDental.FormClaimCustomTrackingUpdate.SetTextErrorDesc">
            <summary>Sets the read-only textbox with the description of the selected ClaimErrorCode.</summary>
        </member>
        <member name="F:OpenDental.FormClaimCustomTrackingUpdate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimCustomTrackingUpdate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimCustomTrackingUpdate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTxtMsgMany.DoCombineNumbers">
            <summary>If true, patients with the same number will be combined into one message.</summary>
        </member>
        <member name="M:OpenDental.FormTxtMsgMany.SendText(OpenDentBusiness.PatComm,System.Int64,System.String)">
            <summary>Sends a text message to this patient if it is feasible.</summary>
        </member>
        <member name="F:OpenDental.FormTxtMsgMany.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTxtMsgMany.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTxtMsgMany.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTransworldSetup._listClinicNumsUser">
            <summary>Local cache of all of the clinic nums the current user has permission to access at the time the form loads.  Filled at the same time
            as comboClinic and is used to set programproperty.ClinicNum when saving.</summary>
        </member>
        <member name="F:OpenDental.FormTransworldSetup._dictionaryClinicListProgProps">
            <summary>Dictionary is ClinicNum key with the list of Transworld program properties for the clinic and will be filled with all prog props in
            the db for Transworld on load.  If a clinic is synced with HQ, i.e. all props for the clinic match those for HQ, the props for that clinic will
            be deleted from the dict and on form close the sync will delete them from the db and the form will display the HQ 'clinic' details.  Any edit
            to a clinic synced with HQ will break the sync.</summary>
        </member>
        <member name="F:OpenDental.FormTransworldSetup._selectedClinicNum">
            <summary>If the user changes clinics, this will hold the previous ClinicNum used to save the form details to the local list of props before
            loading the new clinic props.</summary>
        </member>
        <member name="F:OpenDental.FormTransworldSetup._listProgramProperties">
            <summary>Contains all the program properties that existed when we opened the form. Does not get updated when a clinic's set of program properties 
            are added or removed from _dictClinicListProgProps. Used for logging purposes.</summary>
        </member>
        <member name="M:OpenDental.FormTransworldSetup.FillComboBoxes">
            <summary>Fill the combo boxes with items. Some will have their indicies set later in FillFields() </summary>
        </member>
        <member name="M:OpenDental.FormTransworldSetup.FillFields">
            <summary>Details displayed in form may be for HQ clinic and not the currently selected clinic if the current clinic is synced with HQ.  If the
            values are modified and the currently selected clinic is not the HQ clinic but the HQ details are being displayed, the HQ clinic details will
            remain unchanged and the currently selected clinic will no longer be synced with HQ and will have a set of props added to the dict.</summary>
        </member>
        <member name="M:OpenDental.FormTransworldSetup.SetAdvertising">
            <summary>Handles both visibility and checking of checkHideButtons.</summary>
        </member>
        <member name="M:OpenDental.FormTransworldSetup.SyncWithHQ">
            <summary>Saves form data to the dict and then removes any clinics from the dict that exactly match the HQ clinic details.  If editing a clinic
            other than HQ and there are no props for that clinic and the form values are different than HQ, a new list is added to the dict.</summary>
        </member>
        <member name="F:OpenDental.FormTransworldSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTransworldSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTransworldSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormWebBrowser">
            <summary>A wrapper form to display an Internet browser within an Open Dental window.
            This is essentially a Microsoft Internet Explorer control embedded into our form.
            The browser.ScriptErrorsSuppressed is true in order to prevent javascript error popups from annoying the user.
            When links are clicked inside this browser, the link is followed directly inside the browser instead of opening a new window.</summary>
        </member>
        <member name="F:OpenDental.FormWebBrowser.UrlBrowseTo">
            <summary>Set to the value passed into the constructor if one was passed in.  Navigates the browser control to this url on load.</summary>
        </member>
        <member name="F:OpenDental.FormWebBrowser.PostData">
            <summary>Set to the post data to be sent to the browser.</summary>
        </member>
        <member name="F:OpenDental.FormWebBrowser.AdditionalHeaders">
            <summary>Any additional headers will be sent to the browser. Will only be sent if postData is set as well.</summary>
        </member>
        <member name="F:OpenDental.FormWebBrowser._canWrapNewWindow">
            <summary>Decides whether or not to wrap new windows in FormWebBrowser controls, or just open them in their regular browser instance.</summary>
        </member>
        <member name="F:OpenDental.FormWebBrowser.IsUrlSingleUse">
            <summary>Default to false. Determines if url is single use or not. When this is set to true, then the refresh button is not added. See LayoutToolBar() 
            Bamboo's API returns a single use URL for PHI security reasons. Hitting refresh would cause an unauthorized message to show from their server which would force offices to close and relaunch the bridge.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebBrowser.#ctor">
            <summary> DO NOT USE. Use FormWebView.cs instead. Used when opening a new browser window via a link or to display html content.
            If html content and url specified, url will be used and given content ignored. postData and additionalHeaders will only be used if url is 
            passed in.</summary>
        </member>
        <member name="M:OpenDental.FormWebBrowser.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary> DO NOT USE. Use FormWebView.cs instead. Used when opening a new browser window via a link or to display html content.
            If html content and url specified, url will be used and given content ignored. postData and additionalHeaders will only be used if url is 
            passed in.</summary>
        </member>
        <member name="M:OpenDental.FormWebBrowser.LayoutToolBars">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWebBrowser.browser_NewWindow(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>Linked up to the browser in the designer.
            This event fires when a link is clicked within the webbrowser control which opens in a new window.
            The browser.IsWebBrowserContextMenuEnabled is set to false to disable the popup menu that shows up when right clicking on links or images,
            because right clicking a link and choosing to open in a new window causes this function to fire but the destination URL is unknown and thus
            we cannot handle that situation.  Best to hide the context menu since there is little or no need for it.</summary>
        </member>
        <member name="M:OpenDental.FormWebBrowser.axBrowser_NewWindow2(System.Object@,System.Boolean@)">
            <summary>This event fires when a javascript snippet calls window.open() to open a URL in a new	browser window.
            When window.open() is called, our browser_NewWindow() event function does not fire.</summary>
        </member>
        <member name="M:OpenDental.FormWebBrowser.axBrowser_NewWindow3(System.Object@,System.Boolean@,System.UInt32,System.String,System.String)">
            <summary>We are not sure when this event function fires, but we implemented it just in case.</summary>
        </member>
        <member name="M:OpenDental.FormWebBrowser.CreateNewWindow(System.String)">
            <summary>This helper function is called any time a new browser window needs to be opened.  By default, new windows launched by clicking a link
            from within the webbrowser control will open in Internet Explorer, even if the system default is another web browser such as Mozilla.  We had a
            problem with cookies not being carried over from our webbrowser control into Internet Explorer when a link is clicked.  To preserve cookies, we
            intercept the new window creation, cancel it, then launch the destination URL in a new OD browser window.  Cancel the new window creation
            inside the calling event.</summary>
        </member>
        <member name="M:OpenDental.FormWebBrowser.browser_DocumentCompleted(System.Object,System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)">
            <summary>Called after a document has finished loading, including initial page load and when Back and Forward buttons are pressed.</summary>
        </member>
        <member name="M:OpenDental.FormWebBrowser.SetTitle">
            <summary>Sets the text of the form to the browser's DocumentTitle.</summary>
        </member>
        <member name="F:OpenDental.FormWebBrowser.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebBrowser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebBrowser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEtrans835s._dateFrom">
            <summary>Start date used to populate _listEtranss.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835s._dateTo">
            <summary>End date used to populate _listEtranss.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835s.FillGrid(System.Collections.Generic.List{System.Int64},System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Allows you to pass in predetermined filter options.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835s.FilterAndFillGrid">
            <summary>Called when we need to filter the current in memory contents in _listEtrans. Calls FillGrid()</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835s.butAutoProcessedEras_Click(System.Object,System.EventArgs)">
            <summary>User will be blocked if they don't have permission to access the EraAutoProcessed report.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835s.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans835s.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans835s.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOperatoryPick.OperatoryNumSelected">
            <summary>After this window closes, this will be the OperatoryNum of the selected operatory.</summary>
        </member>
        <member name="F:OpenDental.FormOperatoryPick._listOperatories">
            <summary>Passed in list of operatories shown to user.</summary>
        </member>
        <member name="M:OpenDental.FormOperatoryPick.SelectOperatory">
            <summary>Returns true if there was an operatory selected.</summary>
        </member>
        <member name="F:OpenDental.FormOperatoryPick.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOperatoryPick.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOperatoryPick.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoPat.#ctor(OpenDentBusiness.PatPlan,OpenDentBusiness.InsPlan,System.String,System.String,System.Double)">
            <summary>This form does NOT take care of updating the patplan table for you. 
            It passes around the patPlan you passed in by reference, so you can call update on the same patplan you passed in to update.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoPat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoPat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoPat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDiscountPlanEdit._feeSchedCur">
            <summary>FeeSched for the current DiscountPlan.  May be null if the DiscountPlan is new.</summary>
        </member>
        <member name="M:OpenDental.FormDiscountPlanEdit.GetSecurityLogMessage">
            <summary>Returns the securitylog message for the discount plan.</summary>
        </member>
        <member name="F:OpenDental.FormDiscountPlanEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDiscountPlanEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDiscountPlanEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDiscountPlans.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDiscountPlans.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDiscountPlans.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetDefDefaults._clinicNumPrevSelected">
            <summary>Used to keep track of the previously selected clinic. When the clinic is changed, this is used to decide what clinic the sheetdefs should be updated under</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefDefaults.FillSheetDefComboBox(OpenDental.UI.ComboBox,OpenDentBusiness.SheetTypeEnum,OpenDentBusiness.PrefName)">
            <summary>Fills the combo box passed in with all of the sheet defs available for the passed-in sheet type, and sets the selected index based on either clinic or default prefs.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefDefaults.UpdateDefaultSheets">
            <summary>Calls for an update to all of the respective clinicpref and preference entries.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefDefaults.UpdateSheetDefDefault(OpenDental.UI.ComboBox,OpenDentBusiness.PrefName,System.Boolean)">
            <summary>Updates the ClinicPref.SheetDefNum for a given prefName. If clinics are disabled, or isIndependentOfClinic is set to true,
            then the 'preference' table is updated.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefDefaults.SelectComboBoxesDefault(OpenDental.UI.ComboBox,OpenDentBusiness.PrefName)">
            <summary>Helper to do selection on comboboxes, abstracted to work with any Combobox in the form and any SheetTypeEnum.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefDefaults.ClinicDependentComboBoxes_Validate(OpenDental.UI.ComboBox,OpenDentBusiness.PrefName)">
            <summary>Returns true if the comboboxes selected key is different from the stored key in the db</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefDefaults.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetDefDefaults.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetDefDefaults.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormQueryParser.FillGrid(System.Boolean)">
            <summary>This method takes care of parsing the query by pulling out SET statements and finding the variables with their assigned values.
            Puts all of this information into the grid.</summary>
        </member>
        <member name="M:OpenDental.FormQueryParser.gridMain_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>When a row is double clicked, bring up an input box that allows the user to change the variable's value.</summary>
        </member>
        <member name="M:OpenDental.FormQueryParser.HasQuotes(System.String)">
            <summary>Returns true if the string starts and ends with quotes.</summary>
        </member>
        <member name="F:OpenDental.FormQueryParser.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormQueryParser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormQueryParser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFeatureRequestPrompt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeatureRequestPrompt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFeatureRequestPrompt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormBugEdit.#ctor(System.Collections.Generic.List{OpenDentBusiness.BugSubmission})">
            <summary>When listBugSubs is set, on OK click all BugSubmissions.BugId will be updated to the current bugId.
            Seting listBugSubs will add to any existing BugSubmissions they may or may not exist  that areassociated to BugCur.</summary>
        </member>
        <member name="F:OpenDental.FormBugEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBugEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBugEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobManager.LocalLastRefreshDateTime">
            <summary>Holds the time of the most recent refresh of the active tab and job edit UI.</summary>
        </member>
        <member name="F:OpenDental.FormJobManager._dicRowNotes">
            <summary>Dictionary containing row notes shown when hovering.
            Key		=> Row index
            Value	=> Note for the row.</summary>
        </member>
        <member name="F:OpenDental.FormJobManager._toolTipHover">
            <summary>Used when hovering to show flag explanations.
            Object tag is the location of the mouse the last time the tip was shown. Used to reduce redraw and flicker.</summary>
        </member>
        <member name="F:OpenDental.FormJobManager._menuItemEmployeeStatus">
            <summary>Allows engineers to change clock status.</summary>
        </member>
        <member name="F:OpenDental.FormJobManager._phone">
            <summary>Information about engineer employee clock status. Kept current by FormOpenDental typical clock status timer.</summary>
        </member>
        <member name="F:OpenDental.FormJobManager._colorGridHeaderBack">
            <summary>Grid themes are gone.  This static color gets reused here, as needed.</summary>
        </member>
        <member name="F:OpenDental.FormJobManager._listJobActionsCollapsed">
            <summary>Filled with JobActions that will be collapsed when filling the Needs Action grid.</summary>
        </member>
        <member name="F:OpenDental.FormJobManager._listJobActionsCollapsedProject">
            <summary>Filled with JobActions that will be collapsed when filling the Project Management grid.</summary>
        </member>
        <member name="F:OpenDental.FormJobManager._listJobTeams">
            <summary>Filled with JobActions that will be collapsed when filling the Needs Action grid.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.splitContainer1_SplitterMoved(System.Object,System.Windows.Forms.SplitterEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJobManager.tabControlNav_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>Custom drawing for the tabs. Should not fail even if the subscriber tab does not exist</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.FillActiveTabGrid">
            <summary>Refreshes the grid in the active tab. Should be the only reference to any FillGrid in FormJobManager</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.FillGridActions">
            <summary>Always fills from _ListJobsAll.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.FillGridSpecial">
            <summary>Always fills from _ListJobsAll.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.FillGridDocumentation">
            <summary>Always fills from _ListJobsAll.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.FillGridTesting">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJobManager.FillGridProjectManagement">
            <summary>Fills tabProjectManagement with top parent Projects.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.FillGridNotify">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormJobManager.FillGridUnresolvedIssues">
            <summary>Always fills from _ListJobsAll.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.FillGridSubmittedJobs">
            <summary>Always fills from _ListJobsAll.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.GetDictJobsForTeamByCategory(System.Int64,System.Collections.Generic.List{OpenDentBusiness.Job})">
            <summary>Helper method. Returns a dictionary of lists of jobs per job category for a given jobTeamNum.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.GetListJobsForTeam(System.Int64,System.Collections.Generic.List{OpenDentBusiness.Job})">
            <summary>Filters the passed in list of jobs by JobTeamNum. Considers -1 and -2 for comboBox 'none' and 'all' options.
            If listJobs is null, it defaults to JobManagerCore.ListJobsAll.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.FlagHelper(OpenDentBusiness.Job,System.Int32)">
            <summary>Attempts to identify flags for the given job.
            Also constructs an explanation to be displayed when mouse hovers over jobs with flags.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.GetSelectedJob(OpenDental.UI.GridOD,System.Int32)">
            <summary>Helper method to get job from the passed in grid and row selection. Can return null if not called correctly.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.LoadJob(OpenDentBusiness.Job,System.Boolean,OpenDentBusiness.LoadJobAction)">
            <summary>Loads whatever job control is necessary in order to display the job within the manager.
            Also refreshes the cache with the job passed in and updates all corresponding controls and grids.
            This method will not load the passed in job if the current job cannot be saved correctly.</summary>
        </member>
        <member name="M:OpenDental.FormJobManager.OpenNonModalJob(OpenDentBusiness.Job)">
            <summary>Opens a non-modal job editor. This method is here so FormJobManager can still maintain ownership of the form.</summary>
        </member>
        <member name="F:OpenDental.FormJobManager.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOrthoAutoClaims._table">
            <summary>OutstandingAutoClaims</summary>
        </member>
        <member name="F:OpenDental.FormOrthoAutoClaims.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoAutoClaims.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoAutoClaims.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormVersionPrompt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormVersionPrompt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormVersionPrompt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormVoiceMails._colorGridHeaderBack">
            <summary>Grid themes are gone.  This static color gets reused here, as needed.</summary>
        </member>
        <member name="M:OpenDental.FormVoiceMails.PlayVM(System.String)">
            <summary>Plays the voice mail at the given file.</summary>
        </member>
        <member name="M:OpenDental.FormVoiceMails.GoToChart">
            <summary>Goes to the chart module of the patient of the selected voicemail.</summary>
        </member>
        <member name="M:OpenDental.FormVoiceMails.SendToMe">
            <summary>Returns true if the VM was successfully sent to self.</summary>
        </member>
        <member name="M:OpenDental.FormVoiceMails.TryCreateTaskAndForm(OpenDental.FormTaskEdit@)">
            <summary>Returns true if a task was inserted into the DB, when true formTaskEdit is set. Otherwise null.</summary>
        </member>
        <member name="F:OpenDental.FormVoiceMails.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormVoiceMails.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormVoiceMails.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormFieldDefLink.FillGridDisplayed">
            <summary>Fills the displayed grid with all field defs that should show for the location selected.
            This should be enhanced in the future to include indication rows when there is a potential for one location to serve multiple types.</summary>
        </member>
        <member name="M:OpenDental.FormFieldDefLink.FillGridHidden">
            <summary>Fills the hidden grid with all hidden field defs for the location selected.
            This should be enhanced in the future to include indication rows when there is a potential for one location to serve multiple types.</summary>
        </member>
        <member name="F:OpenDental.FormFieldDefLink.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFieldDefLink.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFieldDefLink.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskPreferences.FillComboGlobalFilter">
            <summary>Fills the Global Task filter combobox with options.  Only visible if Clinics are enabled, or if previous selection no is longer 
            available, example: Clinics have been turned off, Clinic filter no longer available.</summary>
        </member>
        <member name="M:OpenDental.FormTaskPreferences.FillComboImageCategoryFolders">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormTaskPreferences.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskPreferences.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTaskPreferences.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskInboxSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskInboxSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTaskInboxSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTaskOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormQBAccountSelect._listDepositAccountsQB">
            <summary>List of deposit accounts from pref. for QuickBooks</summary>
        </member>
        <member name="F:OpenDental.FormQBAccountSelect._listIncomeAccountsQB">
            <summary>List of income accounts from pref. for QuickBooks</summary>
        </member>
        <member name="F:OpenDental.FormQBAccountSelect.DepositAccountSelected">
            <summary>The selected account when clicking OK.  Used in FormDepositEdit to pass to QuickBooks or QuickBooks Online.</summary>
        </member>
        <member name="F:OpenDental.FormQBAccountSelect.IncomeAccountSelected">
            <summary>The selected account when clicking OK.  Used in FormDepositEdit to pass to QuickBooks or QuickBooks Online.</summary>
        </member>
        <member name="F:OpenDental.FormQBAccountSelect._isQuickBooksOnline">
            <summary>True if user is using QuickBooks Online instead of regular QuickBooks.</summary>
        </member>
        <member name="F:OpenDental.FormQBAccountSelect._programPropertyQboDepositAccounts">
            <summary>Contains the string of deposit accounts for QuickBooks Online.</summary>
        </member>
        <member name="F:OpenDental.FormQBAccountSelect._programPropertyQboIncomeAccounts">
            <summary>Contains the string of income accounts for QuickBooks Online.</summary>
        </member>
        <member name="F:OpenDental.FormQBAccountSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormQBAccountSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormQBAccountSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFilePicker.ListSelectedFiles">
            <summary>List of selected files, including their path.</summary>
        </member>
        <member name="F:OpenDental.FormFilePicker.DoHideLocalButton">
            <summary>If this is true, the "Select Local File" button will be invisible.</summary>
        </member>
        <member name="F:OpenDental.FormFilePicker._bitmapThumbnail">
            <summary>Re-use the memory for each new thumbmail.  This prevents memory leaks.</summary>
        </member>
        <member name="F:OpenDental.FormFilePicker.WasLocalFileSelected">
            <summary>The SelectedFiles are local files, not files from the cloud.</summary>
        </member>
        <member name="F:OpenDental.FormFilePicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFilePicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFilePicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRxManage.SortByRxDate(OpenDentBusiness.RxPat,OpenDentBusiness.RxPat)">
            <summary>Sorts the passed in RxPats by RxDate and then RxNum.</summary>
        </member>
        <member name="M:OpenDental.FormRxManage.butPrintSelect_Click(System.Object,System.EventArgs)">
            <summary>Prints the selected rx's. If one rx is selected, uses single rx sheet. If more than one is selected, uses multirx sheet</summary>
        </member>
        <member name="F:OpenDental.FormRxManage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRxManage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRxManage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormXWeb._patNum">
            <summary>The patient who is making this transaction.</summary>
        </member>
        <member name="F:OpenDental.FormXWeb._creditCard">
            <summary>The credit card being used for this transaction.</summary>
        </member>
        <member name="F:OpenDental.FormXWeb._xWebTransactionType">
            <summary>The currently select transaction type.</summary>
        </member>
        <member name="F:OpenDental.FormXWeb.LockCardInfo">
            <summary>Set to true to not allow the user to change the credit card information.</summary>
        </member>
        <member name="F:OpenDental.FormXWeb._createPayment">
            <summary>True if a payment should be created from the transaction.</summary>
        </member>
        <member name="F:OpenDental.FormXWeb._payAmtOriginal">
            <summary>The original payment amount.</summary>
        </member>
        <member name="F:OpenDental.FormXWeb.XWebResponse_">
            <summary>The XWebResponse from the transaction. Will be null if the transaction was not successful.</summary>
        </member>
        <member name="M:OpenDental.FormXWeb.VerifyData">
            <summary>Returns true if all data is entered correctly, false otherwise.</summary>
        </member>
        <member name="M:OpenDental.FormXWeb.ProcessSelectedTransaction">
            <summary>Processes the selected XWeb transaction. Returns true if the payment was successful, false otherwise.</summary>
        </member>
        <member name="F:OpenDental.FormXWeb.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormXWeb.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormXWeb.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormXWebTransactions._tableTrans">
            <summary>The XWeb and PayConnect transactions for the selected date range and clinics.</summary>
        </member>
        <member name="F:OpenDental.FormXWebTransactions._listClinics">
            <summary>The list of clinics available to the current user.</summary>
        </member>
        <member name="M:OpenDental.FormXWebTransactions.FillClinics">
            <summary>Fills the clinics combo box with the clincs available to this user.</summary>
        </member>
        <member name="F:OpenDental.FormXWebTransactions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormXWebTransactions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormXWebTransactions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDropboxAuthorize.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDropboxAuthorize.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDropboxAuthorize.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFHIRAPIKeyEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFHIRAPIKeyEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFHIRAPIKeyEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFHIRSetup._listApiKeyVisibleInfos">
            <summary>The API keys obtained from ODHQ.</summary>
        </member>
        <member name="M:OpenDental.FormFHIRSetup.FillGrid">
            <summary>FillGrid also replaces apikey database table.</summary>
        </member>
        <member name="M:OpenDental.FormFHIRSetup.SetPermissions">
            <summary>Displays the permissions that are assigned for the selected API key.</summary>
        </member>
        <member name="F:OpenDental.FormFHIRSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFHIRSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFHIRSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormTimePick">
            <summary>Can also be used to pick Date.</summary>
        </member>
        <member name="F:OpenDental.FormTimePick.DateTimeSelected">
            <summary>The selected time. Used to set the initial value of the date and time displayed in this form. Defaults to today.
            Also stores the resulting DateTime that the user specifies upon clicking OK to this form.
            The date portion of this will be MinValue if the date picker is not enabled.</summary>
        </member>
        <member name="M:OpenDental.FormTimePick.#ctor(System.Boolean)">
            <summary>If the user clicks OK on this form, the selected time can be accessed through the SelectedTime public variable.
            Pass in true to enable the Date picker as well.</summary>
        </member>
        <member name="F:OpenDental.FormTimePick.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTimePick.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTimePick.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOnlinePayments.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOnlinePayments.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOnlinePayments.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormPayPlanCredits">
            <summary>This form should not be made available for insurance payment plans.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanCredits.ListPayPlanChargesCredit">
            <summary>Payment plan credits for the current payment plan.  Must be passed-in.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanCredits._provNum">
            <summary>The provider that was passed into the constructor of this form. Does not always match the provider on the payment plan.</summary>
        </member>
        <member name="M:OpenDental.FormPayPlanCredits.CreatePayPlanEntries(System.Boolean)">
            <summary>Returns a list of ordered PayPlanEntries based off of the current production on the patient's account.</summary>
        </member>
        <member name="F:OpenDental.FormPayPlanCredits.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlanCredits.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPayPlanCredits.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOrthoChartSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoChartSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoChartSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAdjustmentPicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAdjustmentPicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAdjustmentPicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDefinitionPicker._listDefsInitialSelected">
            <summary>The passed-in list of Defs.</summary>
        </member>
        <member name="F:OpenDental.FormDefinitionPicker.ListDefsSelected">
            <summary>After clicking OK, this is the list of selected defs.</summary>
        </member>
        <member name="F:OpenDental.FormDefinitionPicker._listDefsShowing">
            <summary>List of all defs of the passed-in category type.</summary>
        </member>
        <member name="F:OpenDental.FormDefinitionPicker.HasShowHiddenOption">
            <summary>Set to true to allow showing hidden.</summary>
        </member>
        <member name="F:OpenDental.FormDefinitionPicker.IsMultiSelectionMode">
            <summary>Allows selecting multiple.  If false, ListSelectedDefs will only have one result.</summary>
        </member>
        <member name="M:OpenDental.FormDefinitionPicker.#ctor(OpenDentBusiness.DefCat,System.Collections.Generic.List{OpenDentBusiness.Def},System.Int64)">
            <summary>Passing in a list of Defs will make those defs pre-selected and highlighted when this window loads.  For AutoNoteCategories this is
            used to select a parent category for the current category, but we want to prevent an infinite loop so defNumExclude is used to exclude the
            currently selected def and any direct-line descendants from being selected as the category's parent.</summary>
        </member>
        <member name="M:OpenDental.FormDefinitionPicker.FillListDefs(OpenDentBusiness.DefCat,System.Int64)">
            <summary>Fills local list from cache and removes any that should not be available to select given the currently selected DefNum.  Used to
            prevent infinite loop error if a descendant category is made the parent of an ancestor.  The currently selected Def and any direct-line
            descendants are removed from the list so they cannot be selected as the current def's parent.
            If defNum is 0 or invalid, returns Defs.GetListLong.</summary>
        </member>
        <member name="F:OpenDental.FormDefinitionPicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDefinitionPicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDefinitionPicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.OrthoChartTabFields.OrthoChartTab">
            <summary>Set or leave OrthoChartTab to null when storing the "orphaned" available fields (used in past and not associated to a tab).</summary>
        </member>
        <member name="F:OpenDental.FormInvoiceItemSelect.ListDataRowsSelected">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInvoiceItemSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInvoiceItemSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInvoiceItemSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormApptReminderRuleEdit">
            <summary>In-memory form. Changes are not saved to the DB from this form.</summary>
        </member>
        <member name="F:OpenDental.FormApptReminderRuleEdit.ApptReminderRuleCur">
            <summary>The default appointment reminder rule</summary>
        </member>
        <member name="F:OpenDental.FormApptReminderRuleEdit.ApptReminderRuleOld">
            <summary>Do not edit this. A copy of the passed in default reminder rule.</summary>
        </member>
        <member name="F:OpenDental.FormApptReminderRuleEdit.IsPrefsChanged">
            <summary>True if any preferences were updated.</summary>
        </member>
        <member name="F:OpenDental.FormApptReminderRuleEdit.ListApptReminderRulesNonDefaultAdded">
            <summary>Public so it can be passed back to the parent form. The list of new language rules that were added from this window. </summary>
        </member>
        <member name="F:OpenDental.FormApptReminderRuleEdit.ListApptReminderRulesNonDefaultRemoving">
            <summary>A list to keep track of the loosely associated rules that get removed in this form so they can get sync'd properly.</summary>
        </member>
        <member name="F:OpenDental.FormApptReminderRuleEdit.ListApptReminderRulesClinicOld">
            <summary>Do not edit this. A copied list of the passed in list rules for clinic.</summary>
        </member>
        <member name="F:OpenDental.FormApptReminderRuleEdit._userControlReminderMessageDefault">
            <summary>The control that handles the message templates for the default language.</summary>
        </member>
        <member name="M:OpenDental.FormApptReminderRuleEdit.GetListLanguageRules">
            <summary>A list that holds associated language rules for this rule.</summary>
        </member>
        <member name="M:OpenDental.FormApptReminderRuleEdit.EnableWithinDaysAndHoursControls(System.Boolean)">
            <summary>Enables or disables the fields associated with the 'Do Not Send Within' label based on the boolean passed in.</summary>
        </member>
        <member name="M:OpenDental.FormApptReminderRuleEdit.CheckMultipleEConfirms">
            <summary>Removes 'Do not send eConfirmations' from the confirmed status for 'eConfirm Sent' if multiple eConfirmations are set up.</summary>
        </member>
        <member name="F:OpenDental.FormApptReminderRuleEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptReminderRuleEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormApptReminderRuleEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldChart.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldChart.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldChart.IsEditMobile">
            <summary>Ignored. Not available for mobile</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldChart.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldChart.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldChart.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldRect.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldRect.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldRect.IsEditMobile">
            <summary>Ignored. Available for mobile but all fields are relevant</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldRect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldRect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldRect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailJobTemplateEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailJobTemplateEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEmailJobTemplateEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCdsTriggerEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCdsTriggerEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCdsTriggerEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCdsTriggers.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCdsTriggers.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCdsTriggers.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPodiumSetup._clinicNum">
            <summary>Can be 0 for "Headquarters" or non clinic users.</summary>
        </member>
        <member name="M:OpenDental.FormPodiumSetup.SetAdvertising">
            <summary>Handles both visibility and checking of checkHideButtons.</summary>
        </member>
        <member name="M:OpenDental.FormPodiumSetup.SaveClinicCurProgramPropertiesToList">
            <summary>Updates the in memory _listProgramPropertiesChanged with any changes made to the current locationID for each clinic before showing the next one.</summary>
        </member>
        <member name="F:OpenDental.FormPodiumSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPodiumSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPodiumSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormUpdateHistory.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormUpdateHistory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormUpdateHistory.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans834Preview.ShowStatus(System.String)">
            <summary>Shows current status to user in the progress label.  Useful for when processing for a few seconds or more.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans834Preview.Load834_Safe">
            <summary>Call this from external thread. Invokes to main thread to avoid cross-thread collision.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans834Preview.FillGridRow(OpenDental.UI.GridRow,OpenDentBusiness.Hx834_Member,OpenDentBusiness.Hx834_HealthCoverage)">
            <summary>The healthCoverage variable can be null.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans834Preview.TryImport834">
            <summary>Tries to import the 834. Will return false if the user cancelled out of importing.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans834Preview.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans834Preview.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans834Preview.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans834Import.ShowStatus(System.String)">
            <summary>Shows current status to user in the progress label.  Useful for when processing for a few seconds or more.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans834Import.Load834_Safe">
            <summary>Call this from external thread. Invokes to main thread to avoid cross-thread collision.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans834Import.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans834Import.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans834Import.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSpellChecker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSpellChecker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSpellChecker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormConnectionLost._odEventType">
            <summary>The type of ODEvents that this window should listen to.</summary>
        </member>
        <member name="F:OpenDental.FormConnectionLost._eventInfoFired">
            <summary>The "Fired" event that is currently registered to this form.</summary>
        </member>
        <member name="M:OpenDental.FormConnectionLost.#ctor(System.Func{System.Boolean},CodeBase.ODEventType,System.String,System.Type)">
            <summary>funcShouldWindowClose should return a boolean indicating if this window should close or not.
            Optionally set errorMessage to override the label text that is displayed to the user.
            Optionally set a custom eventType in order to listen for specific types of ODEvent.Fired events.  Defaults to DataConnectionEvent.</summary>
        </member>
        <member name="F:OpenDental.FormConnectionLost.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormConnectionLost.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormConnectionLost.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormBugSearch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBugSearch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBugSearch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsVerificationList._userNumVerify">
            <summary>-1 represents "All", and 0 represents "none".</summary>
        </member>
        <member name="F:OpenDental.FormInsVerificationList._userNumAssign">
            <summary>0 represents "Unassign".</summary>
        </member>
        <member name="F:OpenDental.FormInsVerificationList._listClinicNumsVerifyClinicsFilter">
            <summary>-1 represents "All", and 0 represents "Unassigned".</summary>
        </member>
        <member name="F:OpenDental.FormInsVerificationList._listDefNumsVerifyRegionsFilter">
            <summary>-1 and 0 represent "All".</summary>
        </member>
        <member name="F:OpenDental.FormInsVerificationList._insVerifyGridObjectRowSelected">
            <summary>This will only have a selection if selecting from gridMain.</summary>
        </member>
        <member name="F:OpenDental.FormInsVerificationList._listUserodsInRegion">
            <summary>This will contain all (including hidden) users with the InsPlanVerify permission</summary>
        </member>
        <member name="M:OpenDental.FormInsVerificationList.#ctor">
            <summary>Indicates if a region is selected in the region listbox.</summary>
        </member>
        <member name="M:OpenDental.FormInsVerificationList.FillComboBoxes">
            <summary>Does not fill the Clinic Combo Box</summary>
        </member>
        <member name="M:OpenDental.FormInsVerificationList.FillClinicListBox(System.Collections.Generic.List{OpenDentBusiness.Clinic})">
            <summary>Fills the listbox for clinics. Pass in a list of clinics for the current user.</summary>
        </member>
        <member name="M:OpenDental.FormInsVerificationList.GetInsVerifyNote">
            <summary>Retrieves the text from the currently displayed "Note" textbox.</summary>
        </member>
        <member name="M:OpenDental.FormInsVerificationList.listBoxVerifyClinics_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>Firing on MouseUp allows time for the user to select multiple values via "dragging"</summary>
        </member>
        <member name="M:OpenDental.FormInsVerificationList.listBoxVerifyRegions_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>Firing on MouseUp allows time for the user to select multiple values via "dragging"</summary>
        </member>
        <member name="M:OpenDental.FormInsVerificationList.UpdateSelectedClinicNums">
            <summary>Updates the global list of selected clinicNums from listBoxVerifyClinics.</summary>
        </member>
        <member name="T:OpenDental.FormInsVerificationList.InsVerifyGridRow">
            <summary>This represents a row in either the Verification List Grid, or the Assignment Grid.  The assignment grid won't use the DateLastAssigned variable.</summary>
        </member>
        <member name="M:OpenDental.FormInsVerificationList.InsVerifyGridRow.#ctor(OpenDentBusiness.InsVerifyGridObject,System.Collections.Generic.Dictionary{System.Int64,OpenDentBusiness.Def},System.Collections.Generic.List{OpenDentBusiness.Userod})">
            <summary>An updated dictionary of status defs should be passed in.  
            This is to avoid grabbing definitions cache from inside this nested class, which will be instanced in a loop.</summary>
        </member>
        <member name="M:OpenDental.FormInsVerificationList.InsVerifyGridRow.SetAssignedTo(System.Collections.Generic.List{OpenDentBusiness.Userod},OpenDentBusiness.InsVerifyGridObject,System.Boolean,System.Boolean)">
            <summary>Sets the AssignedTo property to the current username, or the current username+(hidden) if the current user is hidden</summary>
        </member>
        <member name="F:OpenDental.FormInsVerificationList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsVerificationList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInsVerificationList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsVerificationSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsVerificationSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInsVerificationSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldComboBox.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldComboBox.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldComboBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldComboBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTreatPlanCurEdit._treatPlanUnassigned">
            <summary>The patient's current unassigned treatment plan or a new treatment plan if the patient does not have an unassigned plan.</summary>
        </member>
        <member name="F:OpenDental.FormTreatPlanCurEdit._listTreatPlanAttachesAll">
            <summary>All TreatPlanAttaches for this patient.</summary>
        </member>
        <member name="F:OpenDental.FormTreatPlanCurEdit._listTreatPlanAttaches">
            <summary>All TreatPlanAttaches in _listTpAttachesAll with TreatPlanCur.TreatPlanNum.</summary>
        </member>
        <member name="F:OpenDental.FormTreatPlanCurEdit._listProceduresAll">
            <summary>All procedures for the patient with ProcStatus of TP or TPi.</summary>
        </member>
        <member name="F:OpenDental.FormTreatPlanCurEdit._listProcedures">
            <summary>All procedures in _listTpProcsAll with either a TreatPlanAttach with the same ProcNum
            or, if TreatPlanCur is the Active TP, procedures with AptNum>0 or PlannedAptNum>0.</summary>
        </member>
        <member name="F:OpenDental.FormTreatPlanCurEdit._makeActive">
            <summary>Set to true if the "Make Active Treatment Plan" button is pressed.</summary>
        </member>
        <member name="M:OpenDental.FormTreatPlanCurEdit.FillGrid(OpenDental.UI.GridOD@)">
            <summary>Both grid s should be filled with the same columns. This method prevents the need for two nearly identical fill grid patterns.</summary>
        </member>
        <member name="F:OpenDental.FormTreatPlanCurEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTreatPlanCurEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTreatPlanCurEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetExport._isOpenedFromDashboardSetup">
            <summary>Form was opened via Dashboard Setup.</summary>
        </member>
        <member name="F:OpenDental.FormSheetExport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetExport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetExport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetTools.HasSheetsChanged">
            <summary>Whether or not sheets have been edited/added/deleted from the DB from within this form.</summary>
        </member>
        <member name="F:OpenDental.FormSheetTools.SheetDefNumImported">
            <summary>The primary key of the last sheet that was imported.</summary>
        </member>
        <member name="F:OpenDental.FormSheetTools._isOpenedFromDashboardSetup">
            <summary>Form was opened via Dashboard Setup.</summary>
        </member>
        <member name="M:OpenDental.FormSheetTools.ValidateSheetDef(OpenDentBusiness.SheetDef)">
            <summary>Validates the SheetDef being imported.</summary>
        </member>
        <member name="F:OpenDental.FormSheetTools.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetTools.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetTools.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormLanguageAndRegion.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLanguageAndRegion.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormLanguageAndRegion.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedicationMerge.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedicationMerge.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMedicationMerge.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReferralMerge.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReferralMerge.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReferralMerge.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormRadOrderList">
            <summary>This form was originally designed to show providers all radiology procedures that are not flagged as CPOE.
            It is named generically because it can be enhanced in the future to actually show more than just radiology orders that need action.</summary>
        </member>
        <member name="M:OpenDental.FormRadOrderList.RefreshRadOrdersForUser(OpenDentBusiness.Userod)">
            <summary>Refreshes the list of radiology orders showing with the rad orders associated to the user passed in.</summary>
        </member>
        <member name="F:OpenDental.FormRadOrderList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRadOrderList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRadOrderList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProviderMerge.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProviderMerge.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProviderMerge.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProgramLinkOutputFile.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProgramLinkOutputFile.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProgramLinkOutputFile.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReqFieldCondEdit.ListRequiredFieldConditions">
            <summary>Holds all the conditions that are the same type as the condition being loaded.</summary>
        </member>
        <member name="F:OpenDental.FormReqFieldCondEdit._listRequiredFieldNames">
            <summary>Keeps track of which enum value is at which index.</summary>
        </member>
        <member name="M:OpenDental.FormReqFieldCondEdit.AddListConditionType(OpenDentBusiness.RequiredFieldName)">
            <summary>Adds the RequiredFieldName to listConditionType, selects the appropriate SelectedIndex, and adds the RequiredFieldName to the 
            list keeping track of indices.</summary>
        </member>
        <member name="M:OpenDental.FormReqFieldCondEdit.SetOperatorCombo(System.Int32,OpenDentBusiness.ConditionOperator)">
            <summary>Sets the combo operator selected index. The comboOperator parameter is which combo box is being set. 1 sets comboOperator1 and 
            2 sets comboOperator2.</summary>
        </member>
        <member name="F:OpenDental.FormReqFieldCondEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReqFieldCondEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReqFieldCondEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRequiredFields._listRequiredFieldNames">
            <summary>Keeps track of which enum value is at which index.</summary>
        </member>
        <member name="F:OpenDental.FormRequiredFields.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRequiredFields.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRequiredFields.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormErxAccess">
            <summary>This form is only visible at HQ, or possibly at a distributor HQ.  This form is used to control provider access to eRx.</summary>
        </member>
        <member name="F:OpenDental.FormErxAccess.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormErxAccess.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormErxAccess.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiDrafts.ResizeControls">
            <summary>Resize text boxes to each occupy ~1/2 of screen from top to bottom.</summary>
        </member>
        <member name="M:OpenDental.FormWikiDrafts.FillGrid">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormWikiDrafts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiDrafts.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiDrafts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobSearch._listJobsAll">
            <summary>List of all jobs currently loaded into JobManagerHelper</summary>
        </member>
        <member name="P:OpenDental.FormJobSearch.SelectedJobNum">
            <summary>Returns the JobNum for the selected job.  Returns 0 if no job selected.
            This getter is helpful when the only information needed is the JobNum which will save db calls due to not filling the Job object.</summary>
        </member>
        <member name="P:OpenDental.FormJobSearch.SelectedJob">
            <summary>Returns the selected job after filling all of the in-memory lists from the database.</summary>
        </member>
        <member name="M:OpenDental.FormJobSearch.FormJobSearch_Shown(System.Object,System.EventArgs)">
            <summary>There is a bug in ODProgress.cs that forces windows that use a progress bar on load to go behind other applications. 
            This is a temporary workaround until we decide how to address the issue.</summary>
        </member>
        <member name="F:OpenDental.FormJobSearch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobSearch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobSearch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.ODtextEditorSaveEventHandler">
            <summary></summary>
        </member>
        <member name="F:OpenDental.OdtextEditor._backColor">
            <summary>Used to set the button color back after hovering</summary>
        </member>
        <member name="F:OpenDental.OdtextEditor._highlightColor">
            <summary>Used when highlighting.</summary>
        </member>
        <member name="P:OpenDental.OdtextEditor.HasSaveButton">
            <summary></summary>
        </member>
        <member name="P:OpenDental.OdtextEditor.HasEditorOptions">
            <summary></summary>
        </member>
        <member name="P:OpenDental.OdtextEditor.ReadOnly">
            <summary></summary>
        </member>
        <member name="P:OpenDental.OdtextEditor.MainText">
            <summary>Gets or sets the main textbox text.</summary>
        </member>
        <member name="P:OpenDental.OdtextEditor.MainRtf">
            <summary>Gets or sets the main textbox RTF format text.</summary>
        </member>
        <member name="P:OpenDental.OdtextEditor.MainFont">
            <summary>Gets or sets the main textbox RTF format text.</summary>
        </member>
        <member name="P:OpenDental.OdtextEditor.TextBox">
            <summary>Gets main textbox.</summary>
        </member>
        <member name="M:OpenDental.OdtextEditor.OnLoad(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.OdtextEditor.butSave_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.OdtextEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.OdtextEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.OdtextEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcBroken.fillComboProv">
            <summary>Fills combo provider based on which clinic is selected and attempts to preserve provider selection if any.</summary>
        </member>
        <member name="F:OpenDental.FormProcBroken.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcBroken.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProcBroken.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormStateAbbrEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormStateAbbrEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormStateAbbrEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecordAudio.mciSendString(System.String,System.String,System.Int32,System.Int32)">
            <summary>mciSendString uses command strings to control MCI devices.  This link gives an example of using mciSendString():
            http://stackoverflow.com/questions/3694274/how-do-i-record-audio-with-c-wpf. </summary>
        </member>
        <member name="F:OpenDental.FormRecordAudio.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecordAudio.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRecordAudio.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskSearch._listUserodsAll">
            <summary>List of all users.</summary>
        </member>
        <member name="F:OpenDental.FormTaskSearch._listUserodsNotHidden">
            <summary>List of all users that are not hidden.</summary>
        </member>
        <member name="M:OpenDental.FormTaskSearch.FillContextMenu">
            <summary>MenuItems here appear and work the same as in UserControlTasks.cs</summary>
        </member>
        <member name="F:OpenDental.FormTaskSearch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskSearch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTaskSearch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDefaultCCProcs._defaultCCProcs">
            <summary>A comma-separated list of procedure codes.</summary>
        </member>
        <member name="F:OpenDental.FormDefaultCCProcs._listStrCCProcs">
            <summary>A list of procedure codes from _defaultCCProcs.</summary>
        </member>
        <member name="M:OpenDental.FormDefaultCCProcs.butSync_Click(System.Object,System.EventArgs)">
            <summary>Syncs all the procedures currently in the proc list to all credit card not excluded.</summary>
        </member>
        <member name="F:OpenDental.FormDefaultCCProcs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDefaultCCProcs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDefaultCCProcs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimSelect._patNum">
            <summary>The selected patient.  Used to get list of claims to fill grid.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimSelect.ClaimSelected">
            <summary>The claim the user selected from the grid.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimSelect._listClaimProcs">
            <summary>The list of claimProcs assocaited to the claim the user clicks/has highlighted in the grid.
            Only contains the procedure claimProcs, exc ludes By Total rows.
            We do this since we only care about if the ERA procs can match with the claims initial procs.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimSelect._listPatPlans">
            <summary>PatPlans for the patient.  Lazy loaded when needed.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimSelect._errorProvider">
            <summary>Informs the user that a patient could not be automatically matched.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimSelect.#ctor(System.Int64,OpenDentBusiness.Hx835_Claim)">
            <summary>PatNum used to get claims to fill grid.  x835Claim used to fill default text for date and claim fee filters and disallow OK click if 
            claim details do not match.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimSelect.FillGridClaims">
            <summary>Gets all claims for the patient selected.  Fills gridClaims and tags each row with its corrisponding claim object.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimSelect.HighlightRows">
            <summary>Sets the foreground text to red if any row has a DOS between textDOSFrom and textDOSTo and matches textClaimFee </summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimSelect.HasValidSplitClaimTotals">
            <summary>Called when validating split claim seleciton information.
            Returns true if the selected claims claimProcs sum up to the sub set proc information present on this split claim.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEtrans835PickEra.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans835PickEra.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans835PickEra.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsRemain.SetGridCols">
            <summary>Column sizes can be changed as needed</summary>
        </member>
        <member name="M:OpenDental.FormInsRemain.FillSummary">
            <summary>All of the code from this method is copied directly from the account module, ContrAccount.FillSummary().</summary>
        </member>
        <member name="F:OpenDental.FormInsRemain.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsRemain.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInsRemain.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEncounterTool.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEncounterTool.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEncounterTool.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcCodeEditMore.FillAndSortListFees">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormProcCodeEditMore.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcCodeEditMore.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProcCodeEditMore.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSubscriberMove.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSubscriberMove.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSubscriberMove.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskHist._listTaskHistsAudit">
            <summary>Contains all TaskHists for the given TaskNumCur. Does not include the "current" revision of non-deleted tasks.</summary>
        </member>
        <member name="F:OpenDental.FormTaskHist.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskHist.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTaskHist.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedLabHL7MsgText.components">
            <summary>
            Required adesigner variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedLabHL7MsgText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMedLabHL7MsgText.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSmsTextMessaging._actionSmsNotifier">
            <summary>Set from FormOpenDental.  This can be null if the calling code does not wish to get dynamic unread message counts.
            Allows FormSmsTextMessaging to update the unread SMS text message count in FormOpenDental as the user reads their messages.</summary>
        </member>
        <member name="F:OpenDental.FormSmsTextMessaging._patNum">
            <summary>The selected patNum.  Can be -1 to include all.</summary>
        </member>
        <member name="F:OpenDental.FormSmsTextMessaging._idxColumnStatus">
            <summary>The column index of the Status column within the Messages grid.
            This is a class-wide variable to prevent bugs if we decide to change the column order of the Messages grid.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.IsGrouped">
            <summary>True if the "Group By Patient" or "Group By Phone Number" radio buttons are checked.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.GetSelectedSmsGroup">
            <summary>Null if gridMessage current selected row tag is not TextMessageGrouped.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.GetSelectedSmsFromMobile">
            <summary>Null if gridMessage current selected row tag is not SmsFromMobile.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.GetSelectedSmsToMobile">
            <summary>Null if gridMessage current selected row tag is not SmsToMobile.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.GetSelectedPatNum">
            <summary>0 if gridMessage current selected row tag is not SmsToMobile or SmsFromMobile or TextMessageGrouped.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.GetSelectedMobileNumber">
            <summary>Empty if gridMessage current selected row tag is not SmsToMobile or SmsFromMobile or TextMessageGrouped.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.GetListSelectedClinicNums">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.GetPatientName(System.Int64)">
            <summary>Passively load _listPatients from db if entry is not already found.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.AddPatientNames(System.Collections.Generic.List{System.Int64})">
            <summary>Safe to call this for any number of PatNums. Will only go to db if given PatNum(s) not already found in _dictPatNames.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.GetMessageGroups">
            <summary>Gets messages groups to display in the grid for when group by 'Patient' or 'Phone Number' is selected.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.gridMessages_SelectionCommitted(System.Object,System.EventArgs)">
            <summary>Since the grid is set to SelectionMode of "One", there will always be exactly 1 selection when this event occurs.
            Initially the grid does not have any selections, but this event will not be called the first time until the first row is selected.
            Additionally, there is no way for the user to deselect a row when SelectionMode is set to "One", the user can only change the selection.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.SetReceivedSelectedStatus(OpenDentBusiness.SmsFromStatus)">
            <summary>Sets the given status for the selected receieved message.</summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.HideOrUnhideMessages(System.Boolean)">
            <summary>Set isHide to true to hide the selected message.  Set IsHide to false to unhide the selected message.</summary>
        </member>
        <member name="F:OpenDental.FormSmsTextMessaging.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSmsTextMessaging.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedLabResultHist.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedLabResultHist.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMedLabResultHist.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedLabPatSelect.FillGridPatInfo">
            <summary>Fills patient information from message contents, not from PatCur.</summary>
        </member>
        <member name="M:OpenDental.FormMedLabPatSelect.GetPatInfoFromPidSegments">
            <summary>Gets the patient info from the MedLab.OriginalPIDSegments.  Returns null if there is an error processing the PID segments.</summary>
        </member>
        <member name="F:OpenDental.FormMedLabPatSelect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedLabPatSelect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMedLabPatSelect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrMeasureEvents.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrMeasureEvents.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrMeasureEvents.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAmountEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAmountEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAmountEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayPlanRecalculate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayPlanRecalculate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPayPlanRecalculate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedLabs._patientSelected">
            <summary>Used to show the labs for a specific patient.  May be the same as PatCur or a different selected patient or null for all patients.</summary>
        </member>
        <member name="F:OpenDental.FormMedLabs._listClinicsUser">
            <summary>List of clinics the current user has permission to access.  Exactly matches the contents of the clinic drop-down combobox, including a
            Headquarters clinic with ClinicNum 0 if the user is unrestricted.</summary>
        </member>
        <member name="F:OpenDental.FormMedLabs._listClinicsLabAcct">
            <summary>Dictionary of lab account num key to clinic description value used to fill the grid.  Dictionary is filled on load with the
            lab account nums and clinic descriptions for all clinics for which the current user has permission to access.</summary>
        </member>
        <member name="F:OpenDental.FormMedLabs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedLabs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMedLabs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedLabEdit.PatCur">
            <summary>Passed in, or set here if selecting a new patient for medlab. Can be null.</summary>
        </member>
        <member name="F:OpenDental.FormMedLabEdit.ListMedLabs">
            <summary>List of all MedLabs linked to this patient and specimen. Passed in from calling class, or set here if newly attached to patient.</summary>
        </member>
        <member name="F:OpenDental.FormMedLabEdit._listMedlabResults">
            <summary>Aggregated final results from all of the med lab orders in ListMedLabs.</summary>
        </member>
        <member name="F:OpenDental.FormMedLabEdit._medLab">
            <summary>Usually the first MedLab in ListMedLabs. Used for convenience instead of continuously referencing ListMedLabs[0]. 
            Since all MedLabs in ListMedLabs have the same SpecimenID and SpecimenIDFiller, it is safe to assume all MedLab objects have
            the same value for some of the fields and we will just pull from the first MedLab in the list.</summary>
        </member>
        <member name="M:OpenDental.FormMedLabEdit.SetFields">
            <summary>Used to set all of the fields on the form.
            Called on load and when a HL7 message is reprocessed to refresh the fields with the new object information.</summary>
        </member>
        <member name="M:OpenDental.FormMedLabEdit.FillGridResults">
            <summary>Formatting for fields in this grid designed to emulate as accurately as possible the sample provided by LabCorp.</summary>
        </member>
        <member name="M:OpenDental.FormMedLabEdit.gridResults_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Shows result history. Example: Show that a Corrected result had a Final and a Preliminary result in the past.</summary>
        </member>
        <member name="M:OpenDental.FormMedLabEdit.butPatSelect_Click(System.Object,System.EventArgs)">
            <summary>Allows lab to be reassociated with a new patient.</summary>
        </member>
        <member name="M:OpenDental.FormMedLabEdit.butPDF_Click(System.Object,System.EventArgs)">
            <summary>Uses sheet framework to generate a PDF file, save it to patient's image folder, and attempt to launch file with defualt reader.
            If using ImagesStoredInDB it will not launch PDF. If no valid patient is selected you cannot perform this action.</summary>
        </member>
        <member name="M:OpenDental.FormMedLabEdit.MoveLabsAndImagesHelper">
            <summary>Moves all MedLab objects and any embedded PDFs tied to the MedLabResults to the PatCur.
            If the MedLab objects were not originally attached to a patient, any embedded PDFs will be in the image folder in a directory called
            "MedLabEmbeddedFiles" and will be moved to PatCur's image folder.
            If PatCur is null or the MedLabs are already attached to PatCur, does nothing.</summary>
        </member>
        <member name="M:OpenDental.FormMedLabEdit.butDelete_Click(System.Object,System.EventArgs)">
            <summary>This will delete all MedLab objects for the specimen referenced by _medLabCur and all MedLabResult, MedLabSpecimen,
            and MedLabFacAttach objects, as well as any documents referenced by the results.  The original HL7 message will remain in the image folder,
            but this MedLab will not point to it.  We won't remove the HL7 message since there may be other MedLab rows that point to it.</summary>
        </member>
        <member name="F:OpenDental.FormMedLabEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedLabEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMedLabEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAuditOrtho.DictDateOrthoLogs">
            <summary>Should be passed in from calling function.</summary>
        </member>
        <member name="F:OpenDental.FormAuditOrtho.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAuditOrtho.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAuditOrtho.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailCertRegister.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailCertRegister.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEmailCertRegister.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailDigitalSignature.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailDigitalSignature.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEmailDigitalSignature.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldGrid.IsEditMobile">
            <summary>Ignored. Not available for mobile</summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldGrid.checkBoxGrowthBehavior_CheckedChanged(System.Object,System.EventArgs)">
            <summary>checkBoxGrowthBehavior is only enabled for TreatPlanBenefitsFamily and TreatPlanBenefitsIndividual grids.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldGrid.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldGrid.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldGrid.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormUpdateInProgress.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormUpdateInProgress.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormUpdateInProgress.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWikiListHistory.WikiListName">
            <summary>Set from outside this form to load all appropriate data into the form during Form_Load().</summary>
        </member>
        <member name="M:OpenDental.FormWikiListHistory.FillGridMain">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWikiListHistory.FillGridOld">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWikiListHistory.FillGridCur">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormWikiListHistory.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiListHistory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiListHistory.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptTypeEdit._stringBuilderTime">
            <summary>The string time pattern in the current increment. Not in the 5 minute increment.</summary>
        </member>
        <member name="M:OpenDental.FormApptTypeEdit.FillTime">
            <summary>Logic copied from FormApptEdit</summary>
        </member>
        <member name="F:OpenDental.FormApptTypeEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptTypeEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormApptTypeEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptTypes._listAppointmentTypesOld">
            <summary>Stale deep copy of _listApptTypes to use with sync.</summary>
        </member>
        <member name="F:OpenDental.FormApptTypes.AllowMultipleSelections">
            <summary>Set to true when IsSelectionMode is true and the user will be able to select multiple appointment types instead of just one.
            ListAppointmentTypesSelected will contain all of the types that the user selected.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.FormApptTypes.AppointmentTypeSelected" -->
        <member name="F:OpenDental.FormApptTypes.ListAppointmentTypesSelected">
            <summary>Contains all of the selected appointment types if IsSelectionMode is true.
            If IsSelectionMode and AllowMultiple are true, this object can be prefilled with appointment types which will be preselected if possible.
            It is not guaranteed that all appointment types will be selected (due to hidden).
            This list should only be read from externally after DialogResult.OK has been returned.</summary>
        </member>
        <member name="F:OpenDental.FormApptTypes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptTypes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormApptTypes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcButtonQuickEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcButtonQuickEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProcButtonQuickEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEtrans835PickEob._doOpenEtrans835">
            <summary>When true, double clicking an EOB in the grid will not open FormEtrans835Edit. It just sets the TransSetIdSelected for use outside the form.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835PickEob.TransSetIdSelected">
            <summary>The TransSetId for the selected EOB.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835PickEob.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans835PickEob.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans835PickEob.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEvaluationReport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEvaluationReport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEvaluationReport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDispensary.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDispensary.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDispensary.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEvaluationEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEvaluationEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEvaluationEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEvaluations.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEvaluations.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEvaluations.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEvaluationCriterionDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEvaluationCriterionDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEvaluationCriterionDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormGradingScaleEdit._isEditable">
            <summary>False when grading scale is in use by an evaluation.</summary>
        </member>
        <member name="M:OpenDental.FormGradingScaleEdit.LoadScaleType">
            <summary>Reloads the UI for the grade scale type currently selected in the combo box.</summary>
        </member>
        <member name="F:OpenDental.FormGradingScaleEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormGradingScaleEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormGradingScaleEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormGradingScales.IsSelectionMode">
            <summary>This is set before showing the window to determine the usage of the window.  Default is false.</summary>
        </member>
        <member name="M:OpenDental.FormGradingScales.#ctor">
            <summary>This window has two modes: Selection and Setup Mode.  By default the buttons and methods are in Setup mode.  Changing to Selection Mode will change the function of several actions in this window.  Most specifically, the grid's double click method.</summary>
        </member>
        <member name="F:OpenDental.FormGradingScales.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormGradingScales.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormGradingScales.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEvaluationDefEdit.SynchItemOrder">
            <summary>Used after adding or deleting an EvaluationCriterionDef.  Enables item order to persist.</summary>
        </member>
        <member name="F:OpenDental.FormEvaluationDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEvaluationDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEvaluationDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEvaluationDefs.IsSelectionMode">
            <summary>This mode is only used for picking an evaluationdef for a brand new evaluation.</summary>
        </member>
        <member name="M:OpenDental.FormEvaluationDefs.CopyDefToEvaluation">
            <summary>The selected Def from the grid will be copied into a brand new Evaluation and saved to the DB. This includes all EvaluationCriterion as well. Used when creating a new Evaluation.</summary>
        </member>
        <member name="F:OpenDental.FormEvaluationDefs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEvaluationDefs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEvaluationDefs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProvStudentEdit.ProviderStudent">
            <summary>Set this when selecting a pre-existing Student.</summary>
        </member>
        <member name="F:OpenDental.FormProvStudentEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProvStudentEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProvStudentEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProvStudentBulkEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProvStudentBulkEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProvStudentBulkEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTreatmentPlanDiscount.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTreatmentPlanDiscount.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTreatmentPlanDiscount.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDentalSchoolSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDentalSchoolSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDentalSchoolSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrProviderKeyEdit.#ctor(OpenDentBusiness.EhrProvKey)">
            <summary>Only used from FormEhrProviderKeys.  keyCur can be a blank new key.  keyCur cannot be null.</summary>
        </member>
        <member name="F:OpenDental.FormEhrProviderKeyEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrProviderKeyEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrProviderKeyEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrProviderKeys.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrProviderKeys.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrProviderKeys.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ProcEdit.PrintGridHeaderHelper(System.Int32,System.Drawing.Graphics,System.String)">
            <summary>Transitions the printing state after printing the title.
            There is no validation that the vertical position of this title will not cause the title to be truncated by the bottom of the page.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ProcEdit.PrintGridHelper(OpenDental.UI.GridOD,System.Drawing.Rectangle,System.Drawing.Graphics,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>Transitions the printing state, and sets _yPosCur after finishing printing to save next header/grid starting point.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ProcEdit.TransitionPrintState">
            <summary>Increments the print state to the next state in the EraProcPrintingProgress enum.</summary>
        </member>
        <member name="T:OpenDental.FormEtrans835ProcEdit.EraProcPrintingProgress">
            <summary>This enum represents the printing state.
            The printing state starts at option 0 and increments by 1 each time a state is completed.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ProcEdit.EraProcPrintingProgress.DocumentHeader">
            <summary>0</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ProcEdit.EraProcPrintingProgress.GridProcAdjHeader">
            <summary>1</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ProcEdit.EraProcPrintingProgress.GridProcAdj">
            <summary>2</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ProcEdit.EraProcPrintingProgress.GridRemarksHeader">
            <summary>3</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ProcEdit.EraProcPrintingProgress.GridRemarks">
            <summary>4</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ProcEdit.EraProcPrintingProgress.GridSupplementalHeader">
            <summary>5</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ProcEdit.EraProcPrintingProgress.GridSupplemental">
            <summary>6</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ProcEdit.EraProcPrintingProgress.Done">
            <summary>7</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ProcEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ProcEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans835ProcEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEtrans835ClaimEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans835ClaimEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormUcums.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormUcums.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormUcums.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrLabImageEdit._listAttached">
            <summary>List of EHR Lab Images attached to this EhrLabNum. This list will be retrieved from the database on init and then modified while dialog is up. Final list will be inserted into database if user clicks OK.</summary>
        </member>
        <member name="F:OpenDental.FormEhrLabImageEdit._listPatientDocuments">
            <summary>List of Documents (images) attached to this patient. This list is not modified by this form.</summary>
        </member>
        <member name="F:OpenDental.FormEhrLabImageEdit._patFolder">
            <summary>Directory which hold's the Patient's documents.</summary>
        </member>
        <member name="M:OpenDental.FormEhrLabImageEdit.GetSelectedDocument">
            <summary>Throws exception if current grid selection is invalid</summary>
        </member>
        <member name="F:OpenDental.FormEhrLabImageEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabImageEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrLabImageEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrAptObses.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrAptObses.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrAptObses.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrAptObsEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrAptObsEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrAptObsEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrLabSpecimenEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabSpecimenEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrLabSpecimenEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCvxs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCvxs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCvxs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrLabNoteEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabNoteEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrLabNoteEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabOrderImport.FillPatientInfo">
            <summary>Fills patient information from message contents, not from PatCur.</summary>
        </member>
        <member name="F:OpenDental.FormEhrLabOrderImport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabOrderImport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrLabOrderImport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOIDRegistryInternal._rootOIDString">
            <summary>Used for refence to construct recommended values.</summary>
        </member>
        <member name="F:OpenDental.FormOIDRegistryInternal.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOIDRegistryInternal.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOIDRegistryInternal.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrLabOrders.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabOrders.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrLabOrders.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormVaccineObsEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormVaccineObsEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormVaccineObsEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormIcd10s.gridMain_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Sort function to put the codes that apply to the most number of CQM's at the top so the user can see which codes they should select.</summary>
        </member>
        <member name="F:OpenDental.FormIcd10s.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormIcd10s.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormIcd10s.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormHcpcs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormHcpcs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormHcpcs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrExportCCD.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrExportCCD.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrExportCCD.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrCarePlanEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrCarePlanEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrCarePlanEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrCarePlans.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrCarePlans.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrCarePlans.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabResultEdit2014.GetObservationText">
            <summary>Gets the observation text dynamically from the result passed in.  Returns empty string if unknown value type.</summary>
        </member>
        <member name="M:OpenDental.FormEhrLabResultEdit2014.EntriesAreValid">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEhrLabResultEdit2014.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabResultEdit2014.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrLabResultEdit2014.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabOrderEdit2014.FillGrid">
            <summary>Lab Results</summary>
        </member>
        <member name="M:OpenDental.FormEhrLabOrderEdit2014.FillGridNotes">
            <summary>Lab Result Notes. Currently includes notes for results too... TODO: seperate notes for labs and results.</summary>
        </member>
        <member name="M:OpenDental.FormEhrLabOrderEdit2014.FillGridResultsCopyTo">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEhrLabOrderEdit2014.FillGridSpecimen">
            <summary>Lab Results</summary>
        </member>
        <member name="M:OpenDental.FormEhrLabOrderEdit2014.EntriesAreValid">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEhrLabOrderEdit2014.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabOrderEdit2014.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrLabOrderEdit2014.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCDSILabResult.ResultCDSITriggerText">
            <summary>CDSI Trigger formatted text. This is the form result.</summary>
        </member>
        <member name="F:OpenDental.FormCDSILabResult.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCDSILabResult.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCDSILabResult.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCDSSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCDSSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCDSSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCDSIntervention.ListCDSInterventions">
            <summary>This should be set to the result from EhrTriggers.TriggerMatch.</summary>
        </member>
        <member name="F:OpenDental.FormCDSIntervention._table">
            <summary>Used for assembling the Interventions, values set using ShowIfRequired().</summary>
        </member>
        <member name="M:OpenDental.FormCDSIntervention.ShowIfRequired">
            <summary>Run after assigning value to DictEhrTriggerResults.  FormCDSIntervention will display if needed, otherwise Dialogresult will be null.</summary>
        </member>
        <member name="F:OpenDental.FormCDSIntervention.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCDSIntervention.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCDSIntervention.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientExport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrPatientExport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrPatientExport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormReconcileAllergy.#ctor(OpenDentBusiness.Patient)">
            <summary>Patient must be valid.  Do not pass null.</summary>
        </member>
        <member name="F:OpenDental.FormReconcileAllergy.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReconcileAllergy.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReconcileAllergy.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormReconcileProblem.#ctor(OpenDentBusiness.Patient)">
            <summary>Patient must be valid.  Do not pass null.</summary>
        </member>
        <member name="F:OpenDental.FormReconcileProblem.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReconcileProblem.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReconcileProblem.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrEduBrowser.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrEduBrowser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrEduBrowser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrEduResourcesPat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrEduResourcesPat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrEduResourcesPat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrEncryption.Encryption(System.String)">
            <summary>Encrypts signature text and returns a base 64 string so that it can go directly into the database.</summary>
        </member>
        <member name="M:OpenDental.FormEhrEncryption.GenerateHash(System.String)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEhrEncryption.ByteToStr(System.Byte)">
            <summary>The only valid input is a value between 0 and 15.  Text returned will be 1-9 or a-f.</summary>
        </member>
        <member name="F:OpenDental.FormEhrEncryption.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrEncryption.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrEncryption.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrGrowthCharts.defineBounds(System.Drawing.Graphics)">
            <summary>Defines the bounds of the graphs to be drawn based on size of form.</summary>
        </member>
        <member name="M:OpenDental.FormEhrGrowthCharts.DrawHeightGrid(System.Drawing.Graphics)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEhrGrowthCharts.DrawWeightGrid(System.Drawing.Graphics)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormEhrGrowthCharts.PlotHW(System.Drawing.Graphics)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormEhrGrowthCharts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrGrowthCharts.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrGrowthCharts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrHash.ByteToStr(System.Byte)">
            <summary>The only valid input is a value between 0 and 15.  Text returned will be 1-9 or a-f.</summary>
        </member>
        <member name="F:OpenDental.FormEhrHash.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrHash.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrHash.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrLabPanelEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabPanelEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrLabPanelEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrLabPanelImport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabPanelImport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrLabPanelImport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrLabPanels.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabPanels.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrLabPanels.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrLabResultEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrLabResultEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrLabResultEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormEhrMeasureEventEdit">
            <summary>Only used for editing smoking documentation.</summary>
        </member>
        <member name="F:OpenDental.FormEhrMeasureEventEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrMeasureEventEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrMeasureEventEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrMedicalOrderLabEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrMedicalOrderLabEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrMedicalOrderLabEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrMedicalOrderRadEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrMedicalOrderRadEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrMedicalOrderRadEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrMedicalOrders.LaunchMedicationPat">
            <summary>If this is true after exiting, then launch MedicationPat dialog.</summary>
        </member>
        <member name="F:OpenDental.FormEhrMedicalOrders.LaunchMedicationPatNum">
            <summary>If LaunchMedicationPat is true after exiting, then this specifies which MedicationPat to open.  Will never be zero.</summary>
        </member>
        <member name="F:OpenDental.FormEhrMedicalOrders.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrMedicalOrders.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrMedicalOrders.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientConfidentialPrefEdit.PatOld">
            <summary>A copy of the original patient object, as it was when this form was first opened.</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientConfidentialPrefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrPatientConfidentialPrefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrPatientConfidentialPrefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSelectSimple.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrPatientSelectSimple.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrPatientSelectSimple.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSmoking._patOld">
            <summary>A copy of the original patient object, as it was when this form was first opened.</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSmoking._listAssessmentCodes">
            <summary>List of tobacco use screening type codes.  Currently only 3 allowed SNOMED codes as of 2014.</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSmoking._listCounselInterventionCodes">
            <summary>All EhrCodes in the tobacco cessation counseling value set (2.16.840.1.113883.3.526.3.509).
            When comboInterventionType has selected index 0, load the counseling intervention codes into comboInterventionCode.</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSmoking._listMedInterventionCodes">
            <summary>All EhrCodes in the tobacco cessation medication value set (2.16.840.1.113883.3.526.3.1190).
            When comboInterventionType has selected index 1, load the medication intervention codes into comboInterventionCode.</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSmoking._listInterventionCodes">
            <summary>This list contains all of the intervention codes in the comboInterventionCode, counsel, medication, both.</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSmoking._listUserCodes">
            <summary>All EhrCodes in the tobacco user value set (2.16.840.1.113883.3.526.3.1170).
            When radioAll or radioUser is selected, comboTobaccoStatuses will be filled with this list.</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSmoking._listNonUserCodes">
            <summary>All EhrCodes in the tobacco non-user value set (2.16.840.1.113883.3.526.3.1189).
            When radioAll or radioNonUser is selected, comboTobaccoStatuses will be filled with this list.</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSmoking._listCustomTobaccoCodes">
            <summary>List of tobacco statuses selected from the SNOMED list for this pat that aren't in the list of EHR user and non-user codes</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSmoking._listRecentTobaccoCodes">
            <summary>List of recently used tobacco statuses, ordered by a date used weighted sum of number of times used.  Codes used the most will be
            first in the list, with more recent EhrMeasureEvents having a heavier weight.</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSmoking._listTobaccoStatuses">
            <summary>This list contains all of the tobacco statuses in the comboTobaccoStatus, user, non-user, or both.  This list may also contain
            statuses that the user has selected from the SNOMED list that are not a user or non-user code.</summary>
        </member>
        <member name="M:OpenDental.FormEhrPatientSmoking.radioTobaccoStatuses_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Fill comboTobaccoStatus with user and non-user tobacco status codes using _listUserCodes and/or _listNonUserCodes
            depending on which radio button is selected.</summary>
        </member>
        <member name="M:OpenDental.FormEhrPatientSmoking.radioInterventions_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Fill comboInterventionCode with counseling and medication intervention codes using _listCounselInterventionCodes
            and/or _listMedInterventionCodes depending on which radio button is selected.</summary>
        </member>
        <member name="M:OpenDental.FormEhrPatientSmoking.GetSelectedStatusFilter">
            <summary>Returns the radio button for tobacco status filter that is checked.</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatientSmoking.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrPatientSmoking.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrPatientSmoking.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrPatListElementEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrPatListElementEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrPatListElementEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrPatListResults.orderByColumn">
            <summary>Used to sort and keep the ASC/DESC UI intact, mostly useless.</summary>
        </member>
        <member name="M:OpenDental.FormEhrPatListResults.FillGrid(System.Boolean)">
            <summary>Deprecated.  We no longer need to pass in a bool.</summary>
        </member>
        <member name="F:OpenDental.FormEhrPatListResults.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrPatListResults.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrPatListResults.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrQualityMeasureEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrQualityMeasureEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrQualityMeasureEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrQualityMeasureEdit2014.selectedPatNum">
            <summary>Used to pass a patnum back up to the chart module.</summary>
        </member>
        <member name="F:OpenDental.FormEhrQualityMeasureEdit2014.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrQualityMeasureEdit2014.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrQualityMeasureEdit2014.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrQualityMeasures.gridMain_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Launches edit window for double clicked item.</summary>
        </member>
        <member name="F:OpenDental.FormEhrQualityMeasures.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrQualityMeasures.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrQualityMeasures.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrQualityMeasures2014.gridMain_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Launches edit window for double clicked item.</summary>
        </member>
        <member name="F:OpenDental.FormEhrQualityMeasures2014.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrQualityMeasures2014.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrQualityMeasures2014.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrReminders.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrReminders.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrReminders.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrSummaryCcdEdit._patCur">
            <summary>Will be set to the patient that this CCD message is indicated for.  Can be null if not meant for incorporating into a patient's account.</summary>
        </member>
        <member name="M:OpenDental.FormEhrSummaryCcdEdit.#ctor(System.String,OpenDentBusiness.Patient)">
            <summary>Patient can be null.  If null, or if PatNum is 0, reconciles will not be available.</summary>
        </member>
        <member name="M:OpenDental.FormEhrSummaryCcdEdit.butReconcileMedications_Click(System.Object,System.EventArgs)">
            <summary>Can only be called if IsReconcile is true.  This function is for EHR module b.4.</summary>
        </member>
        <member name="M:OpenDental.FormEhrSummaryCcdEdit.butReconcileProblems_Click(System.Object,System.EventArgs)">
            <summary>Can only be called if IsReconcile is true.  This function is for EHR module b.4.</summary>
        </member>
        <member name="M:OpenDental.FormEhrSummaryCcdEdit.butReconcileAllergies_Click(System.Object,System.EventArgs)">
            <summary>Can only be called if IsReconcile is true.  This function is for EHR module b.4.</summary>
        </member>
        <member name="F:OpenDental.FormEhrSummaryCcdEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrSummaryCcdEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrSummaryCcdEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormCpts.gridMain_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Sort function to put the codes that apply to the most number of CQM's at the top so the user can see which codes they should select.</summary>
        </member>
        <member name="F:OpenDental.FormCpts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCpts.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCpts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrVaccinePatEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrVaccinePatEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrVaccinePatEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrVaccines.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrVaccines.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrVaccines.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMapAreaEdit.MapAreaCur">
            <summary>The item being edited</summary>
        </member>
        <member name="F:OpenDental.FormMapAreaEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMapAreaEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMapAreaEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrClinicalSummary.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrClinicalSummary.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrClinicalSummary.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrElectronicCopy.RecordRequestAndProvide">
            <summary>When sent by email or exported, this records the event.  It also recordes a request if needed.</summary>
        </member>
        <member name="F:OpenDental.FormEhrElectronicCopy.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrElectronicCopy.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrElectronicCopy.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInterventions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInterventions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInterventions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInterventionEdit.IsAllTypes">
            <summary>This bool will determine if we show every intervention type we support or only a specific subset related to the form we launch from.  Currently only set to true when adding an intervention from FormInterventions when pressing the Add button.</summary>
        </member>
        <member name="F:OpenDental.FormInterventionEdit.IsSelectionMode">
            <summary>Do not let them edit historical interventions, the OK button will be disabled if this is false.</summary>
        </member>
        <member name="M:OpenDental.FormInterventionEdit.FormInterventionEdit_Load(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormInterventionEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInterventionEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInterventionEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrNotPerformedEdit.FormEhrNotPerformedEdit_Load(System.Object,System.EventArgs)">
            <summary>If using the Add button on FormEhrNotPerformed, an input box will allow the user to select from the list of available items that are not being performed.  The SelectedItemIndex will hold the index of the item selected wich corresponds to the enum EhrNotPerformedItem.  We will use this selected item index to set the EhrNotPerformed code and code system.</summary>
        </member>
        <member name="F:OpenDental.FormEhrNotPerformedEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrNotPerformedEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrNotPerformedEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormEhrTimeSynch">
            <summary>Only shows for EHR users.  Synchronizes local time to specified NIST server.</summary>
        </member>
        <member name="F:OpenDental.FormEhrTimeSynch.IsAutoLaunch">
            <summary>Set true when launched while OpenDental starts.  Will automatically check times and close form silently if server time is in synch with local time.</summary>
        </member>
        <member name="M:OpenDental.FormEhrTimeSynch.TimesInSynchFast">
            <summary>Called from FormOpenDental.Load.  Updates local time and checks to see if server time is in synch, with a fast db call (only acurate to seconds, not miliseconds).</summary>
        </member>
        <member name="M:OpenDental.FormEhrTimeSynch.SynchTimes">
            <summary>Updates local time and Refreshes all time variables.  Saves NIST server URL as preference.</summary>
        </member>
        <member name="M:OpenDental.FormEhrTimeSynch.GetNistOffset">
            <summary>Get the offset from the nist server and DateTime.Now().  Returns double.MinValue if invalid NIST Server URL.  Returns double.MaxValue if request timed out.</summary>
        </member>
        <member name="M:OpenDental.FormEhrTimeSynch.ServerInSynch">
            <summary>Returns true if server time is out of synch with local machine.</summary>
        </member>
        <member name="M:OpenDental.FormEhrTimeSynch.ServerInSynchFast">
            <summary>Used when launching check automatically on startup.  Rounds to whole seconds.  Returns true if server time is out of synch with local machine.</summary>
        </member>
        <member name="M:OpenDental.FormEhrTimeSynch.LocalInSynch">
            <summary>Returns true if local time is out of synch with NIST server.  Should always be true since we just updated time.</summary>
        </member>
        <member name="M:OpenDental.FormEhrTimeSynch.butRefreshTime_Click(System.Object,System.EventArgs)">
            <summary>Refresh the time textboxes.  Stops users from sending requests to NIST server more than once every 4 seconds.</summary>
        </member>
        <member name="M:OpenDental.FormEhrTimeSynch.refreshDisplays">
            <summary>Refresh all time displays and labels.</summary>
        </member>
        <member name="M:OpenDental.FormEhrTimeSynch.timerSendingLimit_Tick(System.Object,System.EventArgs)">
            <summary>Do not allow user to send another request until timer has ticked.</summary>
        </member>
        <member name="F:OpenDental.FormEhrTimeSynch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrTimeSynch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrTimeSynch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEncounterEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEncounterEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEncounterEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEncounters.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEncounters.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEncounters.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrNotPerformed.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrNotPerformed.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrNotPerformed.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPaymentPlanOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPaymentPlanOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPaymentPlanOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport._listCodeSystems">
            <summary>All code systems available.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport._isMemberNation">
            <summary>If true then SNOMED CT codes will show in the list of available code systems for download.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport._hasDownloaded">
            <summary>Indicates if user has downloaded codes while in the window.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport._listCodeSystemStatuses">
            <summary>Track current status of each code system.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.listEnumCodeSystemNames">
            <summary>Optionally set this before opening form.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.RequestCodeSystemsXml">
            <summary>Returns a list of available code systems.  Throws exceptions, put in try catch block.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.PreDownloadHelper(System.String)">
            <summary>Used to show EULA or other pre-download actions.  Displays message boxes. Returns false if pre-download checks not satisfied.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread_FinishedSafe(System.Object,System.EventArgs)">
            <summary>Call this from external thread. Invokes to main thread to avoid cross-thread collision.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread_FinishedUnsafe(System.Object,System.EventArgs)">
            <summary>Do not call this directly from external thread. Use UpdateCodeSystemThread_FinishedSafe.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread_UpdateSafe(OpenDentBusiness.CodeSystem,System.String,System.Double,System.Boolean,System.Boolean,System.Int32)">
            <summary>Call this from external thread. Invokes to main thread to avoid cross-thread collision.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread_UpdateUnsafe(OpenDentBusiness.CodeSystem,System.String,System.Double,System.Boolean,System.Boolean,System.Int32)">
            <summary>Do not call this directly from external thread. Use UpdateCodeSystemThread_UpdateSafe.</summary>
        </member>
        <member name="T:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread">
            <summary>Worker thread class. 1 thread will be spawned for each code sytem being downloaded. All threads will run in parallel.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.KB_SIZE">
            <summary>Number of bytes in a kilobyte.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.CHUNK_SIZE">
            <summary>Number of kilobytes to download in each chunk.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread._threads">
            <summary>Static lis of threads. All managed internally. Must always be locked by _lock when accessed!!!</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread._lock">
            <summary>All access of _threads member MUST BE enclosed with lock statement in order to prevent thread-lock and race conditions.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread._codeSystem">
            <summary>The code system being updated.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread._quit">
            <summary>Download and import functions will check this flag occasionally to see if they should abort prematurely.</summary>
        </member>
        <member name="T:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.UpdateCodeSystemArgs">
            <summary>Function signature required to send an update.  When done==true, percentDone is the number of codes imported.</summary>			
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread._updateHandler">
            <summary>Required by ctor. Used to keep main thread aware of update progress.</summary>			
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.Finished">
            <summary>Event will be fired when the final thread has finished and all threads have been cleared from the list.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread._localFilePath">
            <summary>If this is a CPT import then the file must exist localally and the file location will be provided by the user. All other code system files are held behind the Customer Update web service and will be downloaded to a temp file location in order to be imported.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread._versionID">
            <summary>The version of the code system being imported.  Currently only used for CPT codes.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread._updateExisting">
            <summary>If this code system has been previously imported, this flag will determine whether existing codes are updated.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.Quit">
            <summary>Aborts the thread. Only called by StopAll.</summary>
        </member>
        <member name="P:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.IsRunning">
            <summary>Indicates if there are still 1 or more active threads.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.#ctor(System.String,OpenDentBusiness.CodeSystem,OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.UpdateCodeSystemArgs,System.String,System.Boolean)">
            <summary>Private ctor. Will only be used internally by Add. If localFilePath is set here then it is assumed that the file exists locally and file download will be skipped before importing data from the file. This will only happen for the CPT code system.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.ToString">
            <summary>Provide a nice ledgible identifier.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.Equals(System.Object)">
            <summary>Thread list manager needs this to remove threads. Required for List.Contains.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.GetHashCode">
            <summary>Just to prevent a VS warning.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.Add(System.String,OpenDentBusiness.CodeSystem,OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.UpdateCodeSystemArgs,System.String,System.Boolean)">
            <summary>Add a thread to the queue. These threads will not be started until StartAll is called subsequent to adding all necessary threads. If localFilePath is set here then it is assumed that the file exists locally and file download will be skipped before importing data from the file. This will only happen for the CPT code system.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.Add(OpenDentBusiness.CodeSystem,OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.UpdateCodeSystemArgs,System.Boolean)">
            <summary>Add a thread to the queue. These threads will not be started until StartAll is called subsequent to adding all necessary threads. This version assures that code system file will be downloaded before import. Use for all code system except CPT.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.StartAll">
            <summary>Use this to start the threads once all threads have been added using Add.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.StopAll">
            <summary>Sets the Quit flag for all threads. Use this if early abort is desired.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.Done(System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>Called internally each time time a thread has completed. Will trigger the Finished event if this is the last thread to complete.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.Update(System.String,System.Int32,System.Int32)">
            <summary>Update the current status of this import thread. Thread owner is required to handle this as the delegat is required in the ctor.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.ImportProgress(System.Int32,System.Int32)">
            <summary>Helper used internally.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.DownloadProgress(System.Int32,System.Int32)">
            <summary>Helper used internally.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.Run">
            <summary>The thread function.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.RequestCodeSystemDownloadHelper(System.String@,System.Int32@,System.Int32@)">
            <summary>Will request, download, and import codeSystem from webservice. Returns false if unsuccessful.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.DeleteImportFileIfNecessary">
            <summary>Delete the import file which was created locally. This file was either downloaded or extracted from a zip archive. Either way it is temporary and can be deleted.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.DownloadFileHelper(System.String)">
            <summary>Returns temp file name used to download file.  Can throw exception.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.DownloadFileWorker(System.String,System.String)">
            <summary>Download given URI to given local path. Can throw exception.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.UpdateCodeSystemThread.SendAndReceiveDownloadXml(System.String)">
            <summary>Can throw exception.</summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.FormCodeSystemsImport_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>If there are still import threads running then prompt the user to see if they want to abort the imports prematurely.</summary>
        </member>
        <member name="F:OpenDental.FormCodeSystemsImport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCodeSystemsImport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCommPrefPicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCommPrefPicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCommPrefPicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEHR.RxNum">
            <summary>If EhrFormResultOnClose=RxEdit, then this specifies which Rx to open.</summary>
        </member>
        <member name="F:OpenDental.FormEHR.EhrFormResultOnClose">
            <summary>After this form closes, this can trigger other things to happen.  DialogResult is not checked.  After the other actions are taken, FormEHR opens back up again for seamless user experience.</summary>
        </member>
        <member name="F:OpenDental.FormEHR.MedicationPatNum">
            <summary>If EhrFormResultOnClose=MedicationPatEdit, then this specifies which MedicationPat to open.</summary>
        </member>
        <member name="F:OpenDental.FormEHR.DoShowOrders">
            <summary>If set to true, this will cause medical orders window to come up.</summary>
        </member>
        <member name="F:OpenDental.FormEHR._provider">
            <summary>This is set every time the form is shown.  It is used to determine if there is an Ehr key for the patient's primary provider.  If not, then The main grid will show empty.</summary>
        </member>
        <member name="F:OpenDental.FormEHR.ObjFormEhrMeasures">
            <summary>This will be null if EHR didn't load up.  EHRTEST conditional compilation constant is used because the EHR project is only part of the solution here at HQ.  We need to use late binding in a few places so that it will still compile for people who download our sourcecode.  But late binding prevents us from stepping through for debugging, so the EHRTEST lets us switch to early binding.</summary>
        </member>
        <member name="F:OpenDental.FormEHR.AssemblyEHR">
            <summary>This will be null if EHR didn't load up.</summary>
        </member>
        <member name="M:OpenDental.FormEHR.constructObjFormEhrMeasuresHelper">
            <summary>Constructs the ObjFormEhrMeasures fro use with late binding.</summary>
        </member>
        <member name="M:OpenDental.FormEHR.LaunchOrdersWindow">
            <summary>This can happen when clicking in the grid, or when the form is Shown.  The latter would happen after user unknowingly exited ehr in order to use FormMedPat.  Popping back to the Orders window makes the experience seamless.  This can be recursive if the user edits a series of medicationpats.</summary>
        </member>
        <member name="F:OpenDental.FormEHR.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEHR.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEHR.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrAmendmentEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrAmendmentEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrAmendmentEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrAmendments.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrAmendments.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrAmendments.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFamilyHealthEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFamilyHealthEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFamilyHealthEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormLoincs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormLoincs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormLoincs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatListEHR2014.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatListEHR2014.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPatListEHR2014.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayorTypeEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayorTypeEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPayorTypeEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayorTypes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayorTypes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPayorTypes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormSnomeds.SortMeasuresMet(OpenDental.UI.GridRow,OpenDental.UI.GridRow)">
            <summary>Sort function to put the codes that apply to the most number of CQM's at the top so the user can see which codes they should select.</summary>
        </member>
        <member name="F:OpenDental.FormSnomeds.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSnomeds.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSnomeds.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatListElementEditEHR2014.isContactMethod(System.String)">
            <summary>Returns true if string matches ContactMethod enum names.</summary>
        </member>
        <member name="F:OpenDental.FormPatListElementEditEHR2014.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatListElementEditEHR2014.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPatListElementEditEHR2014.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatListResultsEHR2014.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatListResultsEHR2014.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPatListResultsEHR2014.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrSummaryOfCare.DisplayCCD(System.String)">
            <summary>Returns true if user performed a print job on the CCD.  Cannot be moved to OpenDentBusiness/Misc/EhrCCD.cs, because this function uses windows UI components.  
            Strictly used for displaying CCD messages.  Will not allow user to reconcile meds, problems, or allergies into the patient's account.</summary>
        </member>
        <member name="M:OpenDental.FormEhrSummaryOfCare.DisplayCCD(System.String,OpenDentBusiness.Patient,System.String)">
            <summary>Returns true if user performed a print job on the CCD.  Cannot be moved to OpenDentBusiness/Misc/EhrCCD.cs, because this function uses windows UI components. 
            Pass in a valid patient if the CCD is being displayed to reconcile (incoporate into patient record) medications and/or problems and/or allergies.
            patCur can be null, or patCur.PatNum can be 0, to hide the three reconcile buttons. 
            strXmlCCD is the actual text of the CCD. 
            strAlterateFilPathXslCCD is a full file path to an alternative style sheet. 
            This file will only be used in the case where the EHR dll version of the stylesheet couldn not be loaded. 
            If neither method works for attaining the stylesheet then an excption will be thrown.</summary>
        </member>
        <member name="F:OpenDental.FormEhrSummaryOfCare.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrSummaryOfCare.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrSummaryOfCare.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormVitalsignEdit2014.SetPregCodeAndDescript">
            <summary>Sets the pregnancy code and description text box with either the attached pregnancy dx if exists or the default preg dx set in FormEhrSettings or a manually selected def.  If the pregnancy diseasedef with the default pregnancy code and code system does not exist, it will be inserted.  The pregnancy problem will be inserted when closing if necessary.</summary>
        </member>
        <member name="M:OpenDental.FormVitalsignEdit2014.textDateTaken_Leave(System.Object,System.EventArgs)">
            <summary>If they change the date of the exam and it is attached to a pregnancy problem and the date is now outside the active dates of the problem, tell them you are removing the problem and unchecking the pregnancy box.</summary>
        </member>
        <member name="F:OpenDental.FormVitalsignEdit2014.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormVitalsignEdit2014.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormVitalsignEdit2014.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormWebMailMessageEdit">
            <summary>DialogResult will be Abort if message was unable to be read. 
            If message is read successfully (Ok or Cancel), then caller is responsible for updating SentOrReceived to read (where applicable).</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit._allowSendNotificationMessage">
            <summary>Will be false if it is not possible to send an insecure email message to the patient.</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit._listPatients">
            <summary>If viewing existing message this list will only contain the "regarding" patient.
            If composing, this will contain all family members of which the patient is eligible to view given PHI constraints.</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit._emailMessage">
            <summary>This is the email message that was passed into the constructor for an existing message being viewed or replied to.
            Will be null if composing a new message.</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit._listEmailAttaches">
            <summary>Attachment objects will be set right before inserting _secureMessage into db. Until then they will be held separate.  If viewing an
            existing message, this will hold the list of attachments sent with the message.</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit._webMailMode">
            <summary>On load, the form will be Compose mode if no email message is passed in (null).
            Otherwise, the form will be View mode, meaning we are viewing an existing message.
            Once the user presses the reply button, the form will reload into Reply mode.</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit._listPatientsForPHI">
            <summary>List of family members of the patient who are eligible to view given PHI constraints.</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit._patient">
            <summary>Will contain a valid patient that this web mail should to be sent to to view in their patient portal.</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit._patientRegarding">
            <summary>The patient of which this specific Web Mail will be sent on behalf of.
            This will typically be the same as _patCur but can differ if a "care taker" or someone else is communicating on their behalf.</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit._provider">
            <summary>The provider that this Web Mail will be sent from.  User can change this at any time.
            If the user currently logged in is not associated to this provider then they will be prompted to enter credentials.</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit._providerCurUser">
            <summary>Set to the provider that is associated to the user currently logged in.  Null if no provider associated.</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit._listProviders">
            <summary>A list of all providers in the cache that have a user associated to them.</summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.GetBodyTextInsecure">
            <summary>Method returns the Web Mail body text preference.  Also replaces all replaceable variables.</summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.#ctor(System.Int64)">
            <summary>Default constructor. This implies that we are composing a new message, NOT replying to an existing message.</summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.#ctor(System.Int64,OpenDentBusiness.EmailMessage)">
            <summary>Use this constructor when viewing or replying to an existing message.</summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.FillFields">
            <summary>Only called on load and on Send Click if in View mode so that the form gets put into Reply mode correctly.
            Calling this method in more than the two places mentioned above will result in the user losing information that they have typed in.</summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.SetEnabledHelper">
            <summary>Sets enabled statuses for fields based on whether we are viewing an existing message or replying to/composing a message.</summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.BlockSendNotificationMessage(System.String)">
            <summary>Disables the send and preview buttons and shows a red warning label with the "reason" passed in.  Translates the reason.</summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.AllowSendMessages">
            <summary>Enables the send and preview buttons so that web mail can be sent.</summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.VerifyInputs">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.VerifyOutputs">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.VerifyFromProvider">
            <summary>Returns true if the From provider is associated to the user currently logged in.
            If the user has chosen a different provider as the From provider this will prompt them to enter a password for any user associated to them.
            Loops through all users associated to the From provider until the credentials typed in match.</summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.butSend_Click(System.Object,System.EventArgs)">
            <summary>When viewing an existing message, the "Send" button text will be "Reply" and _webMailMode will be View.  Pressing the button will
            reload this form as a reply message.
            When composing a new message or replying to an existing message, the button text will be "Send" and _webMailMode will be
            either Compose or Reply.  Pressing the button will cause an attempt to send the secure and insecure message if applicable.</summary>
        </member>
        <member name="F:OpenDental.FormWebMailMessageEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebMailMessageEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInfobutton.ProviderCur">
            <summary>Usually filled from within the form by using Patcur.PriProv</summary>
        </member>
        <member name="F:OpenDental.FormInfobutton._listKnowledgeRequests">
            <summary>Knowledge request objects, possible object types are: DiseaseDef, Medication, LabResult, ICD9, Icd10, Snomed, RxNorm, Loinc, or LabResult.  Should not break if unsupported objects are in list.</summary>
        </member>
        <member name="M:OpenDental.FormInfobutton.IsValidHL7DataSet">
            <summary>Generates message box with all errors. Returns true if data passes validation or if user decides to "continue anyways".</summary>
        </member>
        <member name="M:OpenDental.FormInfobutton.ActTaskCodeHelper">
            <summary>Returns thefirst level of ActTaskCode. OE, PATDOC, or PATINFO there are 35 total ActTaskCodes available.</summary>
        </member>
        <member name="M:OpenDental.FormInfobutton.ActTaskCodeNameHelper">
            <summary>Returns thefirst level of ActTaskCode. OE, PATDOC, or PATINFO there are 35 total ActTaskCodes available.</summary>
        </member>
        <member name="M:OpenDental.FormInfobutton.AgeGroupCodeHelper(System.DateTime)">
            <summary>Returns MeSH age group code based on birthdate. i.e. &lt;2yrs==Infant==D007231</summary>
        </member>
        <member name="M:OpenDental.FormInfobutton.AgeGroupNameHelper(System.DateTime)">
            <summary>Returns MeSH age group name based on birthdate. i.e. &lt;2yrs==Infant.</summary>
        </member>
        <member name="M:OpenDental.FormInfobutton.AdministrativeGenderCodeHelper(OpenDentBusiness.PatientGender)">
            <summary>The gender of a person used for adminstrative purposes (as opposed to clinical gender). Empty string/value is allowed.</summary>
        </member>
        <member name="M:OpenDental.FormInfobutton.AdministrativeGenderNameHelper(OpenDentBusiness.PatientGender)">
            <summary>The gender of a person used for adminstrative purposes (as opposed to clinical gender). Empty string/value is allowed.</summary>
        </member>
        <member name="M:OpenDental.FormInfobutton.GetWebResponse(System.String)">
            <summary>For More info goto: http://msdn.microsoft.com/en-us/library/456dfw4f(v=vs.110).aspx </summary>
        </member>
        <member name="F:OpenDental.FormInfobutton.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInfobutton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInfobutton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.ActTaskCode">
            <summary>Only enumerating the highest level task codes, OE, PATDOC, and PATINFO., Enum generated from HL7 ActTaskCode [2.16.840.1.113883.1.11.19846] which is a subset of ActCode [OID=2.16.840.1.113883.5.4] documentation published 20120831 10:21 AM.</summary>
        </member>
        <member name="F:OpenDental.ActTaskCode.OE">
            <summary>0 - order entry task</summary>
        </member>
        <member name="F:OpenDental.ActTaskCode.PATDOC">
            <summary>1 - patient documentation task</summary>
        </member>
        <member name="F:OpenDental.ActTaskCode.PATINFO">
            <summary>2 - patient information review task</summary>
        </member>
        <member name="T:OpenDental.ActEncounterCode">
            <summary>Enum generated from HL7 ActEncounterCode [2.16.840.1.113883.1.11.13955] which is a subset of ActCode [OID=2.16.840.1.113883.5.4] documentation published 20120831 10:21 AM.</summary>
        </member>
        <member name="F:OpenDental.ActEncounterCode.AMB">
            <summary>0 - ambulatory</summary>
        </member>
        <member name="F:OpenDental.ActEncounterCode.EMER">
            <summary>1 - emergency</summary>
        </member>
        <member name="F:OpenDental.ActEncounterCode.FLD">
            <summary>2 - field</summary>
        </member>
        <member name="F:OpenDental.ActEncounterCode.HH">
            <summary>3 - home health</summary>
        </member>
        <member name="F:OpenDental.ActEncounterCode.IMP">
            <summary>4 - inpatient encounter</summary>
        </member>
        <member name="F:OpenDental.ActEncounterCode.SS">
            <summary>5 - short stay</summary>
        </member>
        <member name="F:OpenDental.ActEncounterCode.VR">
            <summary>6 - virtual</summary>
        </member>
        <member name="T:OpenDental.ObservationInterpretationNormality">
            <summary>Normality, Abnormality, Alert. Concepts in this category are mutually exclusive, i.e., at most one is allowed. Enum generated from HL7 _ObservationInterpretationNormality [2.16.840.1.113883.1.11.10206] which is a subset of ObservationInterpretation [OID=2.16.840.1.113883.5.83] documentation published 20120831 10:21 AM.</summary>
        </member>
        <member name="F:OpenDental.ObservationInterpretationNormality.A">
            <summary>0 - Abnormal - Abnormal (for nominal observations, all service types) </summary>
        </member>
        <member name="F:OpenDental.ObservationInterpretationNormality.AA">
            <summary>1 - Abnormal alert - Abnormal alert (for nominal observations and all service types) </summary>
        </member>
        <member name="F:OpenDental.ObservationInterpretationNormality.HH">
            <summary>2 - High alert - Above upper alert threshold (for quantitative observations) </summary>
        </member>
        <member name="F:OpenDental.ObservationInterpretationNormality.LL">
            <summary>3 - Low alert - Below lower alert threshold (for quantitative observations) </summary>
        </member>
        <member name="F:OpenDental.ObservationInterpretationNormality.H">
            <summary>4 - High - Above high normal (for quantitative observations) </summary>
        </member>
        <member name="F:OpenDental.ObservationInterpretationNormality.L">
            <summary>5 - Low - Below low normal (for quantitative observations) </summary>
        </member>
        <member name="F:OpenDental.ObservationInterpretationNormality.N">
            <summary>6 - Normal - Normal (for all service types) </summary>
        </member>
        <member name="M:OpenDental.FormReconcileMedication.#ctor(OpenDentBusiness.Patient)">
            <summary>Patient must be valid.  Do not pass null.</summary>
        </member>
        <member name="F:OpenDental.FormReconcileMedication.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReconcileMedication.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReconcileMedication.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._emailAddress">
            <summary>Do not access directly.  Instead use AddressInbox.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._listEmailMessagesInbox">
            <summary>Should always match the combobox 1:1.</summary>
            <summary>Unfiltered list of emails showing in the Inbox.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._listEmailMessagesSent">
            <summary>Unfiltered list of emails showing in the Sent Messages box.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._listPatients">
            <summary>Gets refreshed as needed.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._isRefreshSent">
            <summary>Indicates whether or not the Sent Messages box needs to be refreshed.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._isRefreshInbox">
            <summary>Indicates whether or not the Inbox needs to be refreshed.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._patNum">
            <summary>The patnum of the patient chosen by the user by clicking the Patient Pick button when searching.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._isSearching">
            <summary>True when the user is search mode.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._listEmailMessagesInboxSearched">
            <summary>When _isSearching is true, the following list is used instead if _listInboxEmails.
            At the point that _isSearching is true, it should always be filled.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._listEmailMessagesSentSearched">
            <summary>When _isSearching is true, the following list is used instead of _listSentEmails. 
            At the point that _isSearching is true, it should always be filled.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._hasClosed">
            <summary>True when the form has been closed.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._listHideInFlags">
            <summary>List of all HideInFlags, except None.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox._emailUsername">
            <summary>Used to set the inbox that will be shown once the form is loaded.
            String matches the _listEmailAddresses.EmailUsername property</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.#ctor(System.String)">
            <summary>Attempts to set the selected inbox based on email username.  Used to show a specific inbox when opening the form.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.FillComboEmail">
            <summary>This function is called on load and also when signals are received indicating a refresh is needed for email addresses.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.GetActiveMailbox">
            <summary>The currently showing mailbox.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.GetActiveGrid">
            <summary>The currently showing grid. Based off ActiveMailbox above.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.GetSelectedAddress">
            <summary>The currently selected email address.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.GetMessages">
            <summary>Gets messages from the db and fills the grid. Also, resends previously failed acknowledgements when the current email address is set up to receive email.S</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.FillGridInbox">
            <summary>Gets new emails and also shows older emails from the database.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.FillGridSent">
            <summary>Fills the Sent grid with emails. 
            Set _refreshSent to true to refresh the local list of emails from the db before calling this method.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.InitEmailHideInFlags">
            <summary>Loads HideInFlags into listEmailHideInFlags and adds them listHideInFlags.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.IsWebMail">
            <summary>Returns true if the currently selected email client is WebMail.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.RefreshShowIn">
            <summary>Updates listShowIn according to current selections in GridSent/GridInbox</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.FillSearch">
            <summary>Fills the two classwide search lists and calls the FillGrid methods to filter them.
            By the time this is called, the _isSearching variable should already be set to true.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.CheckForAddress(OpenDentBusiness.EmailMessage,System.String)">
            <summary>Searches for a given email address in the passed in message's From,To,Recipient,CC, and BCC addresses.
            The message addresses and the search term are both converted to lowercase for comparison.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.RefreshInboxEmailList">
            <summary>Refreshes the local list of inbox emails.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.RefreshSentEmailList">
            <summary>Refreshes the local list of sent emails.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.RefreshPatientsList(System.Collections.Generic.List{System.Int64})">
            <summary>Adds patients for the PatNums passed in that the list doesn't already contain.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.GetPatientName(System.Int64)">
            <summary>Gets the patient name from the local list.  Queries the database and adds to the list if not found.
            Returns an empty string if the patient couldn't be found in list or in the database.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.SetButtonsEnabled">
            <summary>Sets the sidebar buttons enabled or disabled based on the currently selected Mailbox.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.butPickPat_Click(System.Object,System.EventArgs)">
            <summary>For searching.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.butClear_Click(System.Object,System.EventArgs)">
            <summary>Clears search fields.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.ProcessSignalODs(System.Collections.Generic.List{OpenDentBusiness.Signalod})">
            <summary>If someone else is sending emails on another workstation, this will update this form to reflect that.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.FillInboxOrSent(System.Boolean)">
            <summary>Refreshes Inbox or Sent depending on currently active mailbox</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.GetHideInFlagsFromListBox">
            <summary>Builds a HideInFlags flag from listShowIn</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.SetSelectedMessageSource(System.Boolean,System.Boolean)">
            <summary>Sets the message sources listbox selected items to all or none.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.checkShowHiddenEmails_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Causes ActiveMailbox to refill based on checkShowHiddenEmails status.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.listHideInFlags_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>Updates email objects,DB, and UI in response to HideInFlags setting selections.</summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.FormEmailMessage_Closed(System.Object,System.EventArgs)">
            <summary>Since FormEmailMessageEdit is now modeless, this registers for events that 
            would cause changes to what the current form needs to display so they can be shows immediately.</summary>
        </member>
        <member name="F:OpenDental.FormEmailInbox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailInbox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEmailInbox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrSettings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrSettings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrSettings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedPickAuthOntario.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedPickAuthOntario.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFeeSchedPickAuthOntario.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormResellerServiceEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormResellerServiceEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormResellerServiceEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormResellerEdit.IsBundleMissing">
            <summary>Returns true if there are services available to the reseller but the bundle is not one of them.
            Also causes a red label to show to the user that indicates that the Bundle service is required.
            Returns false if the Bundle service is present OR if there are no available services at all (both are acceptable).</summary>
        </member>
        <member name="F:OpenDental.FormResellerEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormResellerEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormResellerEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormResellers.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormResellers.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormResellers.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormXChargeReconcile.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormXChargeReconcile.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormXChargeReconcile.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatientPortal._userWeb">
            <summary>The current UserWeb instance from the passed in Patient.</summary>
        </member>
        <member name="F:OpenDental.FormPatientPortal._userWebOld">
            <summary>The unmodified UserWeb instance to compare to the current one when saving changes to the database.</summary>
        </member>
        <member name="F:OpenDental.FormPatientPortal._wasPrinted">
            <summary>Keeps track if the user printed the patient's information.  Mainly used to show a reminder when the password changes and the user didn't print.</summary>
        </member>
        <member name="F:OpenDental.FormPatientPortal.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatientPortal.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPatientPortal.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWikiListHeaders._listWikiListHeaderWidths">
            <summary>Widths must always be specified.  Not optional.</summary>
        </member>
        <member name="F:OpenDental.FormWikiListHeaders._listStringPicks">
            <summary>All possible "options" for the currently selected Wiki List Header.</summary>
        </member>
        <member name="M:OpenDental.FormWikiListHeaders.FillGrid">
            <summary>Each item defines a column in the wiki list grid.</summary>
        </member>
        <member name="M:OpenDental.FormWikiListHeaders.FillGridPickList">
            <summary>Filled when Add, Remove, or change main header idx.</summary>
        </member>
        <member name="M:OpenDental.FormWikiListHeaders.gridPickList_CellEnter(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Used to store the currently selected cell in the secondary grid.  
            SelectedCell and Selected don't behave correctly when you click away or the cell is editable.</summary>
        </member>
        <member name="F:OpenDental.FormWikiListHeaders.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiListHeaders.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiListHeaders.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWikiListItemEdit.WikiListName">
            <summary>Name of the wiki list.</summary>
        </member>
        <member name="F:OpenDental.FormWikiListItemEdit.ListWikiListHeaderWidths">
            <summary>A list of all possible column headers for the current wiki list.  Each header contains additional information (e.g. PickList) that can be useful.</summary>
        </member>
        <member name="F:OpenDental.FormWikiListItemEdit._tableWikiList">
            <summary>Creating a data table containing only one item allows us to use column names.</summary>
        </member>
        <member name="M:OpenDental.FormWikiListItemEdit.FillGrid">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormWikiListItemEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiListItemEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiListItemEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWikiListEdit.WikiListCurName">
            <summary>Name of the wiki list being manipulated. This does not include the "wikilist" prefix. i.e. "networkdevices" not "wikilistnetworkdevices"</summary>
        </member>
        <member name="F:OpenDental.FormWikiListEdit._listWikiListHeaderWidths">
            <summary>A list of all possible column headers for the current wiki list.  Each header contains additional information (e.g. PickList) that can be useful.</summary>
        </member>
        <member name="F:OpenDental.FormWikiListEdit._hasHiddenColumns">
            <summary>Whether or not this list has at least one hidden column</summary>
        </member>
        <member name="M:OpenDental.FormWikiListEdit.FillGrid">
            <summary>Fills the grid with the contents of the corresponding wiki list table in the database.
            After filling the grid, FilterGrid() will get invoked to apply any advanced search options.</summary>
        </member>
        <member name="M:OpenDental.FormWikiListEdit.FilterGrid">
            <summary>Visually filters gridMain.  Tag is preserved so that double clicking and editing can still work.</summary>
        </member>
        <member name="M:OpenDental.FormWikiListEdit.SetIsEdited">
            <summary>Sets the _isEdited bool to true and saves a copy in the wikilisthist table. This only happens once to prevent spamming of updates.</summary>
        </member>
        <member name="F:OpenDental.FormWikiListEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiListEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiListEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWikiLists.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiLists.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiLists.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormNewCropBilling._listRepeatChargesErx">
            <summary>Holds a cached list of all eRx repeating charges in the entire database.
            Even 10s of thousands of records would only take about 1MB of memory.
            At the time this caching was added (04/21/2016), there were only ~500 records.</summary>
        </member>
        <member name="F:OpenDental.FormNewCropBilling._listNewCropCharges">
            <summary>Holds all relevant charges reported from NewCrop XML.  Corresponds 1-1 with what shows in the grid.</summary>
        </member>
        <member name="F:OpenDental.FormNewCropBilling._listNewCropChargesToAdd">
            <summary>Holds all NewCrop repeating charges that must be added</summary>
        </member>
        <member name="M:OpenDental.FormNewCropBilling.GetProcCodeForNewCharge(System.Int64)">
            <summary>Returns a code in format Z###, depending on which codes are already in use for the current patnum.
            The returned code is guaranteed to exist in the database, because codes are created if they do not exist.</summary>
        </member>
        <member name="M:OpenDental.FormNewCropBilling.StringBuilderAddRepeatCharges(System.Text.StringBuilder,System.Collections.Generic.List{OpenDental.NewCropCharge})">
            <summary>Appends the Name, AccountId, and NPI of each charge in the list of charges passed in to the StringBuilder object also passed in</summary>
        </member>
        <member name="F:OpenDental.FormNewCropBilling.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormNewCropBilling.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormNewCropBilling.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.NewCropCharge.repeatCharge">
            <summary>The existing OD repeating charge which corresponds to this NewCrop charge.  Will be null for new charges.</summary>
        </member>
        <member name="F:OpenDental.NewCropCharge.PatNumForRegKey">
            <summary>PatNum of registration key used to create the account id.  The PatNum as taken from the ErxAccountId.
            Not equal to the PatNum of the repeating charge necessarily.</summary>
        </member>
        <member name="F:OpenDental.FormSpellCheck.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSpellCheck.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSpellCheck.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMarkupTableEdit.Markup">
            <summary>Both an incoming and outgoing parameter.</summary>
        </member>
        <member name="F:OpenDental.FormMarkupTableEdit._listColWidths">
            <summary>Widths must always be specified.  Not optional.</summary>
        </member>
        <member name="F:OpenDental.FormMarkupTableEdit.CountTablesInPage">
            <summary>This is passed in from the calling form.  It is used when deciding whether to allow user to add tableviews.  Blocks them if more than one table in page.</summary>
        </member>
        <member name="M:OpenDental.FormMarkupTableEdit.ParseMarkup">
            <summary>Happens on Load, and will also happen when user manually edits markup.  Recursive.</summary>
        </member>
        <member name="M:OpenDental.FormMarkupTableEdit.FillGrid">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormMarkupTableEdit.GenerateMarkup">
            <summary>Happens when user clicks OK.  Also happens when user wants to manually edit markup.</summary>
        </member>
        <member name="F:OpenDental.FormMarkupTableEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMarkupTableEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMarkupTableEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWikiFileFolder.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiFileFolder.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiFileFolder.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormImagePicker">
            <summary>This image picker shows all files within a specified Windows folder and lets you pick one.  Used for Wiki and email templates.</summary>
        </member>
        <member name="F:OpenDental.FormImagePicker._listImageNames">
            <summary>This contains the entire qualified names including path and extension.</summary>
        </member>
        <member name="M:OpenDental.FormImagePicker.#ctor(System.String)">
            <summary>Check that the imageFolder exists and is accessible before calling this form.</summary>
        </member>
        <member name="M:OpenDental.FormImagePicker.FillGrid(System.String)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormImagePicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormImagePicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormImagePicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiIncomingLinks.FillGrid">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormWikiIncomingLinks.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiIncomingLinks.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiIncomingLinks.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcLockTool.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcLockTool.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProcLockTool.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWikiHistory.IsLocked">
            <summary>True if the page can only be edited by WikiAdmins.</summary>
        </member>
        <member name="M:OpenDental.FormWikiHistory.FillGrid">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormWikiHistory.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiHistory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiHistory.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWikiAllPages.FormWikiEditOwner">
            <summary>Need a reference to the form where this was launched from so that we can tell it to refresh later.</summary>
        </member>
        <member name="M:OpenDental.FormWikiAllPages.FillGrid">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWikiAllPages.butAdd_Click(System.Object,System.EventArgs)">
            <summary>Adds a new wikipage.</summary>
        </member>
        <member name="M:OpenDental.FormWikiAllPages.butBrackets_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWikiAllPages.butOK_Click(System.Object,System.EventArgs)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormWikiAllPages.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiAllPages.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiAllPages.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.NavToPageDeligate">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormWikiSearch.FillGrid">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormWikiSearch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiSearch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiSearch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEmailAddresses.IsChanged">
            <summary>If true, a signal for invalid Email cache will be sent out upon closing.</summary>
        </member>
        <member name="F:OpenDental.FormEmailAddresses.DoAllowSelectingAddressWithUsers">
            <summary>When in SelectionModeIf true, allows selecting an email address associated to a user.</summary>
        </member>
        <member name="F:OpenDental.FormEmailAddresses.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEmailAddresses.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEmailAddresses.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedPickRemote.Url">
            <summary>Url must include trailing slash.</summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedPickRemote.getFileChosenUrl">
            <summary>Returns the full URL of the chosen file.</summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedPickRemote.getFileChosenName">
            <summary>Returns just the file name of the chosen file.</summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedPickRemote.IsFileChosenProtected">
            <summary>Returns true if the file chosen must be downloaded from the web service. Currently, Ontario fees must be downloaded from the web service.
            Otherwise, if false is returned, the file can be downloaded by anyone directly from our website.</summary>
        </member>
        <member name="F:OpenDental.FormFeeSchedPickRemote.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormFeeSchedPickRemote.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormFeeSchedPickRemote.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcNoteAppend.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcNoteAppend.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProcNoteAppend.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldExam.IsValidSheetFieldType(OpenDentBusiness.SheetFieldType)">
            <summary>Only allow SheetFieldTypes of CheckBox/Radio Buttons, Input, and OutputText fields.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldExam.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldExam.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldExam.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormHL7MsgEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormHL7MsgEdit.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormHL7MsgEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormHL7MsgEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormHL7MsgEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldSpecial.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldSpecial.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldSpecial.IsEditMobile">
            <summary>Ignored. Not available for mobile</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldSpecial.LayoutMode">
            <summary>Only SheetFieldDefs that are associated to this SheetFieldLayoutMode will be shown in the listBoxAvailable.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldSpecial.FillFields">
            <summary>Each special field type is a little bit different, this allows each field to fill the form in its own way.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldSpecial.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldSpecial.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldSpecial.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormHL7Msgs.PatNumCur">
            <summary>This gets set externally beforehand.  Lets user quickly select the HL7 messages for the current patient.</summary>
        </member>
        <member name="F:OpenDental.FormHL7Msgs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormHL7Msgs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormHL7Msgs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormInnoDb">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInnoDb.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormInnoDb.butToMyIsam_Click(System.Object,System.EventArgs)">
            <summary>Will only convert to MyISAM if default storage engine set to MyISAM.</summary>
        </member>
        <member name="M:OpenDental.FormInnoDb.butToInnoDb_Click(System.Object,System.EventArgs)">
            <summary>Will only convert to InnoDB if default storage engine set to InnoDB and skip-innodb is not in my.ini file, which disables InnoDB engine.</summary>
        </member>
        <member name="F:OpenDental.FormInnoDb.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInnoDb.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInnoDb.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWiki._idxHistoryNavBack">
            <summary>Number of pages back that you are browsing. Current page == 0, Oldest page == _listHistoryNav.Length. </summary>
        </member>
        <member name="M:OpenDental.FormWiki.LoadWikiPageHome">
            <summary>Loads the user's home page or the wiki page with the title of "Home" if a custom home page has not been set before.</summary>
        </member>
        <member name="M:OpenDental.FormWiki.RefreshPage(System.String)">
            <summary>Because FormWikiEdit is no longer modal, this is necessary to be able to tell FormWiki to refresh when saving an edited page.</summary>
        </member>
        <member name="M:OpenDental.FormWiki.LoadWikiPage(System.String)">
            <summary>Before calling this, make sure to increment/decrement the historyNavBack index to keep track of the position in history.  If loading a new page, decrement historyNavBack before calling this function.  </summary>
        </member>
        <member name="M:OpenDental.FormWiki.IsWikiPageLocked">
            <summary>Returns a boolean whether the current wiki page is locked or not.  
            Will show a warning message to the user if it is locked and they do not have permission to access locked pages.
            Always returns true if WikiPageCur is null.
            Returns false if the user currently logged in has the WikiAdmin permission.</summary>
        </member>
        <member name="M:OpenDental.FormWiki.NavToHistory">
            <summary>Loads page from history based on historyCurIndex.</summary> 
        </member>
        <member name="F:OpenDental.FormWiki.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWiki.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWiki.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormWikiEdit.FormWiki_">
            <summary>Need a reference to the form where this was launched from so that we can tell it to refresh later.</summary>
        </member>
        <member name="F:OpenDental.FormWikiEdit.HasSaved">
            <summary>Used to differentiate what action caused the form to close. Public so it can be checked in FormWikiDrafts</summary>
        </member>
        <member name="F:OpenDental.FormWikiEdit._hasSavedDraft">
            <summary>Used to differentiate what action caused the form to close.</summary>
        </member>
        <member name="M:OpenDental.FormWikiEdit.RefreshPage(OpenDentBusiness.WikiPage)">
            <summary>Because FormWikiAllPages is no longer modal, this is necessary to be able to tell FormWikiEdit to refresh with inserted data.</summary>
        </member>
        <member name="M:OpenDental.FormWikiEdit.TableOrDoubleClick(System.Int32)">
            <summary>This is called both when a user double clicks anywhere in the edit box, or when the click the Table button in the toolbar.  This ONLY handles popping up an edit window for an existing table.  If the cursor was not in an existing table, then this returns false.  After that, the behavior in the two areas differs.  Returns true if it popped up.</summary>
        </member>
        <member name="M:OpenDental.FormWikiEdit.SaveDraft_Click(System.Boolean)">
            <summary>Saves the the currently edited Wikipage as a draft. This method is copied from Save_Click with a few modifications.</summary>
        </member>
        <member name="M:OpenDental.FormWikiEdit.Table_Click">
            <summary>Works for a new table and for an existing table.</summary>
        </member>
        <member name="F:OpenDental.FormWikiEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWikiEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWikiEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormXchargeTokenTool._xUsername">
            <summary>The X-Charge Username for the FormOpenDental.ClinicNum clinic.  Validated on load.</summary>
        </member>
        <member name="F:OpenDental.FormXchargeTokenTool._xPassword">
            <summary>The X-Charge Password for the FormOpenDental.ClinicNum clinic.  Validated on load.</summary>
        </member>
        <member name="F:OpenDental.FormXchargeTokenTool.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormXchargeTokenTool.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormXchargeTokenTool.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEcwDiag.buildConnectionString">
            <summary>Used to construct a default construction string.</summary>
        </member>
        <member name="M:OpenDental.FormEcwDiag.VerifyECW">
            <summary>Surround with wait cursor.</summary>
        </member>
        <member name="F:OpenDental.FormEcwDiag.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEcwDiag.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEcwDiag.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEcwDiagAdv.buildConnectionString">
            <summary>Used to construct a default construction string.</summary>
        </member>
        <member name="M:OpenDental.FormEcwDiagAdv.gridTables_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Double clicking on a table name will run "select * from" that table.</summary>
        </member>
        <member name="F:OpenDental.FormEcwDiagAdv.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEcwDiagAdv.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEcwDiagAdv.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormHL7DefFieldEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormHL7DefFieldEdit.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormHL7DefFieldEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormHL7DefFieldEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormHL7DefFieldEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormHL7DefSegmentEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormHL7DefSegmentEdit.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormHL7DefSegmentEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormHL7DefSegmentEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormHL7DefSegmentEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormHL7DefMessageEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormHL7DefMessageEdit.#ctor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormHL7DefMessageEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormHL7DefMessageEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormHL7DefMessageEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormHL7DefEdit">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormHL7DefEdit.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormHL7DefEdit.SetControls">
            <summary>Sets control visibility and label/textbox text based on ModeTx and internal type.  Also sets control read only property based on enabled status.</summary>
        </member>
        <member name="M:OpenDental.FormHL7DefEdit.SetShowRadioButtons">
            <summary>Sets radio button for the current def's ShowDemographics setting.</summary>
        </member>
        <member name="M:OpenDental.FormHL7DefEdit.RadioAddPts_Click(System.Object,System.EventArgs)">
            <summary>Make user enter password before allowing them to add patients through OD since this could be dangerous</summary>
        </member>
        <member name="M:OpenDental.FormHL7DefEdit.ValidateData">
            <summary>If all of the entered data is valid, or if the def is not enabled, returns true.  Otherwise false.</summary>
        </member>
        <member name="F:OpenDental.FormHL7DefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormHL7DefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormHL7DefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSupplyOrders._tableOrderItems">
            <summary>Order Items are easier to process as a DataTable, with columns from multiple db tables.</summary>
        </member>
        <member name="F:OpenDental.FormSupplyOrders._userOdPrefShowReceived">
            <summary>This user pref remembers whether the user has checked the "Show received" checkbox.</summary>
        </member>
        <member name="F:OpenDental.FormSupplyOrders.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSupplyOrders.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSupplyOrders.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEtrans835Edit.EtransCur">
            <summary>Must be set before the form is shown.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835Edit.MessageText835">
            <summary>Must be set before the form is shown.  The message text for EtransCur.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835Edit._listHx835_ShortClaimProcs">
            <summary>List of all claimProcs associated to the attached claims.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835Edit._listEtrans835Attaches">
            <summary>List of all attaches associated to the Hx835_Claim in Claims Paid grid, even if associated to another etrans ordered by DateTimeEntry.
            Also contains SplitClaim attaches so that we can query for the associated claimProcs via the attach.ClaimNum.
            Used to identify processed ERAs.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.#ctor(System.Int64)">
            <summary>Set printPreviewClaimNum to a print preview a specific claim on this ERA after loading.
            If the claimNum is not found on this ERA then all claims will preview.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.FillAll">
            <summary>Reads the X12 835 text in the MessageText variable and displays the information in this form.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.FillHeader">
            <summary>Reads the X12 835 text in the MessageText variable and displays the information from Table 1 (Header).</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.FillClaimDetails">
            <summary>Reads the X12 835 text in the MessageText variable and displays the information from Table 2 (Detail).</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.SetClaimDetailRows(System.Collections.Generic.List{OpenDental.UI.GridRow},System.Collections.Generic.List{OpenDentBusiness.Hx835_Claim},System.Boolean)">
            <summary>ListRows and ListClaimsPaid must be 1:1 and in the same order.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.RunAgingForClaims">
            <summary>Runs aging for all families for patient's on claims attached to payment</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.FillProviderAdjustmentDetails">
            <summary>Reads the X12 835 text in the MessageText variable and displays the information from Table 3 (Summary).</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.ClaimSelectionHelper(OpenDentBusiness.Hx835_Claim)">
            <summary>If given claim!=null, attempts to open the patient select and claim select windows.
            Sets isAttachNeeded to true if user went through full patient and claim selection logic, claim was not null when provided.
            Returns false if user does not select a claim.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.gridClaimDetails_RightClickHelper(System.Object,System.EventArgs)">
            <summary>Click method used by all gridClaimDetails right click options.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.butAutoProcess_Click(System.Object,System.EventArgs)">
            <summary>Attempt to automatically process all claims on the ERA and finalize the payment.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.butBatch_Click(System.Object,System.EventArgs)">
            <summary>Since ERAs are only used in the United States, we do not need to translate any text shown to the user.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans835Edit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans835Edit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInstallmentPlanEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInstallmentPlanEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInstallmentPlanEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTxtMsgEdit.PatNum">
            <summary>PatNum of the patient selected.  Required if sending message without loading form or loading with patient selected.</summary>
        </member>
        <member name="F:OpenDental.FormTxtMsgEdit.WirelessPhone">
            <summary>WirelessPhone of the patient selected.  Required if sending message without loading form.  
            Once form is loaded uses textWirelessPhone.Text instead.</summary>
        </member>
        <member name="F:OpenDental.FormTxtMsgEdit.Message">
            <summary>Message text to be sent.  Required if sending message without loading form.  Once form is loaded uses textMessage.Text instead.</summary>
        </member>
        <member name="F:OpenDental.FormTxtMsgEdit.YNTxtMsgOk">
            <summary>TxtMsgOk status of the patient.  Required if sending message without loading form or loading with patient selected.</summary>
        </member>
        <member name="F:OpenDental.FormTxtMsgEdit._listShortURLsAllowed">
            <summary>List of short-URLs that were pre-generated and already in the message when it was send to this Form. Used to compare outgoing message to see if the user edited the message by adding new/different short-URLs.</summary>
        </member>
        <member name="M:OpenDental.FormTxtMsgEdit.SendText(System.Int64,System.String,System.String,OpenDentBusiness.YN,System.Int64,OpenDentBusiness.SmsMessageSource,System.Boolean)">
            <summary>May be called from other parts of the program without showing this form. You must still create an instance of this form though. 
            Checks CallFire bridge, if it is OK to send a text, etc. (Buttons to load this form are usually disabled if it is not OK, 
            but this is needed for Confirmations, Recalls, etc.). CanIncreaseLimit will prompt the user to increase the spending limit if sending the 
            text would exceed that limit. Should only be true when this method is called from this form. </summary>
        </member>
        <member name="M:OpenDental.FormTxtMsgEdit.SendCallFire(System.Int64,System.String,System.String)">
            <summary>Sends text message to callfire.  If patNum=0 will not create commlog entry.</summary>
        </member>
        <member name="F:OpenDental.FormTxtMsgEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTxtMsgEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTxtMsgEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEtrans277Edit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans277Edit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans277Edit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.FillMain(System.Boolean)">
            Queries the database
        </member>
        <member name="M:OpenDental.FormTimeCardManage.FillPayPeriod">
            <summary>SelectedPayPeriod should already be set.  This simply fills the screen with that data.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.GetGridForPrinting(OpenDentBusiness.Employee)">
            <summary>This is a modified version of FormTimeCard.FillMain().  It fills one time card per employee.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.butPrintSelected_Click(System.Object,System.EventArgs)">
            <summary>Print timecards for selected employees only.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.pd2_PrintPageSelective(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>Similar to pd2_PrintPage except it iterates through selected indices instead of all indices.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.butPrintGrid_Click(System.Object,System.EventArgs)">
            <summary>Print exactly what is showing in gridMain. (Including rows that do not fit in the UI.)</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.butExportGrid_Click(System.Object,System.EventArgs)">
            <summary>Exports MainTable (a data table) not the actual OD Grid. This allows for EmployeeNum and ADPNum without having to perform any lookups.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.butExportADP_Click(System.Object,System.EventArgs)">
            <summary>Validates format and values and provides aggregate error and warning messages. Will save malformed files anyways.
            Uses Hours 3 ADP columns to represent PTO.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.butExportADPRun_Click(System.Object,System.EventArgs)">
            <summary>Validates format and values for ADP Run csv file, providing error and warning messages. Will save malformed files anyways. Reports must contain all 11 columns and only one Pay Frequency.
            Uses VAC Earnings Code and BASE Rate Code to describe PTO.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.GenerateFileSuffix(System.String,System.String)">
            <summary>Creates a suffix for a file if the passed fileName already exists in the directory. Returns a two character alphanumeric string if a file already exists with that name, or an empty string if not. Will return an error message if all 1296 two character alphanumeric strings are already used as suffixes. </summary>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.PayFrequencyMatchesDateRange(OpenDentBusiness.PayPeriodInterval)">
            <summary>Checks to see if the pay period interval matches the date range of the current pay period.</summary>
        </member>
        <member name="F:OpenDental.FormTimeCardManage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTimeCardManage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatFieldCurrencyEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatFieldCurrencyEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPatFieldCurrencyEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReferenceEntryEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReferenceEntryEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReferenceEntryEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReferenceEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReferenceEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReferenceEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReference.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReference.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReference.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormUpdateInstallMsg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormUpdateInstallMsg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormUpdateInstallMsg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormCreditRecurringDateChoose.FillComboBoxMonthSelect">
            <summary>Fills comboBoxMonthSelect when appropriate, otherwise butThisMonth and butLastMonth are used.  Returns true if comboBoxMonthSelect
            will be used instead of butThisMonth/butLastMonth.</summary>
        </member>
        <member name="M:OpenDental.FormCreditRecurringDateChoose.GetValidPayDate(System.DateTime)">
            <summary>Returns a valid date based on the Month and Year taken from the date passed in and the Day that is set for the recurring charges.</summary>
        </member>
        <member name="M:OpenDental.FormCreditRecurringDateChoose.FillComboBoxForWeekDays(System.DayOfWeek,System.Boolean)">
            <summary>Populates comboBoxMonthSelect with options based upon the _creditCardCur.ChargeFrequency's DayOfWeek and the date passed in. 
            It will create "possible" charge dates for the last 2 months. Pass in isEveryOther only when you are calculating for a 
            ChargeFrequency of "Every Other" so that it correctly calculates based on 2 week intervals instead of 1.</summary>
        </member>
        <member name="M:OpenDental.FormCreditRecurringDateChoose.EnableComboBoxMonthUI">
            <summary>Makes visible the UI elements related to comboBoxMonthSelect while hiding UI for This and Last Month. 
            UI for comboBoxMonthSelect is always hidden by default.</summary>
        </member>
        <member name="M:OpenDental.FormCreditRecurringDateChoose.GetDateForDayOfMonth(System.DateTime,System.Int32)">
            <summary>Gets the DateTime for a specified day in a month, using the year and month of the given date.</summary>
        </member>
        <member name="F:OpenDental.FormCreditRecurringDateChoose.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCreditRecurringDateChoose.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCreditRecurringDateChoose.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPopupsForFam.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPopupsForFam.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPopupsForFam.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormImages">
            <summary>An empty window that is entirely filled by a copy of the old Images module.  Used from FormClaimEdit to view EOB.  Also, from FormClaimPayBatch to view EOB.  Finally, from FormEhrAmendmentEdit to scan.</summary>
        </member>
        <member name="F:OpenDental.FormImages.ClaimPaymentNum">
            <summary>Right now, this form only supports claimpayment and amendment mode.</summary>
        </member>
        <member name="F:OpenDental.FormImages.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormImages.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormImages.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReferralProcTrack.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReferralProcTrack.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReferralProcTrack.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormProvidersMultiPick">
            <summary>Only used in one place, when searching for an appt slot.  Could be rolled into FormProviderPick if done carefully.</summary>
        </member>
        <member name="F:OpenDental.FormProvidersMultiPick.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProvidersMultiPick.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProvidersMultiPick.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReportSetup._userGroupNum">
            <summary>Either the currently logged in user or the user of a group selected in the Security window.</summary>
        </member>
        <member name="M:OpenDental.FormReportSetup.GetComputerNames">
            <summary>Gets a list of all computer names on the network (this is not easy)</summary>
        </member>
        <member name="M:OpenDental.FormReportSetup.GetDatabases">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormReportSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReportSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReportSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimPayList.ClaimNumGoto">
            <summary>If this is not zero upon closing, then we will jump to the account module of that patient and highlight the claim.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayList.PatNumGoto">
            <summary>If this is not zero upon closing, then we will jump to the account module of that patient and highlight the claim.</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayList._listDefs">
            <summary>List of defs of type ClaimPaymentGroup</summary>
        </member>
        <member name="F:OpenDental.FormClaimPayList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimPayList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimPayList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormElectIDEdit.ElectIDCur">
            <summary>Must be set before calling Show() or ShowDialog().</summary>
        </member>
        <member name="F:OpenDental.FormElectIDEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormElectIDEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormElectIDEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrQuarterlyKeyEditCust.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrQuarterlyKeyEditCust.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrQuarterlyKeyEditCust.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrQuarterlyKeyEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrQuarterlyKeyEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrQuarterlyKeyEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTestLatency.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTestLatency.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTestLatency.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptPrintSetup._listAptNums">
            <summary>Only used if user clicks to print all routing slips for current view.</summary>
        </member>
        <member name="M:OpenDental.FormApptPrintSetup.butAllForDay_Click(System.Object,System.EventArgs)">
            <summary>Run the RpRouting report for the selected day, current clinic, and all providers</summary>
        </member>
        <member name="M:OpenDental.FormApptPrintSetup.butCurrentView_Click(System.Object,System.EventArgs)">
            <summary>Run the RpRouting report for the currently selected appointment view.</summary>
        </member>
        <member name="F:OpenDental.FormApptPrintSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptPrintSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormApptPrintSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrProvKeyEditCust.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrProvKeyEditCust.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrProvKeyEditCust.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEhrProvKeysCustomer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrProvKeysCustomer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrProvKeysCustomer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._hasChanged">
            <summary>Set to true if any data changed within the grid.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._listOrthoChartRows">
            <summary>Each item is a grid row.  Some rows can have all empty cells.  Rows include db cells as well as what the user has added and edited since loading. Rows are sorted by date and should be resorted whenever manipulated.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._showSigBox">
            <summary>True if there are any ortho display fields with the internal name of "Signature"</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._sigColIdx">
            <summary>Keeps track of the column index of the Signature field if one is present.
            This column index represents the the index of the grid that is displayed to the user, not the index within _tableOrtho.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._sigTableOrthoColIdx">
            <summary>Keeps track of the column index within _tableOrtho of the Signature field if one is present.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._prevRow">
            <summary>The index of the previously selected ortho chart row.  This is used to help save data.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._userodCurUser">
            <summary>Users can temporarily log in on this form.  Defaults to Security.CurUser.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._userNumLocked">
            <summary>UserNum that has locked this form. Should match database.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._userNumLogging">
            <summary>The userNum pulled from the db so that we only take action if it changes.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._isLockedByMe">
            <summary>This instance of OD has an ortho lock.  _userNumLocked might still be current user on a different instance of OD.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._changedUser">
            <summary>True if user has been changed locally on this form. Used for signature box.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._isReadOnly">
            <summary>True if user that opened the form does not have OrthoChartEditFull and OrthoChartEditUser permissions. Form is read only so ignore locking logic.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart._listDateTime_CanEdits">
            <summary>Each item is a DateTime_CanEdit type. Used to keep track of a list of dates as well as if they can be edited or not</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.#ctor(OpenDentBusiness.Patient,System.Int32)">
            <summary>Opens this patient's ortho chart with a specific chart tab opened.  tabIndex correlates to the index of OrthoChartTabs.Listt.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.timerLocked_Tick(System.Object,System.EventArgs)">
            <summary>There are 4 possible states. userNum checks the DB every 4 seconds.
             1. userNum = -5. A user changed users locally on their form to sign, do nothing.
             2. userNum = _userNumLocked. Current userNum is in control, do nothing.
             3. userNum = 0. An instance of OD has closed their form which sets the DB state to 0. (Locked by: Nobody)
             4. userNum = anything else. 2 different users are attempting to edit the form and a different user took control.
             Note: userNum is set to -1 when another user with the same username took control. This is handled the same as userNum = anything else.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.FillTabs">
            <summary>Sets the title of the form to the TabName of the first tab in the cache and then refreshes the current tabs.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.FillDisplayFields">
            <summary>Fills the classwide fields related to Display Fields.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.FillGrid">
            <summary>This does NOT get fresh data from db. The data is always in _listOrthoChartRows and its item ListOrthoCharts (cells).  This method just shows that data differently (by tab, for example).</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.FillOrtho">
            <summary>Same as FillOrtho() in the ContrAccount.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.FillDateRange">
            <summary>This method is used to set the Date Range filter start and stop dates for gridMain.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.gridMain_CellClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>Displays the signature for this row. The gridMain_CellEnter event does not fire when the column is not editable.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.gridMain_CellEnter(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>This is necessary in addition to CellClick for when the user tabs or uses the arrow keys to enter a cell.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.SaveAndSetSignatures(System.Int32)">
            <summary>Saves the signature to the data table if it hasn't been and displays the signature for this row.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.DisplaySignature(System.Int32,System.Boolean)">
            <summary>Displays the signature that is saved in the dictionary in the signature box. Colors the grid row green if the signature is valid, 
            red if invalid, or white if blank. Puts "Valid" or "Invalid" in the grid's signature column.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.SetSignatureButtonVisibility(System.Int32)">
            <summary>Removes the Sign Topaz button and the Clear Signature button from the signature box if the user does not have OrthoChartEdit permissions for that date.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.SaveSignatureToDict(System.Int32)">
            <summary>Saves the signature to the dictionary. The signature is hashed using the patient name, the date of service, and all ortho chart fields (even the ones not showing).</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.GetValueFromList(OpenDentBusiness.OrthoChartRow,System.String)">
            <summary>Gets the value from _listOrthoChartRows for the specified date and column heading.  Returns empty string if not found.  Note that the column name showing within the ODGrid could be different than the column heading within _listOrthoChartRows.  Use gridMain.Columns[x].Tag to get the corresponding column header that _listOrthoChartRows uses (displayfield.Description).</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.GetDisplayFieldsForCurrentTab">
            <summary>Returns a list of displayfields for the current tab.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.HasPickList(System.String)">
            <summary>Returns true if the display field column has a pick list</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.HasProvider(System.String)">
            <summary>Returns true if the display field column is provider.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.SetValueInList(OpenDentBusiness.OrthoChartRow,System.String,System.String)">
            <summary>Sets the value in _listOrthoChartRows for the specified date and column heading.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.SaveToDb">
            <summary>Used in 4 places: timerLock_tick (if someone took control from us), OK_click, and FormClosing. It the first case, where the form remains open, it's immediately followed by OrthoChartRows.GetAllForPatient to get data from from db.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.DeleteRowsIfEmpty">
            <summary>Used when user clicks cancel or [X], so a full sync is not done, but we still need to get rid of any empty rows.</summary>
        </member>
        <member name="T:OpenDental.FormOrthoChart.OrthoSignature">
            <summary>Stores the signature string and whether the signature is Topaz. Use ToString() to store it in the database.
            This class saves us from adding a IsSigTopaz column to the orthochart table.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.OrthoSignature.#ctor(System.String)">
            <summary>Parses a string like "0:ritwq/wV8vlrgUYahhK+RH5UeBFA6W4jCkZdo0cDWd63aZb1S/W3Z4eW5LmchqfgniG23" into a Signature object. 
            The 1st character is whether or not the signature is Topaz; the 2nd character is a separator; the rest of the string is the signature data.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.OrthoSignature.GetSigString(System.String)">
            <summary>Gets the signature string from a string like "1:52222559445999975122111500485555". Passing in an empty string will return an empty
            string.</summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.OrthoSignature.ToString">
            <summary>Converts the object to a string like "0:ritwq/wV8vlrgUYahhK+RH5UeBFA6W4jCkZdo0cDWd63aZb1S/W3Z4eW5LmchqfgniG23". The 1st character
            is whether or not the signature is Topaz; the 2nd character is a separator; the rest of the string is the signature data.</summary>
        </member>
        <member name="T:OpenDental.FormOrthoChart.DateTime_CanEdit">
            <summary>Nested private class used in place of a dictionary. It is used to keep track of a given date can be edited.</summary>
        </member>
        <member name="F:OpenDental.FormOrthoChart.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormOrthoChart.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormOrthoChart.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRxNorms.RxNormSelected">
            <summary>When this window is used for selecting an RxNorm (medication.RxCui), then use must click OK, None, or double click in grid.  In those cases, this field will have a value.  If None was clicked, it will be a new RxNorm with an RxCui of zero.</summary>
        </member>
        <member name="F:OpenDental.FormRxNorms.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRxNorms.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRxNorms.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEduResourceEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEduResourceEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEduResourceEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEduResourceSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEduResourceSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEduResourceSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReminderRuleEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReminderRuleEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReminderRuleEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReminderRules.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReminderRules.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReminderRules.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormVaccineDefSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormVaccineDefSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormVaccineDefSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDrugManufacturerSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDrugManufacturerSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDrugManufacturerSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDrugUnitSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDrugUnitSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDrugUnitSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormVaccineDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormVaccineDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormVaccineDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormMedicationReconcile.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormMedicationReconcile.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormMedicationReconcile.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAllergyDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAllergyDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAllergyDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRxAlertEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRxAlertEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRxAlertEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAllergyEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAllergyEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAllergyEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAllergySetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAllergySetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAllergySetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormIcd9s.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormIcd9s.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormIcd9s.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrSetup.DownloadFileWorker(System.String,System.String)">
            <summary>This is the function that the worker thread uses to actually perform the download.  Can also call this method in the ordinary way if the file to be transferred is short.</summary>
        </member>
        <member name="F:OpenDental.FormEhrSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEhrSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEhrSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCanadaSummaryReconciliation.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCanadaSummaryReconciliation.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCanadaSummaryReconciliation.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCanadaOutstandingTransactions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCanadaOutstandingTransactions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCanadaOutstandingTransactions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCanadaPaymentReconciliation.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCanadaPaymentReconciliation.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCanadaPaymentReconciliation.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatientPickWebForm.PatNumSelected">
            <summary>If OK.  Can be zero to indicate create new patient.  A result of Cancel indicates quit importing altogether.</summary>
        </member>
        <member name="F:OpenDental.FormPatientPickWebForm.HasMoreThanOneMatch">
            <summary>If true, more than one patient matches FName, LName, and Birthdate. If false, no matches have been found.</summary>
        </member>
        <member name="F:OpenDental.FormPatientPickWebForm._isDiscardAll">
            <summary>Indicates all downloaded websheets that match this websheet's FName, LName, Email, and Birthdate should be discarded.</summary>
        </member>
        <member name="F:OpenDental.FormPatientPickWebForm.CountMatchingSheets">
            <summary>The number of matching webforms that match this sheet.</summary>
        </member>
        <member name="M:OpenDental.FormPatientPickWebForm.IsDiscardAll">
            <summary>Indicates all downloaded websheets that match this websheet's FName, LName, Email, and Birthdate should be discarded.</summary>
        </member>
        <member name="F:OpenDental.FormPatientPickWebForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatientPickWebForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPatientPickWebForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCreditRecurringCharges._listClinics">
            <summary>List of clinics for which the current user is authorized.  If user is not restricted, list will also contain a dummy clinic with
            ClinicNum=0 for HQ.  List will be empty if the current user is not allowed to access any clinics or clinics are not enabled.</summary>
        </member>
        <member name="F:OpenDental.FormCreditRecurringCharges._isSelecting">
            <summary>True if we are programmatically selecting indexes in listClinics.  This allows us to use the SelectedIndexChanged event handler and
            disable the event when we are setting the selected indexes programmatically.</summary>
        </member>
        <member name="F:OpenDental.FormCreditRecurringCharges._recurringChargerator">
            <summary>The object that charges the recurring charges.</summary>
        </member>
        <member name="M:OpenDental.FormCreditRecurringCharges.#ctor">
            <summary>Only works for XCharge,PayConnect, and PaySimple so far.</summary>
        </member>
        <member name="M:OpenDental.FormCreditRecurringCharges.FillGrid(System.Boolean)">
            <summary>The DataTable used to fill the grid will only be refreshed from the db if isFromDb is true.  Otherwise the grid will be refilled using
            the existing table.  Only get from the db on load or if the Refresh button is pressed, not when the user is selecting the clinic(s).</summary>
        </member>
        <member name="M:OpenDental.FormCreditRecurringCharges.butSend_Click(System.Object,System.EventArgs)">
            <summary>Will process payments for all authorized charges for each CC stored and marked for recurring charges.
            X-Charge or PayConnect or PaySimple must be enabled.
            Program validation done on load and if properties are not valid the form will close and exit.</summary>
        </member>
        <member name="F:OpenDental.FormCreditRecurringCharges.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCreditRecurringCharges.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCreditRecurringCharges.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormXchargeTrans.IsPromptSignatureChecked">
            <summary>Set on the way in based on the property value for the clinic on the payment.  Sets the initial checked state of checkSignature.
            When the user presses OK, this value reflects the final state of checkSignature when the user hits OK.</summary>
        </member>
        <member name="F:OpenDental.FormXchargeTrans.IsPrintReceiptChecked">
            <summary>Set on the way in based on the property value for the clinic on the payment.  Sets the initial checked state of checkPrintReceipt.
            When the user presses OK, this value reflects the final state of checkPrintReceipt when the user hits OK.</summary>
        </member>
        <member name="F:OpenDental.FormXchargeTrans.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormXchargeTrans.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormXchargeTrans.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormChartViewDateFilter.DateStart">
            <summary>Set this date before opening the form.  Also after OK, this date is available to the calling class.</summary>
        </member>
        <member name="F:OpenDental.FormChartViewDateFilter.DateEnd">
            <summary>Set this date before opening the form.  Also after OK, this date is available to the calling class.</summary>
        </member>
        <member name="F:OpenDental.FormChartViewDateFilter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormChartViewDateFilter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormChartViewDateFilter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCreditCardEdit._isEdgeExpressEnabled">
            <summary>True if EdgeExpress is enabled.  Recurring charge section will show if using EdgeExpress.</summary>
        </member>
        <member name="F:OpenDental.FormCreditCardEdit._isXChargeEnabled">
            <summary>True if X-Charge is enabled.  Recurring charge section will show if using X-Charge.</summary>
        </member>
        <member name="F:OpenDental.FormCreditCardEdit._isPayConnectEnabled">
            <summary>True if PayConnect is enabled.  Recurring charge section will show if using PayConnect.</summary>
        </member>
        <member name="F:OpenDental.FormCreditCardEdit._isPaySimpleEnabled">
            <summary>True if PaySimple is enabled.  Recurring charge section will show if using PaySimple.</summary>
        </member>
        <member name="F:OpenDental.FormCreditCardEdit._isDuplicate">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormCreditCardEdit.IsUpdatedFrequencyValid">
            <summary>This is an additional validation method for the case where we are editing a credit card with a recurring charge.</summary>
        </member>
        <member name="M:OpenDental.FormCreditCardEdit.DeletePaySimpleToken">
            <summary>Deletes the PaySimple token if there is one. Returns false if deleting the token failed.</summary>
        </member>
        <member name="F:OpenDental.FormCreditCardEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCreditCardEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCreditCardEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormCreditCardManage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCreditCardManage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCreditCardManage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTaskNoteEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTaskNoteEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTaskNoteEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsPlanConvert_7_5_17.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsPlanConvert_7_5_17.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInsPlanConvert_7_5_17.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormInsPayFix.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormInsPayFix.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormInsPayFix.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpArizonaPrimaryCareEncounter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpArizonaPrimaryCareEncounter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpArizonaPrimaryCareEncounter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRpArizonaPrimaryCareEligibility.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRpArizonaPrimaryCareEligibility.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRpArizonaPrimaryCareEligibility.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormClaimResend.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormClaimResend.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormClaimResend.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebForms.#ctor">
            <summary>
            This Form does 3 things: 
            1) Retrieve data of filled out web forms from a web service and convert them into sheets and patients. Using the first name, last name and birth date it will check for existing patients. If an existing patient is found a new sheet is created. If no patient is found, a  patient and a sheet is created.
            2) Send a list of the Sheets that have been created to the Server for deletion.
            3) Show all the sheets that have been created in 1) using a date filter and a clinic filter.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebForms.FillGrid">
            <summary>
            </summary>
        </member>
        <member name="M:OpenDental.FormWebForms.IgnoreCertificateErrors">
            <summary>
             This method is used only for testing with security certificates that has problems.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebForms.RetrieveWebForms">
            <summary>Returns failed result if the user wants to cancel out of the retrieval process. Returns success result if the retrieval process completed.
            The lists of messages will be filled with any messages during the retrieval process regardless if the entire process completed or not.</summary>
        </member>
        <member name="F:OpenDental.FormWebForms.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebForms.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebForms.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormWebFormSetup">
            <summary>
            This Form is primarily used by the dental office to upload sheetDefs
            </summary>
        </member>
        <member name="M:OpenDental.FormWebFormSetup.FillGrid">
            <summary>This now also gets a new list of sheet defs from the server.  But it's only called after testing that the web service exists.</summary>
        </member>
        <member name="M:OpenDental.FormWebFormSetup.ResetSavePrefsButton">
            <summary>Returns true if any of the preferences/settings that get saved on a Save/OK click have changed from what they were when form was 
            opened or last saved. Otherwise, false</summary>
        </member>
        <member name="M:OpenDental.FormWebFormSetup.ConstructURLs">
            <summary>Build a URL based on selected forms. Should be run after gridMain is filled.</summary>
        </member>
        <member name="F:OpenDental.FormWebFormSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormWebFormSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormWebFormSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutomationConditionEdit.ShowOrHideFields(OpenDentBusiness.AutoCondField)">
            <summary>Show or hides the form fileds based of needs.</summary>
        </member>
        <member name="M:OpenDental.FormAutomationConditionEdit.ReasonableLogic">
            <summary>Logic might get more complex as fields and comparisons are added so a seperate function was made.</summary>
        </member>
        <member name="F:OpenDental.FormAutomationConditionEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutomationConditionEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAutomationConditionEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormTimeCardRuleEdit._isInsertMode">
            <summary>True when not editing an existing TimeCardRule. 
            When true a new timeCardRule will be inserted for every selected employee.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardRuleEdit.#ctor(OpenDentBusiness.TimeCardRule)">
            <summary>Provide timeCardeRule to edit. Otherwise will insert new entry for every selected Employee.
            This form is used to edit an existing timeCardRule or insert many new timeCardRules.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardRuleEdit.textOverHoursPerDay_TextChanged(System.Object,System.EventArgs)">
            <summary>If entering text in overtime, clear differential text boxes.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardRuleEdit.textBeforeTimeOfDay_TextChanged(System.Object,System.EventArgs)">
            <summary>If entering text in differential boxes, clear overtime text box.</summary>
        </member>
        <member name="M:OpenDental.FormTimeCardRuleEdit.textAfterTimeOfDay_TextChanged(System.Object,System.EventArgs)">
            <summary>If entering text in differential boxes, clear overtime text box.</summary>
        </member>
        <member name="F:OpenDental.FormTimeCardRuleEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormTimeCardRuleEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormTimeCardRuleEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPayConnect._hasSwipedCard">
            <summary>Some card readers have CR/Enter track separators, 
            which would cause our parsing logic to happen before the magstripe reader finished outputting the data.
            We add a timer delay to attempt to compensate for this functionality.</summary>
        </member>
        <member name="F:OpenDental.FormPayConnect.WasPaymentAttempted">
            <summary>Opening the PayConnect or PaySimple window from FormPayment, and then closing them, can set isCcDeclined to True.
            This is because FormPayment didn't know if a transaction was attempted or not, and was assuming it was.
            This can cause the payment amount to be reset to $0. So, this bool indicates if we have actually attempted a transaction.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect.#ctor(System.Int64,OpenDentBusiness.Patient,System.Decimal,OpenDentBusiness.CreditCard,System.Boolean)">
            <summary>Can handle CreditCard being null.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect.ProcessPaymentWebService(System.Int32,System.Int32)">
            <summary>Processes a PayConnect payment via the PayConnect web service.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect.ProcessPaymentTerminal">
            <summary>Processes a PayConnect payment via a credit card terminal.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect.GetAmountCharged">
            <summary>Only call after the form is closed and the DialogResult is DialogResult.OK.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect.GetCardNumber">
            <summary>Only call after the form is closed and the DialogResult is DialogResult.OK.</summary>
        </member>
        <member name="M:OpenDental.FormPayConnect.GetResponse">
            <summary>Only call after the form is closed and the DialogResult is DialogResult.OK.</summary>
        </member>
        <member name="F:OpenDental.FormPayConnect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPayConnect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPayConnect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormExamSheets.FormSheetFillEdit_Grid_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>Event handler for closing FormSheetFillEdit when it is non-modal.</summary>
        </member>
        <member name="M:OpenDental.FormExamSheets.FormSheetFillEdit_Add_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>Event handler for closing FormSheetFillEdit when it is non-modal.</summary>
        </member>
        <member name="M:OpenDental.FormExamSheets.butSendToDevice_Click(System.Object,System.EventArgs)">
            <summary>Tries to send a single exam sheet. It attempts to do this by looking for a mobile device that has a logged in user that has also selected a patient.</summary>
        </member>
        <member name="F:OpenDental.FormExamSheets.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormExamSheets.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormExamSheets.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormDatabaseMaintTemp.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintTemp.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormDatabaseMaintTemp.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormGraphEmployeeTime._listPointFsRedTarget">
            <summary>This is the red target line.</summary>
        </member>
        <member name="F:OpenDental.FormGraphEmployeeTime._listPhoneEmpDefaultsRaw">
            <summary>Local copy of cache. Only three fields are used: EmployeeNum, EmpName, IsGraphed.</summary>
        </member>
        <member name="F:OpenDental.FormGraphEmployeeTime._listPhoneEmpDefaultsShowing">
            <summary>This is what shows in the grid.</summary>
        </member>
        <member name="F:OpenDental.FormGraphEmployeeTime._phoneGraphDay">
            <summary>This one doesn't have an emp Num. Can be null.</summary>
        </member>
        <member name="M:OpenDental.FormGraphEmployeeTime.GetStartTime(OpenDentBusiness.PhoneEmpDefault)">
            <summary>For sorting</summary>
        </member>
        <member name="M:OpenDental.FormGraphEmployeeTime.GetStopTime(OpenDentBusiness.PhoneEmpDefault)">
            <summary>For sorting</summary>
        </member>
        <member name="F:OpenDental.FormGraphEmployeeTime.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormGraphEmployeeTime.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormGraphEmployeeTime.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormGuardianEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormGuardianEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormGuardianEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetImportEnumPicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetImportEnumPicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetImportEnumPicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.FormSheetImport">
            <summary>Also handles eForm import.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport._patientOld">
            <summary>A copy of the patient when the form loads.  Used to know the what will change upon import.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport._isAddressSameForFam">
            <summary>We must have a readily available bool, whether or not this checkbox field is present on the sheet.  It gets set at the very beginning, then gets changes based on user input on the sheet and in this window.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport._hasRequiredInsFields">
            <summary>In order to import insurance plans the sheet must contain Relationship, Subscriber, SubscriberID, CarrierName, and CarrierPhone.  This variable gets set when the sheet loads and will indicate if all fields are present for primary OR for secondary insurance.  Insurance should not attempt to import if this is false.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.FillRows">
            <summary>This can only be run once when the form first opens.  After that, the rows are just edited.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.GetInputValue(System.String)">
            <summary>For a Sheet, this tries to get the FieldValue from the InputField. For an eForm, this tries to get the ValueString for the DbLink. For ins field, it can also pull from OCR data. Null means that field will not be added to the list for import.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.GetRadioValue(System.String)">
            <summary>If no radiobox with that name exists, returns null.  If no box is checked, it returns empty string.  For regular sheets this will return either the corresponding enum value or the full word displayed on the form for the selected choice (if no corresponding enum), and EForms will return the DB field.  e.g. for StudentStatus a regular sheet might return "Fulltime" and an EForm would return "F".</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.IsChecked(System.String)">
            <summary>Only the true condition is tested.  If the specified fieldName does not exist, returns false.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.IsCheckedEForm(System.String)">
            <summary>If the specified fieldName does not exist, returns null.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.GetSheetFieldsStartWith(System.String)">
            <summary>Returns all the sheet fields with FieldNames that start with the passed-in string.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.GetImportRowByFieldName(System.String)">
            <summary>Returns one sheet field with the same FieldName. Returns null if not found.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.GetOppositeSheetFieldCheckBox(System.Collections.Generic.List{OpenDentBusiness.SheetField},OpenDentBusiness.SheetField)">
            <summary>Loops through the list passed in returns the opposite check box.  Returns null if one is not found.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.GetRelatedMedicalCheckBoxes(System.Collections.Generic.List{OpenDentBusiness.SheetField},OpenDentBusiness.SheetField)">
            <summary>Returns all checkboxes related to the inputMed passed in.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.IsEditable(OpenDental.FormSheetImport.ImportRow)">
            <summary>Mostly the same as IsImportable.  But subtle differences.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.SetHasRequiredInsFields">
            <summary>Correctly sets the class wide boolean HasRequiredInsFields.  Loops through all the fields on the sheet and makes sure all the required insurance fields needed to import are present for primary OR for secondary insurance.  If some required fields are missing for an insurance, all related ins fields will have DoImport set to false.  Called after the list "Rows" has been filled.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.CheckSheetForInsFields(System.Boolean)">
            <summary>Returns true if all the required insurance fields needed to import are present on the current sheet.  Only call after the list "Rows" has been filled.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.SetDoImportToFalseForIns(System.Boolean)">
            <summary>Loops through the related ins fields and forces DoImport to false.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.ValidateAndImportInsurance(System.Boolean)">
            <summary>Returns false if validation fails.  Returns true if all required insurance fields exist, import fields have valid values, and the insurance plan has been imported successfully.  The user will have the option to pick an existing ins plan.  If any fields on the selected plan do not exactly match the imported fields, they will be prompted to choose between the selected plan's values or to create a new ins plan with the import values.  After validating, the actual import of the new ins plan takes place.  That might consist of dropping the current plan and replacing it or simply inserting the new plan.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.InsuranceImportQuestion(System.String,System.Boolean)">
            <summary>Displays a yes no cancel message to the user indicating that the import value does not match the selected plan.  They will choose to use the current plan's value or create a new plan.  Only called from ValidateAndImportInsurance.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.LoadOcrDataFromDocHelper(OpenDentBusiness.Document)">
            <summary> Loads the Image and sets it in the appropriate PictureBox in the ui if able, and parses stored OcrInsScanResponse. If image fails to load, returned value will be an empty OcrInsScanResponse.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.SecurityLogHelper">
            <summary>Returns a string that will be empty if nothing is imported, or if there are no edited fields. Compares 'Current Value' and 'Import Value'
            columns to determine if there is a change. If changes are being imported will return a security log string including the changes.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.GetImpObj(System.String)">
            <summary>Will return null if field not found or if field marked to not import.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.GetImpDisplay(System.String)">
            <summary>Will return empty string field not found or if field marked to not import.</summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.CreateSeparator(System.String)">
            <summary>Returns a separator and sets the FieldName to the passed in string.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.FieldName">
            <summary>This is the SheetField.FieldName which usually shows in the first column unless overridden by FieldDisplay</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.FieldDisplay">
            <summary>Overrides FieldName in first column. If null, use FieldName;</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.OldValDisplay">
            <summary>Displays in the Old Val column. Can be any altered string representation.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.OldValObj">
            <summary>Frequently the same as OldValDisplay, but since it's an object, it can be an actual enum or some other object entirely, like an allergy.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.NewValDisplay">
            <summary>Displays in the New Val column. Can be any altered string representation.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.NewValObj">
            <summary>This is what the user entered. Frequently the same as NewValDisplay, but since it's an object, it can be an actual enum or some other object entirely, like an allergy.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.ImpValDisplay">
            <summary>Displays in the Imp Val column. Can be any altered string representation.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.ImpValObj">
            <summary>This is what will be imported. Frequently the same as ImpValDisplay, but since it's an object, it can be an actual enum or some other object entirely, like an allergy.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.DoImport">
            <summary>True if we will import. Shows as X in last column.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.IsSectionHeader">
            <summary>A section header is darker and does not represent any import fields, but is instead the title for a group of them.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.TypeObj">
            <summary>This can apply to Old, New, or Imp. Frequently some of those will be null and an object will only be present in other(s).</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.IsNewValRed">
            <summary>Some fields are not importable, but they still need to be made obvious to user by coloring the user-entered value red.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.IsImportRed">
            <summary>The import cell is shown with colored text to prompt user to notice.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.DoRemove">
            <summary>This will trigger removal of an allergy, med, or disease from a patient by setting it inactive.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.DoAdd">
            <summary>This will trigger addition of an allergy, med, or disease to a patient.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.MedStrengthFreq">
            <summary>We need this for meds when we import. This is not what the patient entered or what we show to the user. Instead, it's the new value that should go in the db. So it's the original plus the appended.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.MedName">
            <summary>We need this for meds when we import.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.ImportRow.MedDoImportCol2">
            <summary>For now, true if they have one of the 4 import options set to true in setup. We might try to give them more control at import time.</summary>
        </member>
        <member name="F:OpenDental.FormSheetImport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetImport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetImport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormBlockoutDuplicatesFix.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBlockoutDuplicatesFix.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBlockoutDuplicatesFix.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatientMerge._patientTo">
            <summary>For display purposes only.  Reloaded from the db when merge actually occurs.</summary>
        </member>
        <member name="F:OpenDental.FormPatientMerge._patientFrom">
            <summary>For display purposes only.  Reloaded from the db when merge actually occurs.</summary>
        </member>
        <member name="F:OpenDental.FormPatientMerge.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatientMerge.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPatientMerge.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRecallListUndo.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallListUndo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRecallListUndo.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPatientForms.DocNum">
            <summary>Indicates the most recently selected Document.DocNum</summary>
        </member>
        <member name="M:OpenDental.FormPatientForms.FormSheetFillEdit_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>Event handler for closing FormSheetFillEdit when it is non-modal.</summary>
        </member>
        <member name="F:OpenDental.FormPatientForms.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPatientForms.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPatientForms.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEquipmentEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEquipmentEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEquipmentEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEquipment.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEquipment.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEquipment.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPerioGraphicalSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPerioGraphicalSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPerioGraphicalSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPerioGraphical._perioExam">
            <summary>The current perio exam being loaded.</summary>
        </member>
        <member name="F:OpenDental.FormPerioGraphical._patient">
            <summary>The current patient for the loaded perio exam</summary>
        </member>
        <member name="F:OpenDental.FormPerioGraphical.toothChart">
            <summary>This is the Sparks3D control.</summary>
        </member>
        <member name="F:OpenDental.FormPerioGraphical.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPerioGraphical.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPerioGraphical.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEtrans270EBraw.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans270EBraw.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans270EBraw.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReplicationEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReplicationEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReplicationEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormReplicationSetup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormReplicationSetup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormReplicationSetup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormEtrans270Edit.IsInitialResponse">
            <summary>True if the 270 and response have just been created and are being viewed for the first time.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans270Edit._listEB271s">
            <summary>The list of EB objects parsed from the 270.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans270Edit.ListEB271sImported">
            <summary>List of user imported EB segments. Reset each time a user click's 'Import'.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans270Edit.ListBenefits">
            <summary>A list of the current benefits for the plan.
            This list is designed to be a shallow copy this window will directly manipulate this list on purpose (direct reference).
            Set this list to a deep copy if the calling method does not want this list to be manipulated by this window.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans270Edit.RemoveDuplicateBenefits(System.Collections.Generic.List{OpenDentBusiness.EB271})">
            <summary>Take a list of existing benefits (from the DB or could have been entered manually) and a list of imported benefits.
            First we remove duplicates from the imported benefits, and then add them to our existing list of benefits if they do not already exist.
            This method preserves existing duplicate benefits.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans270Edit.RemoveDuplicateBenefitsFrom271(System.Collections.Generic.List{OpenDentBusiness.EB271})">
            <summary>Helper method that compares EB271.ToString() values (ignoring the free form text element) and removes any duplicates found.</summary>
        </member>
        <member name="M:OpenDental.FormEtrans270Edit.butPrint_Click(System.Object,System.EventArgs)">
            <summary>Default to show HTML in browser if we have a HTML response. Otherwise, it will just print gridMain. ClaimConnect cannot request both EDI and HTML before
            loading this form, so print button will request HTML Etrans.</summary>
        </member>
        <member name="F:OpenDental.FormEtrans270Edit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormEtrans270Edit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormEtrans270Edit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormBenefitElectHistory.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBenefitElectHistory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBenefitElectHistory.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormShutdown.IsUpdate">
            <summary>Set to true if part of the update process. Makes it behave more discretely to avoid worrying people.</summary>
        </member>
        <member name="F:OpenDental.FormShutdown.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormShutdown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormShutdown.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormAutoNoteControls.SelectedControlNum">
            <summary>If OK, then this is the control that the user selected.</summary>
        </member>
        <member name="F:OpenDental.FormAutoNoteControls.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoNoteControls.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAutoNoteControls.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldPatImage.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldPatImage.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldPatImage.IsEditMobile">
            <summary>Ignored. Available for mobile but all fields are relevant</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldPatImage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldPatImage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldPatImage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldSigBox.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldSigBox.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldSigBox.IsEditMobile">
            <summary>Ignored.  Not sure if it's available for mobile or not.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldSigBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldSigBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldSigBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPhoneNumbersManage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneNumbersManage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPhoneNumbersManage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormApptProcs.SelectedProcNums">
            <summary>If form closes with OK, this contains selected proc num.</summary>
        </member>
        <member name="F:OpenDental.FormApptProcs.AptCur">
            <summary>It's OK if AptCur is not completely up-to-date.  We are going to use PatNum, isPlanned, AptDateTime, AptStatus, and AptNum.</summary>
        </member>
        <member name="M:OpenDental.FormApptProcs.#ctor">
            <summary>Not currently used.  Might use again some day as a sub window of FormApptEdit.  Specify AptCur before opening this form.</summary>
        </member>
        <member name="F:OpenDental.FormApptProcs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormApptProcs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormApptProcs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormRecallsPat._listRecalls">
            <summary>This is just the list for the current patient.</summary>
        </member>
        <member name="F:OpenDental.FormRecallsPat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRecallsPat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRecallsPat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormProcEditAll.ListProcedures">
            <summary>All procedures must be for the same patient.</summary>
        </member>
        <member name="F:OpenDental.FormProcEditAll._hasCompletedProc">
            <summary>True when any proc in ProcList has a Proc Status of C.</summary>
        </member>
        <member name="F:OpenDental.FormProcEditAll._hasExistingProc">
            <summary>True when any proc in ProcList has a Proc Status of EO or EC.</summary>
        </member>
        <member name="F:OpenDental.FormProcEditAll._canAllBypass">
            <summary>True when all procs in ProcList Can Bypass Lock Date.</summary>
        </member>
        <member name="F:OpenDental.FormProcEditAll._listProvidersForClinic">
            <summary>List of providers shown in comboProv. Excludes blank(multi) and provider abbr text if user does not have access to a clinic from ProcList.</summary>>
        </member>
        <member name="F:OpenDental.FormProcEditAll._listClinics">
            <summary>List of clinics shown in comboClincs. Excludes blank(multi) and clinic abbr text if user does not have access to a clinic from ProcList.</summary>
        </member>
        <member name="M:OpenDental.FormProcEditAll.IsUserAuthorizedForProcDate(System.DateTime)">
            <summary>Determines if the current user had sufficient permissions to change the ProcDate to 'date' on the procedures in ProcList.</summary>
        </member>
        <member name="M:OpenDental.FormProcEditAll.SecurityLogEntryHelper(System.String,OpenDental.FormProcEditAll.SecurityLogFields,System.String,System.String)">
            <summary>Returns blank string if oldVal and newVal are the same.</summary>
        </member>
        <member name="M:OpenDental.FormProcEditAll.RecomputeEstimates(OpenDentBusiness.Procedure,System.Collections.Generic.List{OpenDentBusiness.ClaimProc},System.Collections.Generic.List{OpenDentBusiness.ClaimProc}@,OpenDentBusiness.OrthoProcLink,OpenDentBusiness.OrthoCase,OpenDentBusiness.OrthoSchedule,System.Collections.Generic.List{OpenDentBusiness.OrthoProcLink})">
            <summary>Runs Procedures.ComputeEstimates for given proc and listClaimProcs.
            Does not update existing ClaimProcs or insert new ClaimProcs in the database.
            Outs new ClaimProcs added by Procedures.ComputeEstimates, listClaimProcs will contain any added claimProcs.</summary>
        </member>
        <member name="F:OpenDental.FormProcEditAll.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormProcEditAll.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormProcEditAll.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormRequestEdit.FillGrid">
            <summary>Never happens with a new request.</summary>
        </member>
        <member name="M:OpenDental.FormRequestEdit.SaveDiscuss">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormRequestEdit.SaveChangesToDb(System.Boolean)">
            <summary>Only called when user clicks Delete or OK.  Not called repeatedly when adding discussions.</summary>
        </member>
        <member name="F:OpenDental.FormRequestEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormRequestEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormRequestEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldCheckBox.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldCheckBox.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldCheckBox.FillListMedical(OpenDental.FormSheetFieldCheckBox.MedicalListType)">
            <summary>Fills listMedical with the corresponding list type.  This saves on load time by only filling necessary lists.
            Attempts to seelct the cooresponding allergy/problem. Will select nothing if it does not exist. </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldCheckBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldCheckBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldCheckBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldLine.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldLine.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldLine.IsEditMobile">
            <summary>Ignored. Available for mobile but all fields are relevant</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldLine.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldLine.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldLine.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldImage.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldImage.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldImage.IsEditMobile">
            <summary>Ignored. Available for mobile but all fields are relevant</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldImage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldImage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldImage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetOutputFormat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetOutputFormat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetOutputFormat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldStatic.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldStatic.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldStatic.UpdateTextSizeLabels(System.Object,System.EventArgs)">
            <summary>This method is tied to any event that could change text size, such as font size, text, or the Bold checkbox.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldStatic.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldStatic.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldStatic.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldInput.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldInput.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldInput.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldInput.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldInput.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetDef.SheetDefCur">
            <summary>This holds the default values of the sheet dimensions, but once we click ok the users settings will override.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDef.IsInitial">
            <summary>On creation of a new sheetdef, the user must pick a description and a sheettype before allowing to start editing the sheet.  After the initial sheettype selection, this will be false, indicating that the user may not change the type.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDef._doConsiderAutoSave">
            <summary>The Autosave feature needs to be considered when there is at least one image category flagged to Autosave Forms.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDef._formSheetDefEdit">
            <summary>This is the FormSheetDefEdit that is passed into this window when it is opened in order for us to update the fontsize in the background for a preview.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDef._sheetDefCopy">
            <summary>This is a copy of the SheetDef in order to revert the font size back to what it was in case the customer doesn't press the OK button.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDef.SetHeightWidthMin">
            <summary>Sets the minimum valid value (used for validation only) of the appropriate Height or Width field based on the bottom of the lowest field. Max values are set in the designer.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDef.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetDef.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetDef.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldOutput.SheetFieldDefCur">
            <summary>This is the object we are editing.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldOutput.SheetDefCur">
            <summary>We need access to a few other fields of the sheetDef.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFieldOutput.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFieldOutput.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFieldOutput.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit.DataSet_">
            <summary>Statements use Sheets needs access to the entire Account data set for measuring grids.  See RefreshPanel(). Optionally set before opening form.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit.DoExportCSV">
            <summary>True if export as CSV was checked in FormStatementOptions.cs. Optionally set before opening form.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit._idxSelectedChar">
            <summary>When user clicks on text, we calculate the idx within the string where they clicked.  It's class level so that we can draw it during debugging.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit._isAutoSave">
            <summary>True if the user is auto-saving a sheet as a document in the Imaging module. This is set in Def edit with a "U" on that Image Category and SheetDef.AutoCheckSave...</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit._listPoints">
            <summary>A list of points for a pen drawing currently being drawn.  Once the mouse is raised, this list gets cleared.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit._listRectangleFsChars">
            <summary>When user clicks on text, this list of rectangles is created, on for each char, so that we can hit test where they clicked.  It's class level so that we can draw the rectangles during debugging.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit._marginsPrint">
            <summary>Only used here to draw the dashed margin lines.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit._tempPdfFile">
            <summary>The location where the PDF file has been created.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit._timerSaveButtonText">
            <summary>Used to change the text on the "Save" button of the form.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit._uniqueFormIdentifier">
            <summary>Creates a unique identifier for this instance of the form. This can be used when creating a thread with a unique group name.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit._tabCurrent">
            <summary>Tab order of the currently selected control, either checkbox, textbox, or combobox. 1-based in sheets.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit._sheetFieldHover">
            <summary>The current sheetField the user is hovering over. Used to add a hovering highlight. This can only be a combobox or checkbox.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit._hasSheetChanged">
            <summary>Used for _IsAutoSave to check if the sheet changed. If so, then also save the document when checkSaveToImages is checked.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit.DidChangeSheet">
            <summary>Indicates to the calling form that the sheet was inserted/updated.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit.HasEmailBeenSent">
            <summary>True if the user sent an email from this window.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit.IsInTerminal">
            <summary>When in terminal, some options are not visible.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit.IsReadOnly">
            <summary>If true, the sheet cannot be edited, deleted, changed patient, printed, or PDFed.
            The main goal of this setting is to stop the user from being able to do anything with the sheet except view it.
            It is mainly used when importing web forms so that the user importing the forms can make better informed decisions.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit.IsStatement">
            <summary>Used for statements, do not save a sheet version of the statement.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit.SaveStatementToDocDelegate">
            <summary>A method that will be invoked when printing/email/creating PDF of a statement.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit.SheetCur">
            <summary>Will be null if deleted. Set before opening form.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.#ctor">
            <summary>Use this constructor when displaying a statement.  dataSet should be filled with the data set from AccountModules.GetAccount()</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.GetBottomOfPage(System.Int32)">
            <summary>Returns the bottom Y index of the given page number for the current sheet, adjusted for margins.  Used for drawing page breaks and limiting Y position of added fields.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.CreateFloatingComboOptions(OpenDentBusiness.SheetField)">
            <summary>Creates the dropdown list using a context menu.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.CreateFloatingTextBox(OpenDentBusiness.SheetField,System.Drawing.Point,System.Boolean,System.Boolean)">
            <summary>This is for an input field, static text, or output text to edit text, and then it goes away. The point passed in is so that we can put the cursor in the right place.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.EmailSheet(System.String,System.String)">
            <summary>Takes the "To" address and subject and correctly formats an email to the lab or patient. Returns the file path to the pdf that is created.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.FieldValueChanged(System.Object)">
            <summary>Old</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.HitTest(System.Drawing.Point)">
            <summary>Pass in a point in sheet coords. This doesn't hit test for everything, but just for items that we might want to click on. Frequently returns null.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.HitTestChars(OpenDentBusiness.SheetField,System.Drawing.Point,System.String)">
            <summary>This calculates the index within the string where the user clicked. The point is global and scaled, coords used in calcs are all at unscaled 96 dpi.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.LayoutFields">
            <summary>Runs as the final step of loading the form.  Returns an error message if a SheetField was found in an invalid state and a repair was possible.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.LoadImageOne(OpenDentBusiness.SheetField)">
            <summary>Loads one image from disk or cloud into sheetFieldDef.ImageField. We call this again if image changes for some reason.  This fails if sheetField.BitmapLoaded already has an image, so you have to clear that bitmap if you want to force a refresh.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.LoadImageOnePat(OpenDentBusiness.SheetField)">
            <summary>Loads one PatImage from disk or cloud into sheetFieldDef.ImageField. We call this again if image changes for some reason.  This fails if sheetField.BitmapLoaded already has an image, so you have to clear that bitmap if you want to force a refresh.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.LoadImages">
            <summary>Just during load.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.RepositionControls">
            <summary>This is called after automatic growth to move a few controls to their new locations.  But most of the fields are just quickly drawn and they have no controls.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.ResizeTextBox(OpenDentBusiness.SheetField,System.String,OpenDental.ODtextBox)">
            <summary>For resizing textBoxes with Growth Behavior set to DownLocal or DownGlobal. Also necessary on load to re-adjust any webform sheetfield height adjustments to Input, Output, and StaticText fields that had Growth Behavior applied.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.SelectFirstOptionComboBoxes">
            <summary>For all the combo boxes on the form, selects the first option if nothing is already selected.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.SetCheckBoxAndRadioGroupStates(OpenDentBusiness.SheetField)">
            <summary>Unchecks all other check or radio buttons within a group. Pass in the sheetfield that should be toggled.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.ShowSaved">
            <summary>Shows the saved text on the save button for 3 seconds after clicking the save exam button.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.GetTextFromWpfRichTextBox(System.Windows.Controls.RichTextBox)">
            <summary>Returns all of the text that is currently in the WPF RichTextBox passed in.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.IsNewReferralLetterWithProcsOrChart">
            <summary>Returns true if SheetCur is new and is a referral letter and has a toothchart or grid sheetfields.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.TryToSaveData">
            <summary>If an error won't allow, then it shows a MsgBox and then returns false.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.FillFieldsFromControls(System.Boolean)">
            <summary>Obsolete. Doesn't do anything. Was also done before bumping down fields due to growth behavior.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.FillFieldsFromComboBoxes">
            <summary>Fills the sheet fields with their combo boxes.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.VerifyRequiredFields">
            <summary>Returns true when all of the sheet fields with IsRequired set to true have a value set. Otherwise, a message box shows and false is returned.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.SaveAsDocument(System.Char,System.String)">
            <summary>Save the document as PDF in every non-hidden image category with the supplied usage.  genericFileName should typically relate to the SheetType.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.DeleteSheet(System.Boolean)">
            <summary>Deletes the current sheet and handles closing the form. Prompts the user to confirm if the sheet is currently being used by a kiosk.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.OkToSaveBecauseNoOtherEdits">
            <summary>Checks to see if edits have been made by another user. If so, user must confirm before saving changes.</summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.FixFontsForPdf(OpenDentBusiness.Sheet,System.Boolean)">
            <summary>validates the fonts for use with PDF sharp. If not compatible, sets the font to something that will work. This is a workaround due to the fact that PDF Sharp does not support TTC fonts.</summary>
        </member>
        <member name="F:OpenDental.FormSheetFillEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetFillEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.PanelScrollManual">
            <summary>This prevents it from scrolling automatically when controls are added and take focus.</summary>
        </member>
        <member name="T:OpenDental.FormSheetDefEdit">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit.IsInternal">
            <summary>If it's internal, then the edit windows will all be set to IsReadOnly.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._colorGrayOutline">
            <summary>Faded out</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._gridSnapDistance">
            <summary>When using auto snap feature this will be set to a positive value, otherwise 0.  This is the width and height of the squares that fieldDefs will snap to when enabled.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._isDraggingSelectionRect">
            <summary>When you first mouse down, if you clicked on blank space instead of a control, this will be true.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._hashTableRtfStringCache">
            <summary>This stores the previous calculations so that we don't have to recal unless certain things have changed.  The key is the index of the sheetfield.  The data is an array of objects of different types as seen in the code.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._hasSheetsDownloaded">
            <summary>Set to true if the web forms have been downloaded or if an error occurred.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._hasWindowBoundsChanged">
            <summary>Keep track of when the bounds of this window are programmatically changed.
            Used to help prevent resizing when users are simply moving the window.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._listSheetFieldDefsCopyPaste">
            <summary>This is our 'clipboard' for copy/paste of fields.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._listSnapXVals">
            <summary>List of X coordinates that will be shown on panelMain. Empty if auto snap is not enabled.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._listSnapYVals">
            <summary>List of Y coordinates that will be shown on panelMain. Empty if auto snap is not enabled.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._listSheetDefLanguagesUnused">
            <summary>Alphabetically sorted by Display list of languages NOT translated to when window loads.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._listSheetDefLanguagesUsed">
            <summary>Alphabetically sorted by Display list of languages translated to when window loads.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._listUndoLevels">
            <summary>Infinite undo levels.  Every time the user changes something, a new level is added to this list. The last item in this list should normally match what the user is seeing. If they "undo", then we pull from the list, tracking the _undoLevel instead of removing from the list so that they can "redo".</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._listWebForms_SheetDefs">
            <summary>If the sheet def is linked to any web sheets, this will hold those web sheet defs.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._pointMouseCurrentPos">
            <summary>In panel coords.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._pointMouseOriginalPos">
            <summary>In panel coords.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._pasteOffsetY">
            <summary>After each 10 pastes to the upper left origin, this increments 10 to shift the next 10 down.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._margins">
            <summary>Used for drawing the dashed margin lines. Top 40, bottom 60.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._sheetFieldLayoutMode">
            <summary>Most sheets will only have the default mode. Dynamic module layouts can have multiple.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._sizeResizeOriginal">
            <summary>The original size of the field at the beginning of the resize drag.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit._undoLevel">
            <summary>0-indexed, starting from the end of the list. 0 represents the last item in the undo list. Since it matches what the viewer sees, we are 0 levels deep. An undo will move us to position 1, which is the second from the end in the list. When we are at level 1, we have 1 redo available.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.GetSelectedLanguageThreeLetters">
            <summary>The currently selected languages three letter abbr from comboLanguages. When 'Default' is selected an empty string is returned. When 'Add New' is selected NULL is returned.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.GetSelectedLanguageDisplay">
            <summary>The currently selected languages display string from comboLanguages. When 'Default' is selected an empty string is returned. When 'Add New' is selected NULL is returned.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.GetListUsedTranslations">
            <summary>Returns a list of all translations that are currently being used in memory. If user selects a translation but it isn't in the DB yet it will be included in this list.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.butAlignTop_Click(System.Object,System.EventArgs)">
            <summary>When clicked it will set all selected elements' Y coordinates to the smallest Y coordinate in the group, unless two controls have the same X coordinate.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.butMobile_Click(System.Object,System.EventArgs)">
            <summary>Change the show/hide state of the mobile designer. Open if it is currently closed or close if it is currently open.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.panelMain_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>Some controls (panels in this case) do not pass key events to the parent (the form in this case) even when the property KeyPreview is set.  Instead, the default key functionality occurs.  An example would be the arrow keys.  By default, arrow keys set focus to the "next" control.  Instead, want all key presses on this form and all of it's child controls to always call the FormSheetDefEdit_KeyDown method.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.AddNewSheetFieldDef(OpenDentBusiness.SheetFieldDef)">
            <summary>Use this to add a new item to SheetDefCur.SheetFieldDefs. The new item will be given a random primary key so it can be distinguished from other items.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.AddNewSheetFieldDefsForTranslations(OpenDentBusiness.SheetFieldDef,System.String[])">
            <summary>Creates copies of given defDefault for every given value in listLanguages and inserts them into _sheetDefCur.SheetFieldDefs via AddNewSheeFieldDef(...) Either called when user selects a new language to translate to or when the user adds a SheetFieldDef to the 'Default' view.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.AddUndoLevel(System.String)">
            <summary>Add an Undo level to the list. This gets called just after the actual change is made to the main list so that the last entry in the list matches current state.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.MoveSheetFieldDefs(OpenDentBusiness.SheetFieldDef,System.Int32,System.Int32)">
            <summary>Moves a SheetFieldDef to a specified position, as well as any matching translated SheetFieldDefs if Sync is enabled. Moves translated fields first.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.EnableDashboardWidgetOptions">
            <summary>If is PatientDashboardWidget, only certain buttons will show, including DashboardWidget specific buttons.  Otherwise, DashboardWidget specific buttons will be hidden.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.FillFieldList">
            <summary>Fills the listbox of fields.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.GetPertinentSheetFieldDefs(OpenDentBusiness.SheetDef)">
            <summary>Returns all sheetFieldDefs from sheetDef for the current layout mode, sheetDef defaults to _sheetDefCur.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.GetWebSheetDefs(CodeBase.ODThread)">
            <summary>Fills _listWebSheetIds with any webforms_sheetdefs that have the same SheetDefNum of the current SheetDef.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.FormSheetDefEdit.HasSelectedDiagonalLine(OpenDentBusiness.SheetFieldDef,System.Drawing.Rectangle)" -->
        <member name="M:OpenDental.FormSheetDefEdit.HasTranslatedSheetDefS(OpenDentBusiness.SheetFieldDef,System.Collections.Generic.List{OpenDentBusiness.SheetFieldDef}@)">
            <summary>Returns true if given def has equivilant translated values in _sheetDefCur.SheetFieldDefs, otherwise false.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.HitTest(System.Int32,System.Int32)">
            <summary>In sheet coords. Images will be ignored in the hit test since they frequently fill the entire background.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.HitTestResize(System.Int32,System.Int32)">
            <summary>Returns a field if the cursor is in the lower right "resize drag" area of a single selected field.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.InitTranslations(System.String)">
            <summary>When not using LayoutModes this is called to enable and fill UI.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.IsEquivalentSheetDef(OpenDentBusiness.SheetFieldDef,OpenDentBusiness.SheetFieldDef)">
            <summary>Returns true if both SheetFieldDefs are determined to be equivalent based on fieldname, bounds, image, and fieldvalue.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.LaunchEditWindow(OpenDentBusiness.SheetFieldDef,System.Boolean)">
            <summary>Only for editing fields that already exist.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.LoadImageOne(OpenDentBusiness.SheetFieldDef)">
            <summary>Loads one image from disk or cloud into sheetFieldDef.ImageField. We call this again if image changes for some reason.  This fails if sheetFieldDef.ImageField already has an image, so you have to clear that image if you want to force a refresh.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.LoadImages">
            <summary>Just during load.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.PasteControlsFromMemory(System.Drawing.Point)">
            <summary>In document coords.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.RefreshLanguages(System.String)">
            <summary>Refreshes local _listUsedLanguages and _listUnusedLanguages data. Called when loading or after user adds a new language for translations.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.RefreshLanguagesAndPanelMain(System.Boolean,System.String)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.RemoveEquivalentTranslatedSheetDefs(OpenDentBusiness.SheetFieldDef)">
            <summary>Removes all translated SheetFieldDefs from _sheetDefCur.SheetFieldDefs that are equivilant to given def.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.RenumberTabOrderHelper">
            <summary>Used To renumber TabOrder on controls</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.TryAddTranslation(System.String@)">
            <summary>Returns true if user selected a new language via InputBox to translate to, otherwise false.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.TryInitLayoutModes">
            <summary>Called during load to set _sheetFieldLayoutMode. Returns true if current _sheetDefCur.SheetTYpe is associated with a dynamic layout SheetType, otherwise false.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.UpdateWebSheetDef">
            <summary>Updates the web sheet defs linked to this sheet def if the user agrees. Returns true if this sheet is okay to be saved to the database.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.ValidateInOK">
            <summary>Gets run as part of OK click for validation.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.CreateDynamicGrid(OpenDentBusiness.SheetFieldDef,System.Collections.Generic.List{OpenDentBusiness.DisplayField})">
            <summary>Creates a grid with the given columns for grids associated to a dynamic layout sheetDef.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.DrawFields(OpenDentBusiness.SheetDef,System.Drawing.Graphics,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.DrawStaticImage(OpenDentBusiness.SheetFieldDef,System.Drawing.Graphics)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.DrawStringField(OpenDentBusiness.SheetFieldDef,System.Drawing.Graphics,System.Boolean)">
            <summary>Draws input, static, and output.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.GetOutlineColorForSheetFieldDef(OpenDentBusiness.SheetFieldDef,System.Drawing.Color,System.Boolean)">
            <summary>Returns a color to be used when we want to consider the defs language value.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.IsSheetFieldDefAbove(OpenDentBusiness.SheetFieldDef,OpenDentBusiness.SheetFieldDef)">
            <summary>Does not check for vertical overlap.
            Returns true if targetFieldDef is above the given baseFieldDef such that the YPos is less and the XPos is within baseFieldDefs range.
            Otherwise returns false.</summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.SplitStringByWhitespace(System.String,System.Boolean)">
            <summary>Splits up a string into a list of "words" using whitespace as the delimiter.  The whitespace will be included as individual words if
            isWhitespaceIncluded is set to true.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit.UndoLevel.SheetDef_">
            <summary>We do not store the fields as part of this sheetDef because we want to have control over how copies are made.</summary>
        </member>
        <member name="F:OpenDental.FormSheetDefEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSheetDefEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormBillingDefaults._listEbillsOld">
            <summary>Stale deep copy of _listEbills to use with sync.</summary>
        </member>
        <member name="F:OpenDental.FormBillingDefaults._eBillCur">
            <summary>The eBill corresponding to the currently selected clinic if clinics are enabled.</summary>
        </member>
        <member name="F:OpenDental.FormBillingDefaults._eBillDefault">
            <summary>The eBill corresponding to the default credentials.</summary>
        </member>
        <member name="F:OpenDental.FormBillingDefaults._stringArrayOutputPaths">
            <summary>Corresponds to the output path/url of the 5 items in listElectBilling</summary>
        </member>
        <member name="M:OpenDental.FormBillingDefaults.GetPassword(System.String,System.Boolean)">
            <summary>Used to handle the encrypting and decrypting of a password in this form. Assumes that decryption is needed unless isDecrypted is set to true</summary>
        </member>
        <member name="M:OpenDental.FormBillingDefaults.LoadEbill(OpenDentBusiness.Ebill)">
            <summary>eBill can be null, creates Ebill if needed.</summary>
        </member>
        <member name="M:OpenDental.FormBillingDefaults.SaveEbill(OpenDentBusiness.Ebill)">
            <summary>Saves the current Ebill information from the UI into the cache.</summary>
        </member>
        <member name="F:OpenDental.FormBillingDefaults.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormBillingDefaults.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormBillingDefaults.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSupplyOrderItemEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSupplyOrderItemEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSupplyOrderItemEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSupplies._listSuppliers">
            <summary>A list of all suppliers obtained on window load.</summary>
        </member>
        <member name="F:OpenDental.FormSupplies._listSupplies">
            <summary>Supplies currently being displayed</summary>
        </member>
        <member name="F:OpenDental.FormSupplies.ListSuppliesSelected">
            <summary>If selecting supplies, this is used after this form closes.</summary>
        </member>
        <member name="F:OpenDental.FormSupplies.SupplierNumSelected">
            <summary>If selecting supplies, this is passed in before.</summary>
        </member>
        <member name="M:OpenDental.FormSupplies.FixItemOrders(System.Int64)">
            <summary>Fixes all ItemOrders for a category where a duplicate was found.  Includes IsHidden so that it works for both hidden and unhidden.</summary>
        </member>
        <member name="M:OpenDental.FormSupplies.butCreateOrders_Click(System.Object,System.EventArgs)">
            <summary>Creates a new order with all the items currently highlighted as a new pending order.</summary>
        </member>
        <member name="M:OpenDental.FormSupplies.butCreateOrdersQty_Click(System.Object,System.EventArgs)">
            <summary>Creates a new order with all the items that have a Qty entered as a new pending order.</summary>
        </member>
        <member name="F:OpenDental.FormSupplies.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSupplies.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSupplies.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormSupplyOrderEdit.#ctor">
            <Summary>This form is only used to edit existing supplyOrders, not to add new ones.</Summary>
        </member>
        <member name="F:OpenDental.FormSupplyOrderEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSupplyOrderEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSupplyOrderEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSupplyEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSupplyEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSupplyEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSupplierEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSupplierEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSupplierEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSuppliers.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSuppliers.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSuppliers.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormSupplyInventory.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormSupplyInventory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormSupplyInventory.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.ProcNotBilled">
            <summary>Used so that we can easily select pertinent procedures for a specific patient when creating claims.</summary>
        </member>
        <member name="F:OpenDental.ProcNotBilled.IsAttached">
            <summary>Flag used to make sure we do not attach procedures to multiple claims.
            Very important for Canadian customers when we need to make multiple claims.</summary>
        </member>
        <member name="T:OpenDental.ReportSimpleGrid">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.TableQ">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.Query">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.Title">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.SubTitle">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.colPos">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.colCaption">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.colAlign">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.ColTotal">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.colWidth">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.Summary">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.SummaryFont">
            <summary>This is a quick hack to allow printing account numbers on deposit slips in a different font.  It will typically be null.  It will be gone soon.</summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.IsLandscape">
            <summary>If there are just too many columns for portrait.</summary>
        </member>
        <member name="F:OpenDental.ReportSimpleGrid.IsSqlValidated">
            <summary>Set to true if the Query on this object has already been validated.</summary>
        </member>
        <member name="P:OpenDental.ReportSimpleGrid.ColPos">
            <summary>This is a little flakey and will be improved later.  The first value is always 0.  They represent the left edge of each column, so there must be one more than the number of columns in order to record the position of the right edge of the last column.</summary>
        </member>
        <member name="M:OpenDental.ReportSimpleGrid.SubmitQuery">
            <summary>Sends the query to the database to retrieve the table.  Then initializes the column objects.</summary>
        </member>
        <member name="M:OpenDental.ReportSimpleGrid.InitializeColumns">
            <summary>This is typically used when the data table is to be manually created.  Before calling this, be sure to create TableQ and add columns to it.</summary>
        </member>
        <member name="M:OpenDental.ReportSimpleGrid.FixColumnNames">
            <summary>DataTable can't sort on columns with commas in the name, so clean up any un-aliased report columns with a comma in the name.
            https://stackoverflow.com/questions/22097203/datatable-sorting-with-datacolumn-name-with-comma </summary>
        </member>
        <member name="M:OpenDental.ReportSimpleGrid.GetTempTable">
            <summary>Runs the query and returns the result.  An improvement would be to pass in the query, but no time to rewrite.</summary>
        </member>
        <member name="M:OpenDental.ReportSimpleGrid.SetColumn(System.Object,System.Int32,System.String,System.Int32)">
            <summary>Assumes that the columns will be set in sequential order.  Automatically runs the language translation.</summary>
        </member>
        <member name="M:OpenDental.ReportSimpleGrid.SetColumn(System.Object,System.Int32,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
            <summary>Assumes that the columns will be set in sequential order.  Automatically runs the language translation.</summary>
        </member>
        <member name="M:OpenDental.ReportSimpleGrid.SetColumnPos(System.Object,System.Int32,System.String,System.Int32)">
            <summary>This is an alternative to SetColumn.  Used when we want to set absolute column positions instead of widths.  Mostly used for older reports so that we don't have to sit down with a calculator and refigure each column width.  SetColumn is the newer better way to do it.  When using this, set the RIGHT position of each column.  Column 1 always has a left position of 0.</summary>
        </member>
        <member name="M:OpenDental.ReportSimpleGrid.SetColumnPos(System.Object,System.Int32,System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
            <summary>This is an alternative to SetColumn.  Used when we want to set absolute column positions instead of widths.  Mostly used for older reports so that we don't have to sit down with a calculator and refigure each column width.  SetColumn is the newer better way to do it.  When using this, set the RIGHT position of each column.  Column 1 always has a left position of 0.</summary>
        </member>
        <member name="F:OpenDental.FormAutoNoteControlEdit.AutoNoteControlCur">
            <summary>The current AutoNoteControl that is being edited, whether new or not.</summary>
        </member>
        <member name="F:OpenDental.FormAutoNoteControlEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoNoteControlEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAutoNoteControlEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoNoteEdit.FillGrid">
            <summary></summary>
        </member>
        <member name="F:OpenDental.FormAutoNoteEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormAutoNoteEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormAutoNoteEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.NodeSorter">
            <summary>Sorting class used to sort a MethodInfo list by Name.</summary>
        </member>
        <member name="T:OpenDental.ReportNonModalSelection">
            <summary>Used in FormReportsMore to indicate that a non-modal window should be shown.</summary>
        </member>
        <member name="F:OpenDental.ReportNonModalSelection.None">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportNonModalSelection.TreatmentFinder">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportNonModalSelection.OutstandingIns">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportNonModalSelection.UnfinalizedInsPay">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ReportNonModalSelection.UnsentClaim">
            <summary></summary>
        </member>
        <member name="T:OpenDental.AdjustmentItem">
            <summary></summary>
        </member>
        <member name="F:OpenDental.AdjustmentItem.ItemText">
            <summary></summary>
        </member>
        <member name="F:OpenDental.AdjustmentItem.ItemIndex">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ErrorMessageDelegate">
            <summary>Backing up can fail at two points, when backing up the database or the A to Z images.  This delegate lets the backup thread manipulate a local variable so that we can let the user know at what point the backup failed.</summary>
        </member>
        <member name="T:OpenDental.FormSplash">
            <summary>A splash screen to show when the program launches.</summary>
        </member>
        <member name="M:OpenDental.FormSplash.#ctor">
            <summary>Launches a splash screen.</summary>
        </member>
        <member name="M:OpenDental.FormSplash.CreateBencoSplash">
            <summary>Only creates the Benco splash if Benco is enabled and a splash does not exist</summary>
        </member>
        <member name="M:OpenDental.FormSplash.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.EServiceMetricsControl.SetColorAlert(System.Drawing.Color)">
            <summary>When flashing, color of the bubble will alternate between this and the BackColor.</summary>
        </member>
        <member name="F:OpenDental.EServiceMetricsControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.EServiceMetricsControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.EServiceMetricsControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobQuoteEdit.#ctor(OpenDentBusiness.JobQuote)">
            <summary>Used for existing Reviews. Pass in the jobNum and the jobReviewNum.</summary>
        </member>
        <member name="F:OpenDental.FormJobQuoteEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobQuoteEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobQuoteEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobLinks._jobLinks">
            <summary>A list of bugs, features, and tasks related to this job.</summary>
        </member>
        <member name="M:OpenDental.FormJobLinks.#ctor(System.Int64)">
            <summary>Opens with links to the passed in JobNum.</summary>
        </member>
        <member name="F:OpenDental.FormJobLinks.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobLinks.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobLinks.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobNoteEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobNoteEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobNoteEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobPermissions.#ctor(System.Int64)">
            <summary>Pass in the jobNum for existing jobs.</summary>
        </member>
        <member name="F:OpenDental.FormJobPermissions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobPermissions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobPermissions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobReviewEdit.#ctor(OpenDentBusiness.JobReview)">
            <summary>Used for existing Reviews. Pass in the jobNum and the jobReviewNum.</summary>
        </member>
        <member name="P:OpenDental.FormJobReviewEdit.JobReviewCur">
            <summary>Can be null if deleted from this form.</summary>
        </member>
        <member name="F:OpenDental.FormJobReviewEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobReviewEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobReviewEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormJobContainer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormJobContainer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormJobContainer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.JobManagerUserOverview.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.JobManagerUserOverview.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.JobManagerUserOverview.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPhoneEmpDefaultEscalationEdit._listPED">
            <summary>Master list of employees. Only get this once.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneEmpDefaultEscalationEdit._dictSubGroupsOld">
            <summary>Original dictinary of subgroup types and their list of employees when form opened.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneEmpDefaultEscalationEdit._dictSubGroupsNew">
            <summary>On load this becomes a copy of _dictSubGroupsOld. Then as we make changes this is updated and used to sync with _dictSubGroupsOld.</summary>
        </member>
        <member name="M:OpenDental.FormPhoneEmpDefaultEscalationEdit.FillComboEscalationViewEdit">
            <summary>Clears combobox and populates with values from enum PhoneEmpSubGroupType.</summary>
        </member>
        <member name="M:OpenDental.FormPhoneEmpDefaultEscalationEdit.FillGrids">
            <summary>Fills both grids for currently selected escalation view.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneEmpDefaultEscalationEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneEmpDefaultEscalationEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPhoneEmpDefaultEscalationEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPhoneGraphDateEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneGraphDateEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPhoneGraphDateEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPhoneGraphEdit.ListSchedulesEmp">
            <summary>For this employee today, ordered by time.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneGraphEdit.ListSchedulesProv">
            <summary>For this provider today, ordered by time. Null if no prov.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneGraphEdit.ProvNum">
            <summary>If there is a matching provider for this emp, based on FName match.  Otherwise, 0.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneGraphEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneGraphEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPhoneGraphEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormScreenshotBrowse.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormScreenshotBrowse.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormScreenshotBrowse.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.FormPhoneList._isFlashingPink">
            <summary>A timer is constantly flipping this back and forth.  Indicates currently pink, regardless of whether any lights really need to be flashing.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneList._listPhonesShowing">
            <summary>Filtered and sorted to exactly match grid.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneList._listPeerInfos">
            <summary>Remote Support Sessions.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneList._tilesPerColumn">
            <summary>How many phone tiles should show up in each column before creating a new column.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneList._timeSpanDelta">
            <summary>This is the difference between server time and local computer time.  Used to ensure that times displayed are accurate to the second.  This value is usally just a few seconds, but possibly a few minutes.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneList.PatNumGoTo">
            <summary>When the GoToChanged event fires, this tells us which patnum.</summary>
        </member>
        <member name="E:OpenDental.FormPhoneList.GoToPatient">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPhoneList.SetPhoneList(System.Collections.Generic.List{OpenDentBusiness.Phone},System.Collections.Generic.List{OpenDentBusiness.ChatUser},System.Collections.Generic.List{OpenDentBusiness.WebChatSession},System.Collections.Generic.List{OpenDentBusiness.PeerInfo})">
            <summary>Called from FormOpenDental when signals come in.</summary>
        </member>
        <member name="M:OpenDental.FormPhoneList.FilterAndSortPhoneList">
            <summary></summary>
        </member>
        <member name="M:OpenDental.FormPhoneList.RefreshList">
            <summary>This also does a FillGrid.</summary>
        </member>
        <member name="F:OpenDental.FormPhoneList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormPhoneList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormPhoneList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.PhoneTile">
            <summary>Was more heavily used, but now it's just used at the lower left of main module. Needs an overhaul.</summary>
        </member>
        <member name="F:OpenDental.PhoneTile.TimeDelta">
            <summary>Passed in.  The amount of time it has taken for all the code to execute.</summary>
        </member>
        <member name="E:OpenDental.PhoneTile.GoToChanged">
            <summary></summary>
        </member>
        <member name="E:OpenDental.PhoneTile.SelectedTileChanged">
            <summary></summary>
        </member>
        <member name="E:OpenDental.PhoneTile.ScreenshotClick">
            <summary></summary>
        </member>
        <member name="F:OpenDental.PhoneTile.MenuNumbers">
            <summary>Object passed in from parent form.  Event will be fired from that form.</summary>
        </member>
        <member name="F:OpenDental.PhoneTile.MenuStatus">
            <summary>Object passed in from parent form.  Event will be fired from that form.</summary>
        </member>
        <member name="M:OpenDental.PhoneTile.SetPhone(OpenDentBusiness.Phone,OpenDentBusiness.PhoneEmpDefault,OpenDentBusiness.ChatUser,System.Boolean,OpenDentBusiness.WebChatSession,OpenDentBusiness.PeerInfo,System.Boolean)">
            <summary>Set phone and triage flag to display. Get/Set accessor won't work here because we require 2 seperate fields in order to update the control properly.</summary>
        </member>
        <member name="M:OpenDental.PhoneTile.ResetTimer(System.Boolean)">
            <summary> Resets timers for WebChat based upon ClockStatus and if the employee is a Tech or not. However
            It will only alter the timer if a WebChat is ending AND the Phonetile is not bigphones.</summary>
        </member>
        <member name="P:OpenDental.PhoneTile.PhoneCur">
            <summary>use SetPhone function to set phone and triage flag</summary>
        </member>
        <member name="F:OpenDental.PhoneTile.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.PhoneTile.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.PhoneTile.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlPhoneSmall._listPhones">
            <summary>Gets passed in from outside.</summary>
        </member>
        <member name="F:OpenDental.UserControlPhoneSmall.PatNumGoto">
            <summary>When the GoToChanged event fires, this tells us which patnum.</summary>
        </member>
        <member name="E:OpenDental.UserControlPhoneSmall.GoToChanged">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UserControlPhoneSmall.SetPhoneList(System.Collections.Generic.List{OpenDentBusiness.Phone})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UserControlPhoneSmall.SetPhone(OpenDentBusiness.Phone,OpenDentBusiness.PhoneEmpDefault,OpenDentBusiness.ChatUser,System.Boolean,OpenDentBusiness.WebChatSession,OpenDentBusiness.PeerInfo)">
            <summary>Set the phone which is linked to the extension at this desk. If phone==null then no phone info shown.</summary>
        </member>
        <member name="M:OpenDental.UserControlPhoneSmall.SetEnabledStateForControls(System.Boolean)">
            <summary>Sets the Enabled property on all controls that need to be toggled based on the phone tracking server heartbeat.</summary>
        </member>
        <member name="M:OpenDental.UserControlPhoneSmall.timerConfRoom_Tick(System.Object,System.EventArgs)">
            <summary>After five minutes has passed, the conference room label will be hidden until the user reserves another conf room.</summary>
        </member>
        <member name="F:OpenDental.UserControlPhoneSmall.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlPhoneSmall.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlPhoneSmall.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.PhoneUI.Available(OpenDental.PhoneTile,System.Boolean)">
            <summary>If this is Security.CurUser's tile then ClockIn. If it is someone else's tile then allow the single case of switching from NeedsHelp to Available.</summary>
        </member>
        <member name="M:OpenDental.PhoneUI.Backup(OpenDental.PhoneTile)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.PhoneUI.QueueBackup(OpenDental.PhoneTile)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.PhoneUI.ClockIn(System.Boolean)">
            <summary>If already clocked in, this does nothing unless you are clocking in to a different location, home/office.  Returns false if not able to clock in due to security, or true if successful.
            This method used to take a PhoneTile, but it wasn't being used so it was removed.  If this is needed again someone can bring it back.</summary>
        </member>
        <member name="M:OpenDental.PhoneUI.CheckSelectedUserPassword(System.Int64)">
            <summary>Will ask for password if the current user logged in isn't the user status being manipulated.</summary>
        </member>
        <member name="M:OpenDental.PhoneUI.ChangeTileStatus(OpenDentBusiness.Phone,OpenDentBusiness.ClockStatusEnum)">
            <summary>Verify... 
            1) Security.CurUser is clocked in. 
            2) Target status change employee is clocked in. 
            3) Security.CurUser has TimecardsEditAll permission.</summary>
        </member>
        <member name="M:OpenDental.PhoneUI.CheckUserCanChangeStatus(OpenDental.PhoneTile)">
            <summary>Verify Security.CurUser is allowed to change this tile's status.</summary>
        </member>
        <member name="M:OpenDental.PhoneUI.CheckUserCanChangeStatus(OpenDentBusiness.Phone)">
            <summary>Verify Security.CurUser is allowed to change this tile's status.</summary>
        </member>
        <member name="F:OpenDental.PhoneUI.ChanSpyModesEnum.Listen">
            <summary>Spy hears both operator and customer, but spy cannot be heard.</summary>
        </member>
        <member name="F:OpenDental.PhoneUI.ChanSpyModesEnum.Whisper">
            <summary>Spy hears both operator and customer, only the operator hears the spy.</summary>
        </member>
        <member name="F:OpenDental.PhoneUI.ChanSpyModesEnum.Barge">
            <summary>Spy hears both operator and customer, and both operator and customer hear the spy.</summary>
        </member>
        <member name="F:OpenDental.UserControlJobVersionStatistics.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlJobVersionStatistics.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlJobVersionStatistics.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.ODDataRowComparer">
            <summary>Compares two given DataRows by their associated row types and PK column.</summary>
        </member>
        <member name="F:OpenDental.FormCommandLinePassOff.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.FormCommandLinePassOff.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.FormCommandLinePassOff.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.PopupEvent.DateTimeDisableUntil">
            <summary>Disable this popup until this time.</summary>
        </member>
        <member name="F:OpenDental.PopupEvent.DateTimeLastViewed">
            <summary>The last time that this popup popped up.</summary>
        </member>
        <member name="T:OpenDental.ODGlobalUserActiveHandler">
            <summary>This is a global class because it must run at the application level in order to catch application level system input events. WM_KEYDOWN (0x0100) message details: https://msdn.microsoft.com/en-us/library/windows/desktop/ms646280(v=vs.85).aspx.  WM_MOUSEMOVE (0x0200) message details: https://msdn.microsoft.com/en-us/library/windows/desktop/ms645616(v=vs.85).aspx. ///</summary>
        </member>
        <member name="F:OpenDental.ODGlobalUserActiveHandler._pointPrevMousePos">
            <summary>Compare position of mouse at the time of the message to the previously stored mouse position to correctly identify a mouse movement. In testing, a mouse will sometimes fire a series of multiple MouseMove events with the same position, possibly due to wireless mouse chatter.  Comparing to previous position allows us to only update the last activity timer when the mouse actually changes position.</summary>
        </member>
        <member name="M:OpenDental.ODGlobalUserActiveHandler.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>Returning false guarantees that the message will continue to the next filter control.  Therefore this method inspects the messages, but the messages are not consumed.</summary>
        </member>
        <member name="F:OpenDental.CommandLineArgs.ArrayCommandLineArgs">
            <summary>Command line arguments passed in when program starts.</summary>
        </member>
        <member name="F:OpenDental.CommandLineArgs.DomainUser">
            <summary>Not in manual</summary>
        </member>
        <member name="F:OpenDental.CommandLineArgs.LBSESSIONID">
            <summary>Not in manual</summary>
        </member>
        <member name="F:OpenDental.CommandLineArgs.MapNames">
            <summary>HQ only, semicolon separated list of map names that will open on start up.</summary>
        </member>
        <member name="M:OpenDental.CommandLineArgs.FillArguments(System.String[])">
            <summary>Fill method for getting the arguments from the command line for dynamic mode.</summary>
        </member>
        <member name="M:OpenDental.CommandLineArgs.GetArgFromCommandLineArgs(System.String,System.String[])">
            <summary>Returns the value without double quotes if the argument being searched for is found within the array of command line arguments. Returns null if not found.</summary>
        </member>
        <member name="M:OpenDental.CommandLineArgs.GetCommandLineArgs">
            <summary>Returns a single string of all the retrieved command line arguments. Returns an empty string if no arguments are present.</summary>
        </member>
        <member name="T:OpenDental.SetupWizard">
            <summary>All the Setup Wizard methods that should show up in FormSetupWizard need to have a SetupCatAttr() attribute.
            This will cause the method to show up in FormSetupWizard.</summary>
        </member>
        <member name="P:OpenDental.SetupWizard.SetupWizClass.Name">
            <summary>The name of the setup item that will appear in the list of setup items. This should be one or a few words. 
            It needs to make sense in the following sentences (where XX is the Name):
             "Let's set up your XX..."
             "Congratulations! You have finished setting up your XX!"
             "You can always go back through this setup wizard if you need to make any modifications to your XX."</summary>
        </member>
        <member name="P:OpenDental.SetupWizard.SetupWizClass.GetDescript">
            <summary>The description and explanation for this setup item.</summary>
        </member>
        <member name="P:OpenDental.SetupWizard.SetupWizClass.GetCategory">
            <summary>A category for this setup item.</summary>
        </member>
        <member name="P:OpenDental.SetupWizard.SetupWizClass.GetStatus">
            <summary>The status of this setup item at any given moment. Should return one of the three setup statuses conditionally.</summary>
        </member>
        <member name="P:OpenDental.SetupWizard.SetupWizClass.SetupControl">
            <summary>Most of the time, you should return a control that is stored in an instance of the setup class.</summary>
        </member>
        <member name="P:OpenDental.SetupWizard.FeeSchedSetup.GetStatus">
            <summary>Returns Complete if all fee schedules have at least one fee entered.</summary>
        </member>
        <member name="T:OpenDental.ODSetupCategory">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ODSetupCategory.Misc">
            <summary>0</summary>
        </member>
        <member name="F:OpenDental.ODSetupCategory.None">
            <summary>1</summary>
        </member>
        <member name="F:OpenDental.ODSetupCategory.PreSetup">
            <summary>2</summary>
        </member>
        <member name="F:OpenDental.ODSetupCategory.Basic">
            <summary>2</summary>
        </member>
        <member name="F:OpenDental.ODSetupCategory.Advanced">
            <summary>3</summary>
        </member>
        <member name="T:OpenDental.ODSetupStatus">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ODSetupStatus.NotStarted">
            <summary>0 - User hasn't started this setup item.</summary>
        </member>
        <member name="F:OpenDental.ODSetupStatus.NeedsAttention">
            <summary>1 - User has left this setup item in an incomplete state.</summary>
        </member>
        <member name="F:OpenDental.ODSetupStatus.Complete">
            <summary>2 - Setup item has been considered and required elements have been filled in.</summary>
        </member>
        <member name="F:OpenDental.ODSetupStatus.Optional">
            <summary>3 - Setup item is not required.</summary>
        </member>
        <member name="T:OpenDental.ClassConvertDatabase">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ClassConvertDatabase.Convert(System.String,System.String,System.Boolean,System.Windows.Forms.Form,System.Boolean)">
            <summary>Return false to indicate exit app.  Only called when program first starts up at the beginning of FormOpenDental.PrefsStartup.</summary>
        </member>
        <member name="T:OpenDental.Shared">
            <summary></summary>
        </member>
        <member name="M:OpenDental.Shared.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.Shared.NumberToOrdinal(System.Int32)">
            <summary>Converts numbers to ordinals.  For example, 120 to 120th, 73 to 73rd.  Probably doesn't work too well with foreign language translations.  Used in the Birthday postcards.</summary>
        </member>
        <member name="M:OpenDental.Shared.BackupRepairAndOptimize(System.Boolean,OpenDental.BackupLocation,System.Boolean)">
            <summary>Returns false if the backup, repair, or the optimze failed.
            Set isSilent to true to suppress the failure message boxes.  However, progress windows will always be shown.</summary>
        </member>
        <member name="M:OpenDental.Shared.RepairAndOptimize(System.Boolean)">
            <summary>Returns false if the repair or the optimze failed.
            Set isSilent to true to suppress the failure message boxes.  However, progress windows will always be shown.</summary>
        </member>
        <member name="M:OpenDental.Shared.MakeABackup(OpenDental.BackupLocation)">
            <summary>This is a wrapper method for MiscData.MakeABackup() that will show a progress window so that the user can see progress.
            Returns false if making a backup failed.</summary>
        </member>
        <member name="M:OpenDental.Shared.MakeABackup(System.Boolean,OpenDental.BackupLocation,System.Boolean)">
            <summary>This is a wrapper method for MiscData.MakeABackup() that will show a progress window so that the user can see progress.
            Set isSilent to true to suppress the failure message boxes.  However, the progress window will always be shown.
            Returns false if making a backup failed.</summary>
        </member>
        <member name="T:OpenDental.BackupLocation">
            <summary>Used to log where a backup was initiated from.
            These enum values are named in a way so that they sound good at the end of this sentence:
            "A backup was created when running the [enumValHere]"
            </summary>
        </member>
        <member name="T:OpenDental.ShowErrors">
            <summary>Displays any error messages in a MessageBox.</summary>
        </member>
        <member name="M:OpenDental.ShowErrors.#ctor(System.Windows.Forms.Control)">
            <summary>Use this constructor to make sure that the Cursor is always Default when the MessageBox is shown.</summary>
        </member>
        <member name="M:OpenDental.ShowErrors.WriteLine(System.String,CodeBase.LogLevel,System.String)">
            <summary>Shows all Errors in a message box. BeginInvokes over to the main thread if necessary.</summary>
        </member>
        <member name="T:OpenDental.FileAtoZ">
            <summary>This class is used to access files in the AtoZ folder. Depending on the storage type in use, it will read/write to a local 
            location or it will download/upload from the cloud.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.ReadAllText(System.String)">
            <summary>Returns the string contents of the file.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.WriteAllText(System.String,System.String,System.String)">
            <summary>Writes or uploads the text to the specified file name.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.GetFilesInDirectory(System.String)">
            <summary>Gets a list of the files in the specified directory.  Throws exceptions.
            An absolute path is required, call GetFilesInDirectoryRelative() for passing in a relative AtoZ folder path.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.GetFilesInDirectoryRelative(System.String)">
            <summary>Gets a list of the files in the specified directory.  Throws exceptions.
            This method will dynamically prepend the correct AtoZ path to the folder path provided.
            E.g. passing in 'wiki' as the value for folder might return files within the folder '\\server\OpenDentImages\wiki\'.
            folder can also be set to a relative path like 'wiki\lists\images' which searches '\\server\OpenDentImages\wiki\lists\images'.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.OpenFile(System.String,System.String)">
            <summary>Copies or downloads the file and opens it. acutalFileName should be a full path, displayedFileName should be a file name only.
            </summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.CombinePaths(System.String[])">
            <summary>Use this instead of ODFileUtils.CombinePaths when the path is in the A to Z folder.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.AppendSuffix(System.String,System.String)">
            <summary>Use this instead of ODFileUtils.AppendSuffix when the path is in the A to Z folder.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.Exists(System.String)">
            <summary>Returns true if the file exists. If cloud, checks if the file exists in the cloud.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.GetImage(System.String)">
            <summary>Returns null if the the image could not be downloaded or the user canceled the download.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.StartProcess(System.String)">
            <summary>This function will throw if the Process fails to start. Catch in calling class. Runs the file. 
            Downloads it from the cloud if necessary.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.StartProcessRelative(System.String,System.String)">
            <summary>Runs the file.  If necessary, downloads the file from the cloud to the temp directory.  Throws exceptions.
            This method will dynamically prepend the correct AtoZ path to the folder path provided.
            E.g. passing in 'wiki' as the value for folder might open a file within the folder '\\server\OpenDentImages\wiki\[fileName]'.
            folder can be set to a relative path like 'wiki\lists\images' which opens '\\server\OpenDentImages\wiki\lists\images\[fileName]'.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.Copy(System.String,System.String,OpenDentBusiness.FileAtoZSourceDestination,System.String,System.Boolean,System.Boolean)">
            <summary>The first parameter, 'sourceFileName', must be a file that exists.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.Delete(System.String)">
            <summary>Deletes the file.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.DirectoryExists(System.String)">
            <summary>Returns true if the directory exists. If cloud, checks if that directory exists in the cloud.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.OpenDirectory(System.String,System.Boolean)">
            <summary>Opens the directory. If cloud, opens the directory in FormFilePicker.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.Download(System.String,System.String,System.String)">
            <summary>Downloads an A to Z file to the local machine.</summary>
        </member>
        <member name="M:OpenDental.FileAtoZ.Upload(System.String,System.String)">
            <summary>Uploads a local file to the A to Z folder.</summary>
        </member>
        <member name="T:OpenDental.MigraDocHelper">
            <summary>Used to add functionality to the MigraDoc framework.  Specifically, it helps with absolute positioning.</summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.CreateContainer(MigraDoc.DocumentObjectModel.Section)">
            <Summary>Creates a container frame in a section.  This allows other objects to be placed absolutely within a given area by adding more textframes within this one.  This frame is full width and is automatically placed after previous elements.</Summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.CreateContainer(MigraDoc.DocumentObjectModel.Section,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a somewhat smaller container at an absolute position on the page</summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.GetDocWidth">
            <summary>In 100ths of an inch</summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.DrawString(MigraDoc.DocumentObjectModel.Shapes.TextFrame,System.String,MigraDoc.DocumentObjectModel.Font,System.Drawing.RectangleF)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.DrawString(MigraDoc.DocumentObjectModel.Shapes.TextFrame,System.String,MigraDoc.DocumentObjectModel.Font,System.Drawing.RectangleF,MigraDoc.DocumentObjectModel.ParagraphAlignment)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.DrawString(MigraDoc.DocumentObjectModel.Shapes.TextFrame,System.String,MigraDoc.DocumentObjectModel.Font,System.Single,System.Single)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.DrawBitmap(MigraDoc.DocumentObjectModel.Shapes.TextFrame,System.Drawing.Bitmap,System.Single,System.Single)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.DrawLine(MigraDoc.DocumentObjectModel.Shapes.TextFrame,System.Drawing.Color,System.Single,System.Single,System.Single,System.Single)">
            <summary>Only supports horizontal and vertical lines.  Assumes single width, no dashes.</summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.DrawTable(MigraDoc.DocumentObjectModel.Shapes.TextFrame,System.Single,System.Single,System.Single)">
            <summary>Draws a small simple table at a fixed location within a frame container.  Not intended for tables with variable number of rows.</summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.InsertSpacer(MigraDoc.DocumentObjectModel.Section,System.Int32)">
            <summary>Vertical spacer.</summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.DrawTextWithWordSplits(MigraDoc.DocumentObjectModel.Paragraph,MigraDoc.DocumentObjectModel.Font,System.Int32,System.String,PdfSharp.Drawing.XGraphics,PdfSharp.Drawing.XFont)">
            <summary>Draws the text and splits words that are too long for the column into multiple lines.</summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.DrawWordChunkByChunk(System.String,System.Int32,MigraDoc.DocumentObjectModel.Paragraph,MigraDoc.DocumentObjectModel.Font,PdfSharp.Drawing.XGraphics,PdfSharp.Drawing.XFont)">
            <summary>Draws the word on multiple lines if it is too long to fit on one line.</summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.IsLastWord(System.Int32,System.String)">
            <summary>Returns true if there are no other words past the index. This will only work if the index is the last character in a previous word.
            </summary>
        </member>
        <member name="M:OpenDental.MigraDocHelper.DoesTextFit(System.String,System.Int32,PdfSharp.Drawing.XGraphics,PdfSharp.Drawing.XFont)">
            <summary>Returns true if the text fits in the specified width.</summary>
        </member>
        <member name="T:OpenDental.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources._1500_02_12">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Account32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Add">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.AForge">
             <summary>
               Looks up a localized string similar to GNU LESSER GENERAL PUBLIC LICENSE
            
            Version 3, 29 June 2007
            
            Copyright © 2007 Free Software Foundation, Inc.
            
            Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.
            
            This version of the GNU Lesser General Public License incorporates the terms and conditions of version 3 of the GNU General Public License, supplemented by the additional permissions listed below.
            
            0. Additional Definitions.
            
            As used herein, “this License” refers to vers [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Angular">
             <summary>
               Looks up a localized string similar to The MIT License (Angular)
            
            Copyright (c) 2010-2020 Google LLC. http://angular.io/license
            
            Permission is hereby granted, free of charge, to any person obtaining a copy
            of this software and associated documentation files (the &quot;Software&quot;), to deal
            in the Software without restriction, including without limitation the rights
            to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
            copies of the Software, and to permit persons to whom the Software is
            furnished to do so, subject to the fo [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Appt32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.arrowDownTriangle">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.arrowRightLine">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.arrowRightTriangle">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.arrowUpTriangle">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.bencoLogo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.bola_get">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.bola_launch">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.BouncyCastle">
             <summary>
               Looks up a localized string similar to The Bouncy Castle Cryptographic C#® API
            
            License:
            
            The Bouncy Castle License
            Copyright (c) 2000-2015 The Legion of the Bouncy Castle Inc. (http://www.bouncycastle.org)
            Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sub license, and/or sell copies of the Software, and to  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Bsd">
             <summary>
               Looks up a localized string similar to New BSD License (BSD)
            
            Copyright (c) 2012-2016, CodePlex Foundation
            All rights reserved.
            
            Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
            
            * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
            
            * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the docum [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Bullets_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butExport">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butExportExcel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butGoto">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butLabel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butPaste">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butPin">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butPin22">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butPreview">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butPrint">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butPrintSmall">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butQView">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butZoomIn">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.butZoomOut">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.canadiancarriers">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CareCredit_Button_NoTag_26x90">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CDS_Button_green_obsolete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CDT_Content_End_User_License">
             <summary>
               Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\froman\fcharset0 Times New Roman;}{\f1\fswiss\fcharset0 Arial;}}
            {\colortbl ;\red0\green0\blue0;}
            {\*\generator Msftedit 5.41.15.1507;}\viewkind4\uc1\pard\cf1\b\f0\fs24 CDT Content End User License\par
            \par
            Definitions\par
            \par
            \pard\sa240\b0\ldblquote CDT\rdblquote  means the textual, graphic and other editorial content included in the ADA developed publications titled \ul\i CDT-2007/2008: Current Dental Terminology \ulnone\i0 (\ldblquote CDT-200 [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CDT_Content_End_User_License1">
             <summary>
               Looks up a localized string similar to CDT Content End User License
            
            Definitions
            
            “CDT” means the textual, graphic and other editorial content included in the ADA developed publications titled CDT-2007/2008: Current Dental Terminology (“CDT-2007”) and all Updates as defined herein. The CDT content includes, but is not limited to, the Code on Dental Procedures and Nomenclature, a glossary, the ADA dental claim form and other dental information. 
            “Code” means the Code on Dental Procedures and Nomenclature, whether delivered in print or machin [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Chart32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Check_mark_23x20_02">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.ClaimForm2006">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
            &lt;ClaimForm xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
              &lt;Description&gt;ADA 2006&lt;/Description&gt;
              &lt;FontName&gt;Arial&lt;/FontName&gt;
              &lt;FontSize&gt;9&lt;/FontSize&gt;
              &lt;UniqueID&gt;OD8&lt;/UniqueID&gt;
              &lt;PrintImages&gt;true&lt;/PrintImages&gt;
              &lt;Width&gt;850&lt;/Width&gt;
              &lt;Height&gt;1100&lt;/Height&gt;
              &lt;Items&gt;
                &lt;ClaimFormItem&gt;
                  &lt;ImageFileName&gt;ADA2006.gif&lt;/ImageFileName&gt;
                  &lt;FieldName /&gt;
                  &lt;FormatString /&gt;
                  &lt;XPos&gt;-1&lt;/XPos&gt;
                  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.close_door">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.ColorChanger">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CommLog">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Copy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Copy_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CursorCrosshair">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CursorDrag">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CursorLineAdd">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CursorLinePoint">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CursorLinePoint2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CursorLineSubtract">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CursorMeasure">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.CursorScale">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Cut_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.DeleteX">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.deleteX10">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.deleteX18">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.DentalIntelligence_Button_100x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.downArrowWinForm">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.DpsPos_dll_config">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;configuration&gt;
              &lt;configSections&gt;
                &lt;section name=&quot;log4net&quot; type=&quot;log4net.Config.Log4NetConfigurationSectionHandler, log4net&quot;/&gt;
              &lt;/configSections&gt;
            
              &lt;appSettings&gt;
                &lt;add key=&quot;ServicePort&quot; value=&quot;COM9&quot;/&gt;
                &lt;add key=&quot;BaudRate&quot; value=&quot;19200&quot;/&gt;
                &lt;add key=&quot;ReadTimeout&quot; value=&quot;120000&quot;/&gt;
                &lt;add key=&quot;WriteTimeout&quot; value=&quot;5000&quot;/&gt;
              &lt;/appSettings&gt;
            
              &lt;!-- This section contains the log4net configuration settings --&gt;
              &lt;!-- Setting the Threshold on the [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Dropbox_Api">
             <summary>
               Looks up a localized string similar to Copyright (c) 2015 Dropbox Inc.
            
            Permission is hereby granted, free of charge, to any person obtaining
            a copy of this software and associated documentation files (the
            &quot;Software&quot;), to deal in the Software without restriction, including
            without limitation the rights to use, copy, modify, merge, publish,
            distribute, sublicense, and/or sell copies of the Software, and to
            permit persons to whom the Software is furnished to do so, subject to
            the following conditions:
            
            The above copyright notice and this [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.editPencil">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.email">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.email1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.EraseCircle">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.eSig">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Family32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Figure">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.google_signin_focus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.google_signin_normal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.google_signin_pressed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.GPL">
             <summary>
               Looks up a localized string similar to The GNU General Public License (GPL)
            
            Version 2, June 1991
            
            Copyright (C) 1989, 1991 Free Software Foundation, Inc.
            
            59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
            
            Everyone is permitted to copy and distribute verbatim copies
            
            of this license document, but changing it is not allowed.
            
            
            Preamble
            
            
            The licenses for most software are designed to take away your
            freedom to share and change it. By contrast, the GNU General Public
            License is intended to guarantee your freedom to share and  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.gtaicon3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Highlight_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.house16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Imaging32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Ionic">
             <summary>
               Looks up a localized string similar to Copyright 2015-present Drifty Co.
            
            MIT License
            
            Permission is hereby granted, free of charge, to any person obtaining
            a copy of this software and associated documentation files (the
            &quot;Software&quot;), to deal in the Software without restriction, including
            without limitation the rights to use, copy, modify, merge, publish,
            distribute, sublicense, and/or sell copies of the Software, and to
            permit persons to whom the Software is furnished to do so, subject to
            the following conditions:
            
            The above copyrigh [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Left">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Med_History">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Mentalis">
             <summary>
               Looks up a localized string similar to Source Code License
            
            Copyright © 2002-2007, The Mentalis.org Team
            All rights reserved.
            
            Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
            
            - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
            
            - Neither the name of the Mentalis.org Team, nor the names of its contributors may be used to endorse or promote products derived from this sof [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Microphone_22px">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Microphone_30px">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Microsoft">
             <summary>
               Looks up a localized string similar to MICROSOFT SOFTWARE LICENSE TERMS
            
            MICROSOFT .NET LIBRARY
            
            These license terms are an agreement between Microsoft Corporation (or based on where you live, one of its affiliates) and you. Please read them. They apply to the software named above, which includes the media on which you received it, if any. The terms also apply to any Microsoft
            
            ·         updates,
            
            ·         supplements,
            
            ·         Internet-based services, and
            
            ·         support services
            
            for this software, unless other terms accomp [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.MigraDoc">
             <summary>
               Looks up a localized string similar to MigraDoc Foundation
            Copyright (c) 2005-2014 empira Software GmbH, Troisdorf (Germany)
            
            Permission is hereby granted, free of charge, to any person
            obtaining a copy of this software and associated documentation
            files (the &quot;Software&quot;), to deal in the Software without
            restriction, including without limitation the rights to use,
            copy, modify, merge, publish, distribute, sublicense, and/or sell
            copies of the Software, and to permit persons to whom the
            Software is furnished to do so, subject to the follo [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.MySql">
             <summary>
               Looks up a localized string similar to GNU GENERAL PUBLIC LICENSE
            
            Version 2, June 1991
            
            Copyright (C) 1989, 1991 Free Software Foundation, Inc.  
            51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
            
            Everyone is permitted to copy and distribute verbatim copies
            of this license document, but changing it is not allowed.
            Preamble
            
            The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free s [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.NDde">
             <summary>
               Looks up a localized string similar to Shared Source License for NDde
            
            This license governs use of the accompanying software (&apos;Software&apos;), and your use of the Software constitutes acceptance of this license.
            
            You may use the Software for any commercial or noncommercial purpose, including distributing derivative works.
            
            In return, we simply require that you agree:
            1. Not to remove any copyright or other notices from the Software. 
            2. That if you distribute the Software in source code form you do so only under this license (i.e. you must i [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.NewtonSoft_Json">
             <summary>
               Looks up a localized string similar to The MIT License (MIT)
            
            Copyright (c) 2007 James Newton-King
            
            Permission is hereby granted, free of charge, to any person obtaining a copy of
            this software and associated documentation files (the &quot;Software&quot;), to deal in
            the Software without restriction, including without limitation the rights to
            use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
            the Software, and to permit persons to whom the Software is furnished to do so,
            subject to the following conditions:
            
            The ab [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.NHunSpell">
             <summary>
               Looks up a localized string similar to NHunspell - Free Spell Checker, Hyphenation and Thesaurus
            License
            NHunspell is licensed under: GPL/LGPL/MPL. Free use in commercial applications is permitted according to the LGPL and MPL licenses. Your commercial application can link against the NHunspell DLLs..
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.NoFeeProcCodes">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
            &lt;ArrayOfProcedureCode xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
              &lt;ProcedureCode&gt;
                &lt;ProcCode&gt;N4101&lt;/ProcCode&gt;
                &lt;Descript&gt;Post Op&lt;/Descript&gt;
                &lt;AbbrDesc&gt;PostOp&lt;/AbbrDesc&gt;
                &lt;ProcTime&gt;/X/&lt;/ProcTime&gt;
                &lt;TreatArea&gt;Mouth&lt;/TreatArea&gt;
                &lt;SetRecall&gt;false&lt;/SetRecall&gt;
                &lt;NoBillIns&gt;true&lt;/NoBillIns&gt;
                &lt;IsProsth&gt;false&lt;/IsProsth&gt;
                &lt;IsHygiene&gt;false&lt;/IsHygiene&gt;
                &lt;PaintType&gt;None&lt;/PaintType&gt;
              [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.NoFigure">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.notify">
            <summary>
              Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.ODLogo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.OpenDentalApiEndUserLicense">
             <summary>
               Looks up a localized string similar to Open Dental API End User License Agreement
            
            This End User License Agreement is a legal agreement (“Agreement”) between Open Dental Software, Inc., (“Open Dental”) and you, the end user (“the User”), governing the installation and use of the Open Dental API Service, “the Service”.   “Open Dental API Service” or “Service” in this agreement refers to any use of the Open Dental API or the Open Dental API keys.  Open Dental Software is required to be installed and functional on a secure server in order for the [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.OpenDentalLicense">
             <summary>
               Looks up a localized string similar to Open Dental, Copyright 2003-2024, Jordan S. Sparks, DMD.
            
            Open Dental Software, Inc distributes and supports this software through authorized purchase.  A Registration Key is provided to purchaser at time of sale and is valid for exactly one physical location where patients are treated.  Each separate physical location where patients are treated requires a separate purchase and Registration Key.  Mobile treatment units are each treated as one physical location.  Purchaser may install this software on any  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Oracle">
             <summary>
               Looks up a localized string similar to Oracle Technology Network 
            Oracle Developer Tools for Visual Studio .NET Development License Terms
             
            
            Export Controls on the Programs 
            Selecting the &quot;Accept License Agreement&quot; button is a confirmation of your agreement that you comply, now and during the trial term, with each of the following statements:
             
            
            -You are not a citizen, national, or resident of, and are not under control of, the government of Cuba, Iran, Sudan, Libya, North Korea, Syria, nor any country to which the United States has proh [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.padlock_closed">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.padlock_open">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Paste_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.payconnect_btn_26">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.PaymentsRDL">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
            &lt;Report xmlns=&quot;http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition&quot; xmlns:rd=&quot;http://schemas.microsoft.com/SQLServer/reporting/reportdesigner&quot;&gt;
              &lt;Description&gt;
              &lt;/Description&gt;
              &lt;Author&gt;
              &lt;/Author&gt;
              &lt;PageHeight&gt;11in&lt;/PageHeight&gt;
              &lt;PageWidth&gt;8.5in&lt;/PageWidth&gt;
              &lt;Width&gt;7.5in&lt;/Width&gt;
              &lt;TopMargin&gt;.25in&lt;/TopMargin&gt;
              &lt;LeftMargin&gt;.25in&lt;/LeftMargin&gt;
              &lt;RightMargin&gt;.25in&lt;/RightMargin&gt;
              &lt;BottomMargin&gt;.25in&lt;/BottomMargin&gt;
              &lt;DataSets&gt;
               [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.PaySimple_Button_2019_26x75">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.PdfSharp">
             <summary>
               Looks up a localized string similar to PDFsharp is published under the MIT License.
            
            Copyright (c) 2005-2014 empira Software GmbH, Troisdorf (Germany)
            
            Permission is hereby granted, free of charge, to any person
            obtaining a copy of this software and associated documentation
            files (the &quot;Software&quot;), to deal in the Software without
            restriction, including without limitation the rights to use,
            copy, modify, merge, publish, distribute, sublicense, and/or sell
            copies of the Software, and to permit persons to whom the
            Software is furnished to  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Pen">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.phoneInUse">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Podium_Button_100x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Podium_logo_Black">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Practice_Booster_Icon_22x22">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.PracticeByNumbers_100x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.PrefInfos">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
            &lt;ArrayOfPrefInf xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
              &lt;PrefInf&gt;
                &lt;PrefName&gt;SalesTaxDoAutomate&lt;/PrefName&gt;
                &lt;Category&gt;AccountAdjustments&lt;/Category&gt;
                &lt;ControlName&gt;checkAutomateSalesTax&lt;/ControlName&gt;
                &lt;ControlText&gt;Automate Sales Tax&lt;/ControlText&gt;
                &lt;Details&gt;as procedures are completed, if the Procedure Code is marked &apos;Auto Tax&apos;, then add sales tax&lt;/Details&gt;
                &lt;WidthWindow&gt;0&lt;/WidthWindow&gt;
                &lt;H [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.printPreview20">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.raisehand">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.raisehanddisabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.record">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Redo_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.remoteSupportIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.ReportAccountingBalanceSheet">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
            &lt;Report Name=&quot;&quot;&gt;
              &lt;Description&gt;
              &lt;/Description&gt;
              &lt;Author&gt;
              &lt;/Author&gt;
              &lt;PageHeight&gt;11in&lt;/PageHeight&gt;
              &lt;PageWidth&gt;8.5in&lt;/PageWidth&gt;
              &lt;Width&gt;7.5in&lt;/Width&gt;
              &lt;TopMargin&gt;.25in&lt;/TopMargin&gt;
              &lt;LeftMargin&gt;.25in&lt;/LeftMargin&gt;
              &lt;RightMargin&gt;.25in&lt;/RightMargin&gt;
              &lt;BottomMargin&gt;.25in&lt;/BottomMargin&gt;
              &lt;DataSets&gt;
                &lt;DataSet Name=&quot;Assets&quot;&gt;
                  &lt;Query&gt;
                    &lt;DataSourceName&gt;DS1&lt;/DataSourceName&gt;
                    &lt;Timeout&gt;10&lt;/Timeout&gt;
                    &lt;CommandText&gt;
                    [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.ReportAccountingGenLedger">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
            &lt;Report Name=&quot;&quot;&gt;
              &lt;Description&gt;
              &lt;/Description&gt;
              &lt;Author&gt;
              &lt;/Author&gt;
              &lt;PageHeight&gt;11in&lt;/PageHeight&gt;
              &lt;PageWidth&gt;8.5in&lt;/PageWidth&gt;
              &lt;Width&gt;7.5in&lt;/Width&gt;
              &lt;TopMargin&gt;.25in&lt;/TopMargin&gt;
              &lt;LeftMargin&gt;.25in&lt;/LeftMargin&gt;
              &lt;RightMargin&gt;.25in&lt;/RightMargin&gt;
              &lt;BottomMargin&gt;.4in&lt;/BottomMargin&gt;
              &lt;DataSets&gt;
                &lt;DataSet Name=&quot;Data&quot;&gt;
                  &lt;Query&gt;
                    &lt;DataSourceName&gt;DS1&lt;/DataSourceName&gt;
                    &lt;Timeout&gt;10&lt;/Timeout&gt;
                    &lt;CommandText&gt;
                    DRO [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Right">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Save_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.setupGears">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.SharpDX">
             <summary>
               Looks up a localized string similar to SharpDX is published under the MIT License.
            
            Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
            
            Permission is hereby granted, free of charge, to any person obtaining a copy
            of this software and associated documentation files (the &quot;Software&quot;), to deal
            in the Software without restriction, including without limitation the rights
            to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
            copies of the Software, and to permit persons to whom the Software is
            furnished to do so, subject to  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Sparks3D">
             <summary>
               Looks up a localized string similar to Sparks3D is a DirectX 11 plugin for Open Dental that is licensed separately.  Open Dental will still work fine without this plugin, but the older 3D &quot;SparksToothChart&quot; will require the user to install the DirectX 9 SDK.  To make the newer Sparks3D plugin work, the following two files must be present in the Sparks3D folder within the application folder:  Sparks3D.dll and Sparks3DXEngine.dll.  To disable the plugin for troubleshooting, rename the folder temporarily.
            
            License:-------------------------------- [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.splashBenco">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.splashCanada">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.SshNet">
             <summary>
               Looks up a localized string similar to The MIT License (MIT)
            
            Permission is hereby granted, free of charge, to any person obtaining a copy
            of this software and associated documentation files (the &quot;Software&quot;), to deal
            in the Software without restriction, including without limitation the rights
            to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
            copies of the Software, and to permit persons to whom the Software is
            furnished to do so, subject to the following conditions:
            
            The above copyright notice and this permission [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.stationary_sample1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.stdole">
             <summary>
               Looks up a localized string similar to MICROSOFT PRE-RELEASE SOFTWARE LICENSE TERMS
            MICROSOFT VISUAL STUDIO 2015 (AND NEXT VERSION CODE-NAME DEV15) PRODUCT FAMILY PRE-RELEASE SOFTWARE
            
            These license terms are an agreement between Microsoft Corporation (or based on where you live, one of its affiliates) and you. They apply to the pre-release software named above. The terms also apply to any Microsoft services or updates for the software, except to the extent those have additional terms.
            
            IF YOU COMPLY WITH THESE LICENSE TERMS, YOU HAVE THE R [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.stop">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Tamir">
             <summary>
               Looks up a localized string similar to Copyright (c) 2002-2015 Atsuhiko Yamanaka, JCraft,Inc. 
            All rights reserved.
            
            Redistribution and use in source and binary forms, with or without
            modification, are permitted provided that the following conditions are met:
            
              1. Redistributions of source code must retain the above copyright notice,
                 this list of conditions and the following disclaimer.
            
              2. Redistributions in binary form must reproduce the above copyright 
                 notice, this list of conditions and the following disclaimer in 
              [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Tao_Freeglut">
             <summary>
               Looks up a localized string similar to The Tao Framework for .NET is a collection of bindings to facilitate
            cross-platform game-related development utilizing the .NET platform.
            
            Currently included bindings are OpenGL 2.1, GLU 1.3, FreeGLUT 2.4.0, WGL,
            various GL and WGL-related extensions, OpenAL 1.1, Cg 1.4.1, DevIL 1.6.8 RC2,
            SDL 1.2.12, PhysFs 1.0.1, ODE 0.8.0, GLFW 2.6.1, Lua 5.1.1.
            
            These bindings all function in a cross-platform and cross-runtime manner
            using Microsoft&apos;s .NET 2.0 runtime on Windows and the Mono runtime
            on Windows  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Tao_OpenGL">
             <summary>
               Looks up a localized string similar to The Tao Framework for .NET is a collection of bindings to facilitate
            cross-platform game-related development utilizing the .NET platform.
            
            Currently included bindings are OpenGL 2.1, GLU 1.3, FreeGLUT 2.4.0, WGL,
            various GL and WGL-related extensions, OpenAL 1.1, Cg 1.4.1, DevIL 1.6.8 RC2,
            SDL 1.2.12, PhysFs 1.0.1, ODE 0.8.0, GLFW 2.6.1, Lua 5.1.1.
            
            These bindings all function in a cross-platform and cross-runtime manner
            using Microsoft&apos;s .NET 2.0 runtime on Windows and the Mono runtime
            on Windows  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Text">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.topazPen10">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.TreatPlan32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.TSI_Icon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Twain">
             <summary>
               Looks up a localized string similar to The TWAIN Working Group
            
            The TWAIN Working Group grants customer (&quot;Customer&quot;) the worldwide, royalty-free, 
            non-exclusive license to reproduce and distribute the software and documentation of the TWAIN toolkit (&quot;TWAIN Toolkit&quot;). The 
            TWAIN Toolkit was designed to be used by third parties 
            to assist them in becoming compliant with the TWAIN standard, but it has not been developed to the standards of a commercial product. 
            Consequently, the TWAIN toolkit is provided AS IS without any warranty. THE TWAIN [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.UDS3a">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.UDS3b">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Undo_24x24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Unison_BDR_Logo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Unsched_Treat_Plans">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
            &lt;Report Name=&quot;&quot;&gt;
              &lt;CodeModules&gt;
                &lt;CodeModule&gt;ODR.dll&lt;/CodeModule&gt;
              &lt;/CodeModules&gt;
              &lt;Classes&gt;
                &lt;Class&gt;
                  &lt;ClassName&gt;ODR.Query&lt;/ClassName&gt;
                  &lt;InstanceName&gt;Query&lt;/InstanceName&gt;
                &lt;/Class&gt;
              &lt;/Classes&gt;
              &lt;Description&gt;
              &lt;/Description&gt;
              &lt;Author&gt;
              &lt;/Author&gt;
              &lt;PageHeight&gt;11in&lt;/PageHeight&gt;
              &lt;PageWidth&gt;8.5in&lt;/PageWidth&gt;
              &lt;DataSources&gt;
                &lt;DataSource Name=&quot;DS1&quot;&gt;
                  &lt;ConnectionProperties&gt;
                    &lt;DataProvider&gt;MySQL.NET&lt;/DataProvide [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.WebChatIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.webSched_PV_Button">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.XamlStyle_DataGrid">
            <summary>
              Looks up a localized string similar to &lt;Style x:Key=&quot;DataGridStyle&quot; TargetType=&quot;{x:Type DataGrid}&quot;
               xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
            xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;&gt;
                   &lt;Setter Property=&quot;Background&quot; Value=&quot;{DynamicResource {x:Static SystemColors.ControlBrushKey}}&quot;/&gt;
                   &lt;Setter Property=&quot;Foreground&quot; Value=&quot;{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}&quot;/&gt;
                   &lt;Setter Property=&quot;BorderBrush&quot; Value=&quot;#FF688CAF&quot;/&gt;
                   &lt;Setter Property=&quot;BorderThickness&quot; V [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.XamlStyle_DataGridColumnHeader">
            <summary>
              Looks up a localized string similar to &lt;Style TargetType=&quot;DataGridColumnHeader&quot;
               xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
            xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;&gt;
            		&lt;!--Setter Property=&quot;SeparatorBrush&quot; Value=&quot;Red&quot; /--&gt;
                       &lt;Setter Property=&quot;Template&quot;&gt;
                           &lt;Setter.Value&gt;
                               &lt;ControlTemplate TargetType=&quot;DataGridColumnHeader&quot;&gt;
                                   &lt;Grid&gt;
                                       &lt;Border x:Name=&quot;columnHeaderBorder&quot;
            	                        BorderThickne [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.XamlStyle_ListBoxItem">
            <summary>
              Looks up a localized string similar to &lt;Style TargetType=&quot;ListBoxItem&quot; 
            xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
            xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;&gt;
            		&lt;Setter Property=&quot;SnapsToDevicePixels&quot; Value=&quot;True&quot;/&gt;
            		&lt;Setter Property=&quot;Padding&quot; Value=&quot;4,1&quot;/&gt;
            		&lt;Setter Property=&quot;HorizontalContentAlignment&quot; Value=&quot;{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}&quot;/&gt;
            		&lt;Setter Property=&quot;VerticalContentAlignment&quot; Value=&quot;{Binding VerticalContentAlignm [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.XamlStyle_MenuItem">
            <summary>
              Looks up a localized string similar to &lt;ResourceDictionary xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot; 
               xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
               xmlns:local=&quot;using:MSDNSample&quot;&gt;
            	&lt;SolidColorBrush x:Key=&quot;Menu.Static.Background&quot; Color=&quot;#FFFFFFFF&quot;/&gt;
                   &lt;SolidColorBrush x:Key=&quot;Menu.Static.Border&quot; Color=&quot;#FF999999&quot;/&gt;
                   &lt;SolidColorBrush x:Key=&quot;Menu.Static.Foreground&quot; Color=&quot;#FF212121&quot;/&gt;
                   &lt;SolidColorBrush x:Key=&quot;Menu.Static.Separator&quot; Color=&quot;#FFD7D7D7&quot;/&gt;
                   &lt;SolidColorBrush x:Key [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.XamlStyle_TabItem">
            <summary>
              Looks up a localized string similar to &lt;Style TargetType=&quot;TabItem&quot;
            xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
            xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;&gt;
            &lt;Style.Resources&gt;
            	&lt;SolidColorBrush x:Key=&quot;TabItem.MouseOver.Background&quot; Color=&quot;#E5EFFB&quot;/&gt;
            &lt;/Style.Resources&gt;
            		&lt;Setter Property=&quot;FocusVisualStyle&quot;&gt;
            			&lt;Setter.Value&gt;
            				&lt;Style x:Key=&quot;FocusVisual1&quot;&gt;
            					&lt;Setter Property=&quot;Control.Template&quot;&gt;
            						&lt;Setter.Value&gt;
            							&lt;ControlTemplate&gt;
            								&lt;Rectangle Margin=&quot;2&quot; StrokeDashArray=&quot;1 2 [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.XamlStyle_ToolBar">
            <summary>
              Looks up a localized string similar to &lt;Style TargetType=&quot;ToolBar&quot;
            xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot; 
               xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
               xmlns:local=&quot;using:MSDNSample&quot;&gt;
            &lt;Style.Resources&gt;
            	&lt;SolidColorBrush x:Key=&quot;ToolBarButtonHover&quot; Color=&quot;#210080FF&quot;/&gt;
            	&lt;SolidColorBrush x:Key=&quot;ToolBarMenuBorder&quot; Color=&quot;#FFB6BDC5&quot;/&gt;
            	&lt;SolidColorBrush x:Key=&quot;ToolBarSubMenuBackground&quot; Color=&quot;#FFEEF5FD&quot;/&gt;
            	&lt;SolidColorBrush x:Key=&quot;ToolBarHorizontalBackground&quot; Color=&quot;#FFEEF5FD&quot;/&gt;
            	&lt;SolidColorBr [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.XamlStyle_ToolBarButton">
            <summary>
              Looks up a localized string similar to &lt;Style TargetType=&quot;Button&quot;
            xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot; 
               xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;&gt;
            &lt;Setter Property=&quot;Background&quot;&gt;
            	&lt;Setter.Value&gt;
            		&lt;LinearGradientBrush StartPoint=&quot;0,0&quot; EndPoint=&quot;0,1&quot;&gt;
            			&lt;GradientStop Color=&quot;White&quot; Offset=&quot;0.0&quot; /&gt;
            			&lt;GradientStop Color=&quot;#ABB5D1&quot; Offset=&quot;1.0&quot; /&gt;
            		&lt;/LinearGradientBrush&gt;
            	&lt;/Setter.Value&gt;
            &lt;/Setter&gt;
            &lt;Setter Property=&quot;BorderBrush&quot; Value=&quot;DarkGray&quot;/&gt;
            &lt;Setter Property=&quot;BorderThickness&quot; [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpenDental.Properties.Resources.Zxing">
             <summary>
               Looks up a localized string similar to Copyright 2012-present Zxing
            
            Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
            you may not use this file except in compliance with the License.
            You may obtain a copy of the License at
            
                http://www.apache.org/licenses/LICENSE-2.0
            
            Unless required by applicable law or agreed to in writing, software
            distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            See the License for the specific language gove [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.Allocator">
            <summary>
            The class that is to be inherited by anyone creating an allocator.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.Allocator.HelpDoc">
            <summary>
            The text that provides the help documentation for the user to see.
            Pass it thru the Lan.F before you want to display it.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.Allocator.DbaseStorageTable">
            <summary>
            This is the name given to the table that will be used to hold the allocated
            data.  Set by programer in inherited member.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.Allocator.DbaseTableColumns">
            <summary>
            The column names used for the DbaseStorageTable
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.Allocator.SetDbaseTable_and_Columns(System.String,System.String[])">
            <summary>
            Designed to be called by the constructor to set the tableName and 
            column definitions of the allocator.  I really wanted this member
            to be protected not public.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.Allocator.CheckDbase">
            <summary>
            Tries to select 1 row of elements with each of the columns stated in 
            DbaseTableColumns.  Code was faster than "DESCRIBE Table";
            Plus I'm not checking field types.
            </summary>
            <returns>false if querry throws an exception.</returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.Allocator.TableExists">
            <summary>
            Uses "SHOW TABLES" to see if table exists.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.AllocatorCollection">
            <summary>
            <seealso cref="!:IAllocator"/>
            Here is the model.
            	Payments arrive.  When they arrive an allocation event is to occur. The payment
            	can then be allocated by the set of rules given by the allocator which a programmer
            	will create.  The Allocator created must conform to the method rules called by the
            	allocator interface which is really simple.
            
            The Allocators in the AllocatorCollection will be called.  The allocators must be created by
            a programmer and added to the static list that is creted in the private method CreateAllocators.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.AllocatorCollection.CallAll_Allocators(System.Int32)">
            <summary>
            jsparks-NOT GETTING CALLED.
            The only place that it was being used was in ProcedureL.SetCompleteInAppt().  But once that method was moved into the business layer,
            it was no longer possible to make a call into OpenDental UI layer.
            So for this to work, it will all need to be moved into the business layer.
            Calls all of the allocators created for this patient.
            Determines the guarantor form this patient first
            
            
            Points of Entry Identified in OD
            	1)  ContrAccount.ToolBarMain_ButtonClick(...)  Added code to run allocator after user is finished with clicked tasks
            	2)	ContrAccount.gridAccount_CellDoubleClick(...)  Double Click means that an edit was potentialy occuring run allocator.
            	3)  ContrAccount.gridRepeat_CellDoubleClick(...)  I am not familiar with Payment Plans or Repeating Charges need to check against tool
            	4)  ContrAccount.gridPayPlan_CellDoubleClick(...) I am not familiar with Payment Plans or Repeating Charges need to check against tool
            	5)  ContrChart.gridProg_CellDoubleClick(...)  Indicates Procedure was potentially changed. Runs allocator if any of the dialogs returned DialogResult.OK
            	6)	ContrChart.EnterTypedCode(...) 
            	7)  ContrChart.ProcButtonClicked(...)
            	8)  Procedures.SetCompleteInAppt(...) // Called from Set Complete Checkmark (butComplete) in the appointment module.
            	
            Points of Entry That Need Atttention to
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.AllocatorCollection.CreateAllocators">
            <summary>
            Only calle from with in AllocatorCollection so 
            don't have to worry about opendental calling this.
            </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.FormProgressViewer">
            <summary>
            This Form is a simple encapsulation of the BacgroundWorker with a progressbar control.
            
            Several buttons are available for users to control the process.
            
            Basic plan is for the Programmer to design a method that fits 
            the DoWorkEventHandler signature --->void bw_DoWork(object sender, DoWorkEventArgs e)
            
            Progress Reporting is enabled
            Support for canceling is enabled.
            
            Remeber if DoWorkEventArgs e.Cancled is set to true (by you in the bw_DoWork) then
            you cannot get the e.Result and thus the _FinalResult object will be null.
            
            Steps:
            	SET_WORKER_METHOD first
            	START_WORK()
            
            Other Features
            	RUN_ONLY_ONCE		if set to false a Start button pops up and you can re run the method assigned. Default is true
            	FINAL_RESULT		the value set to e.Result in your DoWork method
            	CANCLED_BY_USER		true if user cancled activity
            	MESSAGE_LAST		Last Progress Message assigned.  Will be overwritten by bw_RunWorkerCompleted code
            	MESSAGES_ALL		A string containing all the Progress Messages sent
            	CONTINOUS_PROGRESS	The progress bar will just cycle while work is done.  Does not affect messages.
            Author:	Daniel W. Krueger
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.FormProgressViewer.SET_WORKER_METHOD">
            <summary>
            Design your method to have DoWorkEventHandler signature
            void bw_DoWork(object sender, DoWorkEventArgs e)
            
            You can cast sender as backgroundworker.
            The backgroundworker supports canceling and reporting progress.
            
            Public properties expose parameters after job is finished.
            Set your DoWorkEventArgs e.Result to the final result of your
            project then when WorkerRun is complete it will become available
            in the _FinalResult Object.  Final Result's ToString will display in
            the Message area.  If you do not want this create an object that
            will overide the Result object's ToString() method.
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.FormProgressViewer.RUN_ONLY_ONCE">
            <summary>
            Gets or Sets whether to allow the user to run the even more than
            one by pressing start after the DoWork event is complete.
            Default is true.  Set to False to allow pressing start again.
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.FormProgressViewer.FINAL_RESULT">
            <summary>
            Reference should be okay because it is only set in the bw_RunWorkerCompleted and
            is only used by setting to null with the START_WORK()
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.FormProgressViewer.CONTINOUS_PROGRESS">
            <summary>
            Indicates that the Progress Bar does not update its value with the 
            bw_ProgressChanged handler.  Instead it increments whenever the timer
            fires up.  Default is false.  Cannot change the value when 
            backgroundworker is running.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.FormProgressViewer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.FormProgressViewer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.FormProgressViewer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.FormInstallAllocator_Provider.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.FormInstallAllocator_Provider.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.FormInstallAllocator_Provider.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.FormReport_GuarantorAllocationCheck.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.FormReport_GuarantorAllocationCheck.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.FormReport_GuarantorAllocationCheck.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.FormReport_ProviderIncomeReport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.FormReport_ProviderIncomeReport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.FormReport_ProviderIncomeReport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.FormWarnToCloseComputers">
            <summary>
            DialogResult values are either Yes or No (cancel is indicated by No)
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.FormWarnToCloseComputers.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.FormWarnToCloseComputers.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.FormWarnToCloseComputers.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.Images.ImageAnimator">
            <summary>
            Creates a simple txbox for animation of images.  Uses 100ms for animation speed.  If you want to change this
            just add it to the code to change the timer.  Size change of the control changes the size of the image box.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Images.ImageAnimator.StartAnimation">
            <summary>
            If SET_IMAGES != NULL  animation starts using standard timer
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Images.ImageAnimator.StopAnimation">
            <summary>
            Stops the timer that creates the animation.
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.Images.ImageAnimator.SET_IMAGES">
            <summary>
            Gets or Sets the Images for animating
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.Images.ImageAnimator.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Images.ImageAnimator.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Images.ImageAnimator.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.SupportingCode.Report1_GuarantorAllocation._SummaryTableHeader">
            <summary>
            The description used for the _SummaryTable
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.SupportingCode.Report1_GuarantorAllocation.AddColBalance(OpenDental.ReportSimpleGrid)">
            <summary>
            This expects that the last column will be Amount.  If not It will do nothing.
            RunDetialReport(Guarantor) query first.  // Adds Provider's abbreviations to Table as well
            
            Adds a column to report.TableQ
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.SupportingCode.Report1_GuarantorAllocation.GetFamilyTable(System.Int32)">
            <summary>
            Table As Such:
            __________________________________________________
            |            |                       | Patient ID  |
            |____________|_______________________|_____________|
            |            |                       |             |   
            | Guarantor  | Painter, Matt         |    1001     |
            |____________|_______________________|_____________|
            | Accounts:  | 1 Painter, Matt       |    1001     |
            |            | 2 Hummel, Robbie      |    1001     |
            |            | 3 Kramer, Chris       |    1002     |
            |            | 4 Moore, E'twan       |    1045     |
            |____________|_______________________|_____________|
            
            Returns Null if _Guarantor = 0
            
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.SupportingCode.Report1_GuarantorAllocation.DetailReport(System.Int32)">
            <summary>
            A string to make a Query that will Output the following Table
            ________________________________________________________________________________________________________________________________________________________
            |   Date    |   Description                    | Patient ID  |    Table Source |    ProvNum     | Credits | Debits | Balance | Amount  |    ProvNum     |
            |___________|__________________________________|_____________|_________________|________________|_________|________|_________|_________|________________|
            | 01/29/08  |   Prophy                         | Hummell, R  |    0			   | empty to hold  |    empty 3 columns to be   | 50.00   |    10          |
            |___________|__________________________________|_____________|_________________|_place for Abbr_|____filled in later by code_|_________|________________|
            | 01/29/08  |   Exam                           | Hummell, R  |    1			   |    ""          |         |        |         | 45.00   |    3           |
            |___________|__________________________________|_____________|_________________|________________|_____using the Amount Value_|_________|________________|
            | 01/29/08  |   4 BWX                          | Hummell, R  |    0			   |    ""          |         |        |         | 25.00   |    10          |
            |___________|__________________________________|_____________|_________________|________________|_________|________|_________|_________|________________|
            | 01/29/08  |                                  | Hummell, R  |    1			   |    ""          |         |        |         | -50.00  |    10          |
            |___________|__________________________________|_____________|_________________|________________|_________|________|_________|_________|________________|
            | 01/29/08  |                                  | Hummell, R  |    1			   |    ""          |         |        |         | -44.45  |    3           |
            |___________|__________________________________|_____________|_________________|________________|_________|________|_________|_________|________________|
            | 01/29/08  |                                  | Hummell, R  |    1			   |    ""          |         |        |         | -4.45   |    0           |
            |___________|__________________________________|_____________|_________________|___(unearned)___|_________|________|_________|_________|________________|
            
            Note that we use ProvNum = 0 for unearned income.  So there is no Abbr in 
            the database for this value.  We have to put it in progrmatically later.
            
            Ammount keeps comming in a a decimal or double value.  This makes it difficult to establish a 
            numeric value so I added the 3 columns here with only an empty string value
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.SupportingCode.Report1_GuarantorAllocation.ProviderRevenueByGuarantor(System.Int32,System.DateTime,System.DateTime)">
            <summary>
             A string to make a Query that will Output the following Table
             ProvNum Amount Type 
             |   3    |    6334    |    Charges        |    
             |   5    |    176     |    Charges        |    
             |   10   |    700     |    Charges        |    
             |   14   |    279     |    Charges        |    
             |   17   |    59      |    Charges        |    
             |   0    |    -100    |    Revenue        |    
             |   3    |    -2522   |    Revenue        |    
             |   5    |    -40     |    Revenue        |    
             |   10   |    -749    |    Revenue        |    
             |   14   |    -279    |    Revenue        |    
             |   17   |    -59     |    Revenue        |    
             |   3    |    -3844   |    Adjustments    |   //These should include writeoffs for Ins 
             |   5    |    -136    |    Adjustments    |    
             |   10   |    -19     |    Adjustments    | 
              use -ve number if you want sumary for all guarantors
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.SupportingCode.Report1_GuarantorAllocation.BuildSummaryTable(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Builds a DataTable that details the summary that this report generates then
            places it int the _SummaryTable.  Also Fills the  _SummaryTableHeader which
            is used with the FormQuery Printing feature instead of the _SummaryTable
            (becuase the FormQuery does not provide support for a second table)
            </summary>
            <param name="Guarantor"></param>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.SupportingCode.Report1_GuarantorAllocation.GenerateSummaryTable(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Generates a Summary Table Outlining the Provider Charges and Revenues
            Illustrating Unearned Income
            use MinDate and MaxDate to flag all dates
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.SupportingCode.Report1_GuarantorAllocation.SummaryTable_as_Strings">
            <summary>
            Just looks at _SummaryTable and pulls off the values in a nice orderly manner to build a string[]
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.SupportingCode.Report1_GuarantorAllocation.ConvertTableToAllStrings(System.Data.DataTable)">
            <summary>
            Converts all values in DataTable to string values
            DateTime Values will be converted to ShortDateStrings mm/dd/yyyy
            </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.EqualizeProviderPayments">
            <summary> 
            Instantiate an Object of EqualizeProviderPayments.
            Set Connection String to QuerryResult.SetConnectionString(string)
            Call Instance.EqualizeGuarantorPayments(guarantor)
            use returned DataTable for your information.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.EqualizeProviderPayments.InstanceCounter">
            <summary>
            This does Several Things       
                3)  Calls EqualizeLedger
                        -For the guarantors passed it Performs a FIFO Provider accounting of 
                        charges, Adjustments and Payments.  It will change the payment 
                        to be multiple payments if Provider Payments require it 
                        to be so.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.EqualizeProviderPayments.CheckTables">
            <summary>
            In the future this will check to make sure OD Tables are compliant with
            the setup that this was intended to run with.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.EqualizeProviderPayments.EqualizeGuarantorPayments(System.Int32)">
            <summary>
            The method that actually calls the Equalizer.  Currently the equalizer just equalizes this instances
            data so that we can see the data via the returned DataTable
            
            Note this Erases the old ledger item and replaces it with a new one for the Specified Guarantor
            </summary>
            <param name="uGuarantor"></param>
            <returns></returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.EqualizeProviderPayments.ProviderBalancesDetail">
            <summary>
            Provides a data table that gives a running balance for each provider.
            
            Will run the EqualizeGuarantorPayments(guarantor) first if this instance has not 
            done so yet.
            
            // Setup DataTable  
            
            Date				   Provider #							 	      Provider #
            		   Charges  Payments  Adjustments  Balances	    Charges  Payments  Adjustments Balances
            [ 0   ][1][   2   ][   3    ][     4     ][    5   ][6][    7  ][    8   ][  etc......  
            </summary>
            <param name="uGuarantor"></param>
            <returns></returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.EqualizeProviderPayments.ProviderBalancesOnly">
            <summary>
            2 Tables. Will return null if error getting table filled.
            Columns:  Provider, Ammount
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.EqualizeProviderPayments.NextPaySplitRecommendation(System.Decimal)">
            <summary>
            Takes the ammount to allocate then provides a recommendation of where to allocate the
            charges to.  Returns a DataTable with the following Collumns:
            	Provider, Ammount
            
            The idea being that the calling method will have the payment in their hand and will
            use the recommendation to generate the appropriate PROVIDER paysplit info.  So the calling
            method will have the Date of Payment, Paytable source etc.
            </summary>
            <param name="AmountToAllocate">Should be -ve because it is a payment.</param>
            <returns></returns>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.ProviderBalance">
            <summary>
            Provides a snapshot for a provider's at any point in time.
            Ammounts is a decimal array holding the balances corresponding to LedgerItemTypes
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.ProviderBalance.Ammounts">
            <summary>
            The for LedgerItemTypes form ammounts.  
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.ProviderBalance.op_Addition(OpenDental.Reporting.Allocators.MyAllocator1.ProviderBalance,OpenDental.Reporting.Allocators.MyAllocator1.ProviderBalance)">
            <summary>
            Give returned value the date of the left hand operand. Exception if ProvNums are not the same
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <returns></returns>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.GUARANTOR_OBJECT">
            <summary>
            Throws exception if Guarantor_Object was not set. ie using uint Guarantor Numbers instead
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.GUARANTOR_NUMBER">
            <summary>
            Can be used if you don't want to use the whole DansTables.Guarantors class. To save memory.
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.FullLedger">
            <summary>
            Includes all LedgerItems.  Readonly
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.Payments">
            <summary>
            Includes all Payments and Adjustments on account. Readonly
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.Charges">
            <summary>
            Includes all Charges and Refunds on account. Readonly
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.Providers">
            <summary>
            Looks thru entire ledger and returns a list of providers.  This is iterative so may not
            want to use it if you are already cycling thru the ledger.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.ViewLedgerObject(OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemTypes[])">
            <summary>
            Just makes a datatable of the Full Ledger list of items
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.Fill(System.Boolean)">
            <summary>
            Fill the Ledger Object with data from the database.
            Flushes old data in this object first
            If you are running lots of data you may want to control the GC 
            to collect when you want.
            
            Put in two methods for organization
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.EqualizePaymentsV2">
            <summary>
            The method that will equalize the payments for this Ledger's data.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.Update2">
            <summary>
            Was orginally used to update the database with any changed values
            
            Roadmap:
            	1.  Create Variables to hold Splits that have actuall changed
            		i.	SplitsToDrop		Contain splits that are in the allocation_provider table that have been 
            								determined to be old/outdated/incorrect or need changed.
            		ii.	SplitsToWrite		Contain the splits that need to be written to allocation_provider table
            	2.	Grab all entries from allocation_provider
            		i.	dt2_AllocTbl		a datatable of the split items as they exist in the allocation_provider table
            		ii.	htCurrentRecord		a hashtable that is used to determine if the recorded data matches the data in this objects payment ledger items
            								Also used to determine if entries exist that are no longer a part of opendental. (meaning they have been deleted)
            	3.	Cycle through this.Payments compare to entries of allocation_provider
            		i.		Add to SplitsToDrop and SplitsToWrite as appropriate
            				a.  Checks split count to match
            				b.	Checks provider count to match
            				c.	Calcuates provider balances to match (for the split entries only)
            				d.  If different drop and write (as indicated in 3.i. ) else leave alone
            		ii.		Marke htCurrentRecord items as "used" if there is an ODEntry corresponding to the record.
            	4.	Delete entries not used in htCurrentRecord (ie data that has been deleted from OpenDental)
            		i.		makes use of the key values in htCurrentRecord
            		ii.		key = [tablenum]-[tableitemnum]
            	5.	Delete and add entries that are in the SplitsToDrop,SplitsToWrite lists
            
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection._EqualizePayments">
            <summary>
            Called by the Exposed Public Method with the similar name.  Just put 
            it here for organization.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.AllocateToCharge(System.Collections.Generic.List{OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem},OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem)">
            <summary>
            Used in EqualizePayments. Recursive Method
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.NextUnallocatedItem(System.Collections.Generic.List{OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem})">
            <summary>
            used in AllocateToCharge
            call stack EqualizePayments--&gt;AllocateToCharge--&gt;NextUnallocatedItem
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.AddToCollection(OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem,OpenDental.Reporting.Allocators.MyAllocator1.PP_PaySplitItem[])">
            <summary>
            Adds to the full list
            adds to chargesandrefunds list or paymentsandadjustments lists as
            apporpriate.
            </summary>
            <param name="dli"></param>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection.Flush(System.Boolean)">
            <summary>
            Empties all the PP_LedgerItem lists 
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.GuarantorLedgerItemsCollection._Fill(System.Boolean)">
            <summary>
            Fill the Ledger Object with data from the database.
            Flushes old data in this object first
            If you are running lots of data you may want to control the GC 
            to collect when you want.
            
            
            
            Method Roadmap:
            
            	1. Generate 2 Tables
            		i.		Table1:		dt_ODItems			Contains all the items of Ledger Interest from OpenDental Tables
            		ii.		Table2:		dt2_AllocTbl_Items	Contains all the Allocation Data that exists in the allocation_provider table
            	2. Look For Differences
            		i.		Build a Ledger Item from the dt_ODItems (ie from the opendental tables)
            		ii.		Find the Splits in dt2_AllocTbl_Items that are associated with the dt_ODItems that are payments
            					a.		For Payment items (in dt_ODItems)Find he dt2_AllocTbl_Items that have the same PayTableSource and PaySourceNumber
            					b.		Make a split [] out of the dt2_AllocTbl_Items that were found
            		iii.	Add LI and Splits to MasterList  (this) with call to AddToCollection(LI,splits);
            					a.  The method will determine if LI is a payment and if splits are not null create a PP_PaymentItem and attach the splits to this PP_PaymentItem and then add the PP_PaymentItem to the master list
            					b.  Adding PaySplits needs to calculate the allocated ammount
            
            Need to determine what to do if an item exists in the allocation_provider (ie dt2_AllocTble_Items) table but not in the
            opendental data (ie dt_ODItems) // use Update2() to Clear these entries from data that 
            has been deleted from OD but not from allocation_provider.
            </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors">
            <summary>
            Simple object that holds the Guarantor Patient Relationship
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.ExcludedGuarantors">
            <summary>
            Used to hold Guarantors that have a problem with compatability.
            ie Payment is -ve or Charge is -ve
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.ExcludedPatients">
            <summary>
            See ExcludedGuarantors
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.op_Addition(OpenDental.Reporting.Allocators.MyAllocator1.Guarantors,System.Int32)">
            <summary>
            Should add NewPatient to the G1.PATIENTS.  
            if G1.PATIENTS already contains NewPatient then nothing is done. 
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.op_Addition(System.Int32,OpenDental.Reporting.Allocators.MyAllocator1.Guarantors)">
            <summary>
            Should add NewPatient to the G1.PATIENTS.  
            if G1.PATIENTS already contains NewPatient then nothing is done. 
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.Add(OpenDental.Reporting.Allocators.MyAllocator1.Guarantors,System.Int32)">
            <summary>
            Basic method used in operator+  Basically helps generate the Guarantor Object.
            </summary>
            <param name="G1"></param>
            <param name="NewPatient"></param>
            <returns></returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.Add(System.Int32,OpenDental.Reporting.Allocators.MyAllocator1.Guarantors)">
            <summary>
            Calls the first overload
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.op_Subtraction(OpenDental.Reporting.Allocators.MyAllocator1.Guarantors,System.Int32)">
            <summary>
            Removes NewPatient from G1.PATIENTS if it NewPatient is present in G1.PATIENTS.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.op_Subtraction(System.Int32,OpenDental.Reporting.Allocators.MyAllocator1.Guarantors)">
            <summary>
            Removes NewPatient from G1.PATIENTS if it NewPatient is present in G1.PATIENTS.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.Subtract(System.Int32,OpenDental.Reporting.Allocators.MyAllocator1.Guarantors)">
            <summary>
            Removes NewPatient from G1.PATIENTS if it NewPatient is present in G1.PATIENTS.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.Subtract(OpenDental.Reporting.Allocators.MyAllocator1.Guarantors,System.Int32)">
            <summary>
            Removes NewPatient from G1.PATIENTS if it NewPatient is present in G1.PATIENTS.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.ArrayCopySmalltoLarge(System.Int32[],System.Int32[])">
            <summary>
            Copies arrays from Smallersize to Larger Size
            Leaving the last element(s) of the larger array empty
            </summary>
            <param name="??"></param>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.ArrayCopyLargetoSmall(System.Int32[],System.Int32[])">
            <summary>
            Copies arrays from Smallersize to Larger Size
            Dropping the last element(s) of the larger array empty
            </summary>
            <param name="??"></param>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.CompareTo(System.Object)">
            <summary>
            Return 0 if Guarantors are identical
            other wise returns comparison between guarantor numbers.
            Throws exception if obj is not type Guarantor or 
            if obj == null
            Note PATIENTS element of Guarantor must be in same order
            for them to be counted as the same.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.Guarantors.CompareArrays(System.Int32[],System.Int32[])">
            <summary>
            Note Arrays must be identical not same elements in different order
            </summary>
            <param name="a1"></param>
            <param name="a2"></param>
            <returns></returns>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.ODDataCheckQuerry.RawData">
            <summary>
            Selects all payments, Adjustments, and charges
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.ODDataCheckQuerry.CheckForNegPayments">
            <summary>
            Fields Selected Include:
            Patient.LName, 
            Patient.FName, 
            Patient.PatNum,
            tbl1.Date,
            tbl1.Ammount
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.ODDataCheckQuerry.CheckForNegCharges">
            <summary>
            Fields Selected Include:
            Patient.LName, 
            Patient.FName, 
            Patient.PatNum,
            tbl1.Date,
            tbl1.Ammount
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.ODDataCheckQuerry.GuarantorsOfPatient(System.UInt32[])">
            <summary>
            Finds all the guarantors associated with Patients
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.ODTable.CheckODTableSetup">
            <summary>
            Just Throws an exception if setup is bad.  Call only from a constructor.
            </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.ODTablesUsed.ODTablesPulled">
            <summary>
            The tables from which data is pulled to go into DansLedger
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.ODTablesUsed.ThrowException">
            <summary>Throws Exception.  Usefull for unimplemented methods.  Would like to add reflection. </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.ODTablesUsed.TableStateValid(OpenDental.Reporting.Allocators.MyAllocator1.ODTablesUsed)">
            <summary>Returns true if table is in the expected state to use with this dll. </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.ODTablesUsed.DllSafeToRun">
            <summary>Checks for the state of all tables in the _TablesUsed 
            and the dll is access from _ApprovedOD_Versions.  Just to make sure 
            dll is safe to run.  Put this here because of the very dynamic 
            state of opendental that if columns and tables get moved arround 
            this dll will become unstable creating bad things.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.ODTablesUsed.BuildStaticTableList">
            <summary>
            This is the main point where the tables used will be be built.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.Reporting.Allocators.MyAllocator1.ODTablesUsed.#ctor(System.String,System.String[],System.Type[])" -->
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemTypes.Charge">
            <summary>
            A charge item in the ledger = 0
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemTypes.Payment">
            <summary>
            A payment item in the ledger  = 1
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemTypes.NegAdjustment">
            <summary>
            A Negative Adjustment item in the ledger = 2
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemTypes.PosAdjustment">
            <summary>
            A Positive Adjustment item in the ledger = 3.  ie a Refund
            for an overpayment will have a positive adjustment to it.
            </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem">
            <summary>
            PP is for Payment Proccessor
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.m_IsChanged">
            <summary>
            Indicates wether LedgerItem Needs Updated.
            Currently the only fields affected are:
              IsAllocated
              m_DebugString
              AmtAllocated  
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.m_IsAllocated">
            <summary>
            Indicates wether the Charge or Refund Item is fully allocated
            to a payment or adjustment.
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.IsAllocated_OLD">
            <summary>
            Provides backward compatibility to GuarantorLedgerItemsCollection.  Not a PROPERTY but 
            and exposed Variable.  <B>Doesn't</B> flag IsChanged.  
            
            
            Watch this method because it may change m_IsAllocated when you do not want it to.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.m_AmtAllocated">
            <summary>
            Works with Property ALLOCATED_AMMOUNT
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.#ctor(OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemTypes,System.UInt32,System.UInt32,System.Int32,System.UInt32,System.DateTime,System.Decimal,System.UInt64,OpenDental.Reporting.Allocators.MyAllocator1.ODTablesUsed.ODTablesPulled)">
            <summary>
            Used for creating LedgerItems that can be sorted in a FIFO Manner
            Input values are similar to the Table Columns.  Readonly properties provided.
            IComparable Interface Provided for sorting  
            
            Strips time off of cDate
            
            Set cLedgerItemNumber =0 if unknown.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.#ctor(OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemTypes,System.UInt32,System.UInt32,System.UInt16,System.UInt32,System.DateTime,System.Decimal,System.UInt64,OpenDental.Reporting.Allocators.MyAllocator1.ODTablesUsed.ODTablesPulled,System.Boolean,System.Decimal,System.String)">
            <summary>
            2nd OverLoad has values IsAllocated, DebugString, AmtAllocated
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.SetConstructorValues(OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemTypes,System.UInt32,System.UInt32,System.UInt16,System.UInt32,System.DateTime,System.Decimal,System.UInt64,OpenDental.Reporting.Allocators.MyAllocator1.ODTablesUsed.ODTablesPulled,System.Boolean,System.String,System.Decimal)">
            <summary>
            Last 3 parameters are different.  Used if want to set IsAllocated, DebugString,or AmtAllocated
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.ALLOCATION_STRING">
            <summary>
            The unique number from the database assigned to this transaction
            </summary>
            <summary>
            A string that is usefull to see how things are allocated.  More used
            in debugging problems
            As allocation occurs string will be xxx,yyyy; xxxx2, yyyy2; xxx3,yyyy3
            where xxx is the LedgerItemNumber and yyyy is the amount alocated from this 
            ledger item number
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.ALLOCATED_AMMOUNT">
            <summary>
            Gets or sets the amount of this ledger items that is allocated
            When this value is set IS_CHANGED becomes true.
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.OD_TABLESOURCE">
            <summary>
            Holds the 
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.AmtUnallocated">
            <summary>
            Expects caller to be manipulating AmtAllocated Field.
            So this just returns this.AMMOUNT - this.AmtAllocated
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.IS_ALLOCATED">
            <summary>
            Returns true if Item has been allocated.  Also set IS_CHANGED = true;
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.AddAllocation(System.UInt64,System.Decimal,System.Int32)">
            <summary>
            Only to be used if you don't want to change the provider number
            assigned to this LedgerItem but you want 
            the ProviderNumber to Appear in the allocation string        
            </summary>
            <param name="LedgerItemNumber"></param>
            <param name="allocatedAmount"></param>
            <param name="ProvNum"></param>
            <returns></returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.AddAllocation(System.UInt64,System.Decimal)">
            <summary>
            Need a LedgerItemNumber to correlate allocation to
            ---Returns amount actually allocated.
            </summary>
            <param name="LedgerItemNumber"></param>
            <param name="allocatedAmount"></param>
            <returns>The amount actually allocated</returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.PP_LedgerItem.CompareTo(System.Object)">
            <summary>
            Returns -1 if Date of this is sooner than obj, 1 if later
            If Dates are the same then returns -1,0,1 by giving -1
            to the first items in this order Charge->Adjustment->Payment
            if ItemTypes are the same 0 is returned
            
            </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemsGenerator">
            <summary>
            A place to consolidate the queries for pulling data from opendental.
            A collection of classes that provide different sements of the SQL querry that pulls the different 
            opendental tables for the data we need to reconstruct a Ledger for a specific guarantor.
            
            Call  LedgerItemsRaw(guarantor, IsPulled) to return a datatable with Structure Defined in Columns
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemsGenerator.Columns">
            <summary>
            The columns in the data structor
            </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemsGenerator.ODTablesPulled">
            <summary>
            Used to distiquish what is the basic payment type.
            </summary>
            <summary>
            The tables from which data is pulled.  Put into an enumaration to minimize misspelling
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemsGenerator.ODPullString(System.Int32,System.Boolean)">
            <summary>
            Provides a string that will pull ledger items for a specific guarantor.  If Guarantor is 0 it 
            will attempt to pull all items for all guarantors.
            </summary>
            <param name="Guarantor"></param>
            <param name="IsPulledFlag"></param>
            <returns></returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemsGenerator.LedgerItemsRawCount(System.Int32,System.Boolean)">
            <summary>
            Returns the Number of Guarantors
            </summary>
            <param name="Guarantor"></param>
            <param name="IsPulledStatus"></param>
            <returns></returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemsGenerator.SQL_IsPulledCondition(OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemsGenerator.ODTablesPulled,System.Boolean)">
            <summary>
            The IsPulled Condtion was used to minimze the ammount of data that needed to be 
            accessed for reallocation by only dealling with new entries.  Currently We are not 
            using it but put it here in case I need it when I migrate it over to Opendental.
            </summary>
            <param name="IsPulled"></param>
            <returns></returns>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.LedgerItemsGeneratorInterface">
            <summary>
            Single required interface item - ODPullString(....)
            </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.PP_ODSQLPullStrings_LedgerItem">
            <summary>
            Used to Generate Query strings to pull the Ledger Data Required 
            to equalize payments from Opendental.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1.PP_ODSQLPullStrings_LedgerItem.HeaderOfQuery">
            <summary>
            Can be used to check to make sure queries return correct headers.
            </summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.PP_ODSQLPullStrings_LedgerItem.HeaderOfQueryEnum">
            <summary>
            Just for Reference Else where.  Should mathc HeaderOfQuery
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.PP_ODSQLPullStrings_LedgerItem.SetColumnNames(System.Data.DataTable@)">
            <summary>
            Whole idea here is to have a method that changes the column names to match
            what we believe the query should generate.  Throws an exception if
            the Column Count does not match that linsted in HeaderOfQuery
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.PP_ODSQLPullStrings_LedgerItem.ODPullString(System.Int64,System.Boolean)">
            <summary>
            Provides a string that will pull ledger items for a specific guarantor.  If Guarantor is 0 it 
            will attempt to pull all items for all guarantors.
            </summary>
            <param name="Guarantor"></param>
            <param name="IsPulledFlag"></param>
            <returns></returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.PP_ODSQLPullStrings_LedgerItem.PullAll_FromOD(System.Int64,System.Boolean)">
            <summary>
            Generates a Query string that should pull all the ledger items for a specific Guarantor.
            
            If Guarantor = 0 then it will pull for all Guarantors which is a lot of data.
            So check for this condition.
            
            <b>Note</b>: IsPulledFlag is currently depreciated 01-12-2008
            </summary>
            <param name="IsPulledFlag">indicates whether you want to pull items with the IsPulled status or not</param>
            <returns></returns>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.L1_NegativeAdjustments.ODPullString(System.Int64,System.Boolean)">
            <summary>
            Provides the String to select NegativeAdjustments from OD Adjustment Table
            </summary>
            <param name="Guarantor"></param>
            <param name="IsPulledFlag">Which state of flag do you want to pull</param>
            <returns></returns>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.L4b_PaymentsFromPayment">
            <summary>
            Used to replace L4_  when it was determined that we will not be using paysplit info
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1.PP_PaySplitItem.#ctor(System.Decimal,System.Int32,System.UInt64,OpenDental.Reporting.Allocators.MyAllocator1.ODTablesUsed.ODTablesPulled)">
            <summary>
            The PP_PaySplitItem will be a paysplit that matches a certain charge.  The identity of the
            original charge is contained in the table indicated by AllocFromTable and procedure number in this
            table (as indicated by AllocFromProcNum).
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.PP_PaySplitItem.ALLOCATED_FROM_TABLE">
            <summary>The PP_PaySplit is matches a payment to a procedure or charge.  This contains a value that indicates what the table is. </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.PP_PaySplitItem.ALLOCATED_FROM_NUM">
            <summary>The PP_PaySplit is matches a payment to a procedure or charge. This is the ProcNum or AdjNum or some other index Number that matches the  table indicated by ALLOCATED_FROM_TABLE</summary>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.MyAllocator1.PU">
            <summary>
            Programming Utilites (Kinda like snipits)
            </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.PU.Ex">
            <summary> Throws an exception with message given. </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.PU.MB">
            <summary> Message Box with "Message" as Caption </summary>
        </member>
        <member name="P:OpenDental.Reporting.Allocators.MyAllocator1.PU.Method">
            <summary>
            Returns the Name of the Calling Method. Needs Tested.
            If this works, I thought it is pretty cool.  Now you can tell where your
            error comes from.  Gives me goose bumps. - Dan Krueger
            </summary>
            <returns>Returns the Name of the Calling Method</returns>
        </member>
        <member name="T:OpenDental.Reporting.Allocators.IAllocate">
            <summary>
            This is the interface that is to describe how diffenrent allocators are supposed
            to work when allocating payments.
            
            Here is the model.
            	Payments arrive.  When they arrive an allocation event is to occur. The payement
            	can then be allocated by the set of rules given by the allocator which a programer
            	will create.  The Allocator created must conform to the method rules called by the
            	allocator interface.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1_ProviderPayment.AllocationTypeID">
            <summary>
            The id of this allocator.  Programmer assigned.
            </summary>
        </member>
        <member name="F:OpenDental.Reporting.Allocators.MyAllocator1_ProviderPayment.TABLE_COLUMNS">
            <summary>
            These are the columns used in the table defined in TABLENAME
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1_ProviderPayment.Allocate(System.Int32)">
            <summary>
            Where it All Happens.  The Ledger is Filled.  The EqualizePaymentsV2 runs the 
            algorithim that allocates the Ledger AND writes the values to 
            the table allocation_provider.  No Table is written to other than allocation_provider
            Fill uses only logic from the data in allocation_provider and current status of 
            various opendental tables to determine what needs to be changed.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1_ProviderPayment.AllocateWithOutToolCheck(System.Int32)">
            <summary>
            Does not check to see if Preferences are set in OD to handle this allocator.  This is only used in the Batch
            processing of the Allocator Tool.  Do not want the overhead of checking the preferences everytime the tool is run.
            Probably not a big deal unless it tries to get the preference from the Dbase every time.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1_ProviderPayment._AllocateExecute(System.Int64)">
            <summary>
            Where the actual allocation occurs.  Put it in this method so that we could run the allocator in different 
            circumstances.
            </summary>
            <param name="iGuarantor"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.Reporting.Allocators.MyAllocator1_ProviderPayment.AllocateWithToolCheck(System.Int64)" -->
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1_ProviderPayment.ValueString(System.Int32,System.UInt32,System.Int32,System.Int32,System.UInt64,System.Int32,System.UInt64,System.Decimal,System.Boolean)">
            <summary>
            Generates a string in form of '(#,#,#,#,#,#, ##.##, 0)' just so things match up.
            Designed to be used with a statement such as INSERT INTO `account` VALUES (1,'Checking Account',0,'',0,-1),(2,'Ca ....
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1_ProviderPayment.ValueStringHeader">
            <summary>
            The Header of the insert statement.  'INSERT INTO [tablename] (field1, field2...) VALUES '
            use with ValueString(int ...)
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1_ProviderPayment.TableExists(System.String)">
            <summary>
            Simple utility method to tell you if a table exits or not.
            </summary>
        </member>
        <member name="M:OpenDental.Reporting.Allocators.MyAllocator1_ProviderPayment.Generate_GuarantorList_ToAllocate">
            <summary>
            Returns a list of guarantors that require allocation. 
            Will look for a half finished job from previous.
            Returns null if user does not want to continue a suspended job.
            </summary>
        </member>
        <member name="T:OpenDental.LabelSingle">
            <summary></summary>
        </member>
        <member name="M:OpenDental.LabelSingle.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.LabelSingle.PrintPat(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.LabelSingle.PrintCarriers(System.Collections.Generic.List{System.Int64})">
            <summary></summary>
        </member>
        <member name="M:OpenDental.LabelSingle.PrintCarrier(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.LabelSingle.PrintReferral(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.LabelSingle.PrintAppointment(System.Int64)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ObjectDateComparer">
            <summary>This sorts a variety objects based on their dates and times.</summary>
        </member>
        <member name="M:OpenDental.ObjectDateComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>This sorts a variety objects based on their dates and times: Procedure, RxPat, Commlog, ClockEvent, TimeAdjust</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobileCtrl._controlIdCount">
            <summary>Each new control gets its own name using a unique id. This allows it to be uniquely identified and not mistaken for a different (similar) panel.</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobileCtrl._dragBitmap">
            <summary>Drag/drop icon image. Must be disposed after each use.</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobileCtrl._dragCursor">
            <summary>Drag/drop icon cursor. Must be disposed after each use.</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobileCtrl._scrollJump">
            <summary>Scroll position to jump on next timer tick if dragging near top/bottom of panelPreview.</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobileCtrl._formFloat">
            <summary>Allows this control to be floated in a separate form.</summary>
        </member>
        <member name="E:OpenDental.SheetEditMobileCtrl.SheetFieldDefSelected">
            <summary>Event thrown when new selection is made.</summary>
        </member>
        <member name="E:OpenDental.SheetEditMobileCtrl.HasMobileLayoutChanged">
            <summary>Event thrown when 'Use Mobile Layout' checkbox value changes. 
            Owner of this control should keep their version of SheetDef.HasMobileLayout in sync as this event fires.</summary>
        </member>
        <member name="E:OpenDental.SheetEditMobileCtrl.SheetFieldDefEdit">
            <summary>Event thrown when edit is requested. Normally only one item in the list which is the SheetDefNum of the SheetDef to be edited. 
            If this is a radio group then the list will include all SheetDefNums in the group.</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobileCtrl.SyncSheetFieldsWithDefualt">
            <summary>When true, synchs field ordering with the default language. True by default due to FomSheetDefEdit being true by defualt.</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobileCtrl._colorPanelBG">
            <summary>Background color of each panel and its children when not dragging.</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobileCtrl.TranslationProvider">
            <summary>Set this to provide Lan.g() translations.</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobileCtrl._tabOrderMobileToMimicTabOrder">
            <summary>True if user presses "Order fields from Desktop". Mimic the order from desktop into mobile.</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobileCtrl._languageCur">
            <summary></summary>
        </member>
        <member name="E:OpenDental.SheetEditMobileCtrl.AddMobileHeader">
            <summary>Event raised when user clicks Add Header button.</summary>
        </member>
        <member name="E:OpenDental.SheetEditMobileCtrl.NewMobileHeader">
            <summary>Event raised when user edits MobileHeader's UiLabelMobile.</summary>
        </member>
        <member name="E:OpenDental.SheetEditMobileCtrl.NewStaticText">
            <summary>Event raised when user edits StaticTexts's FieldValue.</summary>
        </member>
        <member name="P:OpenDental.SheetEditMobileCtrl.IsReadOnly">
            <summary>If true then edits are not allowed and many control events will be disabled.</summary>
        </member>
        <member name="P:OpenDental.SheetEditMobileCtrl.ScrollToSheetFieldDefNum">
            <summary>Next call to SheetDef setter will scroll to the panel which this PK belongs to. Used when adding a new field. 
            Will be reset after one-time use so stale value does not get scrolled later.</summary>
        </member>
        <member name="P:OpenDental.SheetEditMobileCtrl.SheetFieldDefs">
            <summary>Creates an internal deep copy of the SheetDef and it's SheetFieldDefs. The original object will not be modified.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.SetSheetDef(OpenDentBusiness.SheetDef)">
            <summary>Creates an internal deep copy of the SheetDef and it's SheetFieldDefs. The original object will not be modified.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.MergeMobileSheetFieldDefs(OpenDentBusiness.SheetDef,System.Boolean,System.Action{System.String})">
            <summary>SheetEditMobileCtrl is working with deep copies of the original list of SheetFieldDefs. 
            This method will merge any changes made by the control into the items of the provided sheetDef.SheetFieldDefs.
            Returns true if sheetDef.SheetFieldDefs items were modified. Otherwise, err Action will be invoked and returns false.
            Returns true and will not merge if sheetDef.IsMobileLayoutAllowed==false. Throws exceptions.
            This method does not save to the db. Calling method should save the final version of sheetDef to the db as needed.</summary>
            <param name="sheetDef">TabOrderMobile and UiLabelMobile of each item in sheetDef.SheetFieldDefs will be modified with values that were specified by SheetEditMobileCtrl 
            If an item is mobile-friendly, it will be given a TabOrderMobile>0 and a non-empty UiLabelMobile. TabOrderMobile will repeat for items in the same radio group.
            If an items is not mobile-friendly, it will be given a TabOrderMobile=0 and should be omitted from the mobile web layout.
            If HasMobileLayout is true then all mobile display labels will be validated and forced to be non-empty.
            This would prevent user from saving these changes to the db.</param>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.GetHighlightedFieldDefs(System.Collections.Generic.List{System.Int64})">
            <summary>Gets the fieldDefNums for Highlighted radio/checkbox controls.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.SetHighlightedFieldDefs(System.Collections.Generic.List{System.Int64})">
            <summary>Adds a highlighted border to panels which include any of the SheetFieldDefNums provided.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.ClearHighlights">
            <summary>Clear all highlighting previously set by SetHighlightedFieldDefs().</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.ShowModeless(System.String,System.Windows.Forms.Form,System.Drawing.Rectangle)">
            <summary>Show the modeless popup.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.HideModeless">
            <summary>Hides the modeless popup.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.UpdateLanguage(System.String)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.SetControlAndChildrenBackColor(System.Windows.Forms.Control,System.Drawing.Color)">
            <summary>Set the back color of the ctrl provided and any of its top-level children.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.TryStartDragging(OpenDental.IHasDragAttributes,System.Drawing.Point)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.panel_DragOver(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>Move scroll positions as we are dragging and approaching the top/bottom.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.panelPreview_Resize(System.Object,System.EventArgs)">
            <summary>Anchoring does not work when the parent control is a Panel. Use brute force anchoring.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.SheetEditMobileCtrl_GiveFeedback(System.Object,System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>Fires as a control is being dragged over the control.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.butOrderFields_Click(System.Object,System.EventArgs)">
            <summary>Orders the fields in the mobile view as close to the desktop order as possible.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.IsErroneousStaticText(OpenDentBusiness.SheetFieldDef)">
            <summary>Returns true if the Text field value is empty.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.IsErroneousCheckbox(OpenDentBusiness.SheetFieldDef,System.Windows.Forms.Control)">
            <summary>Returns true if fieldname is not null and UiLabelMobile is empty, or if the checkbox text is empty. Returns false otherwise.</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobileCtrl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.SheetEditMobileCtrl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.SheetEditMobileRadioButton">
            <summary>Draws an outline when highlighted.</summary>
        </member>
        <member name="P:OpenDental.SheetEditMobileRadioButton.IsHighlighted">
            <summary>Set to true to draw a red border around this panel. False removes the border.</summary>
        </member>
        <member name="T:OpenDental.SheetEditMobilePanel">
            <summary>Draws an outline when highlighted and manages width and padding. Decides if it is ok to click/drag.</summary>
        </member>
        <member name="F:OpenDental.SheetEditMobilePanel._buttonLabel">
            <summary>Displays double-click command in top-right.</summary>
        </member>
        <member name="P:OpenDental.SheetEditMobilePanel.Header">
            <summary>Displays UiLabelMobile in the top-left.</summary>
        </member>
        <member name="P:OpenDental.SheetEditMobilePanel.IsHeaderValid">
            <summary>Set to true to draw a red border around the header. False removes the border.</summary>
        </member>
        <member name="P:OpenDental.SheetEditMobilePanel.FieldType">
            <summary>Displays FieldType in bottom-left.</summary>
        </member>
        <member name="P:OpenDental.SheetEditMobilePanel.MobileHeader">
            <summary>Sets the text displayed in the middle-center of this control. Only used for MobileHeader.</summary>
        </member>
        <member name="P:OpenDental.SheetEditMobilePanel.IsHighlighted">
            <summary>Set to true to draw a red border around this panel. False removes the border.</summary>
        </member>
        <member name="P:OpenDental.SheetEditMobilePanel.ChildControlWidth">
            <summary>Returns the current width of this panel minus its right/left padding minus the width of its border.
            This can be used to determine the width of any child control which is added to this panel. Also used to resize child controls.</summary>
        </member>
        <member name="P:OpenDental.SheetEditMobilePanel.NeedsMove">
            <summary>Used with mobile tab order when order cannot be determined. This item could not be ordered and will need to be ordered manually.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobilePanel.#ctor(System.Func{System.Boolean})">
            <summary>Sets several pertinent fields that make this a SheetEditMobilePanel instead of a plain FlowLayoutPanel.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobilePanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Draw a border. Black if not highlighted, red if highlighted.</summary>
        </member>
        <member name="T:OpenDental.SheetEditMobilePreviewPanel">
            <summary>When there's only 1 control in the panel and the user clicks on it, .NET tries to scroll to the control. 
            This invariably forces the panel to scroll up. This little hack prevents that.</summary>
        </member>
        <member name="M:OpenDental.SheetEditMobilePreviewPanel.ScrollControlIntoView(System.Windows.Forms.Control,System.Boolean)">
            <summary>Scrolls the specified child control into view with default behavior. 
            Use this when you actually want to scroll to the control.</summary>
        </member>
        <member name="T:OpenDental.DragAttributes">
            <summary>Helper class to be used by customer controls to facilitate drag and drop much easier.</summary>
        </member>
        <member name="M:OpenDental.DragAttributes.HasStartedDragging(System.Drawing.Point)">
            <summary>Returns true if X or Y position of mouse has changed by 10 pixels since mouse has been down.</summary>
        </member>
        <member name="M:OpenDental.DragAttributes.StartMouseDown(System.Drawing.Point)">
            <summary>Call on MouseDown to indicate that this panel is now eligible for click or drag.</summary>
        </member>
        <member name="M:OpenDental.DragAttributes.DisableMouseEvents">
            <summary>Call on MouseUp to indicate that this panel is no longer eligible for click or drag.</summary>
        </member>
        <member name="T:OpenDental.IHasDragAttributes">
            <summary>Indicates that implementer has a DragAttributes instance and can be drag/dropped.</summary>
        </member>
        <member name="F:OpenDental.UserControlScreenTooth.IsMolar">
            <summary>If true, represents the back teeth.</summary>
        </member>
        <member name="F:OpenDental.UserControlScreenTooth.IsLing">
            <summary>If true, represents the top row of teeth</summary>
        </member>
        <member name="F:OpenDental.UserControlScreenTooth.IsRightSide">
            <summary>If true, represents the right side of the patient's mouth</summary>
        </member>
        <member name="F:OpenDental.UserControlScreenTooth.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlScreenTooth.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlScreenTooth.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:OpenDental.ScreenToothChart.GetTeeth">
            <summary>Returns a list of tooth controls, listed from left to right, then right to left taking first top, then bottom as you are looking at the tooth chart.</summary>
        </member>
        <member name="P:OpenDental.ScreenToothChart.GetPrimaryTeeth">
            <summary>Returns a list of tooth controls for primary teeth, listed from left to right, then right to left taking first top, then bottom as you are looking at the tooth chart.</summary>
        </member>
        <member name="F:OpenDental.ScreenToothChart.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ScreenToothChart.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.ScreenToothChart.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.SheetComboBox.DefaultOption">
            <summary>A default option for the combo box to display.  Required to be set for screening tooth chart combo boxes.  E.g. "ling", "b".</summary>
        </member>
        <member name="M:OpenDental.SheetComboBox.#ctor">
            <summary>Currently fills the combo box with the default options for combo boxes on screen charts.</summary>
        </member>
        <member name="M:OpenDental.SheetComboBox.ToFieldValue">
            <summary>Formats the selected option and the list of options in a string that can be saved to the database.</summary>
        </member>
        <member name="F:OpenDental.SheetComboBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.SheetComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.SheetComboBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.MessageBox">
            <summary>Purposefully overrides or hides System.Windows.Forms.MessageBox from the entire OpenDental namespace by extending ODMessageBox.
            This is so that we can inject our own code prior to System.Windows.Forms.MessageBox.Show().
            This is necessary due to the fact that a progress window (or our splash screen) could be showing to a user and a question might need to be asked.
            Since all of our progress windows are UIs that are owned by a separate thread, we need to invoke over to the progress window and ask it
            to act as the "owner" of the dialog that we are about to show to the user so that it always shows on top of the progress window.</summary>
        </member>
        <member name="T:OpenDental.MsgBoxCopyPaste">
            <summary>Used in order to allow for our centralized printing logic to extend to MsgBoxCopyPaste in Codebase. Use only in OD proper.</summary>
        </member>
        <member name="F:OpenDental.MsgBoxCopyPaste.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.MsgBoxCopyPaste.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.MsgBoxCopyPaste.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.ControlFamilyEcw">
            <summary>Not actually specific to eCW.  Using this for all HL7 interfaces where hl7def.ShowDemographics=Hide.</summary>
        </member>
        <member name="F:OpenDental.ControlFamilyEcw.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ControlFamilyEcw.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.ControlFamilyEcw.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.ControlImageDisplay">
            <summary>This is the control that shows the actual image or mount for the imaging module. It is always nested either inside FormImageFloat or in ControlImageDock.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay.ColorFore">
            <summary>Color for drawing lines and text.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay.ColorTextBack">
            <summary>Color for background of text. Can be transparent.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay.DidLaunchFromChartModule">
            <summary>Tracks when this form was launched from the Chart Module to prevent specific behavior when deleted.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay.ImageSelector_">
            <summary>For a few things, an actual reference to the imageSelector of the parent is handy.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._nodeTypeKeyCatSelected">
            <summary>The currently selected node type, key, and category.  This is specific to each window.  Can be null if nothing selected, which will cause pasted items to go to DefaultImageCategoryImportFolder pref if a DefNum exists, first category otherwise.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay.PatFolder">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._bitmapArrayShowing">
            <summary>Typically just one bitmap at idx 0.  Windowing (brightness/contrast) has already been applied. Does not have applied crop, flip, rotation, mount translation, global translation, or zoom.  If it's a mount, there is one for each mount position, and some can be null.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._documentArrayShowing">
            <summary>Typically just one document at idx 0.  For mounts, there is one for each mount position, which all start out null.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._bitmapDicomRaw">
            <summary>This contains the raw image data for a single selected doc or mount item.  Used for Dicom instead of the usual _bitmapRaw.  Can be null.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._bitmapRaw">
            <summary>Only used when a single doc or mount item is selected.  This is the raw image that is the basis for BrightContrast adjustments.  Mount image might be scaled but it won't have any color adj.  If scaled, it's the same ratio as original.  We use width to calc scale, since height could be off by a partial pixel.  Does not have applied crop, flip, rotation, etc.  If the current selected bitmap is a Dicom image, then see _arrayDicomRaw instead.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._cropPanAdj">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._cursorPan">
            <summary>Looks like an open hand.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._idxImageDraw">
            <summary>Used in Line mode and in Line Point editing. The index within _listImageDraws that we are editing.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._idxPoint">
            <summary>Only for Line Point editing. The index within the imageDraw.DrawingSegment.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._idxSelectedInMount">
            <summary>The index of the currently selected item within a mount. 0-indexed.  Frequently -1 to indicate no selection. No relation to mountItem.ItemOrder.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._idxTextMouseDown">
            <summary>Will normally be -1.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._isLineStarted">
            <summary>Todo: let Esc key cancel out of this.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay.labelHover">
            <summary>This is the label that goes on panelHover</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._listImageDraws">
            <summary>All the ImageDraw rows for this document or mount.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._listMountItems">
            <summary>If a mount is currently selected, this is the list of the mount items on it. This is pulled from the database, and then the other two lists (_bitmapArrayShowing and _documentArrayShowing) are set to match this in length so that all three have a 1:1:1 relationship.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._listPointFsDrawing">
            <summary>For drawings and polygons.  This is just a temporary list while the mouse is down.  All points are in bitmap or mount coords. As the mouse is moved this list gets longer. On mouse up, it gets saved to the db, this list of points gets cleared, and panel invalidated.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._mountShowing">
            <summary>Keeps track of the currently selected mount object (only when a mount is selected).</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay.panelHover">
            <summary>For Pearl hover effect. Could be a window, but panel was slightly faster and easier. No logic for crashing into bounds. They can pan.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._pointDragNow">
            <summary>When dragging mount bitmap, this is the current point of the bitmap, in mount coordinates.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._pointDragStart">
            <summary>When dragging mount item, this is the starting point of the center of the mount item where raw image will draw, in mount coordinates.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._pointMeasureText">
            <summary>A temporary point where text measurement will show. Also see _stringMeasure.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._pointTextOriginal">
            <summary>Location of text in our memory object in list changes as we drag. Update goes to db on mouse up. Because the original point gets lost, this point is needed in order to calulate new text location.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._pointTranslation">
            <summary>This translation is added to the bitmaps showing, based on user drags.  It's in bitmap/mount coords, not screen coords.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._pointTranslationOld">
            <summary>When mouse down, this is recorded as the _pointTranslation for delta purposes while dragging.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._rectangleCrop">
            <summary>In panel coords.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._showDrawingsOD">
            <summary>Does not control showing drawings for Pearl or any other external source.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._showDrawingsPearlToothParts">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._showDrawingsPearlPolyAnnotations">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._showDrawingsPearlBoxAnnotations">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._showDrawingsPearlMeasurements">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._stringMeasure">
            <summary>Temporary text that will show for measurement. Also see _pointMeasureText.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._odWebView2">
            <summary>Displays PDFs.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._odWebView2FilePath">
            <summary>The location of the file that <see cref="F:OpenDental.ControlImageDisplay._odWebView2" /> has navigated to.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._zoomSliderStateInitial">
            <summary>This is needed as we switch betwen windows, in order to set the zoomSlider.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay._zoomSliderValue">
            <summary>Property backer.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDisplay.EventFillTree">
            <summary>Use this to trigger a FillTree in the parent. Bool true to keep selection, or false to not select anything.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDisplay.EventGotODFocus">
            <summary>With the various nested WPF and Winforms controls, focus wasn't working reliably, so this is an alternative built from scratch.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDisplay.EventSelectTreeNode">
            <summary>Use this to trigger a SelectTreeNode in the parent. When refreshing a mount, it must be done at parent level instead of here in order to include unmounted bar, etc. Pass null to reselect current node.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDisplay.EventSetCropPanEditAdj">
            <summary>This event bubbles up to the parent, which then sets the property here.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDisplay.EventSetDrawMode">
            <summary>This event bubbles up to the parent, which then calls SetDrawMode() here.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDisplay.EventSetWindowingSlider">
            <summary>This event is fired from SetWindowingSlider, which makes the decisions about the windowing for what's showing.  The event bubbles up to the parent to set windowingSlider min and max.  But there is no property here to affect.  Separately, the parent can call SetWindowingSlider, which will then also fire this event like normal. Finally, in windowingSlider_Scroll, the parent directly sets min and max on the document within this window.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDisplay.EventResetZoomSlider">
            <summary>This event bubbles up to the parent, which then sets the property here.  This sets the zoom slider so that the middle tick will be at the "fit" zoom.  This is needed any time the image is rotated or cropped, or if the form size changes.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDisplay.EventThumbnailNeedsRefresh">
            <summary>This event is fired when the thumbnail needs to be refreshed.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDisplay.EventZoomSliderSetByWheel">
            <summary>This event bubbles up to the parent, which then sets the property here.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDisplay.EventZoomSliderSetValueAndMax">
            <summary>If you use this event, you must also set the ZoomSliderValue.</summary>
        </member>
        <member name="P:OpenDental.ControlImageDisplay.ZoomSliderStateInitial">
            <summary>When SetZoomSlider is called, the "fit" zoom is calculated and stored here. Then, EventSetZoomSlider is raised, which causes the parent to set the zoom here. This is all repeated any time image is rotated or cropped or if form size changes.</summary>
        </member>
        <member name="P:OpenDental.ControlImageDisplay.ZoomSliderValue">
            <summary>This allows the value to flow down into this window.  To send zoom setting up to parent and zoomSlider, there are a 3 events.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.ClearPDFBrowser">
            <summary>Disposes and recreates a new CloudIframe control for ODCloud that is hidden.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.DeleteDocument(System.Boolean,System.Boolean,OpenDentBusiness.Document)">
            <summary>Deletes the specified document from the database and refreshes the tree view. Set securityCheck false when creating a new document that might get cancelled.  Document is passed in because it might not be in the tree if the image folder it belongs to is now hidden.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.EnableToolBarButtons">
            <summary>Sets appropriate toolBarButtons for document vs mount vs none/category. Works by firing off EventEnableToolBarButtons so ControlImages can actually do the work.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.formVideo_BitmapCapturedMount(System.Object,System.Drawing.Bitmap,OpenDentBusiness.Document)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.GetAvailSlots(System.Int32)">
            <summary>Returns a list of available slots, starting with the one selected.  It will loop back around at the end to fill remaining slots.  Will return null if not enough slots.  But if you supply countNeed -1, then it will give you a list of all available.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.GetBitmapShowing(System.Int32)">
            <summary>Specify 0 when a single document is selected, or specify the idx within a mount.  Pulls from _arrayBitmapsShowing. Can return null. Windowing (brightness and contrast) is already applied.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.GetDocumentShowing(System.Int32)">
            <summary>Specify 0 when a single document is selected, or specify the idx within a mount.  Pulls from _documentArrayShowing. Can return null. It is optional to use this instead of using _documentArrayShowing directly. The advantage is that's it's safer in certain situations where _documentArrayShowing might be null or length might be incorrect.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.GetMountShowing">
            <summary>Returns null if no mount showing.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.GetNodeTypeAndKey">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.GetSelectedType">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.GetSelectedPriKey">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.HideWebBrowser">
            <summary>Returns true if the CloudIframe control was hidden for ODCloud. Otherwise; false.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.InvalidateSettingsColor">
            <summary>Invalidates the color image setting and recalculates.  This is not on a separate thread.  Instead, it's just designed to run no more than about every 300ms, which completely avoids any lockup.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.IsBitmapShowing">
            <summary>Returns true if a bitmap is showing.  False for mounts.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.IsDocumentShowing">
            <summary>Returns true if a valid document is showing.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.IsMountShowing">
            <summary>Returns true if a valid mount is showing.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.IsMountItemSelected">
            <summary>Returns true if a valid mountitem is selected and there's a valid bitmap in that location.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.OnFillTree(System.Boolean)">
            <summary>This raises EventFillTree. It's a bit convoluted, but the FillTree event then bubbles up to ControlImages, where it calls FillImageSelector, the tree on the left.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.PreselectFirstItem">
            <summary>If a mount is showing, and if no item is selected, then this will select the first open item. If one is already selected, but it's occupied, this does not check that.  There is also no guarantee that one will be selected after this because all positions could be full.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.SelectTreeNode2(OpenDental.UI.NodeTypeAndKey,System.String)">
            <summary>Must run ClearObjects before calling this.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.SetCropPanAdj(OpenDental.EnumCropPanAdj)">
            <summary>One of these 3 states is active at any time.  This allows the value to flow down into this window.  To send cropPanAdj up to parent, use the event.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.SetDocumentShowing(System.Int32,OpenDentBusiness.Document)">
            <summary>Specify 0 when a single document is selected, or specify the idx within a mount.  Sets the value of the element in _arrayDocumentsShowing.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.SetDrawMode(OpenDental.EnumDrawMode)">
            <summary>One of these 6 modes is active at any time.  This allows the value to flow down into this window.  Also see EventSetDrawMode, which bubbles requests up to the parent.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.SetWindowingSlider">
            <summary>This is the part of the flow for taking the current windowing settings for a doc and passing them up to parent so that the slider matches.  Dragging the slider skips all this and the parent sets the windowing directly.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.SetZoomSliderToFit">
            <summary>This sets the zoom slider so that the middle tick will be at the "fit" zoom.  This is needed any time the image is rotate or cropped, or if the form size changes.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.ToolBarCopy_Click(System.Object,System.EventArgs)">
            <summary>Three to four objects will end up on clipboard: 1:NodeTypeAndKey, 2:Bitmap(if it's an image type), 3:FileDrop, 4:Database name (if NodeTypeAndKey is not null). For images, the filedrop will point to a temp copy of the saved bitmap.  For non-images, filedrop will point to the original file.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.ToolBarPaste_Click(System.Object,System.EventArgs)">
            <summary>Copy/paste that's entirely within OD will use PK of mount or doc in order to preserve windowing, rotation, crop etc.  Paste from outside OD prefers a bitmap.  If no bitmap, then it will use a filedrop which could include multiple files.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.ToolBarPasteTypeAndKey(OpenDental.UI.NodeTypeAndKey,System.Boolean)">
            <summary>This is used when pasting and a previous OD image was copied to the pinboard.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.CalcLengthLine(System.Collections.Generic.List{System.Drawing.PointF})">
            <summary>Calculates in pixels, which separately get converted according to scale.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.ClearObjects">
            <summary>Mostly to dispose of the old bitmaps all in one place.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.ControlPointToBitmapPointF(System.Drawing.Point)">
            <summary>Converts a point in panelMain into a point in _bitmapShowing, with origin at UL.  If mount, then it's coords within entire mount.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.CreateMountThumbnail">
            <summary>The thumbnail is retrieved in Mounts.GetThumbnail. This strategy is different than document because it must be done while we already have the files open.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.DownloadDocumentNoteFile(OpenDental.UI.NodeTypeAndKey)">
            <summary>For API. Downloads the file contained in a document's note field, if there is one to be downloaded. A url must be prepended with a "_download_:" prefix or a base64 string with a "_rawBase64_:" prefix, which is removed upon successful download. The new file is saved in the current patient's folder.  </summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.DrawDocument(System.Drawing.Graphics)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.DrawMount(System.Drawing.Graphics)">
            <summary>Used for drawing on screen in real time and also for drawing to printer.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.GetCurrentCategory">
            <summary>Gets the DefNum category of the current selection.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.HitTestHover(System.Drawing.PointF)">
            <summary>Only for Pearl. Pass in bitmap or mount coords. Looks for polygon or square (Line) that meets criteria for hover. Returns index within _listImageDraws, or -1 if no hit.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.HitTestInMount(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Pass in panel or mount coords. Returns index of item in mount, or -1 if no hit.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.HitTestLine(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>Returns true for hit.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.HitTestText(System.Drawing.Point)">
            <summary>Pass in panel coords because of text rotation. Returns index of text item, or -1 if no hit.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.LoadBitmap(System.Int32,OpenDental.EnumLoadBitmapType)">
            <summary>Loads bitmap from disk, resizes, applies bright/contrast, and saves it to _arrayBitmapsShowing and/or _bitmapRaw.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.LoadPdf(System.String,System.String,System.String,System.String)">
            <summary>Displays the PDF in an ODWebView2 control. Downloads the PDF file from the cloud if necessary.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.SetBitmapShowing(System.Int32,System.Drawing.Bitmap)">
            <summary>>Specify 0 when a single document is selected, or specify the idx within a mount.  Sets the element in _arrayBitmapsShowing.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.ToolBarMeasure_Click">
            <summary>Only when clicking on Line Measure in the toolbar.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.ToolBarSetScale_Click">
            <summary>Only when clicking on the button in the toolbar.  The window is separately shown when clicking on a line to set scale.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.ToolBarImportMount">
            <summary>Supports multiple file imports (unless in Appstream), and user doesn't actually need to select a mount item first.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.ToolBarImportSingle">
            <summary>Not importing to mount. Supports multiple imports at once (unless in AppStream).</summary>
        </member>
        <member name="F:OpenDental.ControlImageDisplay.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.ControlImageDisplay.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.WindowingEventArgs">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ControlImageDock">
            <summary>This control is always present in the Imaging module. It's a container with a header that looks like the title bar of a window. It contains a ControlImageDisplay to show docked images/mounts. When there is no docked image, then ControlImageDisplay=null and this shows as all white with no title bar as an indicator to the user.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDock.ControlImageDisplay_">
            <summary>Will be null if no image showing.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDock.FuncListFloaters">
            <summary>This lets us get a list of all floater windows from ControlImages at the moment when we pop up the window selector.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDock._isImageFloatSelected">
            <summary>Property backer.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDock._windowImageFloatWindows">
            <summary>Gets reused.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDock.EventButClicked">
            <summary>A button was clicked in WindowImageFloatWindows or ImageDockHeader. This event must bubble up to ControlImages where it's handled.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDock.EventGotODFocus">
            <summary>With the various nested WPF and Winforms controls, I couldn't get this to focus reliably, so this is an alternative built from scratch.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDock.EventImageClosed">
            <summary>This is analogous to FormClosed. Fires when user clicks X or when image is cleared.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDock.EventWinPicked">
            <summary>User clicked on the list to pick a new window.  Bubbles up to ControlImages, where it's handled. The index passed includes the docker in position 0.</summary>
        </member>
        <member name="E:OpenDental.ControlImageDock.EventPopFloater">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ControlImageDock.IsImageFloatSelected">
            <summary>This is analogous to FormODBase.IsImageFloatSelected. True if this control is the "selected" image.  Only one should be selected at a time.  Any image that is not selected will have the title bar turn white to indicate so. When ControlImageDisplay is set to null, this gets set to false.</summary>
        </member>
        <member name="P:OpenDental.ControlImageDock.Text">
            <summary>This is what shows in the title bar.</summary>
        </member>
        <member name="M:OpenDental.ControlImageDock.SetControlImageDisplay(OpenDental.ControlImageDisplay)">
            <summary>Pass in null to clear out image.</summary>
        </member>
        <member name="F:OpenDental.ControlImageDock.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ControlImageDock.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.ControlImageDock.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.DashIndividualDiscount">
            <summary>Doesn't look like it's actually possible to use from dashboard.</summary>
        </member>
        <member name="F:OpenDental.DashIndividualDiscount._discountPlanSub">
            <summary>The subscriber for the discount plan. Can be an newly instantiated sub with no valid values if no discount plan.</summary>
        </member>
        <member name="F:OpenDental.DashIndividualDiscount._discountPlan">
            <summary>The discount plan for the patient. Can be an newly instantiated plan with no valid values if the patient does not have a discount plan.</summary>
        </member>
        <member name="F:OpenDental.DashIndividualDiscount._discountAmtUsed">
            <summary>The total of all discount plan adjustments for the current date range segment for DateTime.Now.</summary>
        </member>
        <member name="F:OpenDental.DashIndividualDiscount.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.DashIndividualDiscount.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.DashIndividualDiscount.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlAccountAdjustments.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlAccountAdjustments.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlAccountAdjustments.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlAccountClaimReceive.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlAccountClaimReceive.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlAccountClaimReceive.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlEnterpriseAppts.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseAppts.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseAppts.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseFamily.ValidateEntries">
            <summary>Checks preferences that take user entry for errors, returns true if all entries are valid.</summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseFamily.FillHiddenPrefs">
            <summary>Load values from database for hidden preferences if they exist.  If a pref doesn't exist then the corresponding UI is hidden.</summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseFamily.GetHiddenPrefString(OpenDentBusiness.PrefName)">
            <summary>Returns the ValueString of a pref or null if that pref is not found in the database.</summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseFamily.FillOptionalPrefBool(OpenDental.UI.CheckBox,OpenDentBusiness.PrefName)">
            <summary>Helper method for setting UI for boolean preferences.  Some of the preferences calling this may not exist in the database.</summary>
        </member>
        <member name="F:OpenDental.UserControlEnterpriseFamily.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseFamily.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseFamily.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlEnterpriseReports.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseReports.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseReports.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlEnterpriseManage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseManage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseManage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseAccount.FillHiddenPrefs">
            <summary>Load values from database for hidden preferences if they exist.  If a pref doesn't exist then the corresponding UI is hidden.</summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseAccount.FillOptionalPrefBool(OpenDental.UI.CheckBox,OpenDentBusiness.PrefName)">
            <summary>Helper method for setting UI for boolean preferences.  Some of the preferences calling this may not exist in the database.</summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseAccount.GetHiddenPrefString(OpenDentBusiness.PrefName)">
            <summary>Returns the ValueString of a pref or null if that pref is not found in the database.</summary>
        </member>
        <member name="F:OpenDental.UserControlEnterpriseAccount.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseAccount.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseAccount.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseGeneral.ValidateEntries">
            <summary>Checks preferences that take user entry for errors, returns true if all entries are valid.</summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseGeneral.FillHiddenPrefs">
            <summary>Load values from database for hidden preferences if they exist.  If a pref doesn't exist then the corresponding UI is hidden.</summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseGeneral.GetHiddenPrefString(OpenDentBusiness.PrefName)">
            <summary>Returns the ValueString of a pref or null if that pref is not found in the database.</summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseGeneral.FillOptionalPrefBool(OpenDental.UI.CheckBox,OpenDentBusiness.PrefName)">
            <summary>Helper method for setting UI for boolean preferences.  Some of the preferences calling this may not exist in the database.</summary>
        </member>
        <member name="F:OpenDental.UserControlEnterpriseGeneral.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseGeneral.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlEnterpriseGeneral.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlOrtho._orthoAutoProcCodeNum">
            <summary>Set to the OrthoAutoProcCodeNum Pref value on load.  Can be changed by the user via this form.</summary>
        </member>
        <member name="F:OpenDental.UserControlOrtho._listOrthoPlacementCodeNums">
            <summary>Filled upon load.</summary>
        </member>
        <member name="F:OpenDental.UserControlOrtho.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlOrtho.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlOrtho.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlMainWindowMisc.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlMainWindowMisc.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlMainWindowMisc.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlMainWindow.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlMainWindow.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlMainWindow.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlAccountGeneral.butClearAgingBeginDateT_Click(System.Object,System.EventArgs)">
            <summary>Clear the DateTime value which is used as the lock. Requires SecurityAdmin permission.</summary>
        </member>
        <member name="F:OpenDental.UserControlAccountGeneral.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlAccountGeneral.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlAccountGeneral.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlAccountClaimSend.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlAccountClaimSend.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlAccountClaimSend.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlAccountPayments.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlAccountPayments.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlAccountPayments.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlAccountRecAndRepCharges.PromptRecurringRepeatingChargesTimes(System.Object,System.EventArgs)">
            <summary>Turning on automated repeating charges, but recurring charges are also enabled and set to run before auto repeating charges.  Prompt user that this is unadvisable.</summary>
        </member>
        <member name="F:OpenDental.UserControlAccountRecAndRepCharges.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlAccountRecAndRepCharges.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlAccountRecAndRepCharges.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlApptAppearance.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlApptAppearance.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlApptAppearance.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlApptGeneral.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlApptGeneral.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlApptGeneral.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlChartGeneral._diseaseDefNum">
            <summary>Helps store and set the Prefs for desease, medications, and alergies in the Chart Module when clicking OK on those forms.</summary>
        </member>
        <member name="F:OpenDental.UserControlChartGeneral.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlChartGeneral.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlChartGeneral.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlChartProcedures.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlChartProcedures.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlChartProcedures.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlServerConnections.FillComboComputers">
            <summary>Fills comboServerName with a list of all computer names on the network.</summary>
        </member>
        <member name="M:OpenDental.UserControlServerConnections.FillComboDatabases">
            <summary>Fills comboDatabase with a list of all database names on the selected server.</summary>
        </member>
        <member name="M:OpenDental.UserControlServerConnections.GetComputerNames">
            <summary>Gets a list of all computer names on the network (this is not easy)</summary>
        </member>
        <member name="M:OpenDental.UserControlServerConnections.GetDatabases">
            <summary>Get the Databases available based on the server/computer selected from comboServerName. Returns empty array if comboServerName.Text is empty.</summary>
        </member>
        <member name="F:OpenDental.UserControlServerConnections.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlServerConnections.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlServerConnections.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlFamilyGeneral.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlFamilyGeneral.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlFamilyGeneral.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlFamilyInsurance.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlFamilyInsurance.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlFamilyInsurance.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlExperimentalPrefs.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlExperimentalPrefs.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlExperimentalPrefs.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlImagingGeneral._imageCategoryDefault">
            <summary>Helps store and set the default Image Category to import to in the Image Module.</summary>
        </member>
        <member name="F:OpenDental.UserControlImagingGeneral.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlImagingGeneral.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlImagingGeneral.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlManageBillingStatements.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlManageBillingStatements.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlManageBillingStatements.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlManageGeneral.FillComboEraAutomation">
            <summary>Fills ComboEraAutomation with EraAutomationMode enum values. Excludes EraAutomationMode.UseGlobal because that value only applies to Carrier.EraAutomationOverride.</summary>
        </member>
        <member name="M:OpenDental.UserControlManageGeneral.FillEraPaymentTypeCombos">
            <summary>Fills the CHK, ACH, FWT, and ERADefault comboboxes. If no def is chosen yet "None" is put in there</summary>
        </member>
        <member name="F:OpenDental.UserControlManageGeneral.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlManageGeneral.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlManageGeneral.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlTreatPlanFreqLimit.UpdateProcCodesPref(OpenDentBusiness.PrefName,System.String,System.String,System.String@)">
            <summary>The preference passed is assumed to be comma-delimited list of procedure codes.
            Updates and returns true if all proc codes in textProcCodes are valid. Otherwise, we add these codes to errorMessage and returns false.</summary>
        </member>
        <member name="F:OpenDental.UserControlTreatPlanFreqLimit.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlTreatPlanFreqLimit.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlTreatPlanFreqLimit.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlTreatPlanGeneral.UpdateProcCodesPref(OpenDentBusiness.PrefName,System.String,System.String,System.String@)">
            <summary>The preference passed is assumed to be comma-delimited list of procedure codes.
            Updates and returns true if all proc codes in textProcCodes are valid. Otherwise, we add these codes to errorMessage and returns false.</summary>
        </member>
        <member name="F:OpenDental.UserControlTreatPlanGeneral.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlTreatPlanGeneral.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlTreatPlanGeneral.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.UserControlHostedURL.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.UserControlHostedURL.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.UserControlHostedURL.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:OpenDental.User_Controls.SetupWizard.UserControlSetupWizDefinitions._selectedDefCatOpt">
            <summary>Gets the currently selected DefCat along with its options.</summary>
        </member>
        <member name="P:OpenDental.User_Controls.SetupWizard.UserControlSetupWizDefinitions._listDefsCur">
            <summary>All definitions for the current category, hidden and non-hidden.</summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizDefinitions.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizDefinitions.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizDefinitions.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizFeeSched._listFeeScheds">
            <summary>Copy of the cached fee schedules.</summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizFeeSched._isChanged">
            <summary>Stale deep copy of _listFeeScheds to use with sync.</summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizFeeSched.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizFeeSched.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizFeeSched.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizEmployee.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizEmployee.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizEmployee.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizPrinter.SetControls(System.Windows.Forms.Control)">
            <summary>recursive</summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizPrinter.SetSimple">
            <summary>Sets the simple hide based on the status of the checkbox</summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizPrinter.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizPrinter.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizPrinter.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizRegKey.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizRegKey.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizRegKey.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizClinic.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizClinic.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizClinic.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizPractice._listProviders">
            <summary>Deep copy of the short providers cache.  Refilled every time FillControls() is invoked.</summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizPractice.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizPractice.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizPractice.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizOperatory.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizOperatory.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizOperatory.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizFeatures.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizFeatures.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizFeatures.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizProvider.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizProvider.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizProvider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizComplete.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizComplete.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizComplete.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.SetupWizControl.IsDone">
            <summary>Set IsDone to true when the user has completed setting the control up. 
            This must be set to true at some point within the control that extends this.</summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.SetupWizControl.StrIncomplete">
            <summary>Make sure to translate before setting this string.</summary>
        </member>
        <member name="T:OpenDental.User_Controls.SetupWizard.SetupWizControl.ControlValidated">
            <summary>Add an event to this if something needs to be done before the user exits the control, such as validation or error checking.
            Return a boolean.</summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.SetupWizControl.OnControlDone">
            <summary>Add an event to this if something needs to be done when the user exits the control.
            For example, if database calls need to be made when the user clicks "Next".</summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.SetupWizControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.SetupWizControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.SetupWizControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizIntro.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizIntro.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizIntro.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.User_Controls.SetupWizard.UserControlSetupWizSchedule.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizSchedule.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.SetupWizard.UserControlSetupWizSchedule.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.UserControlReportSetup.FillGrids">
            <summary>If any columns are reordered or added to this grid, they will need to be considered in the GridCell_Click event below.
            This refreshes every grid on the form.</summary>
        </member>
        <member name="M:OpenDental.User_Controls.UserControlReportSetup.ReportPermissionsSetAllForGroup">
            <summary>Remove all permissions tied to reports for the selected group and add one permission with FKey of 0 to access everything.</summary>
        </member>
        <member name="M:OpenDental.User_Controls.UserControlReportSetup.ReportPermissionsSetNoneForGroup">
            <summary>Remove all permissions tied to reports for the selected group.</summary>
        </member>
        <member name="M:OpenDental.User_Controls.UserControlReportSetup.grid_CellClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>This method is used by all grids in this form. If any new grids are added, they will need to be added to this method.</summary>
        </member>
        <member name="M:OpenDental.User_Controls.UserControlReportSetup.GetInternalName(OpenDentBusiness.DisplayReport)">
            <summary>Returns the appropriate user-friendly internal name.</summary>
        </member>
        <member name="M:OpenDental.User_Controls.UserControlReportSetup.CommitChange">
            <summary>Commit changes that the user might have made to the display name.</summary>
        </member>
        <member name="F:OpenDental.User_Controls.UserControlReportSetup.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.User_Controls.UserControlReportSetup.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.User_Controls.UserControlReportSetup.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.DashPatPicture.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.DashPatPicture.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.DashPatPicture.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.DashToothChartLegend.SetData(OpenDental.PatientDashboardDataEventArgs,OpenDentBusiness.SheetField)">
            <summary></summary>
        </member>
        <member name="F:OpenDental.DashToothChartLegend.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.DashToothChartLegend.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.DashToothChartLegend.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.DashToothChart._imgToothChart">
            <summary>Disposed</summary>
        </member>
        <member name="M:OpenDental.DashToothChart.GetTreatProcTPs(System.Collections.Generic.List{OpenDentBusiness.Procedure})">
            <summary>Returns a list of limited versions of ProcTP corresponding to the Procedures in listProcs.  Intended to mimic the logic in 
            ContrTreat.LoadActiveTP, on a limited data basis in order to extract the necessary data to create a ToothChart.</summary>
        </member>
        <member name="F:OpenDental.DashToothChart.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.DashToothChart.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.DashToothChart.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.DashLabel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.DashLabel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.DashLabel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:OpenDental.IDashWidgetField.SetData(OpenDental.PatientDashboardDataEventArgs,OpenDentBusiness.SheetField)">
            <summary>Directly sets data required for display, rather than querying the database for this information.</summary>
        </member>
        <member name="M:OpenDental.IDashWidgetField.RefreshData(OpenDentBusiness.Patient,OpenDentBusiness.SheetField)">
            <summary>Refreshes all the data required for display.  Must be implemented to be able to run on a thread.</summary>
        </member>
        <member name="M:OpenDental.IDashWidgetField.RefreshView">
            <summary>Refreshes the view.  Must be implemented in a way to safely invoke back to the UI thread.</summary>
        </member>
        <member name="T:OpenDental.PatientDashboardDataEventArgs">
            <summary>This class is in flux. We are moving away from the LoadData model and will instead be using the PatientData object in the future. But it has to be changed over gradually, so this class will be a little bit chaotic during the transition.</summary>
        </member>
        <member name="T:OpenDental.DraggableControl">
            <summary>Derive from this class when you want to drag a control around it's parent.</summary>
        </member>
        <member name="F:OpenDental.DraggableControl.IsDragging">
            <summary>Indicates if this control is currently being dragged</summary>
        </member>
        <member name="F:OpenDental.DraggableControl.IsMouseDown">
            <summary>Indicates if mouse is currently down on this control.</summary>
        </member>
        <member name="F:OpenDental.DraggableControl.MouseLocationOnMouseDownStart">
            <summary>The current location of the mouse when control is being dragged</summary>
        </member>
        <member name="E:OpenDental.DraggableControl.DragDone">
            <summary>Event thrown when a drag event is complete. User was dragging but then picked the left mouse up or mouse left the control.</summary>
        </member>
        <member name="F:OpenDental.DraggableControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.DraggableControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.DraggableControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl._isSigningEnabled">
            <summary>TODO: Replace this flag with a new flag on the email address object.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl._patient">
            <summary>Used when sending to get Clinic.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl._listImageParts">
            <summary>If the message is an html email with images, then this list contains the raw image mime parts.  The user must give permission before converting these to images, for security purposes.  Gmail also does this with images, for example.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl._listAppParts">
            <summary>If the message is an html email with attached applications (can be images also), then this list contains the raw image mime parts.  The user must give permission before converting these to images, for security purposes.  Gmail also does this with images, for example.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl._listEmailAddresses">
            <summary>The list of email addresses in email setup. Primarly used for matching From address to internal EmailAddress.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl.EmailAddressPreview">
            <summary>Can be null. Should be set externally before showing this control to the user. Otherwise will attempt to match _emailMessage.FromAddress
            against an EmailAddress object found in Email Setup.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl._listHistoricContacts">
            <summary>List of recommended emails to be show on email releated textboxes.
            Usually history of all email messages regarding a specific inbox/outbox.
            These email messages are "light" such that the do not include body text or raw email data.
            These messages must be "light" in order to prevent from bloating memory.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl._hasSetHistoricContacts">
            <summary>True if the thread has finished filling _listHistoricContacts.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl._listHideInFlags">
            <summary>List of all HideInFlags, except None.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl._isPreview">
            <summary>True when the control is being used to preview an email.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OpenDental.EmailPreviewControl._hasMessageTextChanged" -->
        <member name="F:OpenDental.EmailPreviewControl._patNum">
            <summary>_patient's PatNum. 0 if _patient is null.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl._clinicNum">
            <summary>_patient's ClinicNum. 0 if _patient is null.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl.HtmlText">
            <summary>string to return the updated htmlText for a composing or sent email. webBrowser.DocumentText doesn't always work. </summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl._lockHistoricContacts">
            <summary>lock for _listHistoricContacts and _hasSetHistoricContacts.</summary>
        </member>
        <member name="P:OpenDental.EmailPreviewControl.IsHtml">
            <summary>returns true if the current view is the HTML web browser, false if it is currently on the plain text box.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.TryGetFromEmailAddress(OpenDentBusiness.EmailAddress@,System.String)">
            <summary>Attempts to retrive the EmailAddress corresponding to the address in textFromAddress.
            Use fromAddressOverride when the controls textFromAddress.Text has not been loaded yet.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.LoadEmailMessage(OpenDentBusiness.EmailMessage,System.Collections.Generic.List{OpenDentBusiness.EmailMessage},System.Boolean)">
            <summary>Loads the given emailMessage into the control.
            Set listEmailMessages to messages to be considered for the auto complete contacts pop up.  When null will query.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.SetFieldsForSecureEmailReply">
            <summary>The addresses participating on a secure email chain are locked once the chain is started,
            so we disable all address fields when composing a reply to a secure email.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.ParseMIME">
            <summary>Parses the EmailMessage for MIME encoding and performs necessary adjustments.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.DisplayEmailUnsafe">
            <summary>Attempts to wire EmailMessage into UI.  Can throw.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.FixReceivedEmailWithInvalidHtmlType">
            <summary>Implemented in job B39379 to address a bug that incorrectly changed the HTML type of received emails to EmailType.Html.
            That type is Open Dental's custom markup used for composing emails. Open Dental never receives emails in that format.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.InitializeHtmlEmail(System.Boolean)">
            <summary>Sets the email preview window to show the web browser for viewing HTML.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.RefreshView(System.Boolean,System.Boolean)">
            <summary>Refreshes the email preview pane to show the web browser when viewing HTML and the editable text if not.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.SetHistoricContacts(System.Collections.Generic.List{OpenDentBusiness.EmailMessage})">
            <summary>Returns distinct list of email strings to be recommended to user.
            Splits all email address fields into a large list of individual addresses into one large distinct list.
            When given list is null, will run query.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.InitEmailShowInListBox">
            <summary>Loads HideInFlags descriptions into listShowIn</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.RefreshShowIn">
            <summary>Refreshes listShowIn according to current emailmessage selections in GridSent/GridInbox</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.GetHideInFlagFromShowIn">
            <summary>Builds a HideInFlags flag from listShowIn</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.IsORU_R01message(System.String)">
            <summary>Attempts to parse message and detects if it is an ORU_R01 HL7 message.  Returns false if it fails, or does not detect message type.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.ReplaceTemplateFields(System.String,OpenDentBusiness.Patient,OpenDentBusiness.Appointment,OpenDentBusiness.Clinic)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.ParseAndSaveAttachement(System.String,System.String,System.Collections.Generic.List{Health.Direct.Common.Mime.MimeEntity})">
            <summary>Accepts a list of MimeEntity and parses it for paths, htmls and other key factors. It will test that the resulting parts
            have a valid image extension. If they do, they are saved to a temporary web page for presentation to the user. If they are not
            then they are disreguarded an a message is sent to the user warning them of potentially malicious content.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.SaveMsg(OpenDentBusiness.EmailMessage)">
            <summary>Saves the UI input values into the emailMessage.  Allowed to save message with invalid fields, so no validation here.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.RecommendedEmailHelper(OpenDental.ODtextBox,System.Windows.Forms.Keys)">
            <summary>Creates a list box under given textBox filled with filtered list of recommended emails based on textBox.Text values.
            Key is used to navigate list indirectly.</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.TextBox_LostFocus(System.Object,System.EventArgs)">
            <summary>Fires after EmailAuto_Click()</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.EmailAuto_Click(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>Fires before TextBox_LostFocus()</summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.CloseAndSetRecommendedContacts(OpenDental.UI.GridOD,System.Boolean)">
            <summary>Resets tags to null and hides the given grid.
            If isSelectionMade is true, will set textBox.Text to selected item.</summary>
        </member>
        <member name="F:OpenDental.EmailPreviewControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.EmailPreviewControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.GraphScheduleDay">
            <summary>This control is comprised of an outer SplitContainer which houses the sorting group box on top and the graphing panel on bottom. The bottom graphing panel is also a SplitContrainer in itself. This is to accomodate scrolling of the graph region only. The x-axis region is in the bottom panel of the SplitContainer graphing panel and will not be scrolled.</summary>
        </member>
        <member name="F:OpenDental.GraphScheduleDay.barHeightPixels96">
            <summary>Height of bar at 96dpi. 14.</summary>
        </member>
        <member name="P:OpenDental.GraphScheduleDay.TotalTime">
            <summary>Derived from StartHour and EndHour</summary>
        </member>
        <member name="P:OpenDental.GraphScheduleDay.StartTime">
            <summary>Derived from StartHour</summary>
        </member>
        <member name="P:OpenDental.GraphScheduleDay.EndTime">
            <summary>Derived from EndHour</summary>
        </member>
        <member name="F:OpenDental.GraphScheduleDay._compareScheduleLists">
            <summary>Current sort choice</summary>
        </member>
        <member name="F:OpenDental.GraphScheduleDay._schedulesList">
            <summary>Sorted and filtered list of schedules to display</summary>		
        </member>
        <member name="F:OpenDental.GraphScheduleDay._schedules">
            <summary>Raw list of schedules from the database. These will be sorted and filtered in various ways for display purposes.</summary>		
        </member>
        <member name="M:OpenDental.GraphScheduleDay.panel1_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>Draw the graph region</summary>
        </member>
        <member name="M:OpenDental.GraphScheduleDay.panel2_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>Draw the x-axis region</summary>
        </member>
        <member name="M:OpenDental.GraphScheduleDay.checkBoxNotes_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Filter our dispaly and remove Practice notes</summary>
        </member>
        <member name="M:OpenDental.GraphScheduleDay.checkBoxProviders_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Filter our dispaly and remove Providers</summary>
        </member>
        <member name="M:OpenDental.GraphScheduleDay.checkBoxEmployees_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Filter our dispaly and remove Employees</summary>
        </member>
        <member name="M:OpenDental.GraphScheduleDay.timerRefresh_Tick(System.Object,System.EventArgs)">
            <summary>Redraw the graph so the current time bar gets moved. Once per minute.</summary>
        </member>
        <member name="F:OpenDental.GraphScheduleDay.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.GraphScheduleDay.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.GraphScheduleDay.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.ScheduleListComparer">
            <summary>Sort a list of Schedules given a sort criteria</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.ScheduleListComparer.CompareNames(OpenDentBusiness.Schedule,OpenDentBusiness.Schedule)" -->
        <member name="T:OpenDental.ScheduleStartComparer">
            <summary>Sort a list of Schedules given a sort criteria</summary>
        </member>
        <member name="F:OpenDental.DashApptGrid._isFullRefresh">
            <summary>Indicates the appointment grid is executing a full refresh, ie queries are run.  Used to scroll the grid to the end when the Patient
            Dashboard is fully refreshed, which occurs when the selected patient changes or the user clicks "Refresh".</summary>
        </member>
        <member name="M:OpenDental.DashApptGrid.IsSelectedApptOtherNull">
            <summary>Returns true if SelectedApptOther is null or is set to an appointment with an AptNum that is not in the database.
            If SelectedApptOther was null or set to a valid appointment but is now invalid (no longer in the database) then a warning message will display
            to the user and RefreshAppts will be invoked in order to remove the invalid appt from the UI.</summary>
        </member>
        <member name="F:OpenDental.DashApptGrid.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.DashApptGrid.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.DashApptGrid.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.ODcodeBox._lineNumberWidth">
            <summary>Set to -1 when the line number width needs to be recalculated.</summary>
        </member>
        <member name="F:OpenDental.ODcodeBox._lineNumberSize">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ODcodeBox._listIndicesOfNewLines">
            <summary>Holds the indexes of each newline char within _stringTextMain.  Set to null when needed to recalculate.</summary>
        </member>
        <member name="F:OpenDental.ODcodeBox._stringFormatForDrawingNumbers">
            <summary>The string format that keeps the numbers on the left centered and aligned with the adjacent text.</summary>
        </member>
        <member name="F:OpenDental.ODcodeBox._stringFormatForNumbers">
            <summary>The actual format that goes into the parenthesis of the ToString() to format the string. E.g. {0:D3}</summary>
        </member>
        <member name="M:OpenDental.ODcodeBox.OnTextChanged(System.EventArgs)">
            <summary>Recalculates the line numbers on every text change.</summary>
        </member>
        <member name="M:OpenDental.ODcodeBox.LineNumberRecalculate">
            <summary>Nulls out variables so that the text boxes recalculate their contents on paint.</summary>
        </member>
        <member name="M:OpenDental.ODcodeBox.GetPosFromCharIndex(System.Int32)">
            <summary>Fills a memory address to quickly get the point of the char index within the RichTextBox from the Windows API wrapper.  This is MUCH faster than using RichTextBox.GetPositionFromCharIndex().</summary>
        </member>
        <member name="T:OpenDental.SmsThreadView">
            <summary>For SMS Text Messaging.  Used in the Text Messaging window to display an SMS message thread much like a cell phone.
            Since users are used to seeing text message threads on cell phones, this control will be intuitive to users.</summary>
        </member>
        <member name="F:OpenDental.SmsThreadView._smsThreadPage">
            <summary>Keeps track of what page we're on.</summary>
        </member>
        <member name="P:OpenDental.SmsThreadView.ListSmsThreadMessages">
            <summary>Set this value externally before showing the control.</summary>
        </member>
        <member name="F:OpenDental.SmsThreadView.CountMessagesToDisplay">
            <summary>The number of text messages to display per page.</summary>
        </member>
        <member name="F:OpenDental.SmsThreadView._listSmsThreadToDisplay">
            <summary>The list of messages to display on this page.</summary>
        </member>
        <member name="M:OpenDental.SmsThreadView.UpdateLastRichTextBoxText(System.String)">
            <summary>Updates the last RichTextBox in the view with the given message. Returns false if there are no messages.</summary>
        </member>
        <member name="M:OpenDental.SmsThreadView.UpdateRichTextBoxText(System.Int32,System.String)">
            <summary>Updates the RichTextBox for the given index and message. Returns false if index is invalid.</summary>
        </member>
        <member name="M:OpenDental.SmsThreadView.CleanAiResponse(System.String)">
            <summary>Removes un-wanted text that OpenAi includes in their response.</summary>
        </member>
        <member name="M:OpenDental.SmsThreadView.AddOrUpdatePanelScrollChildControl(System.Windows.Forms.Control)">
            <summary>Returns the control which previsouly existing in the panel or returns the new control if it was added.</summary>
        </member>
        <member name="M:OpenDental.SmsThreadView.SetDoubleBuffered(System.Windows.Forms.Control,System.Boolean)">
            <summary>Allows us to set the protected DoubleBuffered property on any Control.</summary>
        </member>
        <member name="M:OpenDental.SmsThreadView.TextBoxMessage_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>Logic for the below method of adapting TextBox's copy method as that funcionality does not exist for RichTextBox</summary>
        </member>
        <member name="F:OpenDental.SmsThreadView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.SmsThreadView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.SmsThreadView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.SmsThreadMessage.ID">
            <summary>Context specific.  Must be a unique ID which can identify the message within the SmsThreadView control.</summary>
        </member>
        <member name="F:OpenDental.SmsThreadMessage.MsgDateTime">
            <summary>The date and time the message was sent or received.</summary>
        </member>
        <member name="F:OpenDental.SmsThreadMessage.Message">
            <summary>The message itself.</summary>
        </member>
        <member name="F:OpenDental.SmsThreadMessage.IsAlignedLeft">
            <summary>If true, the message will be left aligned.  Otherwise the message will be right aligned.  Left aligned messages will be messages from
            the patient, and right aligned messages will be from the office.  The left/right alignment is used as a quick way to show the user who
            wrote each part of the message thread.</summary>
        </member>
        <member name="F:OpenDental.SmsThreadMessage.IsImportant">
            <summary>Causes the message text to show in red.</summary>
        </member>
        <member name="F:OpenDental.SmsThreadMessage.UserName">
            <summary>If not null, then shows next to the date and time.</summary>
        </member>
        <member name="F:OpenDental.TextBoxWiki.paintIsBlocked">
            <summary>This gets set externally to prevent flicker while dragging text.</summary>
        </member>
        <member name="F:OpenDental.TextBoxWiki.MouseIsDownOnSelectedText">
            <summary>Once this is set to true, it will stay true until mouse up.</summary>
        </member>
        <member name="E:OpenDental.TextBoxWiki.TextChangedWiki">
            <summary></summary>
        </member>
        <member name="P:OpenDental.TextBoxWiki.ContextMenuStripWiki">
            <summary></summary>
        </member>
        <member name="P:OpenDental.TextBoxWiki.SelectedText">
            <summary></summary>
        </member>
        <member name="P:OpenDental.TextBoxWiki.SelectionLength">
            <summary></summary>
        </member>
        <member name="P:OpenDental.TextBoxWiki.SelectionStart">
            <summary></summary>
        </member>
        <member name="P:OpenDental.TextBoxWiki.ReadOnly">
            <summary></summary>
        </member>
        <member name="P:OpenDental.TextBoxWiki.Text">
            <summary></summary>
        </member>
        <member name="M:OpenDental.TextBoxWiki.BlockPainting(System.Boolean)">
            <summary>This gets set externally to prevent flicker while dragging text.</summary>
        </member>
        <member name="F:OpenDental.TextBoxWiki.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.TextBoxWiki.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.TextBoxWiki.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:OpenDental.UserControlDashboardWidget.WidgetClosed">
            <summary>Event is fired when the 'Close' context menu item is clicked.</summary>
        </member>
        <member name="E:OpenDental.UserControlDashboardWidget.RefreshClicked">
            <summary>Event is fired when the 'Refresh' context menu item is clicked.</summary>
        </member>
        <member name="F:OpenDental.UserControlDashboardWidget.LayoutManager">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UserControlDashboardWidget.RefreshSheetField(OpenDentBusiness.SheetField)">
            <summary>Handles how each type of SheetField should be drawn to the control.</summary>
        </member>
        <member name="M:OpenDental.UserControlDashboardWidget.IsSheetFieldDefSupported(OpenDentBusiness.SheetFieldDef)">
            <summary>Determines if the SheetFieldDef is supported in a Patient Dashboard.</summary>
        </member>
        <member name="M:OpenDental.UserControlDashboardWidget.GetControlTypeForDisplay(OpenDentBusiness.SheetField)">
            <summary>Determines which Type of Control will be used in the UserControlDashboardWidget for various SheetField.FieldTypes</summary>
        </member>
        <member name="M:OpenDental.UserControlDashboardWidget.IsSheetFieldDrawnDirectlyToGraphics(OpenDentBusiness.SheetField)">
            <summary>Determines if a SheetField will be drawn directly to the UserControlDashboardWidget's graphics, rather than creating its own control.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlDashboardWidget.CleanupDisplay">
            <summary>Removes any controls that are no longer included in the SheetDef, i.e. SheetFieldDef was removed in between refreshes.</summary>
        </member>
        <member name="M:OpenDental.UserControlDashboardWidget.GetSheetFieldID(OpenDentBusiness.SheetField)">
            <summary>Gets a unique id for the field, since the field has not been inserted into the database and therefore does not have a PK.</summary>
        </member>
        <member name="M:OpenDental.UserControlDashboardWidget.CreateControl(OpenDentBusiness.SheetField,System.Type)">
            <summary>Creates a new Control of Type type, setting its Name as a unique identifier corresponding to properties in field.
            Hooks up appropriate events so that drag/drop on the control causes the UserControlDashboardWidget to be dragged/dropped.</summary>
        </member>
        <member name="F:OpenDental.UserControlDashboardWidget.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlDashboardWidget.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlDashboardWidget.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:OpenDental.UserControlDashboard.WidgetWidth">
            <summary>The width of the widest open UserControlDashboardWidget.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.UserControlDashboard.Initialize(OpenDentBusiness.SheetDef,System.Action,System.Action)" -->
        <member name="M:OpenDental.UserControlDashboard.RefreshDashboard">
            <summary>Causes the refresh thread to either start, or wakeup and refresh the data in the background and refresh the UI on the main thread.</summary>
        </member>
        <member name="M:OpenDental.UserControlDashboard.AddWidget(OpenDentBusiness.SheetDef)">
            <summary>Adds a new Widget to the current Dashboard container.</summary>
        </member>
        <member name="F:OpenDental.UserControlDashboard.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlDashboard.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlDashboard.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.DashIndividualInsurance">
            <summary>This is used in both the dashboard and in ControlTreat.  We paint instead of using controls because it's snappier, but mostly because we couldn't do it any other way. Dynamic addition of controls does not play well with LayoutManager and threads.</summary>
        </member>
        <member name="F:OpenDental.DashIndividualInsurance.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.DashIndividualInsurance.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.DashIndividualInsurance.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.DashFamilyInsurance">
            <summary>This is used in both the dashboard and in ControlTreat.  We paint instead of using controls because it's snappier, but mostly because we couldn't do it any other way. Dynamic addition of controls does not play well with LayoutManager and threads.</summary>
        </member>
        <member name="F:OpenDental.DashFamilyInsurance.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.DashFamilyInsurance.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.DashFamilyInsurance.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlEmailTemplate.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlEmailTemplate.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlEmailTemplate.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:OpenDental.UserControlReminderAgg.ListTagsExludedFromAutoReply">
            <summary>These tags are not allowed in confirmation auto reply.</summary>
        </member>
        <member name="P:OpenDental.UserControlReminderAgg.ListTagsExludedFromArrivalResponseComeIn">
            <summary>These tags are not allowed in Arrival Response or Come In sms messages.</summary>
        </member>
        <member name="M:OpenDental.UserControlReminderAgg.AddCalendarTagErrors">
            <summary>Validates the AddToCalendar tag. Adds to the error list if the AddToCalendar tag is present but not signed up for eConfirmations</summary>
        </member>
        <member name="F:OpenDental.UserControlReminderAgg.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlReminderAgg.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlReminderAgg.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.UserControlReminderMessage._doCheckDisclaimer">
            <summary>Set in constructor. If the boolean is not passed in this will default to true</summary>
        </member>
        <member name="M:OpenDental.UserControlReminderMessage.AddCalendarTagErrors">
            <summary>Validates the AddToCalendar tag. Adds to the error list if the AddToCalendar tag is present but not signed up for eConfirmations</summary>
        </member>
        <member name="F:OpenDental.UserControlReminderMessage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlReminderMessage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlReminderMessage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UserControlSecurityUserGroup">
            <summary>This control contains the User and User Group edit tabs for use in FormSecurity 
            and FormCentralSecurity so that any changes need not be made in multiple places.
            The implementing class should handle all the "Security Events" listed in the designer.</summary>
        </member>
        <member name="F:OpenDental.UserControlSecurityUserGroup._isFillingList">
            <summary>When true, various selection and click methods will not be executed. 
            Set to true when loading/filling lists/grids.
             If this is set to true, ALWAYS set it back to false when you are done.</summary>
        </member>
        <member name="F:OpenDental.UserControlSecurityUserGroup._dictProvNumProvs">
            <summary>Used to filter the list of users shown in the "Users" tab.</summary>
        </member>
        <member name="F:OpenDental.UserControlSecurityUserGroup._selectedUser">
            <summary>The currently selected user. Should not be used except for in the selected user property.</summary>
        </member>
        <member name="F:OpenDental.UserControlSecurityUserGroup.contextMenuUsers">
            <summary>This context menu makes it so you can right click a user in the userGrid and select 'Copy User'</summary>
        </member>
        <member name="T:OpenDental.UserControlSecurityUserGroup.SecurityTabsEventHandler">
            <summary>The form that implements this control should use their own Add and Edit User/UserGroup forms.</summary>
        </member>
        <member name="T:OpenDental.UserControlSecurityUserGroup.SecurityTreeEventHandler">
            <summary>An eventhandler that returns a DialogResult, so that the form that implements this security tree 
            can use their own Report Permission and Group Permission forms. The result of this event is passed into the Security Tree.</summary>
        </member>
        <member name="P:OpenDental.UserControlSecurityUserGroup.SelectedUser">
            <summary>The user selected in the "Users" tab. Setting the SelectedUser to null or a user that does not exist in the listbox does nothing.</summary>
        </member>
        <member name="P:OpenDental.UserControlSecurityUserGroup.SelectedUserGroup">
            <summary>The usergroup selected in the "User Groups" tab. 
            Setting the SelectedUserGroup to null or a usergroup that does not exist in the listbox does nothing.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityUserGroup.FillFilters">
            <summary>Fills the filter comboboxes on the "Users" tab.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityUserGroup.GetFilteredUsersHelper">
            <summary>Returns a filtered list of userods that should be displayed. Includes CEMT users when IsCEMT is true.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityUserGroup.RefreshUserTree">
            <summary>Refreshes the security tree in the "Users" tab.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityUserGroup.RefreshUserTabGroups">
            <summary>Refreshes the UserGroups list box on the "User" tab. Also refreshes the security tree. 
            Public so that it can be called from the Form that implements this control.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityUserGroup.FillGridUsers">
            <summary>Fills gridUsers. Public so that it can be called from the Form that implements this control.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityUserGroup.FillListUserGroupTabUserGroups">
            <summary>Fills listUserGroupTabUserGroups. Public so that it can be called from the Form that implements this control.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityUserGroup.FillAssociatedUsers">
            <summary>Fills listAssociatedUsers, which displays the users that are currently associated to the selected usergroup.
            This also dynamically sets the height of the control.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityUserGroup.tabControlMain_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>We need to refresh the selected tab to display updated information.</summary>
        </member>
        <member name="F:OpenDental.UserControlSecurityUserGroup.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityUserGroup.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlSecurityUserGroup.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.SecurityEventArgs">
            <summary>A rather generic EventArgs class that can contain specific Security Object types (Userod, UserGroup, or GroupPermission).</summary>
        </member>
        <member name="T:OpenDental.UserControlSecurityTree">
            <summary>Security Tree control so that any changes to the security tree do not have to be made in multiple places. Only used in UserControlUserGroupSecurity (which itself is implemented in FormSecurity and FormCentralSecurity).</summary>
        </member>
        <member name="F:OpenDental.UserControlSecurityTree._listUserGroupNums">
            <summary>This should contain one item when editing permissions. Can contain multiple when viewing permissions for a user.</summary>
        </member>
        <member name="F:OpenDental.UserControlSecurityTree._isCEMT">
            <summary></summary>
        </member>
        <member name="T:OpenDental.UserControlSecurityTree.SecurityTreeEventHandler">
            <summary>An eventhandler that returns a DialogResult, so that the form that implements this security tree 
            can use their own Report Permission and Group Permission forms.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.FillTreePermissionsInitial">
            <summary>Fills the tree with the initial permission nodes.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.UserControlSecurityTree.FillTreePerm" -->
        <member name="M:OpenDental.UserControlSecurityTree.SetNode(System.String)">
            <summary>Only called from FillTreePermissionsInitial</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.SetNode(OpenDentBusiness.EnumPermType)">
            <summary>This just keeps FillTreePermissionsInitial looking cleaner.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.GetNodeStatusForPerm(OpenDentBusiness.EnumPermType,System.Collections.Generic.List{OpenDentBusiness.GroupPermission},System.Collections.Generic.List{System.Int64})">
            <summary>Returns an integer associated to the TreeNode.ImageIndex for the passed in PermType. Determined by the amount of FKeys.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.FillNodes(System.Windows.Forms.TreeNode,System.Collections.Generic.List{System.Int64})">
            <summary>A recursive function that sets the checkbox for a node.  Also sets the text for the node.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.SetAll">
            <summary>Gives the current usergroup all permissions. There should only be one usergroup selected when this is called.  Throws exceptions.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.FillForUserGroup(System.Int64)">
            <summary>Sets the current usergroup and refills the tree.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.FillForUserGroup(System.Collections.Generic.List{System.Int64})">
            <summary>Sets the current usergroups and refills the tree.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.CheckFKeyPermissions(OpenDentBusiness.GroupPermission,OpenDental.UserControlSecurityTree.SecurityTreeEventHandler,System.Object,OpenDental.SecurityEventArgs)">
            <summary>Only call this if the PermType has non-zero FKeys and needs to open a form to provide individual permission selection (i.e. Reports, AdjustmentTypeDeny, etc). Otherwise, let treePermissions_MouseDown() take care of the toggling.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.treePermissions_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>Toggles permissions based on the node the user has clicked. 
            Will do nothing if in Read-Only mode or more than one usergroup is selected.</summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.treePermissions_DoubleClick(System.Object,System.EventArgs)">
            <summary>Allows users to edit the date locks on specific permissions or select adjustment types for AdjustmentTypeDeny permission.
            Does nothing if in ReadOnly mode or if more than one UserGroup is selected.</summary>
        </member>
        <member name="F:OpenDental.UserControlSecurityTree.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlSecurityTree.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.ValidDate">
            <summary></summary>
            <summary></summary>
        </member>
        <member name="F:OpenDental.ValidDate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.ValidDate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenDental.ValidDate.#ctor">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ValidDate.Value">
            <summary>You can use this instead of getting and setting Text.  Will throw exception if you try to Get when IsValid=false.</summary>
        </member>
        <member name="M:OpenDental.ValidDate.IsValid">
            <summary>Returns true if a valid date has been entered. This replaces the older construct: if(textAbcd.errorProvider1.GetError(textAbcd)!="")</summary>
        </member>
        <member name="M:OpenDental.ValidDate.Validate">
            <summary>Triggers a validate when we change the text externally.  Rarely used.</summary>
        </member>
        <member name="M:OpenDental.ValidDate.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ValidDate.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ValidPhone">
            <summary>A simple text box that will automatically format phone numbers for US and Canadian users as the user types.</summary>
        </member>
        <member name="M:OpenDental.ValidPhone.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ValidPhone.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ValidTime">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ValidTime.IsValid">
            <summary>Returns true if a valid time has been entered.</summary>
        </member>
        <member name="P:OpenDental.ValidTime.IsShortTimeString">
            <summary>Default is false, meaning the format should look like '10:05:30 PM' for en-us. If short true, format should look like '10:05 PM'.</summary>
        </member>
        <member name="M:OpenDental.ValidTime.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ValidTime.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ValidTime.ClearError">
            <summary>Gets rid of the orange exlamation circle.</summary>
        </member>
        <member name="T:OpenDental.CallFireService.SMSService">
            <remarks/>
        </member>
        <member name="M:OpenDental.CallFireService.SMSService.#ctor">
            <remarks/>
        </member>
        <member name="E:OpenDental.CallFireService.SMSService.sendSMSCampaignCompleted">
            <remarks/>
        </member>
        <member name="M:OpenDental.CallFireService.SMSService.sendSMSCampaign(System.String,System.String[],System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.CallFireService.SMSService.sendSMSCampaignAsync(System.String,System.String[],System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.CallFireService.SMSService.sendSMSCampaignAsync(System.String,System.String[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.CallFireService.SMSService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:OpenDental.CallFireService.sendSMSCampaignCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.CallFireService.sendSMSCampaignCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.CallFireService.sendSMSCampaignCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Mobile">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.#ctor">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.ServiceExistsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.GetCustomerNumCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.IsPaidCustomerCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.DeleteObjectsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.DeleteAllRecordsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchPatientsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchAppointmentsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchPrescriptionsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchProvidersCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchPharmaciesCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.GetUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SetMobileWebUserPasswordCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SetPracticeTitleCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SetPreferenceCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.GetPatientPortalAddressCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchLabPanelsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchLabResultsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchMedicationsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchMedicationPatsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchAllergiesCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchAllergyDefsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchDiseasesCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchDiseaseDefsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchICD9sCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchStatementsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchDocumentsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.SynchRecallsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.MobileWeb.Mobile.DeletePatientsRecordsCompleted">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.ServiceExists">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.ServiceExistsAsync">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.ServiceExistsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.GetCustomerNum(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.GetCustomerNumAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.GetCustomerNumAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.IsPaidCustomer(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.IsPaidCustomerAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.IsPaidCustomerAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.DeleteObjects(System.String,OpenDental.MobileWeb.DeletedObject[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.DeleteObjectsAsync(System.String,OpenDental.MobileWeb.DeletedObject[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.DeleteObjectsAsync(System.String,OpenDental.MobileWeb.DeletedObject[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.DeleteAllRecords(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.DeleteAllRecordsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.DeleteAllRecordsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchPatients(System.String,OpenDental.MobileWeb.Patientm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchPatientsAsync(System.String,OpenDental.MobileWeb.Patientm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchPatientsAsync(System.String,OpenDental.MobileWeb.Patientm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchAppointments(System.String,OpenDental.MobileWeb.Appointmentm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchAppointmentsAsync(System.String,OpenDental.MobileWeb.Appointmentm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchAppointmentsAsync(System.String,OpenDental.MobileWeb.Appointmentm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchPrescriptions(System.String,OpenDental.MobileWeb.RxPatm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchPrescriptionsAsync(System.String,OpenDental.MobileWeb.RxPatm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchPrescriptionsAsync(System.String,OpenDental.MobileWeb.RxPatm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchProviders(System.String,OpenDental.MobileWeb.Providerm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchProvidersAsync(System.String,OpenDental.MobileWeb.Providerm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchProvidersAsync(System.String,OpenDental.MobileWeb.Providerm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchPharmacies(System.String,OpenDental.MobileWeb.Pharmacym[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchPharmaciesAsync(System.String,OpenDental.MobileWeb.Pharmacym[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchPharmaciesAsync(System.String,OpenDental.MobileWeb.Pharmacym[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.GetUserName(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.GetUserNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.GetUserNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SetMobileWebUserPassword(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SetMobileWebUserPasswordAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SetMobileWebUserPasswordAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SetPracticeTitle(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SetPracticeTitleAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SetPracticeTitleAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SetPreference(System.String,OpenDental.MobileWeb.Prefm)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SetPreferenceAsync(System.String,OpenDental.MobileWeb.Prefm)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SetPreferenceAsync(System.String,OpenDental.MobileWeb.Prefm,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.GetPatientPortalAddress(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.GetPatientPortalAddressAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.GetPatientPortalAddressAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchLabPanels(System.String,OpenDental.MobileWeb.LabPanelm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchLabPanelsAsync(System.String,OpenDental.MobileWeb.LabPanelm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchLabPanelsAsync(System.String,OpenDental.MobileWeb.LabPanelm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchLabResults(System.String,OpenDental.MobileWeb.LabResultm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchLabResultsAsync(System.String,OpenDental.MobileWeb.LabResultm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchLabResultsAsync(System.String,OpenDental.MobileWeb.LabResultm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchMedications(System.String,OpenDental.MobileWeb.Medicationm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchMedicationsAsync(System.String,OpenDental.MobileWeb.Medicationm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchMedicationsAsync(System.String,OpenDental.MobileWeb.Medicationm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchMedicationPats(System.String,OpenDental.MobileWeb.MedicationPatm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchMedicationPatsAsync(System.String,OpenDental.MobileWeb.MedicationPatm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchMedicationPatsAsync(System.String,OpenDental.MobileWeb.MedicationPatm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchAllergies(System.String,OpenDental.MobileWeb.Allergym[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchAllergiesAsync(System.String,OpenDental.MobileWeb.Allergym[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchAllergiesAsync(System.String,OpenDental.MobileWeb.Allergym[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchAllergyDefs(System.String,OpenDental.MobileWeb.AllergyDefm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchAllergyDefsAsync(System.String,OpenDental.MobileWeb.AllergyDefm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchAllergyDefsAsync(System.String,OpenDental.MobileWeb.AllergyDefm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchDiseases(System.String,OpenDental.MobileWeb.Diseasem[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchDiseasesAsync(System.String,OpenDental.MobileWeb.Diseasem[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchDiseasesAsync(System.String,OpenDental.MobileWeb.Diseasem[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchDiseaseDefs(System.String,OpenDental.MobileWeb.DiseaseDefm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchDiseaseDefsAsync(System.String,OpenDental.MobileWeb.DiseaseDefm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchDiseaseDefsAsync(System.String,OpenDental.MobileWeb.DiseaseDefm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchICD9s(System.String,OpenDental.MobileWeb.ICD9m[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchICD9sAsync(System.String,OpenDental.MobileWeb.ICD9m[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchICD9sAsync(System.String,OpenDental.MobileWeb.ICD9m[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchStatements(System.String,OpenDental.MobileWeb.Statementm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchStatementsAsync(System.String,OpenDental.MobileWeb.Statementm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchStatementsAsync(System.String,OpenDental.MobileWeb.Statementm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchDocuments(System.String,OpenDental.MobileWeb.Documentm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchDocumentsAsync(System.String,OpenDental.MobileWeb.Documentm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchDocumentsAsync(System.String,OpenDental.MobileWeb.Documentm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchRecalls(System.String,OpenDental.MobileWeb.Recallm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchRecallsAsync(System.String,OpenDental.MobileWeb.Recallm[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.SynchRecallsAsync(System.String,OpenDental.MobileWeb.Recallm[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.DeletePatientsRecords(System.String,System.Int64[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.DeletePatientsRecordsAsync(System.String,System.Int64[])">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.DeletePatientsRecordsAsync(System.String,System.Int64[],System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.MobileWeb.Mobile.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.DeletedObject">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.DeletedObject.DeletedObjectNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.DeletedObject.ObjectNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.DeletedObject.ObjectType">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.DeletedObject.DateTStamp">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.DeletedObjectType">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.Appointment">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.ScheduleProv">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.RecallPatNum">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.RxPat">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.LabPanel">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.LabResult">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.DrugUnit">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.Medication">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.MedicationPat">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.Allergy">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.AllergyDef">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.Disease">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.DiseaseDef">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.ICD9">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.Provider">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.Pharmacy">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.Statement">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.Document">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.DeletedObjectType.Recall">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.TableBase">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.TableBase.IsNew">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Recallm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Recallm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Recallm.RecallNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Recallm.PatNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Recallm.DateDue">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Recallm.DatePrevious">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Recallm.RecallStatus">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Recallm.Note">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Recallm.IsDisabled">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Recallm.DisableUntilBalance">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Recallm.DisableUntilDate">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Documentm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Documentm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Documentm.DocNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Documentm.PatNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Documentm.RawBase64">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Statementm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Statementm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Statementm.StatementNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Statementm.PatNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Statementm.DateSent">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Statementm.DocNum">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.ICD9m">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.ICD9m.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.ICD9m.ICD9Num">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.ICD9m.ICD9Code">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.ICD9m.Description">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.DiseaseDefm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.DiseaseDefm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.DiseaseDefm.DiseaseDefNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.DiseaseDefm.DiseaseName">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Diseasem">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Diseasem.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Diseasem.DiseaseNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Diseasem.PatNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Diseasem.DiseaseDefNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Diseasem.PatNote">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Diseasem.ICD9Num">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Diseasem.ProbStatus">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Diseasem.DateStart">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Diseasem.DateStop">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.ProblemStatus">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ProblemStatus.Active">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ProblemStatus.Resolved">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ProblemStatus.Inactive">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.AllergyDefm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.AllergyDefm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.AllergyDefm.AllergyDefNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.AllergyDefm.Description">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.AllergyDefm.Snomed">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.AllergyDefm.MedicationNum">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SnomedAllergy">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.SnomedAllergy.None">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.SnomedAllergy.AllergyToSubstance">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.SnomedAllergy.DrugAllergy">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.SnomedAllergy.DrugIntolerance">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.SnomedAllergy.FoodAllergy">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.SnomedAllergy.FoodIntolerance">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.SnomedAllergy.AdverseReactions">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.SnomedAllergy.AdverseReactionsToDrug">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.SnomedAllergy.AdverseReactionsToFood">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.SnomedAllergy.AdverseReactionsToSubstance">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Allergym">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Allergym.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Allergym.AllergyNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Allergym.AllergyDefNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Allergym.PatNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Allergym.Reaction">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Allergym.StatusIsActive">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Allergym.DateAdverseReaction">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.MedicationPatm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.MedicationPatm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.MedicationPatm.MedicationPatNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.MedicationPatm.PatNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.MedicationPatm.MedicationNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.MedicationPatm.PatNote">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.MedicationPatm.DateStart">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.MedicationPatm.DateStop">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Medicationm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Medicationm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Medicationm.MedicationNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Medicationm.MedName">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Medicationm.GenericNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Medicationm.RxCui">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.LabResultm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabResultm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabResultm.LabResultNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabResultm.LabPanelNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabResultm.DateTimeTest">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabResultm.TestName">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabResultm.TestID">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabResultm.ObsValue">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabResultm.ObsUnits">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabResultm.ObsRange">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabResultm.AbnormalFlag">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.LabAbnormalFlag">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.LabAbnormalFlag.None">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.LabAbnormalFlag.Below">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.LabAbnormalFlag.Normal">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.LabAbnormalFlag.Above">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.LabPanelm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabPanelm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabPanelm.LabPanelNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabPanelm.PatNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabPanelm.LabNameAddress">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabPanelm.SpecimenCondition">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabPanelm.SpecimenSource">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabPanelm.ServiceId">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabPanelm.ServiceName">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.LabPanelm.MedicalOrderNum">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Prefm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Prefm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Prefm.PrefNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Prefm.PrefmName">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Prefm.ValueString">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Pharmacym">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Pharmacym.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Pharmacym.PharmacyNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Pharmacym.StoreName">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Pharmacym.Phone">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Pharmacym.Fax">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Pharmacym.Address">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Pharmacym.Address2">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Pharmacym.City">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Pharmacym.State">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Pharmacym.Zip">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Pharmacym.Note">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Providerm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Providerm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Providerm.ProvNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Providerm.Abbr">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Providerm.IsSecondary">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Providerm.ProvColor">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.RxPatm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.RxPatm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.RxPatm.RxNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.RxPatm.PatNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.RxPatm.RxDate">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.RxPatm.Drug">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.RxPatm.Sig">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.RxPatm.Disp">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.RxPatm.Refills">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.RxPatm.ProvNum">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Appointmentm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.AptNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.PatNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.AptStatus">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.Pattern">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.Confirmed">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.Op">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.Note">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.ProvNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.ProvHyg">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.AptDateTime">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.IsNewPatient">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.ProcDescript">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.ClinicNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Appointmentm.IsHygiene">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.ApptStatus">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ApptStatus.None">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ApptStatus.Scheduled">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ApptStatus.Complete">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ApptStatus.UnschedList">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ApptStatus.ASAP">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ApptStatus.Broken">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ApptStatus.Planned">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ApptStatus.PtNote">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ApptStatus.PtNoteCompleted">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.Patientm">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.CustomerNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.PatNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.LName">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.FName">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.MiddleI">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.Preferred">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.PatStatus">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.Gender">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.Position">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.Birthdate">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.Address">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.Address2">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.City">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.State">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.Zip">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.HmPhone">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.WkPhone">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.WirelessPhone">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.Guarantor">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.Age">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.Email">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.AddrNote">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.ClinicNum">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.InsEst">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.BalTotal">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.PreferContactMethod">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.Patientm.OnlinePassword">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.PatientStatus">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientStatus.Patient">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientStatus.NonPatient">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientStatus.Inactive">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientStatus.Archived">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientStatus.Deleted">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientStatus.Deceased">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientStatus.Prospective">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.PatientGender">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientGender.Male">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientGender.Female">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientGender.Unknown">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.PatientPosition">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientPosition.Single">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientPosition.Married">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientPosition.Child">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientPosition.Widowed">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.PatientPosition.Divorced">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.ContactMethod">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ContactMethod.None">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ContactMethod.DoNotCall">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ContactMethod.HmPhone">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ContactMethod.WkPhone">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ContactMethod.WirelessPh">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ContactMethod.Email">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ContactMethod.SeeNotes">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ContactMethod.Mail">
            <remarks/>
        </member>
        <member name="F:OpenDental.MobileWeb.ContactMethod.TextMessage">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.ServiceExistsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.ServiceExistsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.ServiceExistsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.GetCustomerNumCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.GetCustomerNumCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.GetCustomerNumCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.IsPaidCustomerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.IsPaidCustomerCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.IsPaidCustomerCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.DeleteObjectsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.DeleteAllRecordsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchPatientsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchAppointmentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchPrescriptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchProvidersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchPharmaciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.GetUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.GetUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.GetUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SetMobileWebUserPasswordCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SetPracticeTitleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SetPreferenceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.GetPatientPortalAddressCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.GetPatientPortalAddressCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.MobileWeb.GetPatientPortalAddressCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchLabPanelsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchLabResultsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchMedicationsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchMedicationPatsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchAllergiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchAllergyDefsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchDiseasesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchDiseaseDefsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchICD9sCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchStatementsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchDocumentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.SynchRecallsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.MobileWeb.DeletePatientsRecordsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="F:OpenDental.SheetCheckBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.SheetCheckBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.SheetCheckBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDental.SheetPrinting._printMargin">
            <summary>Print margin of the default printer. only used in page break calulations, and only top and bottom are used.</summary>
        </member>
        <member name="P:OpenDental.SheetPrinting.PrintMargin">
            <summary>The treatment finder needs this so that it can use the same Margins in its page calculations.</summary>
        </member>
        <member name="M:OpenDental.SheetPrinting.Print(OpenDentBusiness.Sheet,System.Int32,System.Boolean,OpenDentBusiness.Statement,OpenDentBusiness.MedLab,System.Boolean,System.Boolean,System.Boolean,System.Int64)">
            <summary>If printing a statement, use the polymorphism that takes a DataSet otherwise this method will make another call to the db.</summary>
        </member>
        <member name="M:OpenDental.SheetPrinting.Print(OpenDentBusiness.Sheet,System.Data.DataSet,System.Int32,System.Boolean,OpenDentBusiness.Statement,OpenDentBusiness.MedLab,System.Boolean,System.Boolean,System.Boolean,System.Int64)">
            <Summary>DataSet should be prefilled with AccountModules.GetAccount() before calling this method if printing a statement.  Returns null if document failed to print.</Summary>
        </member>
        <member name="M:OpenDental.SheetPrinting.PrintMultiRx(System.Collections.Generic.List{OpenDentBusiness.RxPat})">
            <summary>Performs validation on each Rx before printing.  If one of the given Rx does not pass validation, then the entire batch is aborted, because it is easy for user to fix errors.</summary>
        </member>
        <member name="M:OpenDental.SheetPrinting.PrintRx(OpenDentBusiness.Sheet,OpenDentBusiness.RxPat,System.Boolean,System.Int64)">
            <summary>Performs validation on the given Rx before printing.  Returns false if validation failed.</summary>
        </member>
        <member name="M:OpenDental.SheetPrinting.ValidateRxForSheet(OpenDentBusiness.RxPat)">
            <summary>Validates one Rx.  Returns a string of error messages.  Blank string indicates no errors.
            Some Rx require certain data to be present when printing.</summary>
        </member>
        <member name="M:OpenDental.SheetPrinting.DrawFieldGrid(OpenDentBusiness.SheetField,OpenDentBusiness.Sheet,System.Drawing.Graphics,PdfSharp.Drawing.XGraphics,System.Data.DataSet,OpenDentBusiness.Statement,OpenDentBusiness.MedLab,System.Boolean,OpenDentBusiness.Patient,OpenDentBusiness.Patient,System.Single)">
            <Summary>DataSet should be prefilled with AccountModules.GetAccount() before calling this method if printing a statement.  If drawing to screen, pass in the current ms scale, like 1.5.</Summary>
        </member>
        <member name="M:OpenDental.SheetPrinting.GetToothChartHelper(System.Int64,System.Boolean,OpenDentBusiness.TreatPlan,System.Collections.Generic.List{OpenDentBusiness.Procedure},System.Boolean,OpenDentBusiness.Patient,System.Collections.Generic.List{OpenDentBusiness.Appointment})">
            <summary>Generates an Image of the ToothChart.  Set isForSheet=true for dimensions and colors appropriate for Sheets, false for dimensions and colors appropriate for display in Patient Dashboard (matches dimensions for .</summary>
        </member>
        <member name="M:OpenDental.SheetPrinting.CreatePdf(OpenDentBusiness.Sheet,System.String,OpenDentBusiness.Statement,OpenDentBusiness.MedLab,System.Data.DataSet,OpenDentBusiness.Patient,OpenDentBusiness.Patient,System.Boolean)">
            <summary>Creates a file where fullFileName is a local path. If fullFileName is in the A to Z folder, 
            pass in fullFileName as a temp file and then upload that file to the cloud.</summary>
        </member>
        <member name="M:OpenDental.SheetPrinting.SavePdfToFile(PdfSharp.Pdf.PdfDocument,System.String)">
            <summary>This has a built in try/catch that uses a FriendlyException™.
            <br>Returns true if file was successfully saved. False if not.</br></summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:OpenDental.SheetPrinting.CreatePdfPage(OpenDentBusiness.Sheet,PdfSharp.Pdf.PdfPage,System.Data.DataSet,OpenDentBusiness.Patient,OpenDentBusiness.Patient,System.Int32,System.Int32)" -->
        <member name="F:OpenDental.SmartCards.Belgium.CertifCheck.Policy">
            <summary>
            Policy used: 0=None/1=OCSP/2=CRL
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.CertifCheck.Certificates">
            <summary>
            Array of BEID_Certif structures
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.CertifCheck.Length">
            <summary>
            Number of elements in Array
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.CertifCheck.SignatureCheck">
            <summary>
            Status of signature (for ID and Address) or hash (for Picture) on retrieved field
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.CertifCheck.RFU">
            <summary>
            reserved for future use 
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.CRLPolicyOptions.NotUsed">
            <summary>
            CRL Policy is Not Used
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.CRLPolicyOptions.Optional">
            <summary>
            CRL Policy is Optional
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.CRLPolicyOptions.Mandatory">
            <summary>
            CRL Policy is Mandatory
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.OK">
            <summary>
            Function succeeded
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_SYSTEM">
            <summary>
            Unknown system error (see system error code)
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_PCSC">
            <summary>
            Unknown PC/SC error (see PC/SC error code)
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_CARD">
            <summary>
            Unknown card error (see card status word)
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_BAD_PARAM">
            <summary>
            Invalid parameter (NULL pointer, out of bound, etc.)
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_INTERNAL">
            <summary>
            An internal consistency check failed
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_INVALID_HANDLE">
            <summary>
            The supplied handle was invalid
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_INSUFFICIENT_BUFFER">
            <summary>
            The data buffer to receive returned data is too small for the 
            returned data
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_COMM_ERROR">
            <summary>
            An internal communications error has been detected
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_TIMEOUT">
            <summary>
            A specified timeout value has expired
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_UNKNOWN_CARD">
            <summary>
            Unknown card detected
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_KEYPAD_CANCELLED">
            <summary>
            Input on pinpad cancelled
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_KEYPAD_TIMEOUT">
            <summary>
            Timout returned from pinpad
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_KEYPAD_PIN_MISMATCH">
            <summary>
            The two PINs did not match
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_KEYPAD_MSG_TOO_LONG">
            <summary>
            Message too long on pinpad
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_INVALID_PIN_LENGTH">
            <summary>
             Invalid PIN length
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_VERIFICATION">
            <summary>
            Error in a signature verification or a certificate validation
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_NOT_INITIALIZED">
            <summary>
             Library not initialized
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_UNKNOWN">
            <summary>
            An internal error has been detected, but the source is unknown
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_UNSUPPORTED_FUNCTION">
            <summary>
            Function is not supported
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.ErrorCodeOptions.E_INCORRECT_VERSION">
            <summary>
            Incorrect library version
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.OCSPPolicyOptions.NotUsed">
            <summary>
            OCSP Policy is Not Used
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.OCSPPolicyOptions.Optional">
            <summary>
            OCSP Policy is Optional
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.OCSPPolicyOptions.Mandatory">
            <summary>
            OCSP Policy is Mandatory
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.Status.General">
            <summary>
            Db Error Code
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.Status.System">
            <summary>
            System Error Code
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.Status.PCSC">
            <summary>
            PC/SC Error Code
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.Status.CSW">
            <summary>
            Card Status Word
            </summary>
        </member>
        <member name="F:OpenDental.SmartCards.Belgium.Status.RFU1">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="M:OpenDental.SmartCards.SmartCardManager.Load">
            <summary>
            Gets the <see cref="T:OpenDental.SmartCards.ISmartCardManager"/> for the current operation system.
            </summary>
            <returns>
            A <see cref="T:OpenDental.SmartCards.ISmartCardManager"/> if the current operation system is supported, else, <see langword="null"/>.
            </returns>
        </member>
        <member name="T:OpenDental.ContrPanelTable">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrPanelTable.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrPanelTable.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ContrTable">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.MaxRows">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.MaxCols">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.Cell">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.FontSize">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.FontBold">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.FontColor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.BackGColor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.LeftBorder">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.TopBorder">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.RowHeight">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.ColWidth">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.ColAlign">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.Heading">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.HeadingIsPresent">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.FieldsArePresent">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.Fields">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.ShowScroll">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.IsOverflow">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.DefaultBackGColor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.DefaultGridColor">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.SelectedRow">
            <summary>Use this for tables with single selection.</summary>
        </member>
        <member name="F:OpenDental.ContrTable.SelectedTable">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.MySelectedTable">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.SelectedRows">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ContrTable.SelectedRowsAL">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ContrTable.SelectionMode">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ContrTable.ScrollValue">
            <summary>Gets or sets the position of the scrollbar.</summary>
        </member>
        <member name="P:OpenDental.ContrTable.SelectedIndices">
            <summary>Holds the int values of the indices of the selected rows.  Use for multiple row selection tables.</summary>
        </member>
        <member name="M:OpenDental.ContrTable.SetSelected(System.Int32,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.SetSelected(System.Int32[],System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.SetSelected(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.SetSelectedRow(System.Int32)">
            <summary>Sets the selected row and colors it. Resiliant enough to handle a bad value.</summary>
        </member>
        <member name="M:OpenDental.ContrTable.InstantClassesPar">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.ResetRows(System.Int32)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.SetBackGColor(System.Drawing.Color)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.LayoutTables(System.Boolean)">
            <summary>Lays out the control and refreshes. Option to preserve the scroll position.</summary>
            <param name="preserveScroll">Set to true to preserve the scroll position, or omit to not.</param>
        </member>
        <member name="M:OpenDental.ContrTable.LayoutTables">
            <summary>Lays out the control without preserving the scroll position.</summary>
        </member>
        <member name="M:OpenDental.ContrTable.SetRowHeight(System.Int32,System.Int32,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.ColorRow(System.Int32,System.Drawing.Color)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.SetTextColorRow(System.Int32,System.Drawing.Color)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.SetBackColorRow(System.Int32,System.Drawing.Color)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.SetGridColor(System.Drawing.Color)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.panelHead_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.ScrollToLine(System.Int32)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ContrTable.CellEventHandler">
            <summary></summary>
        </member>
        <member name="E:OpenDental.ContrTable.CellClicked">
            <summary></summary>
        </member>
        <member name="E:OpenDental.ContrTable.CellDoubleClicked">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.OnCellClicked(OpenDental.CellEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.OnCellDoubleClicked(OpenDental.CellEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrTable.WorldToLine(System.Int32)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.CellEventArgs">
            <summary></summary>
        </member>
        <member name="M:OpenDental.CellEventArgs.#ctor(System.Int32,System.Int32)">
            <summary></summary>
        </member>
        <member name="P:OpenDental.CellEventArgs.Col">
            <summary></summary>
        </member>
        <member name="P:OpenDental.CellEventArgs.Row">
            <summary></summary>
        </member>
        <member name="T:OpenDental.TableTimeBar">
            <summary></summary>
        </member>
        <member name="M:OpenDental.TableTimeBar.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.TableTimeBar.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ContrPerio">
            <summary>Summary description for ContrPerio.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio.AllowPerioEdit">
            <summary>Perio security:  False will only allow user to see information but not edit.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio.ColRowSelected">
            <summary>Stores the column,row of the currently selected cell. Null if none selected.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio.GingMargPlus">
            <summary>True if all gingival margin values entered should be positive. (Stored in DB as negative.)</summary>
        </member>
        <member name="F:OpenDental.ContrPerio.EnumAdvanceSequence_">
            <summary>Auto advance sequence</summary>
        </member>
        <member name="F:OpenDental.ContrPerio.EnumCurrentDirection_">
            <summary>Current direction of the perio exam sequence</summary>
        </member>
        <member name="F:OpenDental.ContrPerio.ListPerioExams">
            <summary>List of all perio exams for the current patient.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio.ListPerioMeasures">
            <summary>List of all perio measures for the current patient, with all exams mingled.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio.ListPerioMeasureItemsChanged">
            <summary>Keeps track of what has changed for current exam.  This object contains an toothnum int and a PerioSequenceType enum.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio.ThreeAtATime">
            <summary>Causes each data entry to be entered three times. Also, if the data is a bleeding flag entry, then it changes the behavior by causing it to advance also.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorBack">
            <summary>Color of the main background.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorBackShort">
            <summary>Gray color of the background section of the shorter inner rows.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorBlood">
            <summary>Color of the dot over a number representing blood.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorCalc">
            <summary>Color of the dot over a number representing calculus.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorHighlight">
            <summary>Color of a highlighted cell.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorLinesMain">
            <summary>Color of the outer border and the major black dividers.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorLinesMinor">
            <summary>Color of the vertical lines between each tooth.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorOldText">
            <summary>Color of previous measurements from a different exam. Slightly grey.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorOldTextRed">
            <summary>Color of previous red measurements from a different exam. Lighter red.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorPlaque">
            <summary>Color of the dot over a number representing plaque.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorRedText">
            <summary>Color of red probing depths.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorSkip">
            <summary>Color of the text of a skipped tooth.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colorSuppuration">
            <summary>Color of the dot over a number representing suppuration.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._colPosArray">
            <summary>Since it's complex to compute X coordinate of each cell, the values are stored in this array.  Used by GetBounds and mouse clicking.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._heightProb">
            <summary>Height of one row of probing. Gives a little extra room for bleeding.</summary> 
        </member>
        <member name="F:OpenDental.ContrPerio._heightShort">
            <summary>Height of one of the shorter rows (non probing).</summary> 
        </member>
        <member name="F:OpenDental.ContrPerio._heightShowing">
            <summary>Because we want to stay on pixel alignment, and because scale varies, there will be some dead space at right and bottom.  This is the height not including that dead space.</summary> 
        </member>
        <member name="F:OpenDental.ContrPerio._heightTooth">
            <summary>Height of the 'tooth' sections. Right now, it just holds the tooth number.</summary> 
        </member>
        <member name="F:OpenDental.ContrPerio._idxExamSelected">
            <summary>The index in PerioExams.List of the currently selected exam.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._listProcedures">
            <summary>Used to determine if a tooth had an implant proc.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._listSkippedTeeth">
            <summary>Valid values 1-32 int. Applies only to the current exam. Loaded from the db durring LoadData().</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._offsetExam">
            <summary>the offset when there are more rows than will display. Value is set at the same time as SelectedExam. So usually 0. Otherwise 1,2,3 or....</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._perioCellArray">
            <summary>This data array gets filled when loading an exam. It is altered as the user makes changes, and then the results are saved to the db by reading from this array.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._perioSequenceTypeArray">
            <summary>First dimension is either UF, UL, LF, or LL. Second dim is an array of the types of rows showing in that section.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._rowPosArray">
            <summary>Since it's complex to compute Y coordinate of each cell, the values are stored in this array.  Used by GetBounds and mouse clicking.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._rowsProbing6">
            <summary>Constant 6. Rows of probing depths.</summary> 
        </member>
        <member name="F:OpenDental.ContrPerio.selectedTeeth">
            <summary>Valid values 1-32 int. User can highlight teeth to mark them as skip tooth. The highighting is done completely separately from the normal highlighting functionality because multiple teeth can be highlighted.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._shouldJumpBack">
            <summary>Used when attempt to auto advance fails due to tooth 1, 32, or all teeth being skipped</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._showCurrentExamOnly">
            <summary>>If false, shows past exams.</summary>
        </member>
        <member name="F:OpenDental.ContrPerio._widthLeft">
            <summary>Width of the left column that holds descriptions and dates.</summary> 
        </member>
        <member name="F:OpenDental.ContrPerio._widthShowing">
            <summary>Because we want to stay on pixel alignment, and because scale varies, there will be some dead space at right and bottom.  This is the width not including that dead space.</summary> 
        </member>
        <member name="F:OpenDental.ContrPerio._widthTooth">
            <summary>33. Width of one tooth.  Each measurement is 10 (scalable), and each border is 1 (scalable).</summary> 
        </member>
        <member name="M:OpenDental.ContrPerio.#ctor">
            <summary></summary>
        </member>
        <member name="E:OpenDental.ContrPerio.DirectionChangedLeft">
            <summary></summary>
        </member>
        <member name="E:OpenDental.ContrPerio.DirectionChangedRight">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ContrPerio.DefaultSize">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ContrPerio.IdxExamSelected">
            <summary>The index in PerioExams.List of the currently selected exam.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.ButtonPressed(System.String)">
            <summary>Accepts button clicks from window rather than the usual keyboard entry.  All validation MUST be done before the value is sent here.  Only valid values are b,s,p,c,j,g,f,m,or period (.). Numbers entered using overload.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.ButtonPressed(System.Int32)">
            <summary>Accepts button clicks from window rather than the usual keyboard entry.  All validation MUST be done before the value is sent here.  Only valid values are numbers 0 through 19, and 101 to 109.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.ComputeIndex(OpenDentBusiness.BleedingFlags)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrPerio.CountTeeth(OpenDentBusiness.PerioSequenceType)">
            <summary>Returns a list of strings, each between "1" and "32" (or similar international #'s), representing the teeth with red values based on prefs.  The result can be used to print summary, or can be counted to show # of teeth.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.DrawChart(System.Drawing.Graphics)">
            <summary>Uses this control to draw onto the specified graphics object (the printer).</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetRectangleBoundsShowing">
            <summary>A rectangle that represents the drawn perio chart within the control itself, this changes based on zoom settings.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetSection(System.Int32,System.Boolean)">
            <summary>Returns the section for the passed in tooth. The section is used to determine the Y position of a ColRow.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.IsImplant(System.Int32)">
            <summary>Returns true if the toothI passed in has ever had an implant before.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.LoadData(System.Boolean)">
            <summary>Loads data from the PerioMeasures lists into the visible grid.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.SaveCurExam(OpenDentBusiness.PerioExam)">
            <summary>Saves the cur exam measurements to the db by looping through each tooth and deciding whether the data for that tooth has changed.  If so, it either updates or inserts a measurement.  It won't delete a measurement if all values for that tooth are cleared, but just sets that measurement to all -1's.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.SetBleedingFlagForColRow(WpfControls.UI.ColRow,OpenDentBusiness.BleedingFlags)">
            <summary>Sets a mark for the the CurCell for the type passed in. Make sure to set the CurCell to the colrow you want to mark before you call this method. </summary>
        </member>
        <member name="M:OpenDental.ContrPerio.SetColors">
            <summary>Sets the user editable colors</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.SetNewCell(System.Int32,System.Int32)">
            <summary>Changes the cell that the cursor is in.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.SetShowCurrentExamOnly(System.Boolean)">
            <summary>If false, shows past exams.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.ToggleSkip(System.Int64)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrPerio.EnterValue(System.String)">
            <summary>Only valid values are b,s,p,c,j,g,f,m,and period (.)</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.EnterValue(System.Int32)">
            <summary>Only valid values are numbers 0-19, and 101-109. Validation should be done before sending here.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.FillDates">
            <summary>Used in LoadData.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.FillPosArrays">
            <summary>Fills _rowPosArray and _colPosArray.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetCell(System.Int32,OpenDentBusiness.PerioSequenceType,System.Int32,OpenDentBusiness.PerioSurf)">
            <summary>Used in LoadData.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetCellBleedValue(System.Int32,System.Int32,OpenDentBusiness.PerioSurf)">
            <summary>Used in SaveCurExam to retrieve data from grid to save it.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetCellFromPixel(System.Int32,System.Int32)">
            <summary>Gets the current cell as a col,row based on the x-y pixel coordinate supplied.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetCellValue(System.Int32,OpenDentBusiness.PerioSequenceType,System.Int32,OpenDentBusiness.PerioSurf)">
            <summary>Used in SaveCurExam to retrieve data from grid to save it.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetPerioCell(WpfControls.UI.ColRow,System.Boolean)">
            <summary>Returns PerioCell for the colrow passed in. Sets PerioCell in DataArray based on the colrow passed in. Option to not set PerioCell Text.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetPerioMeasure(System.Int64,OpenDentBusiness.PerioSequenceType,System.Int32)">
            <summary>Returns a single perio measure from ListPerioMeasures.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetSection(System.Int32)">
            <summary>Returns -1 if tooth row and not section row.  0 = Maxillary Facial, 1 = Maxillary Lingual, 2 = Mandible Facial, 3 = Mandible Lingual.
            Used in GetBounds, DrawRow, and OnMouseDown.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetSectionRow(System.Int32)">
            <summary>Returns -1 if a tooth row and not a section row.  Used in GetBounds,SetHasChanged, AdvanceCell, and DrawRow</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetTableRow(System.Int32,System.Int32,OpenDentBusiness.PerioSequenceType)">
            <summary>Used in GetCell during LoadData. Also used in AdvanceCell when looping to a new section.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetTableRow(System.Boolean)">
            <summary>If true, then returns the row of the max teeth, otherwise mand.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetToothNumCur(System.Int32)">
            <summary>Most of the time use GetSection() to calculate the section.  A section corresponds to the maxillary/mandible facial/lingual 
            (4 sections total, see GetSection() summary)</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.KeyDown_Clicked(WpfControls.UI.ColRow)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrPerio.KeyUp_Clicked(WpfControls.UI.ColRow)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrPerio.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.IsInputKey(System.Windows.Forms.Keys)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrPerio.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrPerio.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrPerio.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ContrPerio.DrawCurCell(System.Windows.Forms.PaintEventArgs)">
            <summary>Draws the highlighted background for the current cell.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.DrawSelectedTeeth(System.Windows.Forms.PaintEventArgs)">
            <summary>Draws the highlighted background for selected teeth(not used very often unless user has been clicking on tooth numbers in preparation for setting skipped teeth. Then, highlighting goes away.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.DrawSkippedTeeth(System.Windows.Forms.PaintEventArgs)">
            <summary>Draws the greyed out background for the skipped teeth.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetAutoAdvanceColRow(System.Int32,System.Boolean,OpenDentBusiness.PerioSequenceType,System.Boolean)">
            <summary>Returns the starting ColRow(position) for the passed in tooth.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetBounds(System.Int32,System.Int32)">
            <summary>Gets the bounds for a single cell.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.GetPerioAdvancePosFromList(OpenDental.PerioAdvancePos,System.Boolean,OpenDentBusiness.PerioSequenceType,System.Collections.Generic.List{OpenDental.PerioAdvancePos})">
            <summary>Returns either the next or previous AutoAdvancePositions from the list. Considers skipped teeth. Recursive method.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.TryFindNextCell(WpfControls.UI.ColRow,System.Boolean,System.Boolean)">
            <summary>Finds the next cell based on where the cursor currently is. Returns null if there is no next cell.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.TryAutoAdvanceFacialsFirst(WpfControls.UI.ColRow,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Moves the current colrow to the next position. Returns null if it can't advance.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.TryAutoAdvanceLeft(WpfControls.UI.ColRow,System.Int32,System.Boolean,OpenDentBusiness.PerioSequenceType)">
            <summary>Helper method that moves the current colrow to the left(when viewing the mouth and not the perio chart). When viewing the perio
            chart, this will move the cell to the right. Returns null if not possible to advance.</summary>
        </member>
        <member name="M:OpenDental.ContrPerio.TryAutoAdvanceRight(WpfControls.UI.ColRow,System.Int32,System.Boolean,OpenDentBusiness.PerioSequenceType,System.Boolean,System.Int32)">
            <summary>Helper method that moves the current colrow to the right(when viewing the mouth and not the perio chart). When viewing the perio
            chart, this will move the cell to the left.</summary>
        </member>
        <member name="T:OpenDental.EnumPerioMMidD">
            <summary>Mesial, Middle, Distal. So one of the 3 surfaces on either facial or lingual of a tooth.</summary>
        </member>
        <member name="F:OpenDental.EnumPerioMMidD.Mesial">
            <summary>The surface of the tooth facing the front center of the mouth.</summary>
        </member>
        <member name="F:OpenDental.EnumPerioMMidD.Middle">
            <summary>The middle face of a tooth rather than the mesial or distal. Either F or L.</summary>
        </member>
        <member name="F:OpenDental.EnumPerioMMidD.Distal">
            <summary>The surface of the tooth facing the back of the mouth.</summary>
        </member>
        <member name="F:OpenDental.EnumAdvanceSequence.MaxFirst">
            <summary>0</summary>
        </member>
        <member name="F:OpenDental.EnumAdvanceSequence.FacialsFirst">
            <summary>1</summary>
        </member>
        <member name="T:OpenDental.EnumCurrentDirection">
            <summary>Patient's left and right, not as looking at the screen.</summary>
        </member>
        <member name="F:OpenDental.EnumCurrentDirection.Left">
            <summary>0</summary>
        </member>
        <member name="F:OpenDental.EnumCurrentDirection.Right">
            <summary>1</summary>
        </member>
        <member name="T:OpenDental.PerioCell">
            <summary>6 cells get combined together for a single PerioMeasure db entry.</summary>
        </member>
        <member name="F:OpenDental.PerioCell.Text">
            <summary>The value (number) to display for this exam. Overwrites any oldText from previous exams.</summary>
        </member>
        <member name="F:OpenDental.PerioCell.Bleeding">
            <summary>None, blood, pus, or both</summary>
        </member>
        <member name="F:OpenDental.PerioCell.OldText">
            <summary>Values from previous exams. Slightly greyed out.</summary>
        </member>
        <member name="F:OpenDental.PerioCell.ProbingPosition">
            <summary></summary>
        </member>
        <member name="M:OpenDental.PerioAdvancePos.GetPath(OpenDental.EnumAdvanceSequence)">
            <summary>Generates and returns list of PerioAdvancePos in order specified by the passed in EnumAdvanceSequence</summary>
        </member>
        <member name="M:OpenDental.PerioAdvancePos.GeneratePathRange(System.Int32,System.Int32,System.Boolean,OpenDental.EnumCurrentDirection)">
            <summary>Helper method for generating ranges of PerioAdvancePositions for the 4 sections in the path (1-16F,1-16L,17-32L,17-32F)</summary>
        </member>
        <member name="M:OpenDental.PerioAdvancePos.GenerateToothRange(System.Int32,System.Int32)">
            <summary>Helper method for generating lists of PerioAdvancePos. Returns list of ints for tooth nums from provided start to stop.</summary>
        </member>
        <member name="T:OpenDental.ODtextBox">
            <summary>This is used instead of a regular textbox when quickpaste functionality is needed.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.IsDlgOpen">
            <summary>User can open a dialog from textBox for AutoNote or QuickPaste. This flag is set to true during that time so that TextBox_LostFocus doesn't try to dispose of the textBox in FormSheetFillEdit.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox._skipImeComposition">
            <summary>Only used when ImeCompositionCompatibility is enabled.  Set to true when the user presses the space bar.
            This will cause the cursor to move to the next position and no longer have composition affect the current character.
            E.g. the Korean symbol '역' (dur) will display.  However, typing '여' (du) and then space will cause that char to no longer be affected.
            This will allow the char 'ㄱ' (r) to appear after '여' instead of '역'.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox._isImeComposing">
            <summary>Only used when ImeCompositionCompatibility is enabled.  Set to true when the user is in the middle of composing a symbol.
            This will cause the cursor to stay over the current character and not move on (or separate) the current symbol being constructed.
            E.g. the Korean symbol '역' (dur) will not display correctly without this set to true.  
            When false, it will be broken apart into each character that comprizes it: 'ㅇ ㅕ ㄱ ' (d u r)</summary>
        </member>
        <member name="F:OpenDental.ODtextBox._msgText">
            <summary>Always contains the text that should be displayed in the rich text box.  
            Also used to store the UNICODE representation of the RichTextBox.Text property (which we override) due to a Korean bug.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox._intPtrLib">
            <summary>Pointer to the Rich Edit version 4.1 dll.  Null unless the property () is set to true and the new version is loaded.
            The new dll is named Msftedit.dll and the ClassName is changed from RichEdit20W to RichEdit50W.
            The new dll has been available since Windows XP SP1, released in 2002.  .NET is just set to use the old dll by default.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox._listMenuItemsLinks">
            <summary>Must track menuitems that we have added, so that we know which ones to take away when reconstructing context menu.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox._dictAllWords">
            <summary>Stores the current words for all odtextboxes and if they are spelled correctly.  Speeds up spell checking.
            Words cannot be removed from the spelling dictionary and thus also cannot be removed from this dictionary.
            Is a concurrent dictionary so multiple odtextboxes can add words at the same time safely.</summary>
        </member>
        <member name="P:OpenDental.ODtextBox.PlaceholderText">
            <summary>Check with Jordan before using. Only used in one place at HQ. When this is set then it will show as grey text when Text is null or empty and the user has not clicked into the textbox.</summary>
        </member>
        <member name="P:OpenDental.ODtextBox.SpellCheckIsEnabled">
            <summary>Set true to enable spell checking in this control.</summary>
        </member>
        <member name="P:OpenDental.ODtextBox.FormattedTextAllowed">
            <summary>Set true to enable formatted text to be pasted.</summary>
        </member>
        <member name="P:OpenDental.ODtextBox.HasAutoNotes">
            <summary>Set to true to enable context menu option to insert auto notes.</summary>
        </member>
        <member name="P:OpenDental.ODtextBox.RichEdit4IsEnabled">
            <summary>Set true to enable the newer version 4.1 RichEdit library.</summary>
        </member>
        <member name="P:OpenDental.ODtextBox.RightClickLinks">
            <summary>If right click, and there is 'PatNum:##', 'TaskNum:##', or 'JobNum:##', then the context menu will show a clickable link. Only used task edit window.</summary>
        </member>
        <member name="P:OpenDental.ODtextBox.CreateParams">
            <summary>By default .NET uses the old library, riched20.dll, which corresponds to Rich Edit versions 2.0 and 3.0.
            As of Windows XP SP1 (2002 release date), the newer library, msftedit.dll, is included which corresponds to Rich Edit version 4.1.
            This method attempts to load the newer library, with the enhanced features, and sets the ClassName accordingly.
            If msftedit.dll is not found, the original default library is used.
            The msftedit.dll library is only loaded if the libPtr==IntPtr.Zero to prevent memory leaks.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ODtextBox.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.ODtextBox.WM_IME">
            <summary>Statuses sent to an application when IME is doing 'composition' for a symbol.
            See post by Jon Burchel - Microsoft: https://goo.gl/d1ehJb  (an MSDN forum post shortened using google url shortener)</summary>
        </member>
        <member name="P:OpenDental.ODtextBox.QuickPasteType">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ODtextBox.IsOnMisspelled(System.Drawing.Point)">
            <summary>Determines whether the right click was on a misspelled word.  Also sets the start and end index of chars to be replaced in text.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.PasteText">
            <summary>Pastes the content of the clipboard including the formatting.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.PastePlainText">
            <summary>Pastes the content of the clipboard excluding the formatting.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.EditAutoNote">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ODtextBox.AddAutoNote">
            <summary>Add an auto note</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.ODtextBox_ContentsResized(System.Object,System.Windows.Forms.ContentsResizedEventArgs)">
            <summary>When the contents of the text box is resized, e.g. when word wrap creates a new line, clear red wavy lines so they don't shift down.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ODtextBox.ODtextBox_Enter(System.Object,System.EventArgs)">
            <summary>Clears the placeholder text when defined.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.ODtextBox_Leave(System.Object,System.EventArgs)">
            <summary>Redraws the placeholdertext if needed.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.ClearWavyLines(System.Int32,OpenDental.ODtextBox.SpellCheckResult)">
            <summary>Red wavy lines are manually drawn onto the graphics handle of this text box.  This method will clear out those wavy lines.
            The widthOverride parameter should only be explicitly set if the control is in the middle of resizing. 
            this.Size is stale when calculating line heights in the middle of a content resize event.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.SpellCheck">
            <summary>Performs spell checking against indiviudal words against the Hunspell dictionary and the custom internal dictionary.
            Returns a SpellCheckResult which is a helper object designed for unit tests that only gets filled in debug mode.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.GetVisibleWords">
            <summary>Returns a list of MatchOD objects describing the currently visible text in the control.  It will include lines that are half-visible 
            because of scrolling.  Does the same regex filtering as GetWords()</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.GetWords(System.String,System.Int32)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ODtextBox.GetVisibleCharIndices">
            <summary>Returns a CharBounds object that contains the start and end indices of the visible text.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.GetVisibleLineHeights(System.Int32)">
            <summary>Returns a list of line heights in order of line index. The widthOverride parameter should only
            be explicitly set if the control is in the middle of resizing. this.Size is stale when calculating
            line heights in the middle of a content resize event.  Returns an empty list if the current Rtf property is invalid.</summary>
        </member>
        <member name="M:OpenDental.ODtextBox.DrawWave(OpenDental.ODtextBox.MatchOD,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{OpenDental.ODtextBox.WavyLine})">
            <summary>Draws a red wavy line underneath the match passed in.  The location of the wavy line is dictated by the corresponding line height.
            Adds a WavyLine object that was just drawn to the list of WavyLines passed in if not null and in debug mode.</summary>
        </member>
        <member name="T:OpenDental.ODtextBox.CharBounds">
            <summary>Holds the start and end char indices for the currently visible text.</summary>
        </member>
        <member name="T:OpenDental.ODtextBox.MatchOD">
            <summary>Analogous to a Match.  We use it to keep track of words that we find and their location within the larger string.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.MatchOD.Value">
            <summary>This is the 'word' for this match</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.MatchOD.StartCharIndex">
            <summary>This is the starting index of the first char of the 'word' within the full textbox text</summary>
        </member>
        <member name="T:OpenDental.ODtextBox.SpellCheckResult">
            <summary>A helper class that holds information regarding spell checking.  Used for unit testing different ways of spell checking.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.SpellCheckResult.ListVisibleLineHeights">
            <summary>Set to all of the visible line heights for the text box when this object is created.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.SpellCheckResult.ListVisibleWords">
            <summary>A list of every visible word.  This list of words will be used for spell checking.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.SpellCheckResult.ListMisspelledWords">
            <summary>A list of words from the list of visible words that are misspelled.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.SpellCheckResult.WavyLineArea">
            <summary>A helper object that contains information pertinent to all of the red wavy lines.</summary>
        </member>
        <member name="T:OpenDental.ODtextBox.WavyLineArea">
            <summary>A helper class that holds information regarding all the red wavy lines underneath misspelled words.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.WavyLineArea.startCharIndex">
            <summary>The index for the very first visible character (from Point(0,0)).  Can be a partially visible character.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.WavyLineArea.startLineIndex">
            <summary>The index for the very first visible line (from Point(0,0)).  Can be a partially visible line.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.WavyLineArea.endCharIndex">
            <summary>The index of the last visible character (from Point(this.Width,this.Height)).  Can be a partially visible character.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.WavyLineArea.ListWavyLineRects">
            <summary>A list of rectangles that were used when clearing out the previous wavy lines.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.WavyLineArea.ListWavyLines">
            <summary>A list of red wavy lines that were drawn due to the most recent spell check.</summary>
        </member>
        <member name="T:OpenDental.ODtextBox.WavyLine">
            <summary>A helper class that holds information regarding a specific red wavy line underneath a misspelled word.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.WavyLine.LineIndex">
            <summary>The index within the list of visible lines that this wavy line was drawn.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.WavyLine.LineHeight">
            <summary>The height of the current visible line which is used in order to know where the wavy line should be drawn.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.WavyLine.PointStart">
            <summary>The point that this particular wavy line should start drawing.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.WavyLine.PointEnd">
            <summary>The very last possible point for the current line / line group (if more than one line is necessary for a single word).
            This point will repeat several times in a row for wavy lines that represent the same word but span multiple lines.</summary>
        </member>
        <member name="F:OpenDental.ODtextBox.WavyLine.ListPointFs">
            <summary>Every point necessary to draw the current wavy line.</summary>
        </member>
        <member name="T:OpenDental.ODtextBox.SpellingType">
            <summary>Used to determine if a word is correct and by which spelling dictionary.</summary>
        </member>
        <member name="T:OpenDental.ModuleBar">
            <summary>The button bar along the left side for the modules.</summary>
        </member>
        <member name="F:OpenDental.ModuleBar.LayoutManager">
            <summary>Just holds the scaling factor.</summary>
        </member>
        <member name="F:OpenDental.ModuleBar.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="F:OpenDental.ModuleBar._heightButton">
            <summary>At 96dpi</summary>
        </member>
        <member name="F:OpenDental.ModuleBar._listButtons">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ModuleBar._selectedIndex">
            <summary>Property backer</summary>
        </member>
        <member name="F:OpenDental.ModuleBar._selectedIndexPrevious">
            <summary>Used when click event is cancelled.</summary>
        </member>
        <member name="F:OpenDental.ModuleBar._stringFormat">
            <summary>Class level variable, to avoid allocating and disposing memory repeatedly every frame.</summary>
        </member>
        <member name="F:OpenDental.ModuleBar.timer">
            <summary>This is needed to fix artifacts from Direct2D.</summary>
        </member>
        <member name="M:OpenDental.ModuleBar.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ModuleBar.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:OpenDental.ModuleBar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:OpenDental.ModuleBar.ButtonClicked">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ModuleBar.OnButtonClicked(OpenDental.ModuleBarButton,System.Boolean)">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ModuleBar.SelectedModule">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ModuleBar.SelectedIndex">
            <summary>Only used in 3 places where it can't be avoided because of the business layer.</summary>
        </member>
        <member name="M:OpenDental.ModuleBar.IndexOf(OpenDentBusiness.EnumModuleType)">
            <summary>Needed in just a few areas for backward compatibility.</summary>
        </member>
        <member name="M:OpenDental.ModuleBar.RefreshButtons">
            <summary>Fixes theme image and text translation for any existing buttons.</summary>
        </member>
        <member name="M:OpenDental.ModuleBar.SetVisible(OpenDentBusiness.EnumModuleType,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ModuleBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Triggered every time the control decides to repaint itself.</summary>
        </member>
        <member name="M:OpenDental.ModuleBar.DrawButton(OpenDental.ModuleBarButton,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Graphics)">
            <summary>Draws one button. isHot: Is the mouse currently hovering over this button. isPressed: Is the left mouse button currently down on this button. isSelected: Is this the currently selected button</summary>
        </member>
        <member name="M:OpenDental.ModuleBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ModuleBar.OnMouseLeave(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ModuleBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ModuleBar.OnSizeChanged(System.EventArgs)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ModuleBarButton">
            <summary>Lightweight, just to keep track of a few fields.</summary>
        </member>
        <member name="F:OpenDental.ModuleBarButton.BrushHot">
            <summary>Linear gradient brush depends on a start and stop Y points, so it must be different for every button unless we start having module buttons draw themselves.</summary>
        </member>
        <member name="F:OpenDental.ModuleBarButton.Bounds">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ModuleBarButton.Caption">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ModuleBarButton.Icon">
            <summary></summary>
            
        </member>
        <member name="F:OpenDental.ModuleBarButton.Icon2">
            <summary>Just used by Chart module to show bitmap with white background instead of default gray. This was required because the Chart icon doesn't look good around the edges when drawn on a white background, so we have to have a second chart icon specifically for when the white background (Chart module selected) is showing.</summary>
        </member>
        <member name="F:OpenDental.ModuleBarButton.ModuleType">
            <summary></summary>
        </member>
        <member name="F:OpenDental.ModuleBarButton.Visible">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ModuleBarButton.#ctor(OpenDentBusiness.EnumModuleType,System.String,OpenDental.UI.EnumIcons)">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ButtonClicked_EventArgs">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ButtonClicked_EventArgs.#ctor(OpenDental.ModuleBarButton,System.Boolean)">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ButtonClicked_EventArgs.OutlookButton">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ButtonClicked_EventArgs.Cancel">
            <summary>Set true to cancel the event.</summary>
        </member>
        <member name="T:OpenDental.ButtonClickedEventHandler">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listTaskLists">
            <summary>List of all TastLists that are to be displayed in the main window. Combine with TasksList.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listTasks">
            <summary>List of all Tasks that are to be displayed in the main window.  Combine with TaskListsList.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listTaskListTreeHistory">
            <summary>An arraylist of TaskLists beginning from the trunk and adding on branches.  If the count is 0, then we are in the trunk of one of the five categories.  The last TaskList in the TreeHistory is the one that is open in the main window.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._taskListClip">
            <summary>A TaskList that is on the 'clipboard' waiting to be pasted.  Will be null if nothing has been copied yet.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._taskClip">
            <summary>A Task that is on the 'clipboard' waiting to be pasted.  Will be null if nothing has been copied yet.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._wasCut">
            <summary>If there is an item on our 'clipboard', this tracks whether it was cut.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks.TaskObjectTypeGoTo">
            <summary>After closing, if this is not zero, then it will jump to the object specified in GotoKeyNum.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks.KeyNumGoTo">
            <summary>After closing, if this is not zero, then it will jump to the specified patient.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listTaskNotes">
            <summary>All notes for the showing tasks, ordered by date time.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks.TitleControlParent">
            <summary>A friendly string that could be used as the title of any window that has this control on it.
            It will contain the description of the currently selected task list and a count of all new tasks within that list.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listTaskNumsExpanded">
            <summary>Keeps track of which tasks are expanded.  Persists between TaskList list updates.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._taskCollapsedState">
            <summary>This can be three states: 0 for all tasks expanded, 1 for all tasks collapsed, and -1 for mixed.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._dictPatStates">
            <summary>The states of patients from previously seen tasks.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listSignalNumsSentTask">
            <summary>Signalnums for Task or TaskList signals sent from this machine, that have not yet been received back from 
            FormOpenDental.OnProcessSignals(). Do not include InvalidType.TaskPopup.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listUserControlTaskss">
            <summary>All instances of this control that are currently open.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listTaskListNumsSubscribed">
            <summary>TaskListNums for TaskLists the current user is subscribed to.
            Is static so can be referenced from multiple instances of this control.  Locked each time it is accessed so it is thread safe.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listJobLinks">
            <summary>A list of job links used for displaying whether a task has an attached job.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listJobs">
            <summary>A list of jobs that are used for determining whether a task has an attached job in the fill grid.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._actionChatToggle">
            <summary>The action which occurs when the Toggle Chat button is clicked.  Only set for OD HQ triage.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._enumTaskFilterTypeForList">
            <summary>Defines which filter type is the default for the current tasklist for filtering the Task grid.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._patientFilter">
            <summary>This is the patient used to filter tasks from.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._dateFilterStart">
            <summary>This is the start date to filter tasks from.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._dateFilterEnd">
            <summary>This is the end date to filter tasks from</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listClinicNumsFilter">
            <summary>The current clinic selected for filtering</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listDefNumsRegionFilter">
            <summary>The current region selected for filtering</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._odToolBarButtonFilter">
            <summary>Defined here so we can change the text on this button depending on filer setting.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._dictTaskLists">
            <summary>Dictionary to look up task list by primary key. Key: TaskListNum. Value: TaskList.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listTaskAttachments">
            <summary>A list of all task attachments for tasks in the selected task list.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks.LayoutManager">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listTaskListsCopy">
            <summary>Makes an additional reference pointer to _listTaskLists when at the trunk of the Main or Reminder tab and manual refresh is enabled.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listTasksCopy">
            <summary>Makes an additional reference pointer to _listTasks when at the trunk of the Main or Reminder tab and manual refresh is enabled.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._tabNamePrevious">
            <summary></summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._taskNumOld">
            <summary>used for searching tasknum via the clipboard</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks._listTaskListsHistory">
            <summary>Only used from UI.</summary>
        </member>
        <member name="P:OpenDental.UserControlTasks.ListTaskListNumsSubscribed">
            <summary>Creates a thread safe copy of _listSubscribedTaskListNums.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.Finalize">
            <summary>Destructor.  Removes this instance from the private list of instances.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.RefreshTasksForAllInstances(System.Collections.Generic.List{OpenDentBusiness.Signalod},OpenDental.UserControlTasksTab)">
            <summary>Calls RefreshTasks for all known instances of UserControlTasks for each instance which is visible and not disposed.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.ResetGlobalTaskFilterTypesToDefaultAllInstances">
            <summary>Resets the currently applied filter to either the preference TasksGlobalFilterType, or the selected TaskList's override, for all 
            instances of UserControlTasks.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.InitializeOnStartup">
            <summary>And resets the tabs if the user changes.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.SetOpenTicketTab(System.Int32)">
            <summary>Called whenever OpenTicket tab is refreshed to set the count at the top.  Also called from InitializeOnStartup.  In that case, we don't know what the count should be, so we pass in a -1.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.SetPatientTicketTab(System.Int32)">
            <summary>Called whenever PatientTickets tab is refreshed to set the count at the top.  Also called from InitializeOnStartup.  In that case, we don't know what the count should be, so we pass in a -1.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.FillGridWithTriageList">
            <summary>Used by OD HQ.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.PatientChangedEvent_Fired(CodeBase.ODEventArgs)">
            <summary> Refreshes patient task list when we switch patients</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.LayoutToolBar">
            <summary></summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.SetFiltersToDefault(OpenDentBusiness.TaskList)">
            <summary>Sets the classwide filter variables to the current tasklist's default values.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.DowngradeFilterTypeIfNeeded(OpenDentBusiness.EnumTaskFilterType)">
            <summary>Determines if globalFilterType should be downgraded based on Clinics being enabled/disabled and Region definitions.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.RefillLocalTaskGrids(OpenDentBusiness.Task,System.Collections.Generic.List{OpenDentBusiness.TaskNote},System.Collections.Generic.List{System.Int64},System.Boolean)">
            <summary>Causes all instances of UserControlTasks to replace/remove the passed in Task and TaskNotes from the list of currently displayed 
            Tasks, then, if necessary, refills the grid without querying the database for the Task or TaskNotes. Adds signalNums for signals associated
            to the refreshes occurring in this method to the list of signals that have been sent, so FillGrid can ignore them if the refresh has already
            occurred locally.
            To remove task from grid in all instances, pass in canKeepTask=true.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.RefillLocalTaskGrids(OpenDentBusiness.TaskList,System.Collections.Generic.List{System.Int64},System.Boolean)">
            <summary>Causes all instances of UserControlTasks to replace/remove the passed in TaskList from the list of currently displayed 
            TaskLists, then, if necessary, refills the grid without querying the database for the TaskList. Adds signalNums for signals associated
            to the refreshes occurring in this method to the list of signals that have been sent, so FillGrid can ignore them if the refresh has already
            occurred locally.
            To remove taskList from grid in all instances, pass in canKeepTask=true.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.AddSentSignalNums(System.Collections.Generic.List{System.Int64})">
            <summary>Adds Signalod.SignalNums to each instance of this control's list of sent Task/TaskList related signalnums.
            Method is static so that each signalNum is only added once to each instance of UserControlTasks.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.RemoveSentSignalNums(System.Collections.Generic.List{OpenDentBusiness.Signalod})">
            <summary>Removes any matching Signalod.SignalNums from this instance's list of sent Task/TaskList related signalnums.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.IsInNewTab(OpenDentBusiness.Task)">
            <summary>Determines if Task should display in the 'New for' tab.  If using TasksNewTrackedByUser preference, Task.IsUnread must be correctly 
            set prior to calling this method.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.FillGrid(System.Collections.Generic.List{OpenDentBusiness.Signalod},System.Boolean,System.Boolean)">
            <summary>If listSignals is NULL, a full refresh/query will be run for the grid.  If listSignals contains one signal of InvalidType.Task for 
            a task in _listTasks, the task is already refreshed in memory and only the one task is refreshed from the database.
            Otherwise, a full refresh will only be run when certain types of signals corresonding to the current selected tabs are found in listSignals.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.HQStateColumn(OpenDentBusiness.Task)">
            <summary>Helper used to fill ST column for HQ.
            Only call after determining if HQ.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.GridHeaderClickEvent(System.Object,System.EventArgs)">
            <summary>Click event for GridMain's collapse/expand column header.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.SetControlTitleHelper">
            <summary>Updates ControlParentTitle to give more information about the currently selected task list.  Currently only called in FillGrid()</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.AnyAreMarkedComplete(OpenDentBusiness.TaskList)">
            <summary>A recursive function that checks every child in a list IsFromRepeating.  If any are marked complete, then it returns true, signifying that this list should be immune from being deleted since it's already in use.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.GetFilteredTaskLists">
            <summary>Returns a filtered and reordered list of task lists based on the text within the Task List Filter control.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.RefreshMainLists(System.Int64,System.DateTime,System.Boolean)">
            <summary>If parent=0, then this is a trunk.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.GetSubscribedTaskLists(System.Int64)">
            <summary>Returns a list of TaskLists containing all directly and indirectly subscribed TaskLists for the current user.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.Paste_Clicked">
            <summary>When copying and pasting, Task hist will be lost because the pasted task has a new TaskNum.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.SendToMe_Clicked(System.Boolean)">
            <summary>Return the FormTaskEdit that was created from showing the task.  Can return null.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.SendToMeAndGoto_Clicked">
            <summary>Sends a task to the current user, opens the task, and opens a new tasknote for the user to edit.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.MarkRead(OpenDentBusiness.Task)">
            <summary>Marks the selected task as read and updates the grid.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.MoveTaskList(OpenDentBusiness.TaskList,System.Boolean)">
            <summary>Assign new parent FKey for existing tasklist, and update TaskAncestors.  Used when cutting and pasting a tasklist.
            Does not create new task or tasklist entries.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.DuplicateExistingList(OpenDentBusiness.TaskList,System.Boolean)">
            <summary>Only used for dated task lists. Should NOT be used for regular task lists, puts too much strain on DB with large amount of tasks.
            A recursive function that duplicates an entire existing TaskList.  
            For the initial loop, make changes to the original taskList before passing it in.  
            That way, Date and type are only set in initial loop.  All children preserve original dates and types. 
            The isRepeating value will be applied in all loops.  Also, make sure to change the parent num to the new one before calling this function.
            The taskListNum will always change, because we are inserting new record into database. </summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.DeleteEntireList(OpenDentBusiness.TaskList)">
            <summary>A recursive function that deletes the specified list and all children.</summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.gridMain_CellDoubleClick(System.Object,OpenDental.UI.ODGridClickEventArgs)">
            <summary>The indexing logic here could be improved to be easier to read, by modifying the fill grid to save
            column indexes into class-wide private varaibles.  This way we will have access to the index without performing any logic.
            Additionally, each variable could be set to -1 when the column is not present.</summary>
        </member>
        <member name="T:OpenDental.UserControlTasks.FillGridEventHandler">
            <summary>Currently only used so that we can set the title of FormTask.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasks.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDental.UserControlTasks.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDental.UserControlTasks.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OpenDental.UserControlTasksTab">
            <summary>Each item in this enumeration identifies a specific tab within UserControlTasks.</summary>
        </member>
        <member name="F:OpenDental.UserControlTasksTab.Invalid">
            <summary>0</summary>
        </member>
        <member name="F:OpenDental.UserControlTasksTab.ForUser">
            <summary>1</summary>
        </member>
        <member name="F:OpenDental.UserControlTasksTab.UserNew">
            <summary>2</summary>
        </member>
        <member name="F:OpenDental.UserControlTasksTab.OpenTickets">
            <summary>3</summary>
        </member>
        <member name="F:OpenDental.UserControlTasksTab.Main">
            <summary>4</summary>
        </member>
        <member name="F:OpenDental.UserControlTasksTab.Reminders">
            <summary>5</summary>
        </member>
        <member name="F:OpenDental.UserControlTasksTab.RepeatingSetup">
            <summary>6</summary>
        </member>
        <member name="F:OpenDental.UserControlTasksTab.RepeatingByDate">
            <summary>7</summary>
        </member>
        <member name="F:OpenDental.UserControlTasksTab.RepeatingByWeek">
            <summary>8</summary>
        </member>
        <member name="F:OpenDental.UserControlTasksTab.RepeatingByMonth">
            <summary>9</summary>
        </member>
        <member name="F:OpenDental.UserControlTasksTab.PatientTickets">
            <summary>10</summary>
        </member>
        <member name="T:OpenDental.ValidDouble">
            <summary>See usage notes in ValidNum.</summary>
        </member>
        <member name="P:OpenDental.ValidDouble.MaxVal">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ValidDouble.MinVal">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ValidDouble.Value">
            <summary>You can use this instead of getting and setting Text.  Will throw exception if you try to Get when IsValid=false.</summary>
        </member>
        <member name="M:OpenDental.ValidDouble.IsValid">
            <summary>True if the text entered is a valid double. This replaces the older construct: if(textAbcd.errorProvider1.GetError(textAbcd)!="")</summary>
        </member>
        <member name="M:OpenDental.ValidDouble.#ctor">
            <summary></summary>
        </member>
        <member name="T:OpenDental.ValidNum">
            <summary>See usage notes in this file.</summary>
        </member>
        <member name="M:OpenDental.ValidNum.#ctor">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ValidNum.Dispose(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:OpenDental.ValidNum.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:OpenDental.ValidNum.MinVal">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ValidNum.MaxVal">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ValidNum.ShowZero">
            <summary></summary>
        </member>
        <member name="P:OpenDental.ValidNum.Value">
            <summary>You can use this instead of getting and setting Text.  Will throw exception if you try to Get when IsValid=false.</summary>
        </member>
        <member name="M:OpenDental.ValidNum.IsValid">
            <summary>Returns true if a valid number has been entered. This replaces the older construct: if(textAbcd.errorProvider1.GetError(textAbcd)!="")</summary>
        </member>
        <member name="T:OpenDental.customerUpdates.Service1">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.#ctor">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.EstablishConnectionCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestUpdateCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestCustomerIDCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestCustomerIDStrictCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestRegKeyStatusCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestEmailVerificationCodeCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.PostEmailCertificateCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestCertCanadaABCCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestCertCanadaTelusAandBCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestCertCanadaTelusAandBtestCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.IsForeignRegKeyCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestCodeSystemsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestCodeSystemDownloadCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.FeatureRequestGetListCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.FeatureRequestGetOneCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.FeatureRequestSubmitChangesCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.FeatureRequestDiscussSubmitCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.FeatureRequestDiscussGetListCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestFeeSchedCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.PracticeTitleResetCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.GetErxAccessCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.GetClinicErxAccessCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestPatientPortalURLCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.ValidatePatientPortalOfficeCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.ValidateWebSchedCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.ValidateWebSchedNewPatApptCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.GetWebSchedURLsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.ValidateResellerCredentialsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestIsDevKeyCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.RequestDbmsUpgradeCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.DatabaseIntegrityGetListCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.customerUpdates.Service1.DatabaseIntegrityGetList2Completed">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.EstablishConnection">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.EstablishConnectionAsync">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.EstablishConnectionAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestUpdate(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestUpdateAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestUpdateAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCustomerID(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCustomerIDAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCustomerIDAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCustomerIDStrict(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCustomerIDStrictAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCustomerIDStrictAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestRegKeyStatus(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestRegKeyStatusAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestRegKeyStatusAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestEmailVerificationCode(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestEmailVerificationCodeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestEmailVerificationCodeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.PostEmailCertificate(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.PostEmailCertificateAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.PostEmailCertificateAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCertCanadaABC(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCertCanadaABCAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCertCanadaABCAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCertCanadaTelusAandB(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCertCanadaTelusAandBAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCertCanadaTelusAandBAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCertCanadaTelusAandBtest(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCertCanadaTelusAandBtestAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCertCanadaTelusAandBtestAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.IsForeignRegKey(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.IsForeignRegKeyAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.IsForeignRegKeyAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCodeSystems(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCodeSystemsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCodeSystemsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCodeSystemDownload(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCodeSystemDownloadAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestCodeSystemDownloadAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestGetList(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestGetListAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestGetListAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestGetOne(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestGetOneAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestGetOneAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestSubmitChanges(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestSubmitChangesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestSubmitChangesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestDiscussSubmit(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestDiscussSubmitAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestDiscussSubmitAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestDiscussGetList(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestDiscussGetListAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.FeatureRequestDiscussGetListAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestFeeSched(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestFeeSchedAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestFeeSchedAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.PracticeTitleReset(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.PracticeTitleResetAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.PracticeTitleResetAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.GetErxAccess(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.GetErxAccessAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.GetErxAccessAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.GetClinicErxAccess(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.GetClinicErxAccessAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.GetClinicErxAccessAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestPatientPortalURL(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestPatientPortalURLAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestPatientPortalURLAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidatePatientPortalOffice(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidatePatientPortalOfficeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidatePatientPortalOfficeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidateWebSched(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidateWebSchedAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidateWebSchedAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidateWebSchedNewPatAppt(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidateWebSchedNewPatApptAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidateWebSchedNewPatApptAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.GetWebSchedURLs(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.GetWebSchedURLsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.GetWebSchedURLsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidateResellerCredentials(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidateResellerCredentialsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.ValidateResellerCredentialsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestIsDevKey(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestIsDevKeyAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestIsDevKeyAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestDbmsUpgrade(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestDbmsUpgradeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.RequestDbmsUpgradeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.DatabaseIntegrityGetList">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.DatabaseIntegrityGetListAsync">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.DatabaseIntegrityGetListAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.DatabaseIntegrityGetList2(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.DatabaseIntegrityGetList2Async(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.DatabaseIntegrityGetList2Async(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.customerUpdates.Service1.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.EstablishConnectionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.EstablishConnectionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.EstablishConnectionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestUpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestUpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestUpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCustomerIDCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCustomerIDCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestCustomerIDCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCustomerIDStrictCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCustomerIDStrictCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestCustomerIDStrictCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestRegKeyStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestRegKeyStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestRegKeyStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestEmailVerificationCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestEmailVerificationCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestEmailVerificationCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.PostEmailCertificateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.PostEmailCertificateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.PostEmailCertificateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCertCanadaABCCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCertCanadaABCCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestCertCanadaABCCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCertCanadaTelusAandBCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCertCanadaTelusAandBCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestCertCanadaTelusAandBCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCertCanadaTelusAandBtestCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCertCanadaTelusAandBtestCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestCertCanadaTelusAandBtestCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.IsForeignRegKeyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.IsForeignRegKeyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.IsForeignRegKeyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCodeSystemsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCodeSystemsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestCodeSystemsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCodeSystemDownloadCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestCodeSystemDownloadCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestCodeSystemDownloadCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.FeatureRequestGetListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.FeatureRequestGetListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.FeatureRequestGetListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.FeatureRequestGetOneCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.FeatureRequestGetOneCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.FeatureRequestGetOneCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.FeatureRequestSubmitChangesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.FeatureRequestSubmitChangesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.FeatureRequestSubmitChangesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.FeatureRequestDiscussSubmitCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.FeatureRequestDiscussSubmitCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.FeatureRequestDiscussSubmitCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.FeatureRequestDiscussGetListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.FeatureRequestDiscussGetListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.FeatureRequestDiscussGetListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestFeeSchedCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestFeeSchedCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestFeeSchedCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.PracticeTitleResetCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.GetErxAccessCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.GetErxAccessCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.GetErxAccessCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.GetClinicErxAccessCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.GetClinicErxAccessCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.GetClinicErxAccessCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestPatientPortalURLCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestPatientPortalURLCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestPatientPortalURLCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.ValidatePatientPortalOfficeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.ValidatePatientPortalOfficeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.ValidatePatientPortalOfficeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.ValidateWebSchedCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.ValidateWebSchedCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.ValidateWebSchedCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.ValidateWebSchedNewPatApptCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.ValidateWebSchedNewPatApptCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.ValidateWebSchedNewPatApptCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.GetWebSchedURLsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.GetWebSchedURLsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.GetWebSchedURLsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.ValidateResellerCredentialsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.ValidateResellerCredentialsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.ValidateResellerCredentialsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestIsDevKeyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestIsDevKeyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestIsDevKeyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestDbmsUpgradeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.RequestDbmsUpgradeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.RequestDbmsUpgradeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.DatabaseIntegrityGetListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.DatabaseIntegrityGetListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.DatabaseIntegrityGetListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.DatabaseIntegrityGetList2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.customerUpdates.DatabaseIntegrityGetList2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.customerUpdates.DatabaseIntegrityGetList2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.Service1">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.#ctor">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.EstablishConnectionCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestUpdateCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestCustomerIDCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestCustomerIDStrictCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestRegKeyStatusCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestEmailVerificationCodeCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.PostEmailCertificateCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestCertCanadaABCCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestCertCanadaTelusAandBCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestCertCanadaTelusAandBtestCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.IsForeignRegKeyCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestCodeSystemsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestCodeSystemDownloadCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.FeatureRequestGetListCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.FeatureRequestGetOneCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.FeatureRequestSubmitChangesCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.FeatureRequestDiscussSubmitCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.FeatureRequestDiscussGetListCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestFeeSchedCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.PracticeTitleResetCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.GetErxAccessCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.GetClinicErxAccessCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestPatientPortalURLCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.ValidatePatientPortalOfficeCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.ValidateWebSchedCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.ValidateWebSchedNewPatApptCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.GetWebSchedURLsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.ValidateResellerCredentialsCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestIsDevKeyCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.RequestDbmsUpgradeCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.DatabaseIntegrityGetListCompleted">
            <remarks/>
        </member>
        <member name="E:OpenDental.localhost.Service1.DatabaseIntegrityGetList2Completed">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.EstablishConnection">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.EstablishConnectionAsync">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.EstablishConnectionAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestUpdate(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestUpdateAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestUpdateAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCustomerID(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCustomerIDAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCustomerIDAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCustomerIDStrict(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCustomerIDStrictAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCustomerIDStrictAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestRegKeyStatus(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestRegKeyStatusAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestRegKeyStatusAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestEmailVerificationCode(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestEmailVerificationCodeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestEmailVerificationCodeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.PostEmailCertificate(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.PostEmailCertificateAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.PostEmailCertificateAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCertCanadaABC(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCertCanadaABCAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCertCanadaABCAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCertCanadaTelusAandB(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCertCanadaTelusAandBAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCertCanadaTelusAandBAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCertCanadaTelusAandBtest(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCertCanadaTelusAandBtestAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCertCanadaTelusAandBtestAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.IsForeignRegKey(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.IsForeignRegKeyAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.IsForeignRegKeyAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCodeSystems(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCodeSystemsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCodeSystemsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCodeSystemDownload(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCodeSystemDownloadAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestCodeSystemDownloadAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestGetList(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestGetListAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestGetListAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestGetOne(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestGetOneAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestGetOneAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestSubmitChanges(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestSubmitChangesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestSubmitChangesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestDiscussSubmit(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestDiscussSubmitAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestDiscussSubmitAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestDiscussGetList(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestDiscussGetListAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.FeatureRequestDiscussGetListAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestFeeSched(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestFeeSchedAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestFeeSchedAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.PracticeTitleReset(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.PracticeTitleResetAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.PracticeTitleResetAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.GetErxAccess(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.GetErxAccessAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.GetErxAccessAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.GetClinicErxAccess(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.GetClinicErxAccessAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.GetClinicErxAccessAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestPatientPortalURL(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestPatientPortalURLAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestPatientPortalURLAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidatePatientPortalOffice(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidatePatientPortalOfficeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidatePatientPortalOfficeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidateWebSched(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidateWebSchedAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidateWebSchedAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidateWebSchedNewPatAppt(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidateWebSchedNewPatApptAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidateWebSchedNewPatApptAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.GetWebSchedURLs(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.GetWebSchedURLsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.GetWebSchedURLsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidateResellerCredentials(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidateResellerCredentialsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.ValidateResellerCredentialsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestIsDevKey(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestIsDevKeyAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestIsDevKeyAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestDbmsUpgrade(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestDbmsUpgradeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.RequestDbmsUpgradeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.DatabaseIntegrityGetList">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.DatabaseIntegrityGetListAsync">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.DatabaseIntegrityGetListAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.DatabaseIntegrityGetList2(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.DatabaseIntegrityGetList2Async(System.String)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.DatabaseIntegrityGetList2Async(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:OpenDental.localhost.Service1.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.EstablishConnectionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.EstablishConnectionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.EstablishConnectionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestUpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestUpdateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestUpdateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCustomerIDCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCustomerIDCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestCustomerIDCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCustomerIDStrictCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCustomerIDStrictCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestCustomerIDStrictCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestRegKeyStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestRegKeyStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestRegKeyStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestEmailVerificationCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestEmailVerificationCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestEmailVerificationCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.PostEmailCertificateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.PostEmailCertificateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.PostEmailCertificateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCertCanadaABCCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCertCanadaABCCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestCertCanadaABCCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCertCanadaTelusAandBCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCertCanadaTelusAandBCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestCertCanadaTelusAandBCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCertCanadaTelusAandBtestCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCertCanadaTelusAandBtestCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestCertCanadaTelusAandBtestCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.IsForeignRegKeyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.IsForeignRegKeyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.IsForeignRegKeyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCodeSystemsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCodeSystemsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestCodeSystemsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCodeSystemDownloadCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestCodeSystemDownloadCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestCodeSystemDownloadCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.FeatureRequestGetListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.FeatureRequestGetListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.FeatureRequestGetListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.FeatureRequestGetOneCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.FeatureRequestGetOneCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.FeatureRequestGetOneCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.FeatureRequestSubmitChangesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.FeatureRequestSubmitChangesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.FeatureRequestSubmitChangesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.FeatureRequestDiscussSubmitCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.FeatureRequestDiscussSubmitCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.FeatureRequestDiscussSubmitCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.FeatureRequestDiscussGetListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.FeatureRequestDiscussGetListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.FeatureRequestDiscussGetListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestFeeSchedCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestFeeSchedCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestFeeSchedCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.PracticeTitleResetCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.GetErxAccessCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.GetErxAccessCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.GetErxAccessCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.GetClinicErxAccessCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.GetClinicErxAccessCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.GetClinicErxAccessCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestPatientPortalURLCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestPatientPortalURLCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestPatientPortalURLCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.ValidatePatientPortalOfficeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.ValidatePatientPortalOfficeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.ValidatePatientPortalOfficeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.ValidateWebSchedCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.ValidateWebSchedCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.ValidateWebSchedCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.ValidateWebSchedNewPatApptCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.ValidateWebSchedNewPatApptCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.ValidateWebSchedNewPatApptCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.GetWebSchedURLsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.GetWebSchedURLsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.GetWebSchedURLsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.ValidateResellerCredentialsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.ValidateResellerCredentialsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.ValidateResellerCredentialsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestIsDevKeyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestIsDevKeyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestIsDevKeyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestDbmsUpgradeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.RequestDbmsUpgradeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.RequestDbmsUpgradeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.DatabaseIntegrityGetListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.DatabaseIntegrityGetListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.DatabaseIntegrityGetListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.DatabaseIntegrityGetList2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:OpenDental.localhost.DatabaseIntegrityGetList2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:OpenDental.localhost.DatabaseIntegrityGetList2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="F:OpenDentalImaging.FormImagingDeviceEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDentalImaging.FormImagingDeviceEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDentalImaging.FormImagingDeviceEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:OpenDentalImaging.FormImagingDevices._listImagingDevices">
            <summary>Local copy of cached device list.</summary>
        </member>
        <member name="F:OpenDentalImaging.FormImagingDevices.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpenDentalImaging.FormImagingDevices.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpenDentalImaging.FormImagingDevices.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KnowledgeRequestNotification.KnowledgeRequestNotification">
            <summary>This class represents the root of the KnowledgeRequestNotificatio.</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.KnowledgeRequestNotification.ClassCode">
            <summary>Classification code.  Static field "ACT".  A record of something that is being done, has been done, can be done, or is intended or requested to be done.  Cardinality [1..1]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.KnowledgeRequestNotification.MoodCode">
            <summary>Static field "DEF".  A definition of a service (master).  Cardinality [1..1]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.KnowledgeRequestNotification.ListIds">
            <summary>List of globally unique identifiers of this knowledge request.  Cardinality [0..*]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.KnowledgeRequestNotification.DateTimeEffective">
            <summary>Creation time of the knowledge request.  Must be formatted "yyyyMMddhhmmss" when used.  Cardinality [0..1]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.KnowledgeRequestNotification.Subject_">
            <summary>Patient context information. Cardinality [0..1]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.KnowledgeRequestNotification.IsPerformerPatient">
            <summary>Not fully implemented. Implemented enough to work.</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.KnowledgeRequestNotification.IsRecipientPatient">
            <summary>Not fully implemented. Implemented enough to work.</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.KnowledgeRequestNotification.Subject1_">
            <summary>Task context information. Cardinality [0..1]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.KnowledgeRequestNotification.Subject2_">
            <summary>Sub-topic information. Cardinality [0..1]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.KnowledgeRequestNotification.ListSubject3s">
            <summary>Conatins a list of MainSearchCriteria: represents the main subject of interest in a knowledge request (e.g., a medication, a lab test result, a disease in the patient's problem list). When multiple multiple search criteria are present, knowledge resources MAY determine whether to join the multiple instances using the AND vs. OR Boolean operator. Cardinality[1..*]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.KnowledgeRequestNotification.Component1_">
            <summary>Contains encounter information, type and location.  Cardinality[0..1]</summary>
        </member>
        <member name="T:KnowledgeRequestNotification.Id">
            <summary>Represents the globally unique instance identifier of a knowledge request.  0..*</summary>
        </member>
        <member name="T:KnowledgeRequestNotification.Subject">
            <summary>Patient context information. Cardinality [0..1]</summary>
        </member>
        <member name="T:KnowledgeRequestNotification.Subject1">
            <summary>Task context information. Cardinality [0..1]</summary>
        </member>
        <member name="T:KnowledgeRequestNotification.Subject2">
            <summary>Sub-topic information. Cardinality [0..1]</summary>
        </member>
        <member name="T:KnowledgeRequestNotification.Subject3">
            <summary>Mostly just a main search criteria.</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.MainSearchCriteria.ClassCode">
            <summary>Static field "OBS".  Observation.  Cardinality [1..1]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.MainSearchCriteria.MoodCode">
            <summary>Static field "DEF".  A definition of a service (master).  Cardinality [1..1]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.MainSearchCriteria.Code_">
            <summary>Static field.  This defines the value as being a knowledge subject.  Cardinality [1..1]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.MainSearchCriteria.Value_">
            <summary>Contains information on the snomed in question, icd9, icd10 ... etc code.  The "value" of the "code".  Cardinality [1..1]</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.MainSearchCriteria.OriginalText">
            <summary>Represents the human readable representation of the code as displayed to the user in the CIS and SHOULD be used only if different than the displayName</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.MainSearchCriteria.Subject4_">
            <summary>Contains SeverityObservation:specifies the interpretation of a laboratory test result (e.g., 'high', 'low', 'abnormal', 'normal'). This class MAY be used to support implementations where the MainSearchCriteria consists of a laboratory test result. Supports questions such as "what are the causes of high serum potassium?</summary>
        </member>
        <member name="T:KnowledgeRequestNotification.ObservationInterpretationNormality">
            <summary>Normality, Abnormality, Alert. Concepts in this category are mutually exclusive, i.e., at most one is allowed. Enum generated from HL7 _ObservationInterpretationNormality [2.16.840.1.113883.1.11.10206] which is a subset of ObservationInterpretation [OID=2.16.840.1.113883.5.83] documentation published 20120831 10:21 AM.</summary>
        </member>
        <member name="M:KnowledgeRequestNotification.ObservationInterpretationNormality.SetInterpretation(System.String)">
            <summary>Set InterpretaionCodes Normal, Abnormal, High, Low, Alert.</summary>
             <param name="code">Allowed values: A, AA, HH, LL, H, L, N.</param>
        </member>
        <member name="F:KnowledgeRequestNotification.Code.Code_">
            <summary>The actual code snomed, icd-9, or incd10, etc code. Example: 95521008</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.Code.CodeSystem">
            <summary>The HL7-OID of the code system used. Example: 2.16.840.1.113883.6.96 if using SNOMEDCT</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.Code.CodeSystemName">
            <summary>The human readable name of the code system used. Example: SNOMEDCT</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.Code.DisplayName">
            <summary>The human readable name of the code.  Example: "Abnormal jaw movement (disorder)"</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.Value.Code">
            <summary>The actual code snomed, icd-9, or incd10, etc code. Example: 95521008</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.Value.CodeSystem">
            <summary>The HL7-OID of the code system used. Example: 2.16.840.1.113883.6.96 if using SNOMEDCT</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.Value.CodeSystemName">
            <summary>The human readable name of the code system used. Example: SNOMEDCT</summary>
        </member>
        <member name="F:KnowledgeRequestNotification.Value.DisplayName">
            <summary>The human readable name of the code.  Example: "Abnormal jaw movement (disorder)"</summary>
        </member>
        <member name="T:KnowledgeRequestNotification.Component1">
            <summary>Encounter location and type.</summary>
        </member>
    </members>
</doc>
